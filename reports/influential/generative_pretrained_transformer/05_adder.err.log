Traceback (most recent call last):
  File "/home/runner/work/omniverse/omniverse/.venv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/work/omniverse/omniverse/.venv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/work/omniverse/omniverse/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/omniverse/omniverse/.venv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/work/omniverse/omniverse/.venv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/omniverse/omniverse/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/work/omniverse/omniverse/.venv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------



def find_root_dir(current_path: Path | None = None, marker: str = '.git') -> Path | None:
    """
    Find the root directory by searching for a directory or file that serves as a
    marker.

    Parameters
    ----------
    current_path : Path | None
        The starting path to search from. If None, the current working directory
        `Path.cwd()` is used.
    marker : str
        The name of the file or directory that signifies the root.

    Returns
    -------
    Path | None
        The path to the root directory. Returns None if the marker is not found.
    """
    if not current_path:
        current_path = Path.cwd()
    current_path = current_path.resolve()
    for parent in [current_path, *current_path.parents]:
        if (parent / marker).exists():
            return parent
    return None

current_file_path = Path(os.getcwd())
root_dir          = find_root_dir(current_file_path, marker='omnivault')

if root_dir is not None:
    sys.path.append(str(root_dir))
    from omnivault._types._alias import Accuracy, Loss
    from omnivault.core.logger import RichLogger
    from omnivault.transformer.config.composer import Composer, DataConfig
    from omnivault.transformer.config.constants import MaybeConstant
    from omnivault.transformer.config.decoder import (
        AddNormConfig,
        DecoderBlockConfig,
        DecoderConfig,
        MultiHeadedAttentionConfig,
        PositionwiseFeedForwardConfig,
    )
    from omnivault.transformer.config.generator import GeneratorConfig
    from omnivault.transformer.config.global_ import MaybeGlobal
    from omnivault.transformer.config.optim import OPTIMIZER_REGISTRY, AdamConfig, OptimizerConfig
    from omnivault.transformer.config.scheduler import SCHEDULER_REGISTRY, LambdaLRConfig
    from omnivault.transformer.config.trainer import TrainerConfig
    from omnivault.transformer.core.callbacks import save_state
    from omnivault.transformer.core.dataset import (
        AdderDataset,
        construct_dummy_batch_future_masks,
        construct_dummy_batch_target_padding_masks,
        create_loader,
        split_dataset,
    )
    from omnivault.transformer.core.optim import apply_weight_decay_to_different_param_groups
    from omnivault.transformer.core.tokenizer import AdderTokenizer
    from omnivault.transformer.core.trainer import Trainer, TrainerEvent
    from omnivault.transformer.core.vocabulary import AdderVocabulary
    from omnivault.transformer.decoder.core import GPTDecoder
    from omnivault.transformer.modules.attention.core import ScaledDotProductAttention
    from omnivault.transformer.projects.adder.main import evaluate_and_generate_on_valid_epoch_end
    from omnivault.transformer.utils.general_utils import create_directory, download_file
    from omnivault.transformer.utils.visualization import show_attention_heatmaps
    from omnivault.utils.config_management.omegaconf import load_yaml_config, merge_configs
    from omnivault.utils.inspector.core import get_field_annotations
    from omnivault.utils.reproducibility.seed import seed_all
else:
    raise ImportError("Root directory not found.")
------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 58[39m
[32m     56[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01momnivault[39;00m[34;01m.[39;00m[34;01mtransformer[39;00m[34;01m.[39;00m[34;01mcore[39;00m[34;01m.[39;00m[34;01moptim[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m apply_weight_decay_to_different_param_groups
[32m     57[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01momnivault[39;00m[34;01m.[39;00m[34;01mtransformer[39;00m[34;01m.[39;00m[34;01mcore[39;00m[34;01m.[39;00m[34;01mtokenizer[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m AdderTokenizer
[32m---> [39m[32m58[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01momnivault[39;00m[34;01m.[39;00m[34;01mtransformer[39;00m[34;01m.[39;00m[34;01mcore[39;00m[34;01m.[39;00m[34;01mtrainer[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m Trainer, TrainerEvent
[32m     59[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01momnivault[39;00m[34;01m.[39;00m[34;01mtransformer[39;00m[34;01m.[39;00m[34;01mcore[39;00m[34;01m.[39;00m[34;01mvocabulary[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m AdderVocabulary
[32m     60[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01momnivault[39;00m[34;01m.[39;00m[34;01mtransformer[39;00m[34;01m.[39;00m[34;01mdecoder[39;00m[34;01m.[39;00m[34;01mcore[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m GPTDecoder

[36mFile [39m[32m~/work/omniverse/omniverse/omnivault/transformer/core/trainer.py:15[39m
[32m     13[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mtorch[39;00m[34;01m.[39;00m[34;01mnn[39;00m[34;01m.[39;00m[34;01mparallel[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m DistributedDataParallel
[32m     14[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mtorch[39;00m[34;01m.[39;00m[34;01mutils[39;00m[34;01m.[39;00m[34;01mdata[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m DataLoader
[32m---> [39m[32m15[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mtorchmetrics[39;00m[34;01m.[39;00m[34;01mtext[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m Perplexity
[32m     16[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mtqdm[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m tqdm
[32m     18[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01momnivault[39;00m[34;01m.[39;00m[34;01m_types[39;00m[34;01m.[39;00m[34;01m_alias[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m Loss

[31mModuleNotFoundError[39m: No module named 'torchmetrics'

