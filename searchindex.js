Search.setIndex({"alltitles": {"": [[48, "remark-4"], [126, "fundamental_theorem_of_calculus_corollary"], [164, "cor_continuous_expectation"]], " (Additivity)": [[124, "how-does-softmax-work-additivity"], [131, "axiom:additivity"]], " (Algebraic Definition (Scalar-Vector Multiplication))": [[83, "02-vector-operation-scalar-vector-multiplication-algebraic-definition"]], " (Algebraic Definition (Vector Addition and Subtraction))": [[83, "02-vector-operation-vector-addition-algebraic-definition"]], " (Algebraic Definition of a Vector)": [[82, "01-vector-definition-algebraic-definition"]], " (All Generators are Iterators)": [[213, "software-engineering-concurrency-parallelism-asynchronous-generator-yield-remark"]], " (Amortized Time Complexity of Queue Operations)": [[36, "amortized-time-complexity"]], " (Amortized Worst-Case Time Complexity)": [[32, "stack-list-amortized-worst-case-time-complexity"]], " (Analyzing Time Complexity with Worst Case Only)": [[36, "worst-case-only"]], " (Application of the Cauchy-Schwarz Inequality)": [[203, "remark:cauchy_schwarz"]], " (Approximation of GELU)": [[56, "remark-approx-gelu-notation"], [58, "remark-approx-gelu"]], " (Assignment)": [[61, "def:assignment"], [61, "example:assignment"]], " (Attention Scores)": [[58, "decoder-concept-attention-scores"]], " (Attention Scoring Function with Scaling and Softmax)": [[58, "decoder-concept-attention-scoring-function-with-scaling-softmax"]], " (Attention Scoring Function with Scaling)": [[58, "decoder-concept-attention-scoring-function-with-scaling"]], " (Attention Scoring Function)": [[58, "decoder-concept-attention-scoring-function"]], " (Bayes Optimal Classifier and Naive Bayes)": [[51, "remark-bayes-optimal-classifier-naive-bayes"]], " (Bayes Optimal Classifier)": [[50, "example-bayes-optimal-classifier"]], " (Baye\u2019s Theorem)": [[134, "def:bayes-theorem"]], " (Bernoulli Distribution (CDF))": [[144, "def_bernoulli_distribution_cdf"]], " (Bernoulli Distribution (PMF))": [[144, "def_bernoulli_distribution_pmf"]], " (Bernoulli Trials)": [[144, "def:bernoulli_trials_1"], [147, "def:bernoulli_trials_2"]], " (Binary Search Pseudocode)": [[29, "875-koko-eating-bananas-binary-search-pseudocode"]], " (Binomial Distribution (CDF))": [[147, "def_binomial_distribution_cdf"]], " (Binomial Distribution (PMF))": [[147, "def_binomial_distribution_pmf"]], " (Binomial Distribution as a Sum of Bernoulli Trials)": [[147, "def:binomial_as_sum_of_bernoulli"]], " (Bounding the Entire Hypothesis Set)": [[66, "prf:remark-bounding-the-entire-hypothesis-set"]], " (Brute Force Search for K-Means)": [[61, "brute-force-search-kmeans"]], " (CDF is Right Continuous)": [[166, "thm_cdf_right_continuous"]], " (CDF of Arbitrary Gaussian Distribution)": [[170, "thm_cdf_arbitrary_gaussian_distribution"]], " (CDF)": [[140, "example_cdf"]], " (Categorical (Multinomial) Distribution)": [[53, "categorical-multinomial-distribution-gmm"], [74, "categorical-multinomial-distribution"]], " (Categorical Distribution Example)": [[74, "categorical-distribution-example"]], " (Categorical Distribution)": [[53, "categorical-distribution-gmm"], [74, "categorical-distribution"]], " (Cauchy-Schwarz Inequality)": [[178, "thm:cauchy_schwarz_inequality"], [203, "theorem:cauchy_schwarz"]], " (Central Moments)": [[171, "probability-theory-central-moments"]], " (Centroids)": [[61, "def:centroids"]], " (Chain-of-Verification Procedure)": [[48, "def-cove-process"]], " (Characteristic Polynomial)": [[192, "def:characteristic_polynomial"]], " (Chebyshev\u2019s Inequality for i.i.d. Random Variables)": [[203, "corollary:chebyshev-iid"]], " (Chebyshev\u2019s Inequality)": [[203, "theorem:chebyshev"]], " (Chernoff\u2019s Bound)": [[203, "theorem:chernoff-bound"]], " (Claim)": [[43, "two-sum-167-two-sum-ii-input-array-is-sorted-two-pointers-claim"], [44, "remove-duplicates-from-sorted-array-two-pointers-claim"]], " (Coercive and Primitive Types)": [[2, "type-theory-01-subtypes-example-coercive-impl-primitive-types"]], " (Coin Toss)": [[137, "example_random_variable_coin_toss"]], " (Computational Complexity)": [[48, "obs-complexity"]], " (Conditional CDF)": [[181, "def:conditional-cdf-of-a-discrete-random-variable"], [181, "def:conditional-cdf-of-a-continuous-random-variable"]], " (Conditional Distribution is a Distribution for a Sub-Population)": [[181, "remark:conditional-distribution-is-a-distribution-for-a-sub-population"]], " (Conditional Expectation is the Expectation for a Sub-Population)": [[183, "remark:conditional-expectation-is-the-expectation-for-a-sub-population"]], " (Conditional Expectation)": [[183, "def:conditional_expectation"]], " (Conditional Independence)": [[74, "conditional-independence"], [181, "def:conditional-independence"], [181, "example:conditional-independence"]], " (Conditional Likelihood Function (Machine Learning))": [[211, "def:conditional-likelihood-machine-learning"]], " (Conditional Likelihood Function)": [[68, "def-conditional-likelihood-function-linear-regression"]], " (Conditional Log-Likelihood Function)": [[68, "def-conditional-log-likelihood-function-linear-regression"]], " (Conditional PDF of an Event A Given Y=y)": [[181, "thm:conditional-pdf-of-an-event-given-y"]], " (Conditional PDF)": [[181, "def:conditional-pdf-of-a-continuous-random-variable"]], " (Conditional PMF of an Event A Given Y=y)": [[181, "thm:conditional-pmf-of-an-event-a-given-y"]], " (Conditional PMF)": [[181, "def:conditional-pmf"]], " (Conditional Probability Equalities)": [[132, "prop:conditional-probability-equalities"]], " (Conditional Probability)": [[132, "definition-0"]], " (Conditional Variance)": [[183, "def:conditional-variance"]], " (Context Vector/Matrix)": [[58, "decoder-concept-context-vector-matrix"]], " (Continuous Random Variables)": [[162, "def_continuous_random_variable"]], " (Continuous Uniform Distribution (CDF))": [[168, "def_continuous_uniform_distribution_cdf"]], " (Continuous Uniform Distribution (PDF))": [[168, "def_continuous_uniform_distribution_pdf"]], " (Contour Map/Plot)": [[127, "def:contour_map"]], " (Contravariance)": [[7, "computer-science-type-theory-contravariance"]], " (Convex and Concave Functions)": [[203, "remark:convex_concave"]], " (Convex)": [[203, "definition:convex"]], " (Convolutions of Random Variables)": [[186, "theorem:convolutions-of-random-variables"]], " (Corollary of Standard Gaussian)": [[170, "cor_standard_gaussian"]], " (Correctness of Binary Search Recursive Algorithm)": [[27, "omniverse-dsa-searching-algorithms-binary-search-recursive-algorithm-correctness"]], " (Correlation Coefficient)": [[178, "def:correlation_coefficient"], [178, "prop:correlation_coefficient"]], " (Cosine Annealing With Warmup)": [[59, "why-do-we-use-warmup-cosine-scheduler-definition-duplicate"], [123, "why-do-we-use-warmup-cosine-scheduler-definition"]], " (Cosine Dot Product)": [[178, "def:cosine_dot_product"]], " (Cost Function is a Function of Assignment and Centroids)": [[61, "remark:cost-function-is-a-function-of-assignment-and-centroids"]], " (Cost Function is a function of assignments and cluster centers)": [[61, "remark:kmeans-cost-function-is-a-function-of-assignments-and-cluster-centers"]], " (Cost Function of K-Means Monotonically Decreases)": [[61, "kmeans-monotonic-decrease"]], " (Countable Set)": [[138, "def_countable_set"]], " (Counter Example)": [[155, "ex:poi2"]], " (Countour Lines (Levels))": [[127, "def:contour_lines"]], " (Covariance Matrix (2D))": [[178, "def:covariance_matrix_2d"]], " (Covariance Matrix is always Symmetric Positive Semi-Definite)": [[195, "theorem:positive_semi_definite_covariance_matrix"]], " (Covariance Matrix of Independent Random Variables)": [[188, "thm:covariance-matrix-independent"]], " (Covariance Matrix)": [[188, "def:covariance-matrix"]], " (Covariance)": [[7, "computer-science-type-theory-covariance"], [178, "def:covariance"], [178, "thm:covariance"], [178, "prop:covariance"]], " (Cumulative Distribution Function)": [[140, "def_cdf"], [166, "def_continuous_cdf"]], " (DC Shift)": [[141, "prop_expectation_dc_shift_discrete"], [142, "prop_dc_shift"], [164, "prop_expectation_dc_shift_continuous"]], " (Dataset)": [[74, "dataset-definition"]], " (Define Probability at a Point)": [[166, "thm_cdf_point"]], " (Definition of Independence in Terms of Conditional Probability)": [[133, "def:independence-conditional"]], " (Diagonalizable Matrix)": [[192, "def:diagonalizable_matrix"]], " (Dice Roll)": [[137, "example_random_variable_dice_roll"]], " (Dichotomy)": [[66, "def:dichotomy"]], " (Dimensionality of the Subspaces)": [[58, "decoder-concept-linear-projections-queries-keys-values-remark"]], " (Discrete Random Variables)": [[138, "def_discrete_random_variables"]], " (Discrete Uniform Distribution (CDF))": [[160, "def_discrete_uniform_cdf"]], " (Discrete Uniform Distribution (PMF))": [[160, "def_discrete_uniform_pmf"]], " (Disjoint vs Independence)": [[133, "thm:disjoint-vs-independent"]], " (Disjoint)": [[133, "def:disjoint"]], " (Distance)": [[84, "03-vector-norm-distance"]], " (Dot Product Example in 3-Dimensional Space)": [[85, "linear-algebra-02-vectors-04-vector-products-dot-product-example-1"]], " (EM Algorithm for GMM)": [[53, "alg:em-gmm-1"]], " (ERM is \u201clearning from data using trial and error\u201d)": [[50, "rem-erm-trial-and-error"]], " (Eigendecomposition)": [[192, "def:eigendecomposition"]], " (Eigenvalue and Eigenvector)": [[192, "def:eigenvalue"]], " (Eigenvalues are roots of the characteristic polynomial)": [[192, "thm:eigenvalues_are_roots_of_the_characteristic_polynomial"]], " (Eigenvalues of a Symmetric Matrix)": [[192, "thm:eigenvalues_of_a_symmetric_matrix"]], " (Elbow Method)": [[61, "elbow-method"]], " (Empirical Correlation Coefficient)": [[178, "thm:empirical_correlation_coefficient"]], " (Empirical Parameters)": [[74, "remark-empirical-parameters"]], " (Empirical Risk Minimization approximates True Risk Minimization when N \\rightarrow \\infty)": [[50, "theorem-erm-approximates-trm"]], " (Empirical Risk Minimization)": [[50, "theorem-empirical-risk-minimization"]], " (Empirical Risk)": [[50, "def-empirical-risk"], [50, "example-empirical-risk"]], " (Equality of Vectors)": [[82, "01-vector-definition-equality-of-vectors"]], " (Equivalent Conditions for \\lambda to be an Eigenvalue)": [[192, "thm:equivalent_conditions_for_lambda_to_be_an_eigenvalue"]], " (Error Function)": [[170, "def_error_function"]], " (Event E)": [[130, "event"]], " (Event Space \\mathcal{F})": [[130, "event_space"]], " (Exact Match Scenario)": [[58, "decoder-concept-attention-exact-match-scenario"]], " (Example 1)": [[153, "ex_iid_1"]], " (Example of Growth Function)": [[66, "example_growth_function"]], " (Example on Feature 1 and Class 2)": [[74, "example-naive-bayes-feature-1-class-2"]], " (Example)": [[53, "prf:example-gmm-1"], [56, "gpt-notations-one-hot-example-dup"], [58, "gpt-notations-one-hot-example"], [63, "prf:example-bits"], [63, "example-pixels"], [155, "ex:poi"]], " (Example: Conditional Expectation)": [[68, "prf-example-conditional-expectation"]], " (Existence of Expectation)": [[141, "thm_existence_of_expectation_discrete"], [164, "thm_existence_of_expectation_continuous"]], " (Expectation and Covariance of Multivariate Gaussian)": [[191, "prop:mean_vector_covariance_matrix"]], " (Expectation and Variance of Continuous Uniform Distribution)": [[168, "thm_continuous_uniform_distribution"]], " (Expectation and Variance of Exponential Distribution)": [[169, "thm_exponential_distribution_expectation_variance"]], " (Expectation and Variance of the Gaussian Distribution)": [[170, "theorem-3"]], " (Expectation of Bernoulli Distribution)": [[144, "prop:bernoulli"]], " (Expectation of Binomial Distribution)": [[147, "prop:bino_exp"]], " (Expectation of Geometric Distribution)": [[151, "prop:geo_exp"]], " (Expectation of Poisson Distribution)": [[155, "prop:poi_exp"]], " (Expectation of Random Vectors)": [[188, "def:expectation-random-vector"]], " (Expectation of Sample Average)": [[206, "theorem-expectation-of-sample-average"]], " (Expectation)": [[141, "def_discrete_expectation"], [164, "def_continuous_expectation"]], " (Experiment/Probability Space)": [[130, "experiment"]], " (Exponential Distribution (CDF))": [[169, "def_exponential_distribution_cdf"]], " (Exponential Distribution (PDF))": [[169, "def_exponential_distribution_pdf"], [169, "rem_exponential_distribution_pdf"]], " (Externally Derived Constraints)": [[29, "875-koko-eating-bananas-externally-derived-constraints"]], " (Factors Increasing Hallucination Probability)": [[48, "lemma-hallucination-factors"]], " (Feasibility Function for Koko Eating Bananas)": [[29, "875-koko-eating-bananas-feasibility-function-for-koko-eating-bananas"]], " (Feasibility Function)": [[29, "875-koko-eating-bananas-feasibility-function"]], " (Field)": [[79, "linear-algebra-01-preliminaries-field"]], " (Fields on the Real Numbers)": [[79, "linear-algebra-preliminaries-fields-on-the-real-numbers"]], " (Finding CDF is easier)": [[173, "remark-finding-cdf-is-easier"]], " (GELU Activation Function)": [[56, "def-gelu-notation"], [58, "def-gelu"]], " (GMM Sampling Process)": [[53, "alg:gmm-sampling"]], " (Gaussian Distribution (CDF))": [[170, "def_gaussian_distribution_cdf"]], " (Gaussian Distribution (PDF))": [[170, "def_gaussian_distribution_pdf"], [170, "rmk_gaussian_distribution_pdf"]], " (Gaussian \\iid (cont.))": [[176, "ex_gaussian_iid_cont"]], " (Gaussian \\iid)": [[176, "ex_gaussian_iid"]], " (Generalization Bound)": [[66, "thm:generalization-bound"]], " (Generalization Gap)": [[66, "def-generalization-gap"]], " (Generic Divide and Conquer Algorithm)": [[16, "master-theorem-generic-divide-and-conquer-algorithm"]], " (Geometric Definition of a Vector)": [[82, "01-vector-definition-geometric-definition"]], " (Geometric Distribution)": [[151, "def:geo"]], " (Gradient Saturation)": [[58, "decoder-concept-gradient-saturation"]], " (Growth Function)": [[66, "ece595_def4.6"]], " (Hallucination)": [[48, "def-hallucination"]], " (Hoeffding\u2019s Inequality)": [[66, "theorem-hoeffding-inequality-restated"], [203, "theorem:hoeffding"]], " (Hoeffding\u2019s Lemma)": [[203, "lemma:hoeffding"]], " (I came all the way just for a Moot Example)": [[5, "computer-science-type-theory-generics-moot-example"]], " (IID Assumption)": [[191, "remark:iid_assumption"]], " (In-Sample Error (Empirical Risk Minimization))": [[66, "prf:definition:in-sample-error"]], " (Inclusion-Exclusion)": [[131, "corollary:inclusion-exclusion"]], " (Inclusive Implementations in Object-Oriented Languages)": [[2, "type-theory-01-subtypes-example-inclusive-impl-oop"]], " (Independence and Covariance)": [[178, "thm:independence_and_covariance"]], " (Independence and Joint Expectation)": [[178, "thm:independence_and_joint_expectation"]], " (Independence for N random variables)": [[176, "def_independent_n"]], " (Independent Events)": [[133, "def:independent-events"]], " (Independent Random Vectors)": [[188, "def:independent-random-vector"]], " (Independent and Identically Distributed (IID))": [[153, "def_iid"], [188, "def_iid_N"]], " (Independent and Identically Distributed (i.i.d.))": [[176, "def_iid_restated"]], " (Independent random variables)": [[176, "def_independent"]], " (Inequality Bounds)": [[131, "corollary:inequality-bounds"]], " (Integer Type as a Set)": [[2, "type-theory-01-subtypes-example-int-type-as-set"]], " (Interpretation of True Risk)": [[50, "remark-interpretation-true-risk"]], " (Intuition for Expectation and Variance of Continuous Uniform Distribution)": [[168, "rmk_continuous_uniform_distribution"]], " (Invariance)": [[7, "computer-science-type-theory-invariance"]], " (Is \\mathbf{X} a random variable?)": [[68, "prf-remark-x-random"]], " (Jacobian Matrix of Softmax Function)": [[124, "jacobian-softmax"]], " (Jensen\u2019s Inequality)": [[203, "theorem:jensen"]], " (Joint CDF (cont.))": [[176, "def_joint_cdf_cont"]], " (Joint CDF of Random Vectors)": [[188, "def:joint-cdf-random-vector"]], " (Joint CDF)": [[176, "def_joint_cdf"]], " (Joint Distribution Example)": [[74, "joint-distribution-example"]], " (Joint Expectation of Independent Random Vectors)": [[188, "def:joint-expectation-independent-random-vector"]], " (Joint Expectation)": [[178, "def:joint_expectation"]], " (Joint PDF of \\iid random variables)": [[176, "cor_iid_joint_pdf"]], " (Joint PDF)": [[176, "def_joint_pdf"], [176, "remark-joint-pdf"]], " (Joint PMF and Joint PDF)": [[176, "thm_joint_pmf_pdf"]], " (Joint PMF)": [[176, "def_joint_pmf"], [176, "remark-joint-pmf"]], " (Joint and Conditional Probability)": [[74, "joint-and-conditional-probability"]], " (K-Means Cost Function)": [[61, "def:kmeans-cost"]], " (K-Means Loss Function)": [[61, "def:kmeans-loss"]], " (K-Means Objective Function)": [[61, "def:kmeans-objective"]], " (K-Means Optimal Assignment)": [[61, "criterion:kmeans-optimal-assignment"]], " (K-Means Optimal Cluster Centers)": [[61, "criterion:kmeans-optimal-cluster-centers"]], " (K-Means Voronoi Partition)": [[61, "def:kmeans-voronoi-partition"]], " (K-Means is a Greedy Algorithm)": [[61, "remark-kmeans-greedy"]], " (L2 Norm)": [[84, "03-vector-norm-l2-norm"]], " (L_1 Norm)": [[84, "03-vector-norm-l1-norm"]], " (L_p Norm)": [[84, "03-vector-norm-lp-norm"]], " (Lagrangian Method)": [[74, "lagrangian-method"]], " (Law of Total Expectation)": [[183, "theorem:law_of_total_expectation"]], " (Law of Total Probability (Corollary))": [[134, "cor:law-total-probability"]], " (Law of Total Probability)": [[134, "thm:law-total-probability"]], " (Layer Normalization)": [[58, "decoder-layer-normalization"]], " (Learning Theory)": [[66, "theorem-learning-theory-1"]], " (Left and Right Continuity)": [[166, "def_continuous_cdf_continuity"]], " (Likelihood Function of Naive Bayes)": [[74, "def:naive-bayes-likelihood"]], " (Likelihood Function with IID Assumption (Higher Dimension))": [[211, "def:likelihood-iid-higher-dim"]], " (Likelihood Function with IID Assumption (Supervised Learning))": [[211, "def:likelihood-iid-supervised-learning"]], " (Likelihood Function with IID Assumption)": [[211, "def:likelihood-iid"]], " (Likelihood Function)": [[211, "def:likelihood"]], " (Likelihood is not Conditional PDF)": [[211, "rem:likelihood"]], " (Likelihood)": [[74, "likelihood"]], " (Limitations)": [[48, "remark-6"]], " (Limiting Perspective)": [[181, "def:limiting-perspective"]], " (Linear Projections for Queries, Keys, and Values)": [[58, "decoder-concept-linear-projections-queries-keys-values"]], " (Linear Transformation of Gaussian Distribution)": [[170, "thm_linear_transformation_gaussian_distribution"]], " (Linearity of Covariance)": [[178, "thm:linearity_of_covariance"]], " (Linearity)": [[141, "prop_expectation_linearity_discrete"], [142, "prop_linearity"], [164, "prop_expectation_linearity_continuous"]], " (Liskov Substitution Principle)": [[4, "type-theory-liskov-substitution-principle"]], " (Lloyd\u2019s Algorithm (K-Means))": [[61, "lloyd-kmeans-algorithm"]], " (Log Likelihood Function of Naive Bayes)": [[74, "def:naive-bayes-log-likelihood"]], " (Log-Likelihood Function)": [[211, "def:log-likelihood"]], " (Log-Likelihood of Bernoulli Distribution)": [[211, "ex:log-likelihood-bernoulli"]], " (Loop Invariant Theorem)": [[30, "linear-search-loop-invariant-theorem"]], " (Major Confusion Alert)": [[66, "prf:remark-major-confusion-alert"]], " (Marginal Distribution and Normalization Constant)": [[74, "marginal-distribution-and-normalization-constant"]], " (Marginal Distribution and the Law of Total Probability)": [[176, "remark-marginal-distribution-ltp"]], " (Marginal PDF of Bivariate Normal Distribution)": [[176, "example-marginal-pdf-bivariate-normal"]], " (Marginal PDF of Random Vectors)": [[188, "def:marginal-pdf-random-vector"]], " (Marginal PMF and PDF)": [[176, "def-marginal-pmf-pdf"]], " (Markov\u2019s Inequality)": [[203, "theorem:markov"]], " (Mathematical Representation (Iterative))": [[27, "binary-search-mathematical-representation-iterative"]], " (Mathematical Representation)": [[27, "binary-search-mathematical-representation"]], " (Matrix Formulation)": [[124, "matrix-formulation-softmax"]], " (Matrix Representation of a Eigenvalue and Eigenvector)": [[192, "def:matrix_representation_of_a_eigenvalue_and_eigenvector"]], " (Maximize Feature Parameters)": [[74, "def:naive-bayes-max-feature-params"]], " (Maximize Priors)": [[74, "def:naive-bayes-max-priors"]], " (Maximum Likelihood Estimation for Bernoulli Distribution)": [[211, "def:maximum-likelihood-estimation-for-bernoulli-distribution"]], " (Maximum Likelihood Estimation for \\mathcal{S} with Label y)": [[211, "rmk:maximum-likelihood-estimation"]], " (Maximum Likelihood Estimation)": [[211, "def:maximum-likelihood-estimation"]], " (Mean and Covariance of Linear Transformation)": [[190, "thm:linear_transformation_mean_covariance"]], " (Mean and Covariance of Shifting)": [[190, "thm:shifting_mean_covariance"]], " (Mean from CDF (X < 0))": [[167, "probability-theory-mean-from-cdf-x-lt-0"]], " (Mean from CDF (X > 0))": [[167, "probability-theory-mean-from-cdf-x-gt-0"]], " (Mean from CDF)": [[167, "probability-theory-mean-from-cdf"]], " (Measure Zero Sets)": [[130, "measure_zero_sets"]], " (Median from CDF)": [[167, "probability-theory-median-from-cdf"]], " (Median)": [[167, "probability-theory-median"]], " (Minimizing Individual Cluster\u2019s Cost is Equivalent to Minimizing the Objective Function)": [[61, "thm:minimizing-individual-clusters-cost-is-equivalent-to-minimizing-the-objective-function"]], " (Mode)": [[167, "probability-theory-mode"]], " (Moment Generating Function Example 1.)": [[200, "ex:moment_generating_function_1"]], " (Moment Generating Function Example 2.)": [[200, "ex:moment_generating_function_2"]], " (Moment Generating Function Properties)": [[200, "thm:moment_generating_function_properties"]], " (Moment Generating Function of the Sum of N Independent Random Variables)": [[201, "cor:moment_generating_function_sum_of_N_rv"]], " (Moment Generating Function of the Sum of Two Independent Random Variables)": [[201, "thm:moment_generating_function_sum_of_2_rv"]], " (Moment Generating Function)": [[200, "def:moment_generating_function"]], " (Moments of Bernoulli Random Variable)": [[200, "ex:moment_generating_function_bernoulli"]], " (Moments)": [[142, "def_moments"], [165, "def_moments_continuous"]], " (Monotone Convergence Theorem)": [[61, "monotone-convergence"]], " (Monotonicity)": [[29, "875-koko-eating-bananas-monotonicity"]], " (Multivariate Gaussian Distribution (2D))": [[178, "def:multivariate_gaussian_distribution_2d"]], " (Multivariate Gaussian Distribution)": [[191, "def:multivariate_gaussian"]], " (Naive Bayes Estimation Algorithm)": [[74, "prf:naive-bayes-estimation-algorithm"]], " (Naive Bayes Inference Algorithm)": [[74, "naive-bayes-inference-algorithm"]], " (Non-Negativity)": [[124, "how-does-softmax-work-non-negativity"], [131, "axiom:non-negativity"]], " (Norm on a Vector Space)": [[84, "03-vector-norm-norm-on-a-vector-space"]], " (Normalization Property of PMF)": [[139, "thm_pmf_normalization"]], " (Normalization)": [[98, "ml-lifecycle-032-normalization"], [124, "how-does-softmax-work-normalization"], [131, "axiom:normalization"]], " (Notation Clash)": [[68, "remark-likelihood-function-notation-clash"]], " (Notation Convention)": [[68, "prf-remark-notation-convention-linear-regression"]], " (Notation Conventions)": [[48, "remark-notation"]], " (Notation Overload)": [[74, "notation-overload"]], " (Notation Reminder)": [[53, "prf:remark-notation-gmm"]], " (Notation)": [[61, "prf:remark:kmeans-optimal-cluster-centers-notation"], [66, "remark-learning-problem-notations"]], " (Notations)": [[66, "remark-learning-problem-notations-learning-theory"]], " (Numerical Stability)": [[58, "decoder-concept-numerical-stability"]], " (Open Equals Closed Interval)": [[163, "rem_open_equals_closed_interval"]], " (Orthornormal Basis)": [[192, "thm:orthornormal_basis"]], " (Out-Sample Error (Generalization Error))": [[66, "prf:definition:out-sample-error"]], " (PDF is Derivative of CDF)": [[166, "thm_pdf_derivative_cdf"]], " (PDF of Independent Multivariate Gaussian Random Vectors)": [[191, "def:independence"]], " (PDF of Independent Random Vectors)": [[188, "def:pdf-independent-random-vector"]], " (PDF of Random Vectors)": [[188, "def:pdf-random-vector"]], " (PMF and CDF Conversion)": [[140, "thm_pmf_cdf"]], " (PMF of Coin Toss)": [[139, "example_pmf_coin_toss"]], " (PMF of Two Dice Rolls)": [[139, "example_pmf_two_dice_rolls"]], " (Parameter of a Bernoulli Distribution)": [[210, "prf:example-bernoulli-parameter"]], " (Parameter of a Gaussian Distribution)": [[210, "prf:example-gaussian-parameter"]], " (Pinning Pylint Version)": [[94, "cicd-concept-pinning-pylint"]], " (Point vs. Position Vector)": [[80, "02-systems-of-linear-equations-point-vs-position-vector"]], " (Poisson Approximation to Binomial Distribution)": [[155, "thm:poi_bin"]], " (Poisson Distribution)": [[155, "def:poi"]], " (Position-wise Feedforward Networks)": [[56, "def-positionwise-ffn-notation"], [58, "def-positionwise-ffn"]], " (Positional Encoding)": [[58, "decoder-positional-encoding"]], " (Positive Definite Matrix)": [[195, "corollary:positive_definite_matrix"]], " (Positive Definite)": [[195, "def:positive_definite"]], " (Positive Semi-Definite Matrix)": [[195, "theorem:positive_semi_definite_matrix"]], " (Positive Semi-Definite)": [[195, "def:positive_semi_definite"]], " (Posterior)": [[74, "posterior"]], " (Pre-image of a Random Variable)": [[137, "pre_image"]], " (Prior)": [[74, "prior"]], " (Probability Density Function (1-dimensional))": [[163, "def_probability_density_function_1d"]], " (Probability Density Function)": [[163, "def_probability_density_function"], [163, "rem_probability_density_function"]], " (Probability Law)": [[130, "probability_law"]], " (Probability Mass Function)": [[139, "def_pmf"]], " (Probability of Complements)": [[131, "corollary:probability-of-complements"]], " (Probability of Empty Set)": [[131, "corollary:probability-of-empty-set"]], " (Probability of an Interval)": [[166, "prop_continuous_cdf_interval"], [170, "cor_probability_interval"]], " (Properties of CDF)": [[140, "thm_cdf"], [166, "prop_continuous_discrete_cdf"]], " (Properties of Transpose)": [[82, "01-vector-definition-properties-of-transpose"]], " (Pseudocode)": [[27, "binary-search-pseudocode-iterative"], [27, "binary-search-pseudocode-recursive"]], " (Query and Key are Independent and Identically Distributed (i.i.d.))": [[58, "decoder-concept-query-key-iid"]], " (R-squared)": [[68, "def-r-squared"]], " (Random Variable is a Function)": [[66, "remark-random-variable-is-a-function"]], " (Random Variables)": [[137, "random_variables"]], " (Random Vectors)": [[188, "def:random-vector"], [188, "rmk:random-vector"]], " (Ranking items on a newsfeed)": [[96, "ml-lifecycle-02-ranking-items-newsfeed"]], " (Remark)": [[61, "remark-kmeans-problem-statement"], [193, "prf:remark:why_contours_of_multivariate_gaussian_are_elliptical"]], " (Remark: Closed-Form Solution for Single Gaussian)": [[53, "prf:remark-gmm-closed-form"]], " (Restricted Hypothesis Space)": [[66, "restricted_hypothesis_space"]], " (Risk vs Loss)": [[50, "rem-risk-vs-loss"]], " (Running Example (Initialization))": [[53, "example-gmm-initialization"]], " (Running Example: Update Covariance Matrix)": [[53, "prf-gmm-update-covariance-example"]], " (Running Example: Update Mean)": [[53, "prf-gmm-update-means-example"]], " (Running Example: Update of the GMM Mixture Weights)": [[53, "ex:gmm-update-mixture-weights"]], " (Sample Average)": [[206, "def-sample-average"]], " (Sample Complexity)": [[66, "sample_complexity_example"]], " (Sample Space \\mathbf{\\Omega})": [[130, "sample_space"]], " (Sauer\u2019s Lemma)": [[66, "sauer's_lemma"]], " (Scaled Dot-Product Attention)": [[58, "decoder-concept-scaled-dot-product-attention"]], " (Scaling)": [[141, "prop_expectation_scaling_discrete"], [142, "prop_scaling"], [164, "prop_expectation_scaling_continuous"]], " (Shattering)": [[66, "shatters"]], " (Simplification of the Objective Function)": [[57, "decoder-simplified-objective-function"]], " (Softmax Normalization and Attention Weights)": [[58, "decoder-concept-softmax-normalization-attention-weights"]], " (Softmax Output as Vector)": [[124, "softmax-output-vector"]], " (Some Intuition)": [[181, "remark:conditional-pmf"]], " (Some Remarks)": [[32, "stack-list-remarks"]], " (Some remarks)": [[51, "remark-bayes-optimal-classifier"], [74, "some-remarks"]], " (Standard Deviation)": [[142, "def_standard_deviation"]], " (Standard Gaussian Distribution)": [[170, "def_standard_gaussian_distribution"]], " (Standard Normal Distribution (CDF))": [[170, "def_standard_normal_distribution_cdf"]], " (Standard Representation of Vectors)": [[82, "01-vector-definition-column-vector-is-the-standard-representation"]], " (State Space of Coin Toss)": [[139, "example_state_space_coin_toss"]], " (State Space of Dice Roll)": [[139, "example_state_space_dice_roll"]], " (State Space)": [[139, "def_state_space"]], " (Stirling Numbers of the Second Kind)": [[61, "stirling-numbers"]], " (Strong Law of Large Numbers)": [[206, "theorem-strong-law-of-large-numbers"]], " (Stronger Linearity)": [[141, "prop_expectation_stronger_linearity_discrete"], [164, "prop_expectation_stronger_linearity_continuous"]], " (Subtype Criterion)": [[4, "type-theory-subtype-criterion"]], " (Subtype and Type Safety)": [[3, "type-theory-subtype-and-type-safety"]], " (Sum of Common Distributions)": [[186, "theorem:sum-of-common-distributions"]], " (Sum of Gaussian Random Variables is Gaussian)": [[201, "thm:moment_generating_function_sum_of_gaussian_rv"]], " (Sum of Gaussian Random Variables)": [[186, "theorem:sum-of-gaussian-random-variables"]], " (Sum of Independent Poisson Random Variables)": [[155, "prop_sum_poi"]], " (Sum of Poisson Random Variables is Poisson)": [[201, "thm:moment_generating_function_sum_of_poisson_rv"]], " (Sum of Poisson Random Variables)": [[186, "theorem:sum-of-poisson-random-variables"]], " (Summary)": [[66, "remark-summary-1"]], " (System of Linear Equations (Algebraic Form))": [[80, "02-systems-of-linear-equations-definition-algebraic-form"]], " (The Average Case)": [[13, "two-sum-time-complexity-nested-loops-avg-case"], [19, "remark-0"]], " (The Fundamental Theorem of Calculus)": [[126, "fundamental_theorem_of_calculus"]], " (The Law of Iterated Expectation)": [[183, "corollary:law_of_iterated_expectation"]], " (The Law of The Unconscious Statistician)": [[141, "prop_expectation_function_discrete"], [164, "prop_expectation_function_continuous"]], " (The Method of Transformations)": [[173, "theorem:method-of-transformations"]], " (The Parameter Vector)": [[74, "parameter-vector"]], " (The State Space of Binomial Distribution)": [[147, "def:state_space_binomial"]], " (The VC Generalization Bound)": [[66, "vc_generalization_bound"]], " (The i.i.d. Assumption)": [[74, "iid-assumption"]], " (The i.i.d. assumption)": [[68, "prf-remark-iid"]], " (The update of the GMM Means depends on the responsibilities)": [[53, "remark-gmm-update-means"]], " (Things to Note (Important))": [[66, "remark-things-to-note"]], " (Tightness of the Union Bound)": [[203, "remark:union_bound_tightness"]], " (Time Complexity)": [[29, "time-complexity"]], " (Transpose of a Vector)": [[82, "01-vector-definition-transpose-of-a-vector"]], " (True Risk Minimization)": [[50, "theorem-true-risk-minimization"]], " (True Risk/Generalization Error)": [[50, "def-true-risk"]], " (Two Coins)": [[181, "ex:two-coins"]], " (Two Pointers Technique with Meet in the Middle)": [[47, "two-pointers-technique-meet-in-middle-algorithm"]], " (Two Pointers Technique)": [[47, "two-pointers-technique-algorithm"]], " (Two-Pointers (Code))": [[44, "remove-duplicates-from-sorted-array-two-pointers-algorithm-2"]], " (Two-Pointers)": [[43, "two-sum-167-two-sum-ii-input-array-is-sorted-two-pointers-algorithm"], [44, "remove-duplicates-from-sorted-array-two-pointers-algorithm-1"]], " (Uncoutable Set)": [[162, "def_uncountable_set"]], " (Underlying Distributions)": [[74, "underlying-distributions"]], " (Union Bound)": [[203, "theorem:union_bound"]], " (Univariate Maximum Likelihood Estimation)": [[74, "remark-univariate-mle"]], " (Unordered Linear Search Mathematical Representation (Iterative))": [[30, "unordered-linear-search-mathematical-representation-iterative"]], " (Unordered Linear Search Pseudocode (Iterative))": [[30, "unordered-linear-search-pseudocode-iterative"]], " (Update of the GMM Covariances)": [[53, "theorem-gmm-update-covariance"]], " (Update of the GMM Means)": [[53, "theorem-gmm-update-means"]], " (Update of the GMM Mixture Weights depends on all Parameters)": [[53, "rem:gmm-update-mixture-weights-depends-on-all-parameters"]], " (Update of the GMM Mixture Weights)": [[53, "thm:gmm-update-mixture-weights"]], " (VC Dimension of \\mathcal{H})": [[66, "vc_dimension"]], " (VC Dimension of a 2D Perceptron)": [[66, "vc_dimension_of_a_2d_perceptron"]], " (VC Dimension of a Perceptron)": [[66, "vc_dimension_of_a_perceptron"]], " (Valid Parentheses Using Stack)": [[35, "valid-parentheses-using-stack"]], " (Variable vs Random Variable)": [[137, "example_variable_vs_random_variable"]], " (Variance (Alternative))": [[142, "def_variance_alt"], [165, "def_variance_continuous_alt"]], " (Variance of Bernoulli Distribution)": [[144, "prop:bernoulli_var"]], " (Variance of Binomial Distribution)": [[147, "prop:bino_var"]], " (Variance of Dot Product)": [[58, "decoder-concept-variance-dot-product"]], " (Variance of Geometric Distribution)": [[151, "prop:geo_var"]], " (Variance of Poisson Distribution)": [[155, "prop:poi_var"]], " (Variance of Sample Average)": [[206, "theorem-variance-of-sample-average"]], " (Variance)": [[142, "def_variance"], [165, "def_variance_continuous"]], " (Vector Addition)": [[83, "02-vector-operation-vector-addition-example"]], " (Vector Subtraction)": [[83, "02-vector-operation-vector-subtraction-example"]], " (Vector is Invariant under Coordinate Transformation)": [[82, "01-vector-definition-is-invariant-under-coordinate-transformation"]], " (Vector versus Coordinate)": [[82, "01-vector-definition-vector-versus-coordinate"]], " (Voronoi Region)": [[61, "def-voronoi-region"]], " (Weak Law of Large Numbers)": [[66, "theorem-weak-law-of-large-numbers-restated"], [206, "theorem-weak-law-of-large-numbers"]], " (What if we want to find 39?)": [[27, "binary-search-remark-what-if-we-want-to-find-39"]], " (What is a joint distribution?)": [[196, "remark-what-is-a-joint-distribution"]], " (What is a learner?)": [[68, "prf-example-learner"]], " (What is the Hypothesis Space is Infinite?)": [[66, "rmk:infinite-hypothesis-space"]], " (Where\u2019s the y?)": [[211, "rem:where-y"]], " (Why 2^D parameters?)": [[74, "2dparameters"]], " (Why ceiling?)": [[29, "875-koko-eating-bananas-why-ceiling"]], " (Why do we need a bias?)": [[68, "prf:remark-bias"]], " (Why is \\iid so important?)": [[176, "rem_iid"]], " (Why not just use Any?)": [[5, "computer-science-type-theory-generics-why-use-t"]], " (Yield is an expression and not a statement)": [[213, "software-engineering-concurrency-parallelism-asynchronous-generator-yield-is-an-expression"]], " (Zero Measure)": [[163, "def_zero_measure"]], " (Zero-One Loss)": [[66, "prf:definition:zero-one-loss"]], " (\\textbf{i.i.d.} Assumption in ERM)": [[50, "rem-iid-erm"]], "1. Code versioning": [[104, "code-versioning"]], "1. Model Performance Monitoring": [[110, "model-performance-monitoring"]], "1. Randomized Traffic Allocation": [[94, "randomized-traffic-allocation"]], "1. Review the Configuration File": [[90, "review-the-configuration-file"]], "1. The CoVe Architecture: From Monologue to Dialogue": [[48, "the-cove-architecture-from-monologue-to-dialogue"]], "1. Understanding Threading and Asyncio": [[216, "understanding-threading-and-asyncio"]], "1. Warmup Phase": [[123, "warmup-phase"]], "1. What will be the output of the provided example usage? Explain why.": [[236, "what-will-be-the-output-of-the-provided-example-usage-explain-why"]], "2. A Case Study in Action: Correcting a Factual Hallucination": [[48, "a-case-study-in-action-correcting-a-factual-hallucination"]], "2. Cosine Decay Phase": [[123, "cosine-decay-phase"]], "2. Create the Cluster": [[90, "create-the-cluster"]], "2. Data Drift Monitoring": [[110, "data-drift-monitoring"]], "2. Data versioning": [[104, "data-versioning"]], "2. Pre-emptive Multitasking in Threading": [[216, "pre-emptive-multitasking-in-threading"]], "2. Sufficient Sample Size": [[94, "sufficient-sample-size"]], "2. What is the issue with using mutable default arguments in Python functions?": [[236, "what-is-the-issue-with-using-mutable-default-arguments-in-python-functions"]], "2.1. Tau Fraction": [[123, "tau-fraction"]], "2.1. Training Dataset": [[57, "training-dataset"]], "2.2. Input Representation": [[57, "input-representation"]], "2.2. Learning Rate Multiplier": [[123, "learning-rate-multiplier"]], "2.3. Learning Rate": [[123, "learning-rate"]], "2.3. Model": [[57, "model"]], "2D Multivariate Gaussian": [[190, "d-multivariate-gaussian"]], "3. Concept Drift Monitoring": [[110, "concept-drift-monitoring"]], "3. Cooperative Multitasking in Asyncio": [[216, "cooperative-multitasking-in-asyncio"]], "3. Model artifacts and metadata": [[104, "model-artifacts-and-metadata"]], "3. Monitor the Cluster Creation": [[90, "monitor-the-cluster-creation"]], "3. Why CoVe is a Breakthrough in AI Reliability": [[48, "why-cove-is-a-breakthrough-in-ai-reliability"]], "4. Real-World Applications Beyond Q&A": [[48, "real-world-applications-beyond-q-a"]], "4. Summary of Key Differences": [[216, "summary-of-key-differences"]], "5. Practical Implementation: A Minimalist Python Example": [[48, "practical-implementation-a-minimalist-python-example"]], "5. When to Use Threading vs Asyncio": [[216, "when-to-use-threading-vs-asyncio"]], "6. Limitations and Future Directions": [[48, "limitations-and-future-directions"]], "A Case Study On Addable": [[6, "a-case-study-on-addable"]], "A Case Study On Sized": [[6, "a-case-study-on-sized"]], "A Caution on Data Leakage": [[106, "a-caution-on-data-leakage"]], "A First Look at Vector Products": [[85, null]], "A More Nuanced Example: Mutable Default Arguments": [[94, "a-more-nuanced-example-mutable-default-arguments"]], "A Naive Approach": [[29, "a-naive-approach"]], "A Naive DataOps Pipeline": [[100, "a-naive-dataops-pipeline"]], "A Naive Implementation of DataLoader": [[213, "a-naive-implementation-of-dataloader"]], "A Not So Good Example on Implementing Base Estimator": [[8, "a-not-so-good-example-on-implementing-base-estimator"]], "A Note On Cross-validation": [[106, "a-note-on-cross-validation"]], "A Note On Random Variables": [[126, "a-note-on-random-variables"]], "A Primer": [[53, "a-primer"]], "A Primer on Binary Digits (Bits) and 8-bit Unsigned Integers": [[63, "a-primer-on-binary-digits-bits-and-8-bit-unsigned-integers"]], "A Registry For PyTorch Schedulers": [[226, "a-registry-for-pytorch-schedulers"]], "A Rudimentary Introduction to Generator and Yield in Python": [[213, null]], "A Small Example": [[53, "a-small-example"]], "A Smaller Example for Illustration": [[59, "a-smaller-example-for-illustration"]], "A Type Safe Example": [[3, "a-type-safe-example"]], "A Violation of Dependency Inversion Principle": [[221, "a-violation-of-dependency-inversion-principle"]], "A Word on Monitoring in Machine Learning Systems": [[94, "a-word-on-monitoring-in-machine-learning-systems"]], "A Word on Oscillations": [[59, null], [123, null]], "A Word on Type Safety Checks in Python": [[94, "a-word-on-type-safety-checks-in-python"]], "A-posteriori:": [[66, "a-posteriori"]], "A-priori:": [[66, "a-priori"]], "A/B Testing": [[94, "a-b-testing"]], "ACID Properties": [[98, "ml-lifecycle-032-acid-properties"]], "Ablation Studies": [[106, "ablation-studies"]], "Ablations": [[91, null]], "Abstract Overview": [[57, "abstract-overview"]], "Accommodate Dynamic Size": [[17, "accommodate-dynamic-size"]], "Activate Virtual Environment": [[94, "activate-virtual-environment"]], "Adding a Return Statement": [[213, "adding-a-return-statement"]], "Adding send": [[213, "adding-send"]], "Adding throw and close": [[213, "adding-throw-and-close"]], "Additivity": [[124, "additivity"]], "Adjusted R-Squared": [[68, "adjusted-r-squared"]], "Advantages": [[98, "advantages"], [109, "advantages"], [109, "id5"], [109, "id9"], [109, "id14"]], "Advantages of Arrays": [[11, "advantages-of-arrays"]], "Advantages of Hash Maps": [[17, "advantages-of-hash-maps"]], "After": [[238, "after"]], "Algebraic Definition": [[82, "algebraic-definition"], [83, "algebraic-definition"], [83, "id1"], [85, "algebraic-definition"]], "Algorithm": [[29, "algorithm"], [43, "algorithm"], [44, "algorithm"], [61, "algorithm"]], "Algorithm (Iterative + Exact Match)": [[27, "algorithm-iterative-exact-match"]], "Algorithm (Iterative)": [[30, "algorithm-iterative"]], "Algorithm (Recursive + Exact Match)": [[27, "algorithm-recursive-exact-match"]], "Algorithm Implementation: The QuickSelect Trap": [[48, "algorithm-implementation-the-quickselect-trap"]], "All Generators Are Iterators": [[234, "all-generators-are-iterators"]], "All Iterators Are Iterable, But Not All Iterables Are Iterators": [[234, "all-iterators-are-iterable-but-not-all-iterables-are-iterators"]], "Alternative Masking": [[56, null]], "Alternative way to Calculate Expected Value of Revenue per Day": [[146, "alternative-way-to-calculate-expected-value-of-revenue-per-day"]], "An Example": [[95, "an-example"], [213, "an-example"]], "An Example Of Data Extraction For Collecting Large Volumes Of Text Data": [[99, "an-example-of-data-extraction-for-collecting-large-volumes-of-text-data"]], "An Example On E-commerce Recommendation": [[96, "an-example-on-e-commerce-recommendation"]], "An Example On Medical Diagnosis": [[96, "an-example-on-medical-diagnosis"]], "An Example On Movie Recommendation System": [[95, "an-example-on-movie-recommendation-system"]], "An Example To Illustrate The Notations": [[88, "an-example-to-illustrate-the-notations"]], "An Example Walkthrough": [[123, "an-example-walkthrough"]], "An Example of Batch Extraction": [[101, "an-example-of-batch-extraction"]], "An Example of Positional Encoding": [[58, "an-example-of-positional-encoding"]], "An Example of Real-time Ingestion": [[101, "an-example-of-real-time-ingestion"]], "An Example on Multimodal Data Storage For E-Commerce": [[97, "an-example-on-multimodal-data-storage-for-e-commerce"]], "Analogy: Bakery": [[80, "analogy-bakery"]], "Analogy: Job Scheduling in Data Centers": [[29, "analogy-job-scheduling-in-data-centers"]], "Analogy: The Stack of Plates": [[32, "analogy-the-stack-of-plates"]], "Analytical Processing": [[98, "analytical-processing"]], "Appendix A. Styling, Formatting, and Linting": [[94, "appendix-a-styling-formatting-and-linting"]], "Application": [[143, null], [159, null], [180, null]], "Application of Chernoff and Chebyshev\u2019s Inequality": [[203, "application-of-chernoff-and-chebyshev-s-inequality"]], "Application to Common Algorithms": [[16, "application-to-common-algorithms"]], "Application: Image Compression and Segmentation": [[63, null]], "Application: Learning Theory": [[202, null], [205, null]], "Application: Moment Generating Function and the Sum of Random Variables": [[201, null]], "Application: Plots and Transformations": [[190, null]], "Applying Compression via K-Means": [[63, "applying-compression-via-k-means"]], "Applying LayerNorm and Residual Connections to Multi-Head Attention Output": [[58, "applying-layernorm-and-residual-connections-to-multi-head-attention-output"]], "Applying LayerNorm and Residual Connections to Positionwise FFN Output": [[58, "applying-layernorm-and-residual-connections-to-positionwise-ffn-output"]], "Approximating True Risk with Empirical Risk": [[50, "approximating-true-risk-with-empirical-risk"]], "Architecture": [[100, "architecture"]], "Are there any scenarios where using a list might be preferable over a set for tracking seen items?": [[239, "are-there-any-scenarios-where-using-a-list-might-be-preferable-over-a-set-for-tracking-seen-items"]], "Armortized Analysis": [[36, "armortized-analysis"]], "Array Notations": [[11, "array-notations"]], "Assessing the Accuracy of the Coefficient Estimates": [[68, "assessing-the-accuracy-of-the-coefficient-estimates"]], "Assignment": [[61, "assignment"]], "Assignments are Equivalent to Clusters": [[61, "assignments-are-equivalent-to-clusters"]], "Assumption 1: The Distribution of the Data Point \\boldsymbol{x}^{(n)} given the Latent Variable \\boldsymbol{z}^{(n)}": [[53, "assumption-1-the-distribution-of-the-data-point-boldsymbol-x-n-given-the-latent-variable-boldsymbol-z-n"]], "Assumption 2: The Latent Variable \\boldsymbol{z}": [[53, "assumption-2-the-latent-variable-boldsymbol-z"]], "Assumption 3: The Joint Distribution of \\boldsymbol{x}^{(n)} and \\boldsymbol{z}^{(n)}": [[53, "assumption-3-the-joint-distribution-of-boldsymbol-x-n-and-boldsymbol-z-n"]], "Assumptions": [[19, "assumptions"], [27, "assumptions"], [29, "assumptions"], [36, "assumptions"], [43, "assumptions"], [144, "assumptions"], [147, "assumptions"], [155, "assumptions"]], "Assumptions and Constraints": [[27, "assumptions-and-constraints"], [29, "assumptions-and-constraints"]], "Assumptions of Linear Regression": [[68, "assumptions-of-linear-regression"]], "Asynchronous Data Loading and Prefetching": [[58, "asynchronous-data-loading-and-prefetching"]], "Asyncio": [[216, "asyncio"]], "Atomicity, Consistency, Isolation, Durability (ACID)": [[98, "atomicity-consistency-isolation-durability-acid"]], "Attention Heatmap": [[119, "attention-heatmap"]], "Attention Notations": [[56, "attention-notations"]], "Attention Scoring Function": [[58, "attention-scoring-function"]], "Automate Linting and Integration with CI/CD Pipelines": [[94, "automate-linting-and-integration-with-ci-cd-pipelines"]], "Autoregressive Self-Supervised Learning": [[57, "autoregressive-self-supervised-learning"]], "Autoregressive Self-Supervised Learning Paradigm": [[56, "autoregressive-self-supervised-learning-paradigm"]], "Auxiliary Loss Function": [[57, "auxiliary-loss-function"]], "Auxiliary Space": [[13, "auxiliary-space"], [19, "auxiliary-space"], [43, "auxiliary-space"]], "Auxiliary Space Complexity": [[20, "auxiliary-space-complexity"], [20, "id8"], [27, "auxiliary-space-complexity"], [27, "id11"], [29, "auxiliary-space-complexity"], [30, "auxiliary-space-complexity"]], "Average Case": [[30, "average-case"]], "Baby Mass Frequency Table": [[174, "baby-frequency-1"]], "Back to Intuition": [[126, "back-to-intuition"]], "Backbone Architecture": [[56, "backbone-architecture"]], "Backend": [[89, "backend"]], "Background": [[30, "background"]], "Barrier": [[91, "barrier"]], "Base Model": [[72, "base-model"]], "Baseline": [[95, "baseline"], [102, "baseline"]], "Basics Of Distributed Data Parallelism": [[89, null]], "Basics of Floating Point Numbers": [[118, "basics-of-floating-point-numbers"]], "Basis Function and Non-Linearity": [[68, "basis-function-and-non-linearity"]], "Batch Extraction/Ingestion": [[101, "batch-extraction-ingestion"]], "Batch Features, Online Features, and Streaming Features": [[109, "batch-features-online-features-and-streaming-features"]], "Batch Processing does not mean Predicting all Possible Inputs in Advance": [[109, "batch-processing-does-not-mean-predicting-all-possible-inputs-in-advance"]], "Batch Processing vs. Stream Processing": [[99, "batch-processing-vs-stream-processing"]], "Batch Serving/Inference (Asynchronous)": [[109, "batch-serving-inference-asynchronous"]], "Batched": [[56, "batched"]], "Batched Input Sequences": [[56, "batched-input-sequences"]], "Bayes Optimal Classifier": [[51, null]], "Bayes\u2019 Theorem": [[136, "bayes-theorem"]], "Baye\u2019s Theorem": [[134, "baye-s-theorem"]], "Baye\u2019s Theorem and the Law of Total Probability": [[134, null]], "Before": [[238, "before"]], "Benchmark": [[230, "benchmark"]], "Benefit Structure": [[95, "benefit-structure"], [103, "benefit-structure"]], "Benefits of Integration Testing": [[94, "benefits-of-integration-testing"]], "Benefits of Linting": [[94, "benefits-of-linting"]], "Benefits of Unit Testing": [[94, "benefits-of-unit-testing"]], "Bernoulli Distribution": [[145, null]], "Bernoulli Example": [[207, "bernoulli-example"]], "Bernoulli Sampling": [[143, "bernoulli-sampling"]], "Bernoulli Trials": [[146, "bernoulli-trials"]], "Best Case": [[30, "best-case"]], "Best Practices for Formatting and CI/CD Pipeline Integration": [[94, "best-practices-for-formatting-and-ci-cd-pipeline-integration"]], "Best Practices for Linting and CI/CD Pipeline Integration": [[94, "best-practices-for-linting-and-ci-cd-pipeline-integration"]], "Best, Worst, and Average Case Analysis": [[29, "best-worst-and-average-case-analysis"]], "Best, Worst, and Average Case Analysis of Binary Search": [[27, "binary-search-time-complexity-iterative"], [29, "koko-eating-bananas-best-worst-average-case-analysis-of-binary-search"]], "Best, Worst, and Average Case Analysis of Koko Eating Bananas": [[29, "koko-eating-bananas-best-worst-average-case-analysis-of-koko-eating-bananas"]], "Bias and Variance": [[107, "bias-and-variance"]], "Bibliography": [[0, null], [48, "bibliography"]], "Big Bang Testing": [[94, "big-bang-testing"]], "Binary Field \\mathbb{F}_2": [[79, "binary-field-mathbb-f-2"]], "Binary Search": [[28, null]], "Binary Search State Table": [[27, "binary-search-state-table-1"], [27, "binary-search-state-table-2"]], "Binding Time And Scope": [[6, "binding-time-and-scope"]], "Binomial Distribution": [[146, "binomial-distribution"], [149, null]], "Binomial Distribution as a Sum of Bernoulli Trials": [[147, "binomial-distribution-as-a-sum-of-bernoulli-trials"]], "Books and Lectures": [[60, "books-and-lectures"], [73, "books-and-lectures"]], "Bottom-Up Testing": [[94, "bottom-up-testing"]], "Bound and Constraint in Generics and Type Variables": [[6, null]], "Bound versus Constraints": [[6, "bound-versus-constraints"]], "Boundaries (Linearity)": [[102, "boundaries-linearity"]], "Bounding and Semantic Clarity": [[6, "bounding-and-semantic-clarity"]], "Break down of the Matrix Representation": [[68, "break-down-of-the-matrix-representation"]], "Breaking it Down": [[29, "breaking-it-down"]], "Broadcasting": [[58, null]], "Brute Force Search and Global Minimum": [[61, "brute-force-search-and-global-minimum"]], "Business Problem and Objectives": [[95, "business-problem-and-objectives"]], "Business metrics": [[95, "business-metrics"]], "CDF of Arbitrary Gaussian Distribution": [[170, "cdf-of-arbitrary-gaussian-distribution"]], "CDF of Functions of Random Variables": [[173, "cdf-of-functions-of-random-variables"]], "CI/CD Pipeline": [[100, "ml-lifecycle-03-ci-cd-pipeline"]], "CONTRIBUTING": [[94, "contributing"]], "CPU Bound": [[216, "cpu-bound"]], "CPU-bound tasks": [[231, "cpu-bound-tasks"]], "CUDA Memory Allocations": [[115, null]], "Calculating Checkpoint Size and Fluff Ratio": [[118, "calculating-checkpoint-size-and-fluff-ratio"]], "Calculating Expected Value \\mathbb{E}[\\mathcal{T}(N)]": [[30, "calculating-expected-value-mathbb-e-mathcal-t-n"]], "Calculus": [[126, null], [174, "calculus"]], "Calibrating Models": [[103, "calibrating-models"]], "Calibration": [[103, "calibration"], [124, "calibration"]], "Calibration and Evaluation (Brier + AUROC combo)": [[103, "calibration-and-evaluation-brier-auroc-combo"]], "Call Center Simulation": [[146, "call-center-simulation"]], "Call Stack": [[237, "call-stack"]], "Callable Argument Types (Contravariance)": [[7, "callable-argument-types-contravariance"]], "Callable Return Types (Covariance)": [[7, "callable-return-types-covariance"]], "Callback": [[119, "callback"]], "Car Data Model Characteristics": [[98, "ml-lifecycle-032-car-data-model"]], "Case 1": [[16, "case-1"]], "Case 1: Unique Solution": [[80, "case-1-unique-solution"]], "Case 1: i = j": [[124, "case-1-i-j"]], "Case 2": [[16, "case-2"]], "Case 2: Infinite Solutions": [[80, "case-2-infinite-solutions"]], "Case 2: i \\neq j": [[124, "case-2-i-neq-j"]], "Case 3": [[16, "case-3"]], "Case 3: No Solution": [[80, "case-3-no-solution"]], "Categorizing Drift Types": [[110, "categorizing-drift-types"]], "Cauchy-Schwarz Inequality": [[85, "cauchy-schwarz-inequality"]], "Central Moments": [[171, "central-moments"]], "Centroids (Representatives)": [[61, "centroids-representatives"]], "Chain-of-Verification Reduces Hallucination in Large Language Models": [[48, null]], "Chapter 1. Mathematical Preliminaries": [[129, null]], "Chapter 2. Probability": [[135, null]], "Chapter 3. Discrete Random Variables": [[154, null]], "Chapter 4. Continuous Random Variables": [[175, null]], "Chapter 5. Joint Distributions": [[197, null]], "Chapter 6. Sample Statistics": [[209, null]], "Chapter 8. Estimation Theory": [[210, null]], "Characteristic Function": [[198, null]], "Characteristic Function and Fourier Transform": [[198, "characteristic-function-and-fourier-transform"]], "Chebyshev\u2019s Inequality": [[203, "chebyshev-s-inequality"]], "Chernoff\u2019s Bound": [[203, "chernoff-s-bound"]], "Choose K that Minimizes the Cost Function": [[61, "choose-k-that-minimizes-the-cost-function"]], "Choose Your Metrics Wisely": [[103, "choose-your-metrics-wisely"]], "Choosing The Right Metric": [[103, "choosing-the-right-metric"]], "Choosing the Right Fusion Strategy": [[96, "choosing-the-right-fusion-strategy"]], "Circle as a Subtype of Shape in 2D Euclidean Geometry": [[4, "circle-as-a-subtype-of-shape-in-2d-euclidean-geometry"]], "Circle is a Subtype of Shape": [[4, "circle-is-a-subtype-of-shape"]], "Citations": [[10, "citations"], [55, "citations"], [57, "citations"], [70, "citations"], [123, "citations"], [124, "citations"]], "Claim": [[43, "claim"], [44, "claim"]], "Clarifying Requirements": [[95, "clarifying-requirements"]], "Clarifying Requirements for an AIOps System": [[95, "clarifying-requirements-aiops-system"]], "Class Imbalance": [[101, "class-imbalance"]], "Class Variables": [[227, "class-variables"]], "Classification": [[95, "classification"], [103, "classification"]], "Classifying one penguin": [[76, "classifying-one-penguin"]], "Cloning an Existing Repository": [[94, "cloning-an-existing-repository"]], "Closing: Relevance of Vector Norms and Distances in Machine Learning and Deep Learning": [[84, "closing-relevance-of-vector-norms-and-distances-in-machine-learning-and-deep-learning"]], "Clustering": [[103, "clustering"]], "Code Breakdown": [[36, "code-breakdown"], [36, "id1"]], "Code Correctors": [[94, "code-correctors"]], "Code Generation and Review": [[48, "code-generation-and-review"]], "Code Implementations": [[73, "code-implementations"]], "Code Quality Assurance": [[94, "code-quality-assurance"]], "Coercive Implementations": [[2, "coercive-implementations"]], "Coin Toss Example": [[211, "coin-toss-example"]], "Collating Everything Together": [[58, "collating-everything-together"]], "Column Wise Interpretation": [[85, "column-wise-interpretation"]], "Column-major order": [[97, "column-major-order"]], "Combination of Machine Learning and Deep Learning Tasks": [[96, "combination-of-machine-learning-and-deep-learning-tasks"]], "Command Line Arguments (CPU And Gloo Backend)": [[89, "command-line-arguments-cpu-and-gloo-backend"]], "Common Algorithms": [[16, "master-theorem-application-to-common-algorithms"]], "Common Clarifications and Corner Cases": [[11, "common-clarifications-and-corner-cases"], [17, "common-clarifications-and-corner-cases"]], "Common Data Destinations": [[99, "common-data-destinations"]], "Common FAQ": [[60, "common-faq"]], "Common Functions": [[112, "common-functions"], [114, "common-functions"]], "Common Machine Learning Terminologies": [[87, "common-ml-terminologies"]], "Common Notations": [[11, "common-notations"], [17, "common-notations"]], "Common Terminologies": [[87, "common-terminologies"]], "Comparing Hoeffding\u2019s Inequality with the Chebyshev\u2019s Inequality": [[66, "comparing-hoeffding-s-inequality-with-the-chebyshev-s-inequality"]], "Comparison between Dynamic and Static Type Checking": [[3, "comparison-between-dynamic-and-static-type-checking"]], "Comparison of CPU-Bound and I/O-Bound Operations": [[216, "comparison-of-cpu-bound-and-i-o-bound-operations"]], "Complex Hypothesis Set and Complex Target Function": [[66, "complex-hypothesis-set-and-complex-target-function"]], "Complex Strategy With Factory And Registry Pattern": [[228, "complex-strategy-with-factory-and-registry-pattern"]], "Complexity Analysis": [[11, "complexity-analysis"], [15, null], [17, "complexity-analysis"], [30, "complexity-analysis"]], "Complexity of Collision Resolution": [[17, "complexity-of-collision-resolution"]], "Complexity per Layer": [[58, "complexity-per-layer"]], "Composing the Configurations": [[58, "composing-the-configurations"]], "Composition Of Configurations": [[219, "composition-of-configurations"]], "Composition Order": [[217, "composition-order"]], "Computational Complexity of Self-Attention": [[58, "computational-complexity-of-self-attention"]], "Compute Node": [[90, "compute-node"]], "Computer Science": [[1, "computer-science"], [78, null]], "Concept": [[11, null], [17, null], [22, null], [27, null], [30, null], [32, null], [53, null], [68, null], [71, null], [74, null], [141, "concept"], [141, null], [142, "concept"], [142, null], [144, null], [147, null], [151, null], [155, null], [160, null], [164, "concept"], [164, null], [165, "concept"], [165, null], [176, null], [178, null], [181, null], [183, null], [186, null], [188, null], [191, null], [206, null], [211, null]], "Concept Drift": [[110, "concept-drift"]], "Concept of Row-major vs Column-major order": [[97, "concept-of-row-major-vs-column-major-order"]], "Concept: Empirical Risk Minimization": [[50, null]], "Concept: K-Means Clustering": [[61, null]], "Concept: Learning Theory": [[66, null]], "Conceptual Questions": [[64, null]], "Conclusion": [[48, "conclusion"], [63, "conclusion"], [216, "conclusion"]], "Concurrency vs Parallelism": [[216, "concurrency-vs-parallelism"]], "Concurrency, Parallelism and Asynchronous Programming": [[215, null]], "Condition 1: The Optimal Assignment": [[61, "condition-1-the-optimal-assignment"]], "Condition 2: The Optimal Cluster Centers (Centroids)": [[61, "condition-2-the-optimal-cluster-centers-centroids"]], "Conditional": [[136, "conditional"]], "Conditional Entropy": [[57, "conditional-entropy"]], "Conditional Entropy and Perplexity as Loss Function": [[57, "conditional-entropy-and-perplexity-as-loss-function"]], "Conditional Expectation": [[183, "conditional-expectation"]], "Conditional Expectation and Variance": [[185, null]], "Conditional Independence": [[74, "conditional-independence"], [76, "conditional-independence"], [181, "conditional-independence"]], "Conditional Likelihood Function": [[68, "conditional-likelihood-function"]], "Conditional Likelihood in the Context of Machine Learning": [[211, "conditional-likelihood-in-the-context-of-machine-learning"]], "Conditional Log-Likelihood Function": [[68, "conditional-log-likelihood-function"]], "Conditional PDF": [[181, "conditional-pdf"]], "Conditional PMF": [[181, "conditional-pmf"]], "Conditional PMF and PDF": [[182, null]], "Conditional Probability": [[132, null]], "Conditional Variance": [[183, "conditional-variance"]], "Conditional on Task": [[57, "conditional-on-task"]], "Conditional, Priori, Posterior": [[136, "conditional-priori-posterior"]], "Config": [[59, "config"]], "Config For Different Stages/Evironments": [[219, "config-for-different-stages-evironments"]], "Config, State, Metadata Management": [[220, null]], "Configuration Management": [[219, null]], "Configurations, Constants and Enums": [[118, "configurations-constants-and-enums"]], "Configure AWS CLI": [[90, "configure-aws-cli"]], "Configure AWS ParallelCluster": [[90, "configure-aws-parallelcluster"]], "Connecting to a Remote Repository": [[94, "connecting-to-a-remote-repository"]], "Connection to Liskov Substitution Principle": [[4, "connection-to-liskov-substitution-principle"]], "Connection with Logistic Regression": [[74, "connection-with-logistic-regression"]], "Cons": [[217, "cons"]], "Console Output Breakdown": [[48, "console-output-breakdown"]], "Consolidated Script": [[90, "consolidated-script"]], "Constrained TypeVar Approach": [[6, "constrained-typevar-approach"]], "Constraining Type Variable": [[6, "constraining-type-variable"]], "Constraints": [[19, "constraints"], [20, "constraints"], [27, "constraints"], [29, "constraints"], [36, "constraints"], [43, "constraints"], [95, "constraints"]], "Constraints and Assumptions": [[25, "constraints-and-assumptions"], [26, "constraints-and-assumptions"], [35, "constraints-and-assumptions"], [37, "constraints-and-assumptions"]], "Construct Batches, Collate Function and DataLoader": [[59, "construct-batches-collate-function-and-dataloader"]], "Construct Hypothetical Function, Child and Parent Classes": [[117, "construct-hypothetical-function-child-and-parent-classes"]], "Constructing A Reversal Dataset": [[119, "constructing-a-reversal-dataset"]], "Constructing PyTorch Dataset": [[59, "constructing-pytorch-dataset"]], "Construction Input Sequences": [[58, "construction-input-sequences"]], "Construction Target Sequences": [[58, "construction-target-sequences"]], "Constructor": [[237, "constructor"]], "Containers are Generics": [[5, "containers-are-generics"]], "Contents": [[68, "contents"]], "Context Length / Context Window / Block Size": [[58, "context-length-context-window-block-size"]], "Context Length and Token Context Window": [[57, "context-length-and-token-context-window"]], "Context Object Pattern (God Object)": [[223, null]], "Context Vector/Matrix": [[58, "context-vector-matrix"]], "Contigency Matrix and Purity Score": [[62, "contigency-matrix-and-purity-score"]], "Contiguous": [[11, "contiguous"]], "Continuous Features (Gaussian Distribution)": [[74, "continuous-features-gaussian-distribution"]], "Continuous Integration (CI)": [[94, "continuous-integration-ci"]], "Continuous Random Variables": [[162, null]], "Continuous Training (Dependent on Monitoring of Drifts)": [[106, "continuous-training-dependent-on-monitoring-of-drifts"]], "Continuous Uniform Distribution": [[168, null]], "Contour Maps": [[127, null]], "Contour Plots": [[190, "contour-plots"]], "Contravariance": [[7, "contravariance"], [7, "id2"]], "Contravariant and Callable Types": [[7, "contravariant-and-callable-types"]], "Conventions": [[87, "conventions"]], "Convergence": [[57, "convergence"], [61, "convergence"]], "Convergence of Sample Average": [[207, null]], "Convexity and Differentiability": [[68, "convexity-and-differentiability"]], "Convolution and Sum of Random Variables": [[172, null]], "Convolutions of Random Variables": [[186, "convolutions-of-random-variables"]], "Corollaries of the Axioms": [[131, "corollaries-of-the-axioms"]], "Corpus and Tokenization": [[56, "corpus-and-tokenization"]], "Correcting the Violation": [[221, "correcting-the-violation"]], "Correctness": [[27, "correctness"], [27, "id5"], [29, "correctness"], [30, "correctness"]], "Cost Function": [[61, "cost-function"], [68, "cost-function"]], "Cost Function of K-Means Monotonically Decreases": [[64, "cost-function-of-k-means-monotonically-decreases"]], "Costly Insertions and Deletions": [[11, "costly-insertions-and-deletions"]], "Counting FLOPs of Matrix Multiplications": [[118, "counting-flops-of-matrix-multiplications"]], "Covariance": [[7, "covariance"], [7, "id1"]], "Covariance Matrix is Positive Semi-Definite": [[195, null], [195, "id1"]], "Covariance and Correlation Coefficient": [[178, "covariance-and-correlation-coefficient"]], "Covariance of Random Vectors (Covariance Matrix)": [[188, "covariance-of-random-vectors-covariance-matrix"]], "Create DataLoader": [[59, "create-dataloader"]], "Create Dataset": [[59, "create-dataset"]], "Create EC2 Key Pair": [[90, "create-ec2-key-pair"]], "Create Virtual Environment": [[94, "create-virtual-environment"]], "Criteria 1: Value Inclusion (Set Membership)": [[4, "criteria-1-value-inclusion-set-membership"]], "Criteria 2: Function Applicability": [[4, "criteria-2-function-applicability"]], "Criteria 3: Property Preservation (Invariant Maintenance)": [[4, "criteria-3-property-preservation-invariant-maintenance"]], "Criterion": [[59, "criterion"]], "Criterion 1: The Optimal Assignment": [[64, "criterion-1-the-optimal-assignment"]], "Criterion 2: The Optimal Cluster Centers": [[64, "criterion-2-the-optimal-cluster-centers"]], "Criterion for Subtype Relationships": [[4, "criterion-for-subtype-relationships"]], "Cross-Entropy Loss Function": [[56, "cross-entropy-loss-function"]], "Cross-Validation": [[106, "cross-validation"]], "Cumulative Distribution Function": [[140, null], [166, null]], "Current Limitations": [[48, "current-limitations"]], "Data": [[95, "data"]], "Data Augmentation": [[101, "data-augmentation"]], "Data Cohesion": [[11, "data-cohesion"]], "Data Collator And DataLoader": [[120, "data-collator-and-dataloader"]], "Data Drift": [[110, "data-drift"]], "Data Engineering In Machine Learning": [[100, "data-engineering-in-machine-learning"]], "Data Formats": [[97, "data-formats"]], "Data Formats in Machine Learning Systems": [[97, "data-formats-in-machine-learning-systems"]], "Data Lake vs. Data Warehouse": [[99, "data-lake-vs-data-warehouse"]], "Data Lake, Data Warehouse, Data Lakehouse, Delta Lake": [[98, "data-lake-data-warehouse-data-lakehouse-delta-lake"], [98, "ml-lifecycle-032-data-lake-vs-data-warehouse"]], "Data Leakage": [[101, "data-leakage"]], "Data Model": [[98, "data-model"]], "Data Serialization vs Data Deserialization": [[97, "data-serialization-vs-data-deserialization"]], "Data Sources in Machine Learning Systems": [[97, "data-sources-in-machine-learning-systems"]], "Data Storage Engines": [[98, "data-storage-engines"]], "Data Structures and Algorithms": [[78, null]], "Data Types in Machine Learning Systems": [[97, "data-types-in-machine-learning-systems"]], "DataLoaders, Streaming and Lazy Loading": [[213, "dataloaders-streaming-and-lazy-loading"]], "Database Analogy": [[58, "database-analogy"]], "Dataset": [[59, "dataset"], [120, "dataset"], [121, "dataset"]], "Dataset Preparation": [[72, "dataset-preparation"]], "Dataset and Dataloading (Poor Man\u2019s Dataloader)": [[58, "dataset-and-dataloading-poor-man-s-dataloader"]], "Deadlocks": [[231, "deadlocks"]], "Decision Boundary": [[74, "decision-boundary"]], "Declaration, Compile, and Run Time": [[2, null]], "Decoder": [[58, "decoder"]], "Decoder Blocks": [[58, "decoder-blocks"]], "Decorator": [[229, null], [229, "id1"]], "Decorators For Reistry Design Pattern": [[229, "decorators-for-reistry-design-pattern"]], "Decoupling Objectives": [[96, "decoupling-objectives"]], "Deep Learning": [[1, "deep-learning"]], "Deep Learning Tasks": [[96, "deep-learning-tasks"]], "Defining Independence in Terms of Conditional Probability": [[133, "defining-independence-in-terms-of-conditional-probability"]], "Defining Type Variables with Upper Bounds": [[6, "defining-type-variables-with-upper-bounds"]], "Defining the Random Variable": [[30, "defining-the-random-variable"]], "Definition": [[51, "definition"], [56, "definition"], [56, "id1"], [56, "id2"], [58, "definition"], [58, "id8"], [58, "id11"], [58, "id17"], [58, "id26"], [58, "id34"], [58, "id37"], [59, "definition"], [79, "definition"], [82, "definition"], [85, "definition"], [85, "id3"], [99, "definition"], [99, "id6"], [99, "id10"], [109, "definition"], [109, "id2"], [109, "id7"], [109, "id12"], [123, "definition"], [127, "definition"], [132, "definition"], [137, "definition"], [138, "definition"], [139, "definition"], [140, "definition"], [141, "definition"], [151, "definition"], [153, "definition"], [162, "definition"], [163, "definition"], [164, "definition"], [166, "definition"], [168, "definition"], [169, "definition"], [170, "definition"], [170, "id2"], [200, "definition"], [211, "definition"], [221, "definition"], [222, "definition"]], "Definition (Independent Events)": [[133, "definition-independent-events"]], "Definition: What is CPU-Bound?": [[216, "definition-what-is-cpu-bound"]], "Definition: What is I/O-Bound?": [[216, "definition-what-is-i-o-bound"]], "Definition: What is a Process?": [[216, "definition-what-is-a-process"]], "Definition: What is a Thread?": [[216, "definition-what-is-a-thread"]], "Definitions": [[29, "definitions"]], "Delete Cluster": [[90, "delete-cluster"]], "Delete Network Resources": [[90, "delete-network-resources"]], "Delete ParallelCluster": [[90, "delete-parallelcluster"]], "Demo Code": [[89, "demo-code"]], "Demo Example": [[237, "demo-example"]], "Demonstrating Reflexivity, Transivity and Antisymmetry": [[4, "demonstrating-reflexivity-transivity-and-antisymmetry"]], "Dependencies": [[58, "dependencies"], [72, "dependencies"], [76, "dependencies"], [119, "dependencies"], [120, "dependencies"], [121, "dependencies"]], "Dependency Injection": [[94, "dependency-injection"]], "Dependency Inversion Principle": [[221, null]], "Dependency Inversion Principle and Dependency Injection": [[221, "dependency-inversion-principle-and-dependency-injection"]], "Deployment Testing": [[108, "deployment-testing"]], "Deprecated To Redo": [[59, null]], "Derivative Of Softmax With Respect To Weight Matrix": [[124, "derivative-of-softmax-with-respect-to-weight-matrix"]], "Derivative of the Softmax Function": [[124, "derivative-of-the-softmax-function"]], "Derivatives of the Softmax Function": [[124, "derivatives-of-the-softmax-function"]], "Design Patterns": [[224, null]], "Detailed Analysis": [[13, "detailed-analysis"]], "Dimensionality": [[102, "dimensionality"]], "Dimensions": [[56, "dimensions"]], "Dimensions and Indexing": [[56, "dimensions-and-indexing"]], "Direct Sum Notation Is Concatenation": [[56, null]], "Disadvantages": [[98, "disadvantages"], [109, "disadvantages"], [109, "id6"], [109, "id10"], [109, "id15"]], "Disadvantages of Arrays": [[11, "disadvantages-of-arrays"]], "Disadvantages of Hash Maps": [[17, "disadvantages-of-hash-maps"]], "Discrete Features (Categorical Distribution)": [[74, "discrete-features-categorical-distribution"]], "Discrete Random Variables": [[138, null]], "Discrete Uniform Distribution": [[161, null]], "Discriminative vs Generative": [[74, "discriminative-vs-generative"]], "Disjoint vs Independence": [[133, "disjoint-vs-independence"]], "Distance": [[84, "distance"]], "Distributed Data Parallelism And Data Sharding": [[97, "distributed-data-parallelism-and-data-sharding"]], "Distributed Information": [[89, "distributed-information"]], "Distributed Systems": [[92, null]], "Do Not Use Mutable Default Arguments": [[236, null]], "Document Model": [[98, "document-model"]], "Document Model Characteristics": [[98, "ml-lifecycle-032-document-model"]], "Documentation": [[94, "documentation"]], "Doing it properly": [[126, "doing-it-properly"]], "Dot Product": [[85, "dot-product"]], "Double Ended Queue": [[23, null]], "Double Integrals": [[126, "double-integrals"]], "Drawing Some Connection to Ordinary Functions": [[7, "drawing-some-connection-to-ordinary-functions"]], "Dropout And Elementwise Operation": [[56, null]], "Dry Run": [[120, "dry-run"]], "Dynamic Model Creation": [[238, "dynamic-model-creation"]], "Dynamic Type Checking": [[3, "dynamic-type-checking"]], "E-Step": [[53, "e-step"], [53, "id21"]], "ELT (Extract, Load, Transform)": [[99, "elt-extract-load-transform"]], "ELTL (Extract, Load, Transform, Load)": [[99, "eltl-extract-load-transform-load"]], "ETL (Extract, Transform, Load)": [[99, "etl-extract-transform-load"]], "Early Bug Detection and Reduce Cost": [[94, "early-bug-detection-and-reduce-cost"]], "Early Fusion": [[96, "early-fusion"]], "Ease of Iteration": [[11, "ease-of-iteration"]], "Easy - Hot Potatoes": [[26, null]], "Edge Cases": [[19, "edge-cases"], [27, "edge-cases"], [29, "edge-cases"], [36, "edge-cases"], [43, "edge-cases"]], "Efficient Access": [[11, "efficient-access"]], "Efficient Key-Value Access": [[17, "efficient-key-value-access"]], "Eigendecomposition and Covariance Matrix": [[192, null]], "Elbow Method": [[61, "elbow-method"]], "Elementwise and Vectorwise Operations": [[56, "elementwise-and-vectorwise-operations"]], "Embedding Layer Is Matmul Of One-Hot Encoded Input Matrix And Embedding Matrix Weights": [[58, "embedding-layer-is-matmul-of-one-hot-encoded-input-matrix-and-embedding-matrix-weights"]], "Empirical (Sample) Correlation Coefficient": [[178, "empirical-sample-correlation-coefficient"]], "Empirical Distribution (Empirical Histograms)": [[143, "empirical-distribution-empirical-histograms"], [148, "empirical-distribution-empirical-histograms"]], "Empirical Risk Minimization": [[49, null]], "Empirical Risk Minimization approximates True Risk Minimization": [[50, "empirical-risk-minimization-approximates-true-risk-minimization"]], "Empirical distribution/histogram": [[158, "empirical-distribution-histogram"]], "Empty": [[36, "empty"]], "Encoding Strategy Overview": [[59, "encoding-strategy-overview"]], "End-to-End Testing": [[94, "end-to-end-testing"]], "Enough is Enough": [[124, null]], "Ensembling": [[102, "ensembling"]], "Equality of Vectors": [[82, "equality-of-vectors"]], "Error Function": [[170, "error-function"]], "Errors": [[94, "errors"]], "Estimated Coefficients are Multivariate Normally Distributed": [[68, "estimated-coefficients-are-multivariate-normally-distributed"]], "Estimating FLOPs for a Single Forward Pass": [[118, "estimating-flops-for-a-single-forward-pass"]], "Estimating FLOPs for a Single Forward Pass of GPT-2": [[118, "estimating-flops-for-a-single-forward-pass-of-gpt-2"]], "Estimating Likelihood (Gaussian Version)": [[74, "estimating-likelihood-gaussian-version"]], "Estimating Priors": [[74, "estimating-priors"]], "Estimating the Covariance Matrix \\boldsymbol{\\Sigma}_{k} in Python": [[53, "estimating-the-covariance-matrix-boldsymbol-sigma-k-in-python"]], "Estimating the Covariance Parameters \\boldsymbol{\\Sigma}_{k}": [[53, "estimating-the-covariance-parameters-boldsymbol-sigma-k"]], "Estimating the Mean Parameters \\boldsymbol{\\mu}_k": [[53, "estimating-the-mean-parameters-boldsymbol-mu-k"]], "Estimating the Mean Parameters \\boldsymbol{\\mu}_{k} in Python": [[53, "estimating-the-mean-parameters-boldsymbol-mu-k-in-python"]], "Estimating the Mixing Coefficients (Prior/Weights) \\pi_{k}": [[53, "estimating-the-mixing-coefficients-prior-weights-pi-k"]], "Estimation of the Conditional Probability Distribution": [[57, "estimation-of-the-conditional-probability-distribution"]], "Evaluate With Pretrained Model": [[72, "evaluate-with-pretrained-model"]], "Evaluation (Performance Metrics)": [[62, "evaluation-performance-metrics"]], "Event E and Event space \\mathcal{F}": [[130, "event-e-and-event-space-mathcal-f"]], "Example": [[11, "example"], [17, "example"], [27, "example"], [29, "example"], [32, "example"], [63, "example"], [98, "example"], [103, "example"], [109, "example"], [109, "id4"], [109, "id8"], [109, "id13"], [123, "example"], [127, "example"]], "Example 1": [[153, "example-1"]], "Example 1: Iterative Approach": [[29, "example-1-iterative-approach"]], "Example 2: Pigeonhole Principle": [[29, "example-2-pigeonhole-principle"]], "Example 5.7 (link)": [[184, "example-5-7-link"]], "Example Using Asyncio": [[216, "example-using-asyncio"]], "Example Walkthrough": [[174, "example-walkthrough"]], "Example is not a Proof": [[79, null]], "Example of Convergence": [[206, "example-of-convergence"]], "Example of Probability Space": [[130, "example-of-probability-space"]], "Example of a Data Model": [[98, "example-of-a-data-model"]], "Example: Calculating Prime Numbers": [[216, "example-calculating-prime-numbers"]], "Example: Hoeffding\u2019s Inequality in Classification": [[66, "example-hoeffding-s-inequality-in-classification"]], "Example: Monitoring a Bitcoin Price Prediction Model": [[110, "example-monitoring-a-bitcoin-price-prediction-model"]], "Example: Personal Protective Equipment (PPE) Detection": [[96, "example-personal-protective-equipment-ppe-detection"]], "Example: Python Program On Single Process And Single Thread": [[216, "example-python-program-on-single-process-and-single-thread"]], "Example: Reading A Website": [[216, "example-reading-a-website"]], "Example: Two Scripts Running Simultaneously": [[216, "example-two-scripts-running-simultaneously"]], "Examples": [[16, "examples"], [20, "examples"], [79, "examples"], [98, "examples"], [137, "examples"], [153, "examples"]], "Examples in code (Python) of Row-major vs Column-major order and its effect on performance": [[97, "examples-in-code-python-of-row-major-vs-column-major-order-and-its-effect-on-performance"]], "Examples of Deep Learning Tasks": [[96, "examples-of-deep-learning-tasks"]], "Examples of Machine Learning Tasks": [[96, "examples-of-machine-learning-tasks"]], "Examples of Row-major vs Column-major order": [[97, "examples-of-row-major-vs-column-major-order"]], "Exercise (Independence)": [[133, "exercise-independence"]], "Exercises": [[77, "exercises"], [128, null], [150, null], [184, null]], "Existence of Expectation": [[141, "existence-of-expectation"], [164, "existence-of-expectation"]], "Expectation": [[141, null], [164, null]], "Expectation and Variance": [[144, "expectation-and-variance"], [147, "expectation-and-variance"], [168, "expectation-and-variance"], [169, "expectation-and-variance"], [170, "expectation-and-variance"]], "Expectation is deterministic": [[158, "expectation-is-deterministic"]], "Expectation of Functions of Random Variables": [[173, "expectation-of-functions-of-random-variables"]], "Expectation of Random Vectors": [[188, "expectation-of-random-vectors"]], "Expectation-Maximization (EM) (Gaussion Mixture Model Perspective)": [[53, "expectation-maximization-em-gaussion-mixture-model-perspective"]], "Expectation-Maximization (EM) (Latent Variable Perspective)": [[53, "expectation-maximization-em-latent-variable-perspective"]], "Expected Outcome": [[30, "expected-outcome"], [216, "expected-outcome"]], "Experiment": [[130, "experiment"]], "Experiment Tracking": [[104, "experiment-tracking"]], "Explanation": [[27, "explanation"]], "Exponential Distribution": [[169, null]], "Exposes Interface Issues": [[94, "exposes-interface-issues"]], "Extended form": [[74, "extended-form"]], "Extensions": [[30, "extensions"]], "FLOPS Per Second in GPUs": [[118, "flops-per-second-in-gpus"]], "Factory Method": [[222, null]], "Factory Method in the RAG System": [[222, "factory-method-in-the-rag-system"]], "Feasibility Function": [[29, "feasibility-function"]], "Feasibility from the Two View Points": [[66, "feasibility-from-the-two-view-points"]], "Feature Characteristics": [[102, "feature-characteristics"]], "Feature Engineering": [[101, "feature-engineering"]], "Feature Scaling": [[68, "feature-scaling"]], "Features": [[95, "features"]], "Features (Inputs)": [[96, "features-inputs"]], "Features of a Cancer Diagnosis System": [[95, "features-cancer-diagnosis"]], "Features, Labels and Outputs (Inputs/Outputs)": [[96, "features-labels-and-outputs-inputs-outputs"]], "Feedback Loop": [[100, "feedback-loop"]], "Field Axioms": [[79, "linear-algebra-preliminaries-definition-of-a-field"]], "Field Validators": [[238, "field-validators"]], "Fields": [[79, null], [79, "id2"]], "Final Model Training": [[106, "final-model-training"]], "Find All Anagrams in a String": [[41, null]], "Find Duplicates": [[239, "find-duplicates"]], "Find maximum (or minimum) sum of a subarray of size k": [[46, "find-maximum-or-minimum-sum-of-a-subarray-of-size-k"]], "Find the Instance ID": [[90, "find-the-instance-id"]], "Finding and Removing Reference Cycles": [[115, "finding-and-removing-reference-cycles"]], "Finite vs. Unbounded Feature Space, Precurser to Deployment Strategies": [[109, "finite-vs-unbounded-feature-space-precurser-to-deployment-strategies"]], "First Decoder Block (\\ell = 1)": [[56, "first-decoder-block-ell-1"]], "First Sample First Token": [[59, "first-sample-first-token"]], "First Sample Fourth Token": [[59, "first-sample-fourth-token"]], "Fitting Algorithm": [[74, "fitting-algorithm"]], "Fix Sized Window": [[46, "fix-sized-window"]], "Fixed Window Size Sliding Window Technique": [[46, "fixed-window-size-sliding-window-technique"]], "Floating Point Operations (FLOPs)": [[118, "floating-point-operations-flops"]], "Floating Point Operations Per Second (FLOPS)": [[118, "floating-point-operations-per-second-flops"]], "Formal Notation of Time Complexity": [[27, null]], "Formatting": [[94, "formatting"]], "Frame a Business Problem as an Machine Learning Task": [[96, "frame-a-business-problem-as-an-machine-learning-task"]], "Framing Learning Theory with Hoeffding\u2019s Inequality": [[66, "framing-learning-theory-with-hoeffding-s-inequality"]], "Framing the Problem as a Sorted Boolean Array": [[29, "framing-the-problem-as-a-sorted-boolean-array"]], "From Batch Prediction to Online Prediction": [[109, "from-batch-prediction-to-online-prediction"]], "From Business Metrics to Machine Learning Metrics": [[95, "from-business-metrics-to-machine-learning-metrics"]], "From Causal Mask To Cross-Attention Mask": [[119, "from-causal-mask-to-cross-attention-mask"]], "From Discrete to Continuous": [[174, null]], "From GPT-1 to GPT-2": [[57, "from-gpt-1-to-gpt-2"]], "From Single Variable to Joint Distributions": [[196, null]], "From Yaml": [[238, "from-yaml"]], "Fulfilling the Subtype Criterion": [[4, "fulfilling-the-subtype-criterion"]], "Function Overloading": [[8, null], [8, "id1"]], "Function Overloading and Single/Dynamic Dispatch": [[8, "function-overloading-and-single-dynamic-dispatch"]], "Function Table": [[66, "boolean-function-truth-table"]], "Function Table with f_1 as True Function": [[66, "boolean-function-truth-table-f1"]], "Function Table with f_3 as True Function": [[66, "boolean-function-truth-table-f3"]], "Function feasible": [[29, "function-feasible"]], "Function minEatingSpeed": [[29, "function-mineatingspeed"]], "Function total_hours_to_finish_eating": [[29, "function-total-hours-to-finish-eating"]], "Functional Form of f": [[124, "functional-form-of-f"]], "Functions of Random Variables": [[173, null]], "Further Add a Singleton Dimension in Target Masks": [[59, "further-add-a-singleton-dimension-in-target-masks"]], "Further Processing": [[96, "further-processing"]], "Further Readings": [[22, "further-readings"], [23, "further-readings"], [34, "further-readings"], [35, "further-readings"], [49, "further-readings"], [51, "further-readings"], [66, "further-readings"], [73, "further-readings"], [76, "further-readings"], [87, "further-readings"], [94, "further-readings"], [94, "id7"], [146, "further-readings"], [147, "further-readings"], [148, "further-readings"], [151, "further-readings"], [153, "further-readings"], [155, "further-readings"], [177, "further-readings"], [179, "further-readings"], [182, "further-readings"], [185, "further-readings"], [187, "further-readings"], [193, "further-readings"], [194, "further-readings"], [198, "further-readings"], [200, "further-readings"], [201, "further-readings"], [203, "further-readings"], [204, "further-readings"], [206, "further-readings"]], "Further Violation of Type Safety": [[3, "further-violation-of-type-safety"]], "Future Mask": [[59, "future-mask"]], "Future Research Directions": [[48, "future-research-directions"]], "GIL Is Released During IO-bound Tasks": [[231, "gil-is-released-during-io-bound-tasks"]], "GMM 2D (sklearn)": [[53, "gmm-2d-sklearn"]], "GMM Demo": [[53, "gmm-demo"]], "GMM and Soft Assignments": [[53, "gmm-and-soft-assignments"]], "GMM and its Relation to K-Means": [[53, "gmm-and-its-relation-to-k-means"]], "GPT Example": [[59, "gpt-example"]], "GPT is a Autoregressive Self-Supervised Learning Model": [[57, "gpt-is-a-autoregressive-self-supervised-learning-model"]], "GPT-2 Family": [[57, "decoder-concept-gpt-2-family"], [58, "decoder-concept-gpt-2-family-duplicate"]], "GPT-2 Model Architecture (HuggingFace)": [[58, "gpt-2-model-architecture-huggingface"]], "GPT-2 Paper Key Ideas": [[57, "gpt-2-paper-key-ideas"]], "GPT-2 Variants": [[57, "gpt-2-variants"], [58, "gpt-2-variants"]], "GPU Memory Footprint of Loading Model and Optimizer": [[118, "gpu-memory-footprint-of-loading-model-and-optimizer"]], "Gaussian Distribution": [[170, null]], "Gaussian Error Linear Unit (GELU)": [[56, "gaussian-error-linear-unit-gelu"], [58, "gaussian-error-linear-unit-gelu"]], "Gaussian Mixture Model": [[53, "gaussian-mixture-model"]], "Gaussian Mixture Models Implementation": [[54, null]], "General Attention Mechanism": [[56, "general-attention-mechanism"]], "General Form of Linear Equations": [[80, "general-form-of-linear-equations"]], "General Gaussian Distribution": [[170, "general-gaussian-distribution"]], "General Notations": [[56, "general-notations"]], "Generalization Bound": [[66, "generalization-bound"]], "Generalization of the Pythagorean Theorem to D Dimensions": [[84, "generalization-of-the-pythagorean-theorem-to-d-dimensions"], [84, "vector-norm-pythagorean-theorem-d-dimensions"]], "Generalized Sliding Window Technique": [[46, "generalized-sliding-window-technique"]], "Generation": [[59, "generation"]], "Generative Pre-trained Transformer (GPT)": [[58, "generative-pre-trained-transformer-gpt"]], "Generative Pre-trained Transformers": [[55, null]], "Generative Story": [[53, "generative-story"]], "Generator Expression": [[213, "generator-expression"]], "Generators Over Lists For Memory Efficiency": [[230, null]], "Generators and Streaming Data": [[213, "generators-and-streaming-data"]], "Generic Form": [[16, "generic-form"]], "Generic Functions": [[5, "generic-functions"]], "Generic Methods": [[5, "generic-methods"]], "Generics": [[5, "generics"]], "Generics and Type Variables": [[5, null], [5, "id2"]], "Geometric Definition": [[82, "geometric-definition"]], "Geometric Distribution": [[152, null]], "Geometric Interpretation": [[83, "geometric-interpretation"]], "Geometric definition": [[85, "geometric-definition"]], "Geometrical Definition": [[83, "geometrical-definition"]], "Get Class and Instance Attributes": [[117, "get-class-and-instance-attributes"]], "Get Signature and Type Annotations of a Function": [[117, "get-signature-and-type-annotations-of-a-function"]], "Git Sanity Checks": [[94, "git-sanity-checks"]], "Git Workflow": [[94, "git-workflow"]], "Global Interpreter Lock (GIL)": [[231, null]], "Global Interpreter Lock (GIL) in Python": [[216, "global-interpreter-lock-gil-in-python"]], "Global Rank And World Size": [[89, "global-rank-and-world-size"]], "Good and Bad Estimates": [[210, "good-and-bad-estimates"]], "Gradient, Jacobian, and Hessian of Softmax": [[124, "gradient-jacobian-and-hessian-of-softmax"]], "Graph Model": [[98, "graph-model"]], "Group Anagrams": [[20, null]], "Guard Rails": [[94, "guard-rails"]], "Hand Wavy": [[74, null]], "Hash Function Dependence": [[17, "hash-function-dependence"]], "Hash Map": [[18, null]], "Hash Map Notations": [[17, "hashmap-notations"]], "Head": [[56, "head"]], "Heatmap": [[58, "heatmap"]], "Hessian Matrix": [[124, "hessian-matrix"]], "Highlights Dependency Problems": [[94, "highlights-dependency-problems"]], "Hoeffding Inequality is Invalid for h_S learnt from \\mathcal{S}": [[66, "hoeffding-inequality-is-invalid-for-h-s-learnt-from-mathcal-s"]], "Hoeffding\u2019s Inequality": [[66, "hoeffding-s-inequality"], [203, "hoeffding-s-inequality"]], "Homoscedasticity": [[68, "homoscedasticity"]], "How About We Use Back Causal Attention Mask?": [[119, "how-about-we-use-back-causal-attention-mask"]], "How It Works?": [[222, "how-it-works"]], "How Many GPUs?": [[90, "how-many-gpus"]], "How To Do Teacher-Student Knowledge Distillation?": [[121, null]], "How To Fine-Tune Decoder-Only Models For Sequence Classification Using Last Token Pooling?": [[120, null]], "How To Fine-Tune Decoder-Only Models For Sequence Classification With Cross-Attention?": [[119, null]], "How do I access and extract the data?": [[99, "how-do-i-access-and-extract-the-data"]], "How do I access the data?": [[99, "how-do-i-access-the-data"]], "How do I load the extracted data into the destination storage?": [[99, "how-do-i-load-the-extracted-data-into-the-destination-storage"]], "How does Generator Work?": [[213, "how-does-generator-work"]], "How to Calculate the Number of FLOPs in Transformer Based Models?": [[118, null]], "How to Implement Nominal Subtyping?": [[2, "how-to-implement-nominal-subtyping"]], "How to Implement Structural Subtyping?": [[2, "how-to-implement-structural-subtyping"]], "How to Inspect Function and Class Signatures in Python?": [[117, null]], "How to Setup SLURM and ParallelCluster in AWS": [[90, null]], "How to define a Sample Space?": [[130, "how-to-define-a-sample-space"]], "How to find K?": [[61, "how-to-find-k"]], "Hybrid Fusion": [[96, "hybrid-fusion"]], "Hybrid Serving": [[109, "hybrid-serving"]], "Hydra": [[217, "hydra"]], "Hyperparameter Tuning": [[104, "hyperparameter-tuning"], [106, "hyperparameter-tuning"]], "Hypothesis Space": [[61, "hypothesis-space"], [68, "hypothesis-space"]], "I/O Bound": [[216, "i-o-bound"]], "IEEE (Style) Citations": [[1, null]], "IID Assumption": [[68, "iid-assumption"]], "Ideal Histogram/Distribution (PMF) vs Empirical Histogram/Distribution": [[159, "ideal-histogram-distribution-pmf-vs-empirical-histogram-distribution"]], "Ideal histogram": [[158, "ideal-histogram"]], "Identical Application": [[56, "identical-application"], [58, "identical-application"]], "Identically and Independently Distributed Random Variables": [[66, "identically-and-independently-distributed-random-variables"]], "Identify and Scope the Data Source": [[97, "identify-and-scope-the-data-source"]], "Identify the Business Problem": [[95, "identify-the-business-problem"]], "Identifying the Type of Machine Learning Task": [[96, "identifying-the-type-of-machine-learning-task"]], "Illustrative Example: Race Condition in Threading": [[216, "illustrative-example-race-condition-in-threading"]], "Image Compression with K-Means": [[63, "image-compression-with-k-means"]], "Image Segmentation": [[63, "image-segmentation"]], "ImageNet": [[196, "imagenet"]], "Imperative vs Declarative": [[98, "imperative-vs-declarative"]], "Implement Queue using Stacks": [[36, null]], "Implementation": [[19, "implementation"], [20, "implementation"], [20, "id3"], [25, "implementation"], [26, "implementation"], [27, "implementation"], [27, "id6"], [29, "implementation"], [30, "implementation"], [30, "id2"], [32, "implementation"], [35, "implementation"], [37, "implementation"], [41, "implementation"], [43, "implementation"], [44, "implementation"], [46, "implementation"], [57, null], [58, "implementation"], [58, "id13"], [58, "id18"], [58, "id30"], [58, "id35"], [58, "id39"], [59, "implementation"], [62, "implementation"], [69, null], [72, null], [75, "implementation"], [123, "implementation"], [124, "implementation"], [148, null], [156, null]], "Implementation of Residual Block and AddNorm": [[58, "implementation-of-residual-block-and-addnorm"]], "Implementation of the Jacobian Matrix": [[124, "implementation-of-the-jacobian-matrix"]], "Implementation using List": [[36, "implementation-using-list"]], "Implementation using Stack Class": [[36, "implementation-using-stack-class"]], "Implementation: K-Means (Lloyd)": [[62, null]], "Implementations": [[60, "implementations"]], "Implementing Queue Using List": [[22, "implementing-queue-using-list"]], "Implementing T-Statistics": [[68, "implementing-t-statistics"]], "Implementing the Factory Method": [[222, "implementing-the-factory-method"]], "Importance": [[195, "importance"]], "Important": [[158, null]], "Important Brain Dump": [[158, "important-brain-dump"]], "Important Topics": [[158, "important-topics"]], "Imports and Dependencies": [[62, "imports-and-dependencies"], [75, "imports-and-dependencies"]], "Improves Confidence in System Stability": [[94, "improves-confidence-in-system-stability"]], "Inadmissble Equations": [[16, "inadmissble-equations"]], "Inclusion-Exclusion - Unions of Two Non-Disjoint Sets": [[131, "inclusion-exclusion-unions-of-two-non-disjoint-sets"]], "Inclusive Implementations": [[2, "inclusive-implementations"]], "Inclusive vs. Coercive Implementations": [[2, "inclusive-vs-coercive-implementations"]], "Incremental Testing": [[94, "incremental-testing"]], "Independence": [[133, null], [136, "independence"], [176, "independence"], [188, "independence"], [191, "independence"]], "Independence and Correlation Coefficient": [[178, "independence-and-correlation-coefficient"]], "Independence and Identically Distributed (IID)": [[211, "independence-and-identically-distributed-iid"]], "Independence of Normal Vector from Plane Vectors\u2019 Position": [[80, "independence-of-normal-vector-from-plane-vectors-position"]], "Independent Processing": [[56, "independent-processing"], [58, "independent-processing"]], "Independent and Identically Distributed (IID)": [[102, "independent-and-identically-distributed-iid"], [153, null]], "Independent and Identically Distributed (i.i.d.)": [[74, "independent-and-identically-distributed-i-i-d"], [176, "independent-and-identically-distributed-i-i-d"]], "Index-to-String Mapping": [[56, "index-to-string-mapping"]], "Inductive Bias (Distribution Assumptions)": [[74, "inductive-bias-distribution-assumptions"]], "Inefficient Space Usage": [[17, "inefficient-space-usage"]], "Inequality Bounds": [[131, "inequality-bounds"]], "Inference Story": [[53, "inference-story"]], "Inference with 2D Data": [[53, "inference-with-2d-data"]], "Inference/Prediction": [[74, "inference-prediction"]], "Influential Ideas and Papers": [[78, null]], "Information Theory": [[211, "information-theory"]], "Infrastructure as Code (IaC)": [[94, "infrastructure-as-code-iac"]], "Init vs New": [[237, null]], "Initial Book Relation": [[98, "ml-lifecycle-032-initial-book-relation"]], "Initial Condition of Conditional Probability Distribution": [[57, "initial-condition-of-conditional-probability-distribution"]], "Initial Configuration": [[94, "initial-configuration"]], "Initializer": [[237, "initializer"]], "Initializing Criterion With Composer": [[59, "initializing-criterion-with-composer"]], "Input Sequence": [[56, "input-sequence"], [58, "input-sequence"]], "Input Space": [[13, "input-space"], [19, "input-space"], [43, "input-space"]], "Input Space Complexity": [[20, "input-space-complexity"], [20, "id7"], [27, "input-space-complexity"], [27, "id10"], [29, "input-space-complexity"], [30, "input-space-complexity"]], "Input and Target": [[59, "input-and-target"]], "Inputs and Labels": [[96, "inputs-and-labels"]], "Inputs and Targets": [[59, "inputs-and-targets"]], "Inspect All Members": [[117, "inspect-all-members"]], "Instantiating": [[217, "instantiating"]], "Integers as a Subtype of Real Numbers": [[4, "integers-as-a-subtype-of-real-numbers"]], "Integration": [[126, "integration"]], "Integration Test vs Acceptance Test": [[94, "integration-test-vs-acceptance-test"]], "Integration Testing": [[94, "integration-testing"]], "Integration and Probability": [[126, "integration-and-probability"]], "Intentional Use Of Mutable Default To Cache": [[236, "intentional-use-of-mutable-default-to-cache"]], "Interpretability vs. Accuracy": [[102, "interpretability-vs-accuracy"]], "Interpretating the Generalization Bound": [[66, "interpretating-the-generalization-bound"]], "Interpretation of Hoeffding\u2019s Inequality": [[203, "interpretation-of-hoeffding-s-inequality"]], "Interpreting Dot Product as Matrix Multiplication": [[85, "interpreting-dot-product-as-matrix-multiplication"]], "Interview Tips for Array Problems": [[11, "array-interview-tips"]], "Interview Tips for Hash Map Problems": [[17, "hashmap-interview-tips"]], "Introducing Infinity": [[126, "introducing-infinity"]], "Introduction": [[11, "introduction"], [16, "introduction"], [17, "introduction"], [27, "introduction"], [29, "introduction"], [30, "introduction"], [32, "introduction"], [52, "introduction"], [57, "introduction"], [79, "introduction"], [95, "introduction"], [96, "introduction"], [177, "introduction"], [179, "introduction"], [182, "introduction"], [185, "introduction"]], "Introspection Is Not Preserved": [[229, "introspection-is-not-preserved"]], "Intuition": [[19, "intuition"], [20, "intuition"], [20, "id1"], [20, "id2"], [27, "intuition"], [30, "intuition"], [32, "intuition"], [36, "intuition"], [43, "intuition"], [43, "id1"], [44, "intuition"], [44, "id1"], [53, "intuition"], [58, "intuition"], [61, "intuition"], [68, "intuition"], [94, "intuition"], [94, "id6"], [94, "id8"], [94, "id9"], [94, "id10"], [99, "intuition"], [99, "id5"], [99, "id9"], [110, "intuition"], [126, "intuition"], [173, "intuition"]], "Intuition (Conditional Probability)": [[132, "intuition-conditional-probability"]], "Intuition (Independence)": [[133, "intuition-independence"]], "Intuition (What comes before Data Extraction?)": [[97, "intuition-what-comes-before-data-extraction"]], "Intuition and Interpretation (Law of Total Probability)": [[134, "intuition-and-interpretation-law-of-total-probability"]], "Intuition of Attention Mechanism": [[58, "intuition-of-attention-mechanism"]], "Intuition through Convolutions": [[186, "intuition-through-convolutions"]], "Invariance": [[7, "invariance"], [7, "id3"]], "Invariance, Covariance and Contravariance": [[7, null]], "Is Learning Feasible?": [[66, "is-learning-feasible"]], "Is The Learning Problem Solvable?": [[65, null]], "Is vs Equality": [[233, null]], "Iterative Process Through L Decoder Blocks": [[56, "iterative-process-through-l-decoder-blocks"]], "Iterators Are Lazy But Not All Iterables Are Lazy": [[234, "iterators-are-lazy-but-not-all-iterables-are-lazy"]], "JSON": [[97, "json"]], "Jensen\u2019s Inequality": [[203, "jensen-s-inequality"]], "Join == Barrier": [[216, "join-barrier"]], "Joint CDF": [[176, "joint-cdf"]], "Joint Distribution Fully Determines the Model": [[53, "joint-distribution-fully-determines-the-model"]], "Joint Expectation": [[178, "joint-expectation"]], "Joint Expectation and Correlation": [[179, null]], "Joint PDF (Continuous Random Variables)": [[176, "joint-pdf-continuous-random-variables"]], "Joint PMF (Discrete Random Variables)": [[176, "joint-pmf-discrete-random-variables"]], "Joint PMF and PDF": [[177, null]], "K-Means": [[62, null], [63, "k-means"]], "K-Means Algorithm on IRIS": [[62, "k-means-algorithm-on-iris"]], "K-Means Algorithm on MNIST": [[62, "k-means-algorithm-on-mnist"]], "K-Means Converges in Finite Steps": [[61, "k-means-converges-in-finite-steps"]], "K-Means and Hard Assignments": [[53, "k-means-and-hard-assignments"]], "K-Means++": [[61, "k-means"]], "K-Medoids": [[61, "k-medoids"]], "Key 1. Byte Pair Encoding (BPE) (1,2,3)": [[57, "key-1-byte-pair-encoding-bpe-1-2-3"]], "Key 1. Competent Generalists over Narrow Experts (1)": [[57, "key-1-competent-generalists-over-narrow-experts-1"]], "Key 1. GPT-2 is a Continuation of GPT-1 with Self-Attention Mechanisms (1)": [[57, "key-1-gpt-2-is-a-continuation-of-gpt-1-with-self-attention-mechanisms-1"]], "Key 1. Modeling Language Models over Joint Probability Distributions (1)": [[57, "key-1-modeling-language-models-over-joint-probability-distributions-1"]], "Key 1. Rejection of CommonCrawl (1,2)": [[57, "key-1-rejection-of-commoncrawl-1-2"]], "Key 2. Construction of WebText Dataset": [[57, "key-2-construction-of-webtext-dataset"]], "Key 2. Decompose Joint Distributions as Conditional Distributions via Chain Rule (2)": [[57, "key-2-decompose-joint-distributions-as-conditional-distributions-via-chain-rule-2"]], "Key 2. IID Assumption Fails in Real World (2, 3)": [[57, "key-2-iid-assumption-fails-in-real-world-2-3"]], "Key 2. Modifications from GPT-1 and Model Stability (1)": [[57, "key-2-modifications-from-gpt-1-and-model-stability-1"]], "Key 3. Conditional on Task (3)": [[57, "key-3-conditional-on-task-3"]], "Key 3. Multi-Task Learning is Nacent (4)": [[57, "key-3-multi-task-learning-is-nacent-4"]], "Key 4. From Word Embeddings to Contextual Embeddings (5,6)": [[57, "key-4-from-word-embeddings-to-contextual-embeddings-5-6"]], "Key 4. Optimizing Unsupervised is the same as Optimizing Supervised (4)": [[57, "key-4-optimizing-unsupervised-is-the-same-as-optimizing-supervised-4"]], "Key 5. Large Language Models has Capacity to Infer and Generalize (5)": [[57, "key-5-large-language-models-has-capacity-to-infer-and-generalize-5"]], "Key 5. Zero Shot Learning and Zero Shot Transfer (7)": [[57, "key-5-zero-shot-learning-and-zero-shot-transfer-7"]], "Key Characteristics": [[216, "key-characteristics"], [216, "id1"]], "Key Components": [[96, "key-components"]], "Key Components of Framing a Machine Learning Problem": [[96, "ml-lifecycle-02-project-scoping-key-components"]], "Key Differences Between Structured And Unstructured Data": [[98, "ml-lifecycle-032-structured-vs-unstructured-data"]], "Key-Value Pairs": [[17, "key-value-pairs"]], "Koko Eating Bananas": [[29, null]], "Kronecker Delta": [[124, "kronecker-delta"]], "Kurtosis": [[171, "kurtosis"]], "LICENSE": [[94, "license"]], "L^{p} Norm": [[84, "l-p-norm"]], "L_1 Norm (Manhattan Norm)": [[84, "l-1-norm-manhattan-norm"]], "L_2 Norm (Euclidean Norm)": [[84, "l-2-norm-euclidean-norm"]], "Labeling": [[101, "labeling"]], "Labels": [[96, "labels"]], "Last Token has Full Context": [[58, "last-token-has-full-context"]], "Late Binding Closures": [[235, null]], "Late Fusion": [[96, "late-fusion"]], "Latency": [[94, "latency"]], "Law of Large Numbers": [[208, null]], "Law of Total Probability": [[134, "law-of-total-probability"]], "Layer Norm Stabilises Activation Distributions": [[58, "layer-norm-stabilises-activation-distributions"]], "Layer Normalization": [[56, "layer-normalization"], [58, "layer-normalization"]], "Layer Normalization Before Projection": [[56, "layer-normalization-before-projection"]], "LayerNorm and Residual Connection": [[58, "layernorm-and-residual-connection"]], "Learing Outside the Training Set \\mathcal{S} (Deterministic Case)": [[66, "learing-outside-the-training-set-mathcal-s-deterministic-case"]], "Learing Outside the Training Set \\mathcal{S} (Probabilistic Case)": [[66, "learing-outside-the-training-set-mathcal-s-probabilistic-case"]], "Learnable Affine Transformation": [[58, "learnable-affine-transformation"]], "Learning Curves": [[106, "learning-curves"]], "Learning Objectives": [[29, "learning-objectives"], [32, "learning-objectives"], [79, "learning-objectives"], [82, "learning-objectives"], [83, "learning-objectives"], [182, "learning-objectives"]], "Learning Problem (Conditional Maximum Likelihood Estimation)": [[87, "learning-problem-conditional-maximum-likelihood-estimation"]], "Learning Rate Scheduler": [[59, "learning-rate-scheduler"]], "Lebesgue Integral": [[126, "lebesgue-integral"]], "Lemma 1: Stirling Numbers of the Second Kind": [[61, "lemma-1-stirling-numbers-of-the-second-kind"]], "Lemma 2: Cost Function of K-Means Monotonically Decreases": [[61, "lemma-2-cost-function-of-k-means-monotonically-decreases"]], "Lemma 3: Monotone Convergence Theorem": [[61, "lemma-3-monotone-convergence-theorem"]], "Lies": [[126, "lies"]], "Lifecycle": [[94, "lifecycle"]], "Likelihood": [[211, "likelihood"]], "Likelihood and Log-Likelihood of Marginal Distribution": [[53, "likelihood-and-log-likelihood-of-marginal-distribution"]], "Likelihood in the Context of Machine Learning": [[211, "likelihood-in-the-context-of-machine-learning"]], "Likelihood in the Context of Supervised Learning": [[211, "likelihood-in-the-context-of-supervised-learning"]], "Linear Algebra": [[78, null]], "Linear Projections": [[58, "linear-projections"]], "Linear Regression": [[67, null]], "Linear Search": [[31, null]], "Linear Transformation of Gaussian Distribution": [[170, "linear-transformation-of-gaussian-distribution"]], "Linear Transformation of Mean and Covariance": [[190, "linear-transformation-of-mean-and-covariance"]], "Linear in Parameters": [[68, "linear-in-parameters"]], "Linearity": [[68, "linearity"]], "Link to Unit Testing": [[94, "link-to-unit-testing"]], "Linking Plane and Hyperplane Equations to Linear Regression": [[80, "linking-plane-and-hyperplane-equations-to-linear-regression"]], "Linting": [[94, "linting"]], "Liskov Substitution Principle": [[4, "liskov-substitution-principle"]], "List is Invariant": [[7, "list-is-invariant"]], "List vs Immutable List": [[7, "list-vs-immutable-list"]], "List/Array": [[12, null]], "Lloyd\u2019s Algorithm": [[61, "lloyds-algorithm"]], "Lloyd\u2019s K-Means Clustering Algorithm": [[60, null]], "LoRA Implementation": [[72, "lora-implementation"]], "Load and Read the Image": [[63, "load-and-read-the-image"]], "Local And Global Rank": [[88, "local-and-global-rank"]], "Local And Global World Size": [[88, "local-and-global-world-size"]], "Local Minima": [[61, "local-minima"]], "Local Pre-Commit Checks (Local Continuous Integration)": [[94, "local-pre-commit-checks-local-continuous-integration"]], "Local and CI Environment Consistency": [[94, "local-and-ci-environment-consistency"]], "Lock": [[214, "lock"]], "Logging into the Head Node": [[90, "logging-into-the-head-node"]], "Logistic Regression": [[143, "logistic-regression"]], "Lookup": [[56, "lookup"], [58, "lookup"]], "Loop Invariant": [[30, "loop-invariant"]], "Loop Invariant and Induction": [[30, "loop-invariant-and-induction"]], "Loss Computation": [[59, "loss-computation"]], "Loss Function": [[57, "loss-function"], [61, "loss-function"], [68, "loss-function"]], "Loss, Cost, Objective and Performance Metrics": [[96, "loss-cost-objective-and-performance-metrics"]], "Low Level and High Level Modules": [[221, "low-level-and-high-level-modules"]], "Low-Rank Adaptation Of Large Language Models": [[70, null]], "M-Step": [[53, "m-step"], [53, "id22"]], "MLE estimates the conditional expectation of the target variable given the input": [[68, "mle-estimates-the-conditional-expectation-of-the-target-variable-given-the-input"]], "Machine Learning Notations": [[87, null], [87, "id2"]], "Machine Learning Objective (Establishing Metrics)": [[96, "machine-learning-objective-establishing-metrics"]], "Machine Learning Tasks": [[96, "machine-learning-tasks"]], "Main Profiling Code": [[112, "main-profiling-code"], [114, "main-profiling-code"]], "Maintainability and Scalability": [[94, "maintainability-and-scalability"]], "Managing Dependencies with pyproject.toml": [[94, "managing-dependencies-with-pyproject-toml"]], "Managing Dependencies with requirements.txt": [[94, "managing-dependencies-with-requirements-txt"]], "Managing Project Dependencies": [[94, "managing-project-dependencies"]], "Marginal PMF and PDF": [[176, "marginal-pmf-and-pdf"]], "Marginal of One Single Data Point \\boldsymbol{x}^{(n)}": [[53, "marginal-of-one-single-data-point-boldsymbol-x-n"]], "Marginal of the Entire Dataset \\boldsymbol{X}": [[53, "marginal-of-the-entire-dataset-boldsymbol-x"]], "Marginalizing Out the Latent Variable": [[53, "marginalizing-out-the-latent-variable"]], "Markov Assumption": [[57, "markov-assumption"]], "Markov\u2019s Inequality": [[203, "markov-s-inequality"]], "Masked Multi-Head Attention for Decoder Layer \\ell": [[56, "masked-multi-head-attention-for-decoder-layer-ell"]], "Masked/Causal Self-Attention": [[58, "masked-causal-self-attention"]], "Masking and Ignore Index": [[59, "masking-and-ignore-index"]], "Master Port and Master Address": [[89, "master-port-and-master-address"]], "Master Theorem": [[27, "master-theorem"]], "Master Theorem 1": [[16, null]], "Master Theorem Case 2 Extensions": [[16, "master-theorem-case-2-extensions"]], "Master Theorem Cases": [[16, "master-theorem-cases"], [58, "self-attention-complexity"]], "Mathematical Convenience": [[211, "mathematical-convenience"]], "Mathematical Formulation": [[29, "mathematical-formulation"]], "Mathematical Induction": [[30, "mathematical-induction"]], "Mathematical Intuition": [[123, "mathematical-intuition"]], "Mathematical Notation Guide": [[48, "mathematical-notation-guide"]], "Mathematical Notations": [[87, "mathematical-notations"]], "Mathematical Precision: The Square Root Case": [[48, "mathematical-precision-the-square-root-case"]], "Mathematical Representation": [[29, "mathematical-representation"], [30, "mathematical-representation"]], "Mathematical Representation (Iterative)": [[27, "mathematical-representation-iterative"]], "Mathematical Representation (Recursive)": [[27, "mathematical-representation-recursive"]], "Matrix Multiplication Primer": [[56, "matrix-multiplication-primer"]], "Matrix Representation": [[68, "matrix-representation"]], "Maximum Likelihood Estimate for Likelihood (Continuous Feature Parameters)": [[74, "maximum-likelihood-estimate-for-likelihood-continuous-feature-parameters"]], "Maximum Likelihood Estimation": [[68, "maximum-likelihood-estimation"], [74, "maximum-likelihood-estimation"], [211, "maximum-likelihood-estimation"], [212, null]], "Maximum Likelihood Estimation for Common Distributions": [[211, "maximum-likelihood-estimation-for-common-distributions"]], "Maximum Likelihood Estimation for Multivariate Gaussian": [[211, "maximum-likelihood-estimation-for-multivariate-gaussian"]], "Maximum Likelihood Estimation for Priors (Categorical Distribution)": [[74, "maximum-likelihood-estimation-for-priors-categorical-distribution"]], "Maximum Likelihood for Continuous Variables": [[211, "maximum-likelihood-for-continuous-variables"]], "Maximum Likelihood for Univariate Gaussian": [[211, "maximum-likelihood-for-univariate-gaussian"]], "Maximum Path Length": [[58, "maximum-path-length"]], "Maximum Variance": [[144, "maximum-variance"]], "Mean": [[167, "mean"]], "Mean Squared Error (MSE)": [[68, "mean-squared-error-mse"]], "Mean Squared Error estimates the Conditional Expectation": [[68, "mean-squared-error-estimates-the-conditional-expectation"]], "Mean Squared Error is an Unbiased Estimator of the Variance of the Error": [[68, "mean-squared-error-is-an-unbiased-estimator-of-the-variance-of-the-error"]], "Mean, Median and Mode": [[167, null]], "Measure Zero Sets": [[130, "measure-zero-sets"]], "Measuring Success": [[95, "measuring-success"]], "Median": [[167, "median"]], "Medical Diagnosis": [[180, "medical-diagnosis"]], "Medical Diagnosis Favours Recall": [[95, null]], "Memory Efficiency": [[213, "memory-efficiency"]], "Memory Mapping": [[58, "memory-mapping"]], "Memory Sharing and Synchronization": [[216, "memory-sharing-and-synchronization"]], "Memory Wastage": [[11, "memory-wastage"]], "Merge - No Additional Inference Latency": [[71, "merge-no-additional-inference-latency"]], "Merge And Quantize": [[72, "merge-and-quantize"]], "Merge And Unload": [[72, "merge-and-unload"]], "Merge Padding and Future Masks": [[59, "merge-padding-and-future-masks"]], "Mermaid Diagram Of Deep Learning Tasks": [[96, null]], "Mermaid Diagram Of Machine Learning Tasks": [[96, null]], "Metadata Management": [[218, "metadata-management"]], "Method Resolution Order": [[117, "method-resolution-order"]], "Metric Selection": [[103, "metric-selection"]], "Metrics": [[72, "metrics"]], "Min Stack": [[34, null]], "Miniconda": [[90, "miniconda"]], "Minimum Viable Product (MVP)": [[96, "minimum-viable-product-mvp"]], "Minimum and Maximum Variance of Coin Toss": [[144, "minimum-and-maximum-variance-of-coin-toss"]], "Missing": [[9, "missing"]], "Mixed Features (Discrete and Continuous)": [[74, "mixed-features-discrete-and-continuous"]], "Mixture Models": [[52, null]], "Mocks": [[94, "mocks"]], "Mode": [[167, "mode"]], "Model": [[59, "model"]], "Model Architecture": [[120, "model-architecture"]], "Model Calibration": [[107, "model-calibration"]], "Model Complexity": [[66, "model-complexity"]], "Model FLOPs Utilization (MFU)": [[118, "model-flops-utilization-mfu"]], "Model Fitting": [[61, "model-fitting"], [74, "model-fitting"]], "Model Fitting via Least Squares": [[68, "model-fitting-via-least-squares"]], "Model Fitting via Maximum Likelihood Estimation": [[68, "model-fitting-via-maximum-likelihood-estimation"]], "Model Inference": [[61, "model-inference"], [68, "model-inference"]], "Model Promotion": [[108, "model-promotion"]], "Model Registry and Promotion (MLOps)": [[108, "model-registry-and-promotion-mlops"]], "Model Selection": [[102, "model-selection"]], "Model Versioning, Code Versioning, and Data Versioning": [[104, "model-versioning-code-versioning-and-data-versioning"]], "Modern Row and Columnar Formats": [[97, "modern-row-and-columnar-formats"]], "Modifications from GPT-1 and Model Stability": [[58, "modifications-from-gpt-1-and-model-stability"]], "Modifying GPT-2 Head For Classification": [[119, "modifying-gpt-2-head-for-classification"]], "Moment Generating Function": [[200, null]], "Moment Generating and Characteristic Functions": [[199, null]], "Moments": [[142, "moments"], [165, "moments"], [200, "moments"]], "Moments and Variance": [[142, null], [165, null]], "Monitoring Dashboard In Practice": [[110, "monitoring-dashboard-in-practice"]], "Monitoring and Alerting": [[100, "monitoring-and-alerting"]], "Monitoring and Optimizing": [[99, "monitoring-and-optimizing"]], "Monotonicity": [[29, "monotonicity"]], "Monotonicity of k-means Updates": [[64, "monotonicity-of-k-means-updates"]], "More Intuition in Andrej Karpathy\u2019s Video": [[58, null]], "Motivation": [[8, "motivation"], [9, "motivation"], [57, "motivation"], [59, "motivation"], [59, "id4"], [71, "motivation"], [80, "motivation"], [94, "motivation"], [117, "motivation"], [123, "motivation"], [170, "motivation"]], "Multi-Head Attention": [[58, "multi-head-attention"]], "Multi-Head Attention for Layer \\ell": [[56, "multi-head-attention-for-layer-ell"]], "Multi-Node Setup With CUDA": [[89, "multi-node-setup-with-cuda"]], "Multi-Stage and Multi-Modal Paradigms": [[96, null]], "MultiThreading": [[216, "multithreading"]], "Multicollinearity among Predictors": [[68, "multicollinearity-among-predictors"]], "Multimodal Deep Learning (Yes ChatGPT Is Multimodal)": [[96, "multimodal-deep-learning-yes-chatgpt-is-multimodal"]], "Multiprocessing": [[216, "multiprocessing"]], "Multivariate Gaussian": [[191, "multivariate-gaussian"]], "Multivariate Gaussian Distribution": [[194, null]], "Multivariate Linear Model": [[68, "multivariate-linear-model"]], "Murphy\u2019s Plots": [[53, "murphy-s-plots"]], "Mutation!": [[35, null]], "Mutually Exclusive Events": [[131, "mutually-exclusive-events"]], "MyPy: Static Type Checking": [[94, "mypy-static-type-checking"]], "Naive Bayes": [[73, null]], "Naive Bayes Application (MNIST)": [[77, null]], "Naive Bayes Application: Penguins": [[76, null]], "Naive Bayes Setup": [[74, "naive-bayes-setup"]], "Naive Way To Handle Future Mask": [[58, null]], "Naives Bayes Implementation": [[75, null]], "Named Constructor": [[225, null]], "Narrowing Values, Widening Functions": [[4, "narrowing-values-widening-functions"]], "Negative Scaling": [[83, "negative-scaling"]], "Next Method": [[213, "next-method"]], "No Autocorrelation between Error Terms": [[68, "no-autocorrelation-between-error-terms"]], "No Closed-Form Solution": [[53, "no-closed-form-solution"]], "No Dependency Injection vs Dependency Injection": [[94, "no-dependency-injection-vs-dependency-injection"]], "No Direct Support for Data Manipulation Functions": [[11, "no-direct-support-for-data-manipulation-functions"]], "No Direct Support for Sorting": [[17, "no-direct-support-for-sorting"]], "No Distributed Barrier": [[91, "no-distributed-barrier"]], "No Free Lunch Theorem": [[102, "no-free-lunch-theorem"]], "No Order of Elements": [[17, "no-order-of-elements"]], "No Special Operations": [[11, "no-special-operations"]], "NoSQL": [[98, "nosql"]], "Nodes": [[88, "nodes"]], "Nominal Subtyping - Class Hierarchy Determines Subtypes": [[2, "nominal-subtyping-class-hierarchy-determines-subtypes"]], "Nominal vs. Structural Subtyping": [[2, "nominal-vs-structural-subtyping"]], "Non-Fields": [[79, "non-fields"]], "Non-Functional Metrics": [[96, "non-functional-metrics"]], "Non-Negativity": [[124, "non-negativity"]], "None Is A Singleton Object": [[233, "none-is-a-singleton-object"]], "Norm": [[84, "norm"]], "Normality of the Error Terms": [[68, "normality-of-the-error-terms"]], "Normalization": [[98, "normalization"], [124, "normalization"], [139, "normalization"], [176, "normalization"]], "NotGiven": [[9, "notgiven"]], "NotGiven vs. MISSING": [[9, "notgiven-vs-missing"]], "Notation": [[142, "notation"], [142, null], [165, null]], "Notation Abuse": [[56, null], [58, null]], "Notations": [[56, null], [66, "notations"], [74, "notations"], [78, null], [88, null], [210, "notations"]], "Note": [[130, null], [174, null]], "Notebooks": [[60, "notebooks"], [73, "notebooks"]], "Number of Bits needed for a Positive Integer": [[63, "number-of-bits-needed-for-a-positive-integer"]], "Number of items left after k-th comparison": [[27, "items-left-binary-search"]], "Numerical Instability of the Softmax Function": [[124, "numerical-instability-of-the-softmax-function"]], "Numerical Optimization and the Negative Log-Likelihood": [[211, "numerical-optimization-and-the-negative-log-likelihood"]], "Numerical Stability and Gradient Saturation": [[58, "numerical-stability-and-gradient-saturation"]], "Numerical Underflow": [[211, "numerical-underflow"]], "Objective": [[30, "objective"]], "Objective Function": [[61, "objective-function"], [68, "objective-function"]], "Objective Function Re-defined": [[61, "objective-function-re-defined"]], "Objective Function for Fine-Tuning": [[57, "objective-function-for-fine-tuning"]], "Offline Metrics": [[96, "offline-metrics"]], "Offline Validation": [[108, "offline-validation"]], "Offline Validation Steps": [[108, "offline-validation-steps"]], "Omniverse": [[78, null]], "On Dynamic vs Static Type Checking": [[3, "on-dynamic-vs-static-type-checking"]], "On-Device Inference": [[109, "on-device-inference"]], "One Categorical Feature": [[76, "one-categorical-feature"]], "One Quantitative Predictor": [[76, "one-quantitative-predictor"]], "One-Hot Encoding Process": [[56, "one-hot-encoding-process"], [58, "one-hot-encoding-process"]], "One-Hot Representation of Input Sequence \\mathbf{x}": [[56, "one-hot-representation-of-input-sequence-mathbf-x"], [58, "one-hot-representation-of-input-sequence-mathbf-x"]], "Online Metrics": [[96, "online-metrics"]], "Online Resources": [[60, "online-resources"], [73, "online-resources"]], "Online Validation": [[108, "online-validation"]], "Online Validation Techniques": [[108, "online-validation-techniques"]], "Operations": [[32, "operations"], [78, null]], "Optical Character Recognition": [[77, "optical-character-recognition"]], "Optimizer": [[59, "optimizer"]], "Optimizing Unsupervised is the same as Optimizing Supervised": [[57, "optimizing-unsupervised-is-the-same-as-optimizing-supervised"]], "Orchestration": [[94, "orchestration"]], "Order in Pipeline": [[94, "order-in-pipeline"]], "Ordered Linear Search: Efficiency in Sorted Arrays": [[30, "ordered-linear-search-efficiency-in-sorted-arrays"]], "Ordered and Probabilistic Linear Search": [[30, "ordered-and-probabilistic-linear-search"]], "Other Methods": [[61, "other-methods"]], "Outer Product": [[85, "outer-product"]], "Output Of The Embedding Layer": [[58, "output-of-the-embedding-layer"]], "Outputs": [[96, "outputs"]], "Outputs (Predictions)": [[96, "outputs-predictions"]], "Overloading with Container": [[8, "overloading-with-container"]], "Overriding the __new__ Method": [[227, "overriding-the-new-method"]], "Overview Of Concurrency, Parallelism, and Asynchronous Execution": [[216, null]], "P-Values": [[68, "p-values"]], "PAC Framework": [[66, "pac-framework"]], "PDF is Derivative of CDF": [[166, "pdf-is-derivative-of-cdf"]], "PDF is not Probability": [[174, "pdf-is-not-probability"]], "PDF of Functions of Random Variables": [[173, "pdf-of-functions-of-random-variables"]], "PDF of Random Vectors": [[188, "pdf-of-random-vectors"]], "PE: Positional Encoding Layer": [[56, "pe-positional-encoding-layer"]], "PMF and CDF": [[156, "pmf-and-cdf"]], "PMF and CDF Conversion": [[140, "pmf-and-cdf-conversion"]], "PMF and CDF of Bernoulli Distribution": [[144, "pmf-and-cdf-of-bernoulli-distribution"]], "PMF and CDF of Binomial Distribution": [[147, "pmf-and-cdf-of-binomial-distribution"]], "PMF and CDF of Discrete Uniform Distribution": [[160, "pmf-and-cdf-of-discrete-uniform-distribution"]], "PMF and CDF of Poisson Distribution": [[155, "pmf-and-cdf-of-poisson-distribution"]], "Pair Problem Revisited": [[5, "pair-problem-revisited"]], "Palindrome Checker": [[25, null]], "Parameter Estimation (Mixture Model Perspective)": [[53, "parameter-estimation-mixture-model-perspective"]], "Parameter Estimation (The Necessary Conditions)": [[53, "parameter-estimation-the-necessary-conditions"]], "Parameter Vector": [[74, "parameter-vector"]], "Parameters": [[210, "parameters"]], "Parameters Reduction In LoRA": [[71, "parameters-reduction-in-lora"]], "Parametric Equation of a Plane": [[80, "parametric-equation-of-a-plane"]], "Partition and Voronoi Regions": [[61, "partition-and-voronoi-regions"]], "Patch Composer Configuration with Model Config": [[58, "patch-composer-configuration-with-model-config"]], "Peek": [[36, "peek"]], "Performance": [[95, "performance"]], "Performance Metrics": [[68, "performance-metrics"]], "Permutation Invariance": [[58, "permutation-invariance"]], "Permutations and Combinations": [[125, null]], "Perplexity": [[57, "perplexity"]], "Phase 1. Planning": [[94, "phase-1-planning"]], "Phase 2. Development": [[94, "phase-2-development"]], "Phase 3. Build": [[94, "phase-3-build"]], "Phase 4. Scan and Test": [[94, "phase-4-scan-and-test"]], "Phase 5. Continuous Deployment": [[94, "phase-5-continuous-deployment"]], "Phase 6. Continuous Monitoring and Observability": [[94, "phase-6-continuous-monitoring-and-observability"]], "Phase 7. Continuous Learning and Training": [[94, "phase-7-continuous-learning-and-training"]], "Pinning DevOps Tool Versions": [[94, "pinning-devops-tool-versions"]], "Plain": [[238, "plain"]], "Plane Equation in Normal Form (Vector Form)": [[80, "plane-equation-in-normal-form-vector-form"]], "Planes": [[80, "planes"]], "Plane\u2019s Equations": [[80, "plane-s-equations"]], "Playbook": [[78, null]], "Plotting PMF and CDF of Bernoulli Distribution": [[144, "plotting-pmf-and-cdf-of-bernoulli-distribution"]], "Plotting PMF and CDF of Binomial Distribution": [[147, "plotting-pmf-and-cdf-of-binomial-distribution"]], "Plotting PMF and CDF of Poisson Distribution": [[155, "plotting-pmf-and-cdf-of-poisson-distribution"], [160, "plotting-pmf-and-cdf-of-poisson-distribution"]], "Poisson Approximation of Binomial Distribution": [[156, "poisson-approximation-of-binomial-distribution"]], "Poisson Approximation to Binomial Distribution": [[155, "poisson-approximation-to-binomial-distribution"]], "Poisson Distribution": [[157, null]], "Pop": [[36, "pop"]], "Positional Embeddings": [[58, "positional-embeddings"]], "Positional Encodings Via Embeddings": [[58, "positional-encodings-via-embeddings"]], "Positionwise Feed-Forward Networks": [[56, "positionwise-feed-forward-networks"], [58, "positionwise-feed-forward-networks"]], "Positive Scaling": [[83, "positive-scaling"]], "Posterior of One Single Data Point \\boldsymbol{x}^{(n)}": [[53, "posterior-of-one-single-data-point-boldsymbol-x-n"]], "Posterior of the Entire Dataset \\boldsymbol{X}": [[53, "posterior-of-the-entire-dataset-boldsymbol-x"]], "Potential Confusion": [[207, "potential-confusion"]], "Pre-Commit Hooks": [[94, "pre-commit-hooks"]], "Pre-Merge Checks": [[94, "pre-merge-checks"]], "Preliminaries": [[81, null]], "Preventing Race Conditions with Locks": [[216, "preventing-race-conditions-with-locks"]], "Prior Distribution of the Entire Dataset \\mathcal{S}": [[53, "prior-distribution-of-the-entire-dataset-mathcal-s"]], "Prior is a Latent Variable": [[53, "prior-is-a-latent-variable"]], "Probabilistic Interpretation": [[124, "probabilistic-interpretation"]], "Probabilistic Search: Harnessing Data to Optimize Searches": [[30, "probabilistic-search-harnessing-data-to-optimize-searches"]], "Probability Axioms": [[131, null]], "Probability Density Function": [[163, null], [174, "probability-density-function"]], "Probability Inequalities": [[203, null], [204, null]], "Probability Law and Function \\mathbb{P}": [[130, "probability-law-and-function-mathbb-p"]], "Probability Law is a Measure": [[130, "probability-law-is-a-measure"]], "Probability Mass Function": [[139, null]], "Probability Measure \\P": [[137, "probability-measure-p"]], "Probability Space": [[130, null]], "Probability Theory": [[78, null]], "Probability at a Point in a Small Neighborhood": [[174, "probability-at-a-point-in-a-small-neighborhood"]], "Probability at a Point is Zero": [[174, "probability-at-a-point-is-zero"]], "Probability of Complements": [[131, "probability-of-complements"]], "Probability of the Empty Set": [[131, "probability-of-the-empty-set"]], "Problem": [[19, "problem"], [20, "problem"], [25, "problem"], [26, "problem"], [35, "problem"], [36, "problem"], [37, "problem"], [41, "problem"], [43, "problem"], [44, "problem"], [184, null]], "Problem 1": [[150, "problem-1"]], "Problem Formulation": [[53, "problem-formulation"], [61, "problem-formulation"], [68, "problem-formulation"], [124, "problem-formulation"]], "Problem Intuition": [[29, "problem-intuition"]], "Problem Scenario: Optimized Product Search in an Online Store": [[30, "problem-scenario-optimized-product-search-in-an-online-store"]], "Problem Statement": [[29, "problem-statement"], [63, "problem-statement"], [66, "problem-statement"], [76, "problem-statement"]], "Process": [[88, "process"], [216, "process"]], "Process Group Initialization": [[89, "process-group-initialization"]], "Process ID": [[216, "process-id"]], "Process vs Thread": [[216, "process-vs-thread"]], "Production Layer": [[100, "production-layer"]], "Profile GPT Small Time And Memory": [[114, null]], "Profiling": [[116, null]], "Profiling Code With Timeit": [[112, null]], "Profiling Generator Performance": [[213, "profiling-generator-performance"]], "Profiling Square Operation": [[113, "profiling-square-operation"]], "Project Structure Overview": [[227, "project-structure-overview"]], "Projection to a Higher Dimension Space": [[56, "projection-to-a-higher-dimension-space"], [58, "projection-to-a-higher-dimension-space"]], "Projections Lead to Dynamic Context Vectors": [[58, "projections-lead-to-dynamic-context-vectors"]], "Proof": [[29, null], [43, "proof"], [44, "proof"]], "Proof of Algebraic and Geometric Equivalence of Dot Product": [[85, "proof-of-algebraic-and-geometric-equivalence-of-dot-product"]], "Proof of Geometric Definition and The Law of Cosines": [[85, "proof-of-geometric-definition-and-the-law-of-cosines"]], "Properties": [[140, "properties"], [151, "properties"], [155, "properties"], [200, "properties"]], "Properties of 2D-Planes": [[80, "properties-of-2d-planes"]], "Properties of CDF": [[166, "properties-of-cdf"]], "Properties of Dot Product": [[85, "properties-of-dot-product"]], "Properties of Expectation": [[141, "properties-of-expectation"], [164, "properties-of-expectation"]], "Properties of Moments and Variance": [[142, "properties-of-moments-and-variance"]], "Properties of Transpose": [[82, "properties-of-transpose"]], "Propositions": [[132, "propositions"]], "Pros": [[217, "pros"], [217, "id1"]], "Pros and Cons": [[228, "pros-and-cons"]], "Pros and Cons of Nominal and Structural Subtyping": [[2, "pros-and-cons-of-nominal-and-structural-subtyping"]], "Pros and cons of Row-major vs Column-major order": [[97, "pros-and-cons-of-row-major-vs-column-major-order"]], "Protecting Reference Counts with Locks": [[231, "protecting-reference-counts-with-locks"]], "Pseudocode": [[27, "pseudocode"], [27, "id4"], [29, "pseudocode"], [30, "pseudocode"]], "Publisher Relation": [[98, "ml-lifecycle-032-publisher-relation"]], "Purpose and Behavior": [[9, "purpose-and-behavior"], [9, "id1"]], "Push": [[36, "push"]], "Putting it all Together to form the GPT": [[58, "putting-it-all-together-to-form-the-gpt"]], "PyTorch": [[76, "pytorch"]], "PyTorch\u2019s CosineAnnealingLR vs. Composer\u2019s CosineAnnealingScheduler": [[123, "pytorch-s-cosineannealinglr-vs-composer-s-cosineannealingscheduler"]], "PyTorch\u2019s Event And Profiler": [[113, null]], "Pydantic": [[217, "pydantic"]], "Pydantic And Hydra": [[217, null]], "Pydantic Is All You Need - Jason Liu": [[238, null]], "Pydantic Schema": [[217, "pydantic-schema"]], "Pydra": [[217, "pydra"]], "Python": [[232, null]], "Python Implementation": [[22, "python-implementation"], [23, "python-implementation"]], "Python is Strongly and Dynamically Typed": [[94, "python-is-strongly-and-dynamically-typed"]], "Queries, Keys, and Values": [[58, "queries-keys-and-values"]], "Queries, Keys, and Values in Attention Mechanism": [[58, "queries-keys-and-values-in-attention-mechanism"]], "Query, Key and Values": [[56, "query-key-and-values"]], "Question 10: Birthday Paradox": [[128, "question-10-birthday-paradox"]], "Question 6": [[128, "question-6"]], "Question 9": [[128, "question-9"]], "Questions": [[14, null], [21, null], [38, null], [40, null]], "Questions Asked": [[158, "questions-asked"]], "Queue": [[24, null]], "R-Squared": [[68, "r-squared"]], "RAG System Components": [[222, "rag-system-components"]], "README": [[94, "readme"]], "README, LICENSE and CONTRIBUTING": [[94, "readme-license-and-contributing"]], "Random Initialization": [[53, "random-initialization"]], "Random Variables": [[137, null]], "Random Vectors": [[188, "random-vectors"], [189, null]], "Rank And Low-Rank Decomposition Via Matrix Factorization": [[71, "rank-and-low-rank-decomposition-via-matrix-factorization"]], "Ranking, Detection, Pairwise, Retrieval And Other Metrics": [[103, "ranking-detection-pairwise-retrieval-and-other-metrics"]], "Reading Large Files, Generator vs Iterator": [[213, "reading-large-files-generator-vs-iterator"]], "Reading a Big File into a List": [[213, "reading-a-big-file-into-a-list"]], "Real Analysis": [[208, "real-analysis"]], "Real World Examples": [[146, null]], "Real World Examples of Covariance and Contravariance": [[7, "real-world-examples-of-covariance-and-contravariance"]], "Real-Time Prediction And Computational Resources": [[102, "real-time-prediction-and-computational-resources"]], "Real-Time Serving/Inference (Online with only Batch Features)": [[109, "real-time-serving-inference-online-with-only-batch-features"]], "Real-World Use Case": [[32, "real-world-use-case"]], "Real-time Ingestion (Stream Ingestion)": [[101, "real-time-ingestion-stream-ingestion"]], "Reconstruction": [[63, "reconstruction"]], "Recovering a run": [[104, "recovering-a-run"]], "Recursive Method Overview": [[30, "recursive-method-overview"]], "Reducing Technical Debt": [[94, "reducing-technical-debt"]], "Reducing the Search Space": [[29, "reducing-the-search-space"]], "Reduction": [[59, "reduction"]], "Refactoring with Confidence": [[94, "refactoring-with-confidence"]], "Reference Counting in Python": [[231, "reference-counting-in-python"]], "References": [[2, null], [56, null], [56, "references"], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [58, null], [58, null], [58, null], [58, null], [58, null], [59, null], [70, "references"], [74, "references"], [90, "references"], [94, null], [94, null], [94, null], [123, null], [126, null]], "References And Further Readings": [[71, "references-and-further-readings"], [75, "references-and-further-readings"], [112, "references-and-further-readings"], [113, "references-and-further-readings"], [114, "references-and-further-readings"], [120, "references-and-further-readings"], [121, "references-and-further-readings"], [126, "references-and-further-readings"], [214, "references-and-further-readings"], [216, "references-and-further-readings"], [219, "references-and-further-readings"], [222, "references-and-further-readings"], [225, "references-and-further-readings"], [226, "references-and-further-readings"], [227, "references-and-further-readings"], [228, "references-and-further-readings"], [230, "references-and-further-readings"], [233, "references-and-further-readings"], [235, "references-and-further-readings"], [237, "references-and-further-readings"]], "References and Further Readings": [[2, "references-and-further-readings"], [3, "references-and-further-readings"], [4, "references-and-further-readings"], [5, "references-and-further-readings"], [6, "references-and-further-readings"], [7, "references-and-further-readings"], [8, "references-and-further-readings"], [9, "references-and-further-readings"], [11, "references-and-further-readings"], [12, "references-and-further-readings"], [15, "references-and-further-readings"], [16, "references-and-further-readings"], [17, "references-and-further-readings"], [18, "references-and-further-readings"], [20, "references-and-further-readings"], [27, "references-and-further-readings"], [28, "references-and-further-readings"], [29, "references-and-further-readings"], [30, "references-and-further-readings"], [31, "references-and-further-readings"], [32, "references-and-further-readings"], [33, "references-and-further-readings"], [36, "references-and-further-readings"], [43, "references-and-further-readings"], [44, "references-and-further-readings"], [52, "references-and-further-readings"], [53, "references-and-further-readings"], [57, "references-and-further-readings"], [58, "references-and-further-readings"], [59, "references-and-further-readings"], [60, "references-and-further-readings"], [61, "references-and-further-readings"], [62, "references-and-further-readings"], [63, "references-and-further-readings"], [67, "references-and-further-readings"], [68, "references-and-further-readings"], [79, "references-and-further-readings"], [80, "references-and-further-readings"], [81, "references-and-further-readings"], [82, "references-and-further-readings"], [83, "references-and-further-readings"], [84, "references-and-further-readings"], [85, "references-and-further-readings"], [86, "references-and-further-readings"], [88, "references-and-further-readings"], [89, "references-and-further-readings"], [92, "references-and-further-readings"], [93, "references-and-further-readings"], [94, "references-and-further-readings"], [94, "id12"], [94, "id13"], [95, "references-and-further-readings"], [96, "references-and-further-readings"], [97, "references-and-further-readings"], [98, "references-and-further-readings"], [99, "references-and-further-readings"], [100, "references-and-further-readings"], [101, "references-and-further-readings"], [102, "references-and-further-readings"], [104, "references-and-further-readings"], [105, "references-and-further-readings"], [106, "references-and-further-readings"], [107, "references-and-further-readings"], [109, "references-and-further-readings"], [110, "references-and-further-readings"], [115, "references-and-further-readings"], [116, "references-and-further-readings"], [117, "references-and-further-readings"], [118, "references-and-further-readings"], [123, "references-and-further-readings"], [124, "references-and-further-readings"], [127, "references-and-further-readings"], [141, "references-and-further-readings"], [142, "references-and-further-readings"], [143, "references-and-further-readings"], [144, "references-and-further-readings"], [163, "references-and-further-readings"], [164, "references-and-further-readings"], [165, "references-and-further-readings"], [166, "references-and-further-readings"], [167, "references-and-further-readings"], [168, "references-and-further-readings"], [169, "references-and-further-readings"], [170, "references-and-further-readings"], [171, "references-and-further-readings"], [173, "references-and-further-readings"], [174, "references-and-further-readings"], [211, "references-and-further-readings"], [213, "references-and-further-readings"], [217, "references-and-further-readings"], [218, "references-and-further-readings"], [221, "references-and-further-readings"], [231, "references-and-further-readings"]], "References, Resources and Roadmap": [[78, null]], "Reflexivity, Transivity and Antisymmetry": [[4, "reflexivity-transivity-and-antisymmetry"]], "Registry": [[226, null]], "Regression": [[103, "regression"]], "Relation of MFU and TFLOPS": [[118, "relation-of-mfu-and-tflops"]], "Relational Model": [[98, "relational-model"]], "Relationship to Business Objectives": [[96, "relationship-to-business-objectives"]], "Release": [[94, "release"]], "Release and Versioning": [[94, "release-and-versioning"]], "Remove Duplicates from Sorted Array": [[44, null]], "Removing Duplicates from a Sorted Array": [[47, "removing-duplicates-from-a-sorted-array"]], "Repeated Substitution": [[27, "repeated-substitution"]], "Representing Derivative of Softmax as a Jacobian Matrix": [[124, "representing-derivative-of-softmax-as-a-jacobian-matrix"]], "Reproducibility": [[58, "reproducibility"], [59, "reproducibility"], [71, "reproducibility"], [104, "reproducibility"], [119, "reproducibility"]], "Residual Connection": [[58, "residual-connection"]], "Resolution": [[236, "resolution"], [239, "resolution"]], "Retrieve All Methods of a Class": [[117, "retrieve-all-methods-of-a-class"]], "Reverse String": [[37, null]], "Reverse String using Stack": [[34, "reverse-string-using-stack"]], "Row Wise Interpretation": [[85, "row-wise-interpretation"]], "Row and Columnar Formats": [[97, "row-and-columnar-formats"]], "Row-major order": [[97, "row-major-order"]], "Running Core": [[227, "running-core"]], "Running Example": [[53, "running-example"]], "Runtime Behavior": [[8, "runtime-behavior"]], "SLURM Status": [[90, "slurm-status"]], "Sales Data and Probabilities": [[30, "sales-data-and-probabilities"]], "Sample Average": [[206, "sample-average"]], "Sample Complexity": [[66, "sample-complexity"]], "Sample Run": [[90, "sample-run"]], "Sample Space \\mathbf{\\Omega}": [[130, "sample-space-mathbf-omega"]], "Sampling": [[101, "sampling"]], "Sampling from the Softmax Distribution": [[124, "sampling-from-the-softmax-distribution"]], "Sanity Check": [[62, "sanity-check"], [75, "sanity-check"]], "Sanity Check with Palm Paper\u2019s FLOPs Calculation": [[118, "sanity-check-with-palm-paper-s-flops-calculation"]], "Satisfies Narrowing Values, Widening Functions": [[4, "satisfies-narrowing-values-widening-functions"]], "Saturation": [[94, "saturation"]], "Sauer\u2019s Lemma and Bounding the Growth Function": [[66, "sauers-lemma-and-bounding-the-growth-function"]], "Scalar projections": [[85, "scalar-projections"]], "Scalar-Product Equation of a Plane": [[80, "scalar-product-equation-of-a-plane"]], "Scalar-Vector Multiplication": [[83, "scalar-vector-multiplication"]], "Scale": [[95, "scale"]], "Scaled Dot-Product Attention": [[58, "scaled-dot-product-attention"]], "Scaling Down the Dot Product of Query and Key Vectors": [[58, "scaling-down-the-dot-product-of-query-and-key-vectors"]], "Scaling and Shifting Random Variables": [[173, "scaling-and-shifting-random-variables"]], "Schema 1. Basic Schema": [[238, "schema-1-basic-schema"]], "Schema 2. User Schema With Nested Properties": [[238, "schema-2-user-schema-with-nested-properties"]], "Scope of Generic Methods and Functions": [[5, "scope-of-generic-methods-and-functions"]], "Search Algorithm Implementation": [[30, "search-algorithm-implementation"]], "Section 2. Approach": [[57, "section-2-approach"]], "See Also": [[94, null], [98, null], [103, null], [103, null], [106, null], [109, null], [167, null], [216, null]], "Seeding": [[104, "seeding"]], "Self-Attention": [[58, "self-attention"]], "Self-Attention Enables Parallelism": [[58, "self-attention-enables-parallelism"]], "Semantic Representation": [[56, "semantic-representation"], [58, "semantic-representation"]], "Sentinel Types": [[9, null]], "Sequential Operations": [[58, "sequential-operations"]], "Service Locator And Dependency Injection": [[219, "service-locator-and-dependency-injection"]], "Serving Strategies": [[109, "serving-strategies"]], "Set CUDA Device": [[89, "set-cuda-device"]], "Set Over List For Frequent Membership Tests": [[239, null]], "Set Up Main Directory in Integrated Development Environment (IDE)": [[94, "set-up-main-directory-in-integrated-development-environment-ide"]], "Setting Up": [[72, "setting-up"], [89, "setting-up"], [120, "setting-up"], [121, "setting-up"]], "Setting Up Identity and Access Management (IAM) Role": [[90, "setting-up-identity-and-access-management-iam-role"]], "Setting Up Pre-Commit": [[94, "setting-up-pre-commit"]], "Setting Up a New Repository": [[94, "setting-up-a-new-repository"]], "Setting up a Batch Serving System": [[109, "setting-up-a-batch-serving-system"]], "Setup Python Environment": [[90, "setup-python-environment"]], "Shadow Deployment/Mirrored Deployment": [[94, "shadow-deployment-mirrored-deployment"]], "Shared File System": [[90, "shared-file-system"]], "Sharpening and Dampening the Softmax Distribution": [[124, "sharpening-and-dampening-the-softmax-distribution"]], "Shuffling and Discrete Uniform Sampling": [[58, "shuffling-and-discrete-uniform-sampling"]], "Sign of the Dot Product is Determined by the Angle in between Two Vectors": [[85, "sign-of-the-dot-product-is-determined-by-the-angle-in-between-two-vectors"]], "Simple Bi-Modal Distribution": [[53, "simple-bi-modal-distribution"]], "Simple Binary Classification Example": [[59, "simple-binary-classification-example"]], "Simple Form": [[74, "simple-form"]], "Simple Styling Practices": [[94, "simple-styling-practices"]], "Simplified Probit Model": [[180, "simplified-probit-model"]], "Single Dispatch": [[8, "single-dispatch"]], "Singleton": [[226, "singleton"], [227, null], [237, "singleton"]], "Singularity": [[90, "singularity"]], "Size Limitation": [[11, "size-limitation"]], "Size of the Image": [[63, "size-of-the-image"]], "Skewness": [[171, "skewness"]], "Skewness and Kurtosis": [[171, null]], "Sliding Window": [[42, null], [46, null]], "Slurm Commands": [[90, "slurm-commands"]], "Smoothness (Chaoticity)": [[102, "smoothness-chaoticity"]], "Softmax": [[58, "softmax"]], "Softmax Function": [[124, "softmax-function"]], "Softmax Function via Exponential Family": [[124, "softmax-function-via-exponential-family"]], "Softmax Head": [[58, "softmax-head"]], "Softmax Is Not Invariant Under Scaling": [[124, "softmax-is-not-invariant-under-scaling"]], "Softmax Is Smooth, Continuous and Differentiable": [[124, "softmax-is-smooth-continuous-and-differentiable"]], "Softmax Is Translation Invariance": [[124, "softmax-is-translation-invariance"]], "Softmax Layer": [[56, "softmax-layer"]], "Softmax Obeys The Three Axioms of Probability (Kolmogorov Axioms)": [[124, "softmax-obeys-the-three-axioms-of-probability-kolmogorov-axioms"]], "Softmax Preserves Order (Monotonicity)": [[124, "softmax-preserves-order-monotonicity"]], "Softmax Preserves Order, Is Translation Invariant But Not Invariant Under Scaling.": [[124, null]], "Softmax as a Vector Function": [[124, "softmax-as-a-vector-function"]], "Software Engineering": [[78, null]], "Solution": [[19, "solution"]], "Solution (Categorize by Count)": [[20, "solution-categorize-by-count"]], "Solution (Categorize by Sorted String)": [[20, "solution-categorize-by-sorted-string"]], "Solution (Two-Pointers Moving In Different Directions)": [[43, "solution-two-pointers-moving-in-different-directions"]], "Solution (Two-Pointers Moving In The Same Direction)": [[44, "solution-two-pointers-moving-in-the-same-direction"]], "Solution (Using Two Stacks)": [[36, "solution-using-two-stacks"]], "Solution 1 (Not Optimal)": [[46, "solution-1-not-optimal"]], "Solution 2 (Optimal)": [[46, "solution-2-optimal"]], "Solution Intuition": [[29, "solution-intuition"]], "Solution Space in 2D (Lines)": [[80, "solution-space-in-2d-lines"]], "Solution Space in 3D (Planes)": [[80, "solution-space-in-3d-planes"]], "Solution: Binary Search": [[29, "solution-binary-search"]], "Solving for 1-Dimensional Case": [[68, "solving-for-1-dimensional-case"]], "Solving for D-Dimensional Case": [[68, "solving-for-d-dimensional-case"]], "Some Abuse of Notations": [[66, "some-abuse-of-notations"]], "Some Common Metrics to Track in Experiment Tracking": [[104, "ml-lifecycle-experiment-tracking-metrics"]], "Some Derivatives Tips So Far\u2026": [[124, null]], "Some Intuition": [[53, "some-intuition"], [53, "id17"], [53, "id20"], [211, "some-intuition"]], "Some Key Stages In Model Development and Training": [[106, "ml-lifecycle-model-development-training-some-key-stages"]], "Some Motivation, Simple Length Comparison": [[6, "some-motivation-simple-length-comparison"]], "Some Motivation, The Problem With Unconstrained Type Variable": [[6, "some-motivation-the-problem-with-unconstrained-type-variable"]], "Some Practical Considerations for FLOPs in Deep Learning": [[118, "some-practical-considerations-for-flops-in-deep-learning"]], "Some Useful Commands": [[90, "some-useful-commands"]], "Some intuition on the difference between a-priori and a-posteriori:": [[66, "some-intuition-on-the-difference-between-a-priori-and-a-posteriori"]], "Space Complexity": [[11, "space-complexity"], [13, "space-complexity"], [13, "two-sum-space-complexity-nested-loops"], [17, "space-complexity"], [19, "space-complexity"], [19, "two-sum-space-complexity-hash-map"], [20, "space-complexity"], [20, "id6"], [22, "space-complexity"], [23, "space-complexity"], [26, "space-complexity"], [27, "space-complexity"], [27, "id9"], [29, "space-complexity"], [30, "space-complexity"], [32, "space-complexity"], [34, "space-complexity"], [35, "space-complexity"], [36, "space-complexity"], [36, "id3"], [37, "space-complexity"], [43, "space-complexity"], [46, "space-complexity"], [230, "space-complexity"], [239, "space-complexity"]], "Space Complexity of Dictionary": [[17, "dict-space-complexity"]], "Space Complexity of K-Means": [[61, "space-complexity-kmeans"]], "Space Complexity of List": [[11, "list-space-complexity"]], "Space Complexity of Naive Bayes": [[74, "space-complexity-naive-bayes"]], "Space Complexity of Pop Operation": [[36, "pop-space-complexity"]], "Space Complexity of Push Operation": [[36, "push-space-complexity"]], "Space Complexity of Two-Sum Sorted Function Using Two-Pointer Approach": [[43, "two-sum-sorted-space-complexity-two-pointer"]], "Space-Time Tradeoff": [[13, "space-time-tradeoff"], [19, "space-time-tradeoff"], [29, "space-time-tradeoff"], [43, "space-time-tradeoff"]], "Space-Time Tradeoff with Arrays": [[11, "space-time-tradeoff-with-arrays"]], "Split to Train-Valid-Test": [[59, "split-to-train-valid-test"]], "Stack": [[33, null]], "Stack List Dunder Methods": [[32, "stack-list-dunder-methods"]], "Stack List Operations": [[32, "stack-list-operations"]], "Stack List Time Complexity": [[32, "stack-list-time-complexity"]], "Stack with List as Underlying Data Structure": [[32, "stack-with-list-as-underlying-data-structure"]], "Stage 1. Problem Formulation": [[95, null]], "Stage 10. Continuous Integration, Deployment, Learning and Training (DevOps, DataOps, MLOps)": [[94, null]], "Stage 1: The Draft (The Confident Hallucination)": [[48, "stage-1-the-draft-the-confident-hallucination"]], "Stage 2. Project Scoping And Framing The Problem": [[96, null]], "Stage 2: The Plan (Generating Verification Questions)": [[48, "stage-2-the-plan-generating-verification-questions"]], "Stage 3. Data Pipeline (Data Engineering and DataOps)": [[100, null]], "Stage 3.1. Data Source and Formats": [[97, null]], "Stage 3.2. Data Model and Storage": [[98, null]], "Stage 3.3. Extract, Transform, Load (ETL)": [[99, null]], "Stage 3: The Execution (Independent Fact-Finding)": [[48, "stage-3-the-execution-independent-fact-finding"]], "Stage 4. Data Extraction (MLOps), Data Analysis (Data Science), Data Preparation (Data Science)": [[101, null]], "Stage 4.1. Data Extraction (MLOps)": [[101, "stage-4-1-data-extraction-mlops"]], "Stage 4.2. Data Analysis (Data Science)": [[101, "stage-4-2-data-analysis-data-science"]], "Stage 4.3. Data Preparation (MLOps)": [[101, "stage-4-3-data-preparation-mlops"]], "Stage 4: The Synthesis (The Final Verdict)": [[48, "stage-4-the-synthesis-the-final-verdict"]], "Stage 5. Model Development and Training (MLOps)": [[106, null]], "Stage 5.1. Model Selection": [[102, null]], "Stage 5.2. Metric Selection": [[103, null]], "Stage 5.3. Experiment Tracking And Versioning": [[104, null]], "Stage 5.4. Model Testing": [[105, null]], "Stage 6. Model Evaluation (MLOps)": [[107, null]], "Stage 7. Model Validation, Registry and Pushing Model to Production (MLOps)": [[108, null]], "Stage 8. Model Serving (MLOps)": [[109, null]], "Stage 9. Model Monitoring (MLOps)": [[110, null]], "Staging/Experiment/Development": [[100, "staging-experiment-development"]], "Standard Cases": [[29, "standard-cases"]], "Standard Deviation": [[142, "standard-deviation"]], "Standard Error": [[68, "standard-error"]], "Standard Gaussian Distribution": [[170, "standard-gaussian-distribution"]], "Standard Test Cases": [[27, "standard-test-cases"]], "Starting Small": [[126, "starting-small"]], "State": [[59, "state"]], "State And Metadata Management": [[218, null]], "State Management": [[218, "state-management"]], "Static Type Checking": [[3, "static-type-checking"]], "Step 0. Project Scope": [[99, "step-0-project-scope"]], "Step 1.": [[63, "step-1"]], "Step 1. Corpus": [[56, null]], "Step 1. Data Extraction": [[100, "step-1-data-extraction"]], "Step 1. Extract (Data Extraction and Defining the Data Source)": [[99, "step-1-extract-data-extraction-and-defining-the-data-source"]], "Step 1. Triggering the Production Deployment Pipeline": [[100, "step-1-triggering-the-production-deployment-pipeline"]], "Step 10. Deploy the DAG (Staging Environment)": [[100, "step-10-deploy-the-dag-staging-environment"]], "Step 10. Layer Normalization Before Projection": [[56, null]], "Step 10. Position-wise Feed-Forward Network": [[56, null]], "Step 11. Residual Connection": [[56, null]], "Step 11. Trigger the DAG as part of a CI/CD pipeline": [[100, "step-11-trigger-the-dag-as-part-of-a-ci-cd-pipeline"]], "Step 1: Derivative of \\mathcal{L} with respect to \\mathbf{z}": [[124, "step-1-derivative-of-mathcal-l-with-respect-to-mathbf-z"]], "Step 1: Identify Integration Points": [[94, "step-1-identify-integration-points"]], "Step 2.": [[63, "step-2"]], "Step 2. CI/CD: Deploy Image to Production Environment": [[100, "step-2-ci-cd-deploy-image-to-production-environment"]], "Step 2. Data Loading to Staging Lake": [[100, "step-2-data-loading-to-staging-lake"]], "Step 2. Load (Data Ingestion and Destination)": [[99, "step-2-load-data-ingestion-and-destination"]], "Step 2. Vocabulary and Tokenization": [[56, null]], "Step 2: Derivative of \\mathbf{z} with respect to \\boldsymbol{\\theta}": [[124, "step-2-derivative-of-mathbf-z-with-respect-to-boldsymbol-theta"]], "Step 2: Design Integration Tests": [[94, "step-2-design-integration-tests"]], "Step 3.": [[63, "step-3"]], "Step 3. Loading Data to Staging Warehouse": [[100, "step-3-loading-data-to-staging-warehouse"]], "Step 3. One Hot Encoding": [[56, null]], "Step 3. Transform (Data Processing and Transformation)": [[99, "step-3-transform-data-processing-and-transformation"]], "Step 3: Derivative of \\mathcal{L} with respect to \\boldsymbol{\\theta}": [[124, "step-3-derivative-of-mathcal-l-with-respect-to-boldsymbol-theta"]], "Step 4. Data Validation After Extraction and Load": [[100, "step-4-data-validation-after-extraction-and-load"]], "Step 4. Token Embedding": [[56, null]], "Step 5. Data Transformation": [[100, "step-5-data-transformation"]], "Step 5. Positional Embedding": [[56, null]], "Step 6. Data Validation After Transformation": [[100, "step-6-data-validation-after-transformation"]], "Step 6. Pre-Layer Normalization For Masked Multi-Head Attention": [[56, null]], "Step 7. Load Transformed Data to Staging GCS and BigQuery": [[100, "step-7-load-transformed-data-to-staging-gcs-and-bigquery"]], "Step 7. Masked Multi-Head Self-Attention": [[56, null]], "Step 7.1. Linear Projections, Query, Key, and Value Matrices": [[56, null]], "Step 7.2. Reshaping and Transposing Query, Key, and Value Matrices": [[56, null]], "Step 7.3. Scaled Dot-Product Attention and Masking": [[56, null]], "Step 7.4. Concatenation and Projection": [[56, null]], "Step 8. (Optional) Writing a DAG to Automate the Pipeline": [[100, "step-8-optional-writing-a-dag-to-automate-the-pipeline"]], "Step 8. Residual Connection": [[56, null]], "Step 9. Containerize the DAG": [[100, "step-9-containerize-the-dag"]], "Step 9. Pre-Layer Normalization For Position-wise Feed-Forward Network": [[56, null]], "Step-By-Step Code Implementation": [[63, "step-by-step-code-implementation"]], "Steps to Compress an Image": [[63, "steps-to-compress-an-image"]], "Steps to Identify and Scope the Data Source": [[97, "steps-to-identify-and-scope-the-data-source"]], "Stop EC2 Instances": [[90, "stop-ec2-instances"]], "Strategy": [[228, null]], "Streaming Inference": [[109, "streaming-inference"]], "String-to-Index Mapping": [[56, "string-to-index-mapping"]], "Strong Law of Large Numbers": [[206, "strong-law-of-large-numbers"]], "Structural Subtyping": [[2, "structural-subtyping"]], "Structured Config": [[217, "structured-config"]], "Structured vs Unstructured Data": [[98, "structured-vs-unstructured-data"]], "Stubs": [[94, "stubs"]], "Stubs and Mocks": [[94, "stubs-and-mocks"]], "Sturges\u2019 Rule and Cross Validation": [[139, "sturges-rule-and-cross-validation"]], "Styling, Formatting, and Linting": [[94, "styling-formatting-and-linting"]], "Subsequent Decoder Blocks (\\ell > 1)": [[56, "subsequent-decoder-blocks-ell-1"]], "Subset of Problem": [[35, "subset-of-problem"]], "Subsumption": [[4, null], [4, "id1"]], "Subtypes": [[2, null]], "Sum of Common Distribution": [[186, "sum-of-common-distribution"]], "Sum of Common Distributions": [[186, "table-sum-of-common-distributions"]], "Sum of Common Distributions via MGFs": [[201, "sum-of-common-distributions-via-mgfs"]], "Sum of Independent Random Variables": [[201, "sum-of-independent-random-variables"]], "Sum of Random Variables": [[187, null]], "Summary": [[30, "summary"], [53, "summary"], [76, "summary"], [77, "summary"], [79, "summary"], [100, "summary"], [136, null], [137, "summary"]], "Summary:": [[216, "summary"]], "Summing to one": [[126, "summing-to-one"]], "Super important": [[158, "super-important"]], "Supervised Fine-Tuning": [[57, "supervised-fine-tuning"]], "Symptom and Cause": [[94, "devops-ci-concept-monitoring-observability"]], "Synchronize CUDA To Time CUDA Operations": [[111, null]], "System Health": [[110, "system-health"]], "System Testing": [[94, "system-testing"]], "System of Linear Equations (Algebraic Form)": [[80, "system-of-linear-equations-algebraic-form"]], "System of Linear Equations (Geometric Interpretation)": [[80, "system-of-linear-equations-geometric-interpretation"]], "Systems of Linear Equations": [[80, null]], "T-Distributions": [[68, "t-distributions"]], "T-Statistics": [[68, "t-statistics"]], "Table of Contents": [[10, "table-of-contents"], [12, "table-of-contents"], [14, "table-of-contents"], [15, "table-of-contents"], [18, "table-of-contents"], [21, "table-of-contents"], [24, "table-of-contents"], [28, "table-of-contents"], [31, "table-of-contents"], [33, "table-of-contents"], [38, "table-of-contents"], [39, "table-of-contents"], [40, "table-of-contents"], [42, "table-of-contents"], [45, "table-of-contents"], [55, "table-of-contents"], [60, "table-of-contents"], [67, "table-of-contents"], [81, "table-of-contents"], [86, "table-of-contents"], [92, "table-of-contents"], [93, "table-of-contents"], [100, "table-of-contents"], [106, "table-of-contents"], [116, "table-of-contents"], [122, "table-of-contents"], [129, "table-of-contents"], [135, "table-of-contents"], [145, "table-of-contents"], [149, "table-of-contents"], [152, "table-of-contents"], [154, "table-of-contents"], [157, "table-of-contents"], [161, "table-of-contents"], [175, "table-of-contents"], [197, "table-of-contents"], [209, "table-of-contents"], [210, "table-of-contents"], [215, "table-of-contents"], [220, "table-of-contents"], [224, "table-of-contents"], [232, "table-of-contents"]], "Table of Notations": [[56, "table-of-notations"]], "Table of Steps to Identify and Scope the Data Source": [[97, "ml-lifecycle-03-steps-identify-scope-data-source"]], "Target Drift": [[110, "target-drift"]], "Target Padding Mask": [[59, "target-padding-mask"]], "Target Variable is Normally Distributed": [[68, "target-variable-is-normally-distributed"]], "Targets (Categorical Distribution)": [[74, "targets-categorical-distribution"]], "Task Specific Fine-Tuning": [[71, "task-specific-fine-tuning"]], "Technical Debt is Beyond Bad Code": [[94, "technical-debt-is-beyond-bad-code"]], "Techniques for Integration Testing": [[94, "techniques-for-integration-testing"]], "Temperature": [[124, "temperature"]], "Template": [[99, "template"], [99, "id7"], [99, "id11"]], "Terminology (Posterior and Conditional Probability)": [[134, "terminology-posterior-and-conditional-probability"]], "Test": [[46, "test"]], "Test Cases": [[19, "test-cases"], [27, "test-cases"], [29, "test-cases"], [36, "test-cases"], [43, "test-cases"]], "Testing Data": [[66, "testing-data"]], "Testing In Production": [[94, "testing-in-production"]], "Tests": [[20, "tests"], [20, "id4"], [27, "tests"], [27, "id7"], [29, "tests"], [30, "tests"], [30, "id3"], [41, "tests"], [43, "tests"], [44, "tests"], [94, "tests"]], "Text vs Binary Formats": [[97, "text-vs-binary-formats"]], "The Autoregressive Self-Supervised Learning Paradigm": [[57, "the-autoregressive-self-supervised-learning-paradigm"], [71, "the-autoregressive-self-supervised-learning-paradigm"]], "The Categorical Distribution": [[53, "the-categorical-distribution"]], "The Cauchy-Schwarz Inequality": [[203, "the-cauchy-schwarz-inequality"]], "The Chain Rule (Matrix Calculus)": [[53, "the-chain-rule-matrix-calculus"]], "The CoVe Solution Framework": [[48, "the-cove-solution-framework"]], "The Compliant And The Violation": [[228, "the-compliant-and-the-violation"]], "The Concept of Generative Pre-trained Transformers (GPT)": [[57, null]], "The Conditional Distribution of y Given \\mathbf{x} is Normally Distributed": [[68, "the-conditional-distribution-of-y-given-mathbf-x-is-normally-distributed"]], "The Connection of Mutability and Variance": [[7, "the-connection-of-mutability-and-variance"]], "The Context, Strategy, Concrete Strategy, Business Logic, Client, And Factory": [[228, "the-context-strategy-concrete-strategy-business-logic-client-and-factory"]], "The Counting Principles": [[125, "the-counting-principles"]], "The Covariances \\boldsymbol{\\Sigma}": [[53, "the-covariances-boldsymbol-sigma"]], "The Data Points \\boldsymbol{x}^{(n)} is the Likelihood": [[53, "the-data-points-boldsymbol-x-n-is-the-likelihood"]], "The Definitions": [[7, "the-definitions"]], "The Distinction Between Finite and Unbounded Feature Space": [[109, "the-distinction-between-finite-and-unbounded-feature-space"]], "The ETL/ELT Framework": [[99, "the-etl-elt-framework"]], "The Empirical vs Theoretical Distribution Setup": [[158, "the-empirical-vs-theoretical-distribution-setup"]], "The Estimator Function is Smooth with Respect to the Parameters": [[57, "the-estimator-function-is-smooth-with-respect-to-the-parameters"]], "The Evolution of Data Engineering (Don\u2019t Quote Me On This!)": [[99, "the-evolution-of-data-engineering-don-t-quote-me-on-this"]], "The Expectation Step (Posterior Inference and Responsibilities)": [[53, "the-expectation-step-posterior-inference-and-responsibilities"]], "The Expectation-Maximization (EM) Algorithm": [[53, "the-expectation-maximization-em-algorithm"]], "The Four Golden Signals": [[94, "the-four-golden-signals"]], "The Full Problem": [[35, "the-full-problem"]], "The Fundamental Theorem of Calculus": [[126, "the-fundamental-theorem-of-calculus"]], "The Gaussian Mixture Model": [[53, "the-gaussian-mixture-model"], [53, "id9"]], "The Gaussian Mixture Model and the Marginal Distribution": [[53, "the-gaussian-mixture-model-and-the-marginal-distribution"]], "The Generalization Gap": [[66, "the-generalization-gap"]], "The Generative Process": [[53, "the-generative-process"]], "The Geometry of Multivariate Gaussians": [[193, null]], "The Global Interpreter Lock (GIL) in Python": [[231, "the-global-interpreter-lock-gil-in-python"]], "The Growth Function": [[66, "the-growth-function"]], "The Hallucination Problem": [[48, "the-hallucination-problem"]], "The Hypothesis Space": [[61, "the-hypothesis-space"], [68, "the-hypothesis-space"]], "The Implementation of Generative Pre-trained Transformers (GPT)": [[58, null]], "The Importance of Generic Types": [[32, "the-importance-of-generic-types"]], "The Importance of a Field in Vector Spaces and Deep Learning": [[79, "the-importance-of-a-field-in-vector-spaces-and-deep-learning"]], "The Iterator Protocol": [[234, null]], "The Jacobian Matrix of Softmax": [[124, "the-jacobian-matrix-of-softmax"]], "The Latent Clusters": [[53, "the-latent-clusters"]], "The Latent Variable Perspective": [[53, "the-latent-variable-perspective"], [53, "id5"]], "The Law of Large Numbers": [[66, "the-law-of-large-numbers"]], "The Law of Total Expectation": [[183, "the-law-of-total-expectation"]], "The Law of Total Probability": [[136, "the-law-of-total-probability"]], "The Lifecycle of an AIOps System": [[93, null]], "The Likelihood of One Single Data Point \\boldsymbol{x}^{(n)}": [[53, "the-likelihood-of-one-single-data-point-boldsymbol-x-n"]], "The Likelihood of the Entire Dataset \\boldsymbol{X}": [[53, "the-likelihood-of-the-entire-dataset-boldsymbol-x"]], "The Log-Likelihood Function": [[211, "the-log-likelihood-function"]], "The Loss Function": [[68, "the-loss-function"]], "The Loss/Cost/Objective Function": [[61, "the-loss-cost-objective-function"]], "The Low-Rank Adaptation (LoRA) Algorithm": [[71, "the-low-rank-adaptation-lora-algorithm"]], "The Marginal Distribution": [[53, "the-marginal-distribution"]], "The Maximization Step (Parameter Estimation)": [[53, "the-maximization-step-parameter-estimation"]], "The Means \\boldsymbol{\\mu}": [[53, "the-means-boldsymbol-mu"]], "The Mixture Model Perspective": [[53, "the-mixture-model-perspective"], [53, "id3"]], "The Mixture Weights \\boldsymbol{\\pi}": [[53, "the-mixture-weights-boldsymbol-pi"]], "The Model, Loss and Data Paradigm": [[106, "the-model-loss-and-data-paradigm"]], "The Motivation": [[5, "the-motivation"], [7, "the-motivation"]], "The Multiplication Principle (MP)": [[125, "the-multiplication-principle-mp"]], "The Naive Bayes Assumptions": [[74, "the-naive-bayes-assumptions"]], "The Naive Bayes Classifier": [[77, "the-naive-bayes-classifier"]], "The Naive Bayes Form": [[74, "the-naive-bayes-form"]], "The Necessary Conditions to Minimize the Objective Function": [[61, "the-necessary-conditions-to-minimize-the-objective-function"]], "The Normal Distribution, Gaussian Noise and the Mean Squared Error": [[68, "the-normal-distribution-gaussian-noise-and-the-mean-squared-error"]], "The Notion of Experiments and Defining the Probability Space": [[130, "the-notion-of-experiments-and-defining-the-probability-space"]], "The Notion of Similarity and Closeness": [[61, "the-notion-of-similarity-and-closeness"]], "The PEP8 Standard": [[94, "the-pep8-standard"]], "The PMF (Ideal Histogram)": [[143, "the-pmf-ideal-histogram"], [148, "the-pmf-ideal-histogram"]], "The Pandora Box of Confidence Intervals, P-values and Hypothesis Testing": [[68, "the-pandora-box-of-confidence-intervals-p-values-and-hypothesis-testing"]], "The Perpectives": [[53, "the-perpectives"]], "The Posterior Distribution": [[53, "the-posterior-distribution"]], "The Precondition for Binary Search": [[29, "the-precondition-for-binary-search"]], "The Prior": [[76, "the-prior"]], "The Prior Distribution of \\boldsymbol{z}": [[53, "the-prior-distribution-of-boldsymbol-z"]], "The Probabilistic Model for Classification": [[77, "the-probabilistic-model-for-classification"]], "The Problem": [[158, "the-problem"]], "The Problem: Synchronous Execution In Single Process And Single Thread": [[216, "the-problem-synchronous-execution-in-single-process-and-single-thread"]], "The Properties of Covariance Matrix": [[195, "the-properties-of-covariance-matrix"]], "The Queue Abstract Data Type": [[22, "the-queue-abstract-data-type"], [23, "the-queue-abstract-data-type"]], "The Recursive Counterpart": [[30, "the-recursive-counterpart"]], "The Responsibilities": [[53, "the-responsibilities"]], "The Setup": [[143, "the-setup"], [148, "the-setup"], [159, "the-setup"]], "The Singleton Pattern in Detail": [[227, "the-singleton-pattern-in-detail"]], "The Sliding Window Technique": [[46, "the-sliding-window-technique"]], "The Space-Time Tradeoff": [[17, "the-space-time-tradeoff"]], "The Testing Pyramid": [[94, "the-testing-pyramid"]], "The Three Axioms of Probability (Kolmogorov Axioms)": [[131, "the-three-axioms-of-probability-kolmogorov-axioms"]], "The Training Phase": [[56, "the-training-phase"]], "The Two Pointers Technique": [[47, "the-two-pointers-technique"]], "The Update Weights Of Fine-Tuning Has A Low Intrinsic Rank": [[71, "the-update-weights-of-fine-tuning-has-a-low-intrinsic-rank"]], "The VC Dimension": [[66, "the-vc-dimension"]], "The Vectorized Parameters": [[53, "the-vectorized-parameters"]], "The What and The Why": [[94, "the-what-and-the-why"]], "The ticket model and what is a r.v": [[158, "the-ticket-model-and-what-is-a-r-v"]], "The yield Statement": [[213, "the-yield-statement"]], "Theoretical Best Space Complexity": [[13, "theoretical-best-space-complexity"], [19, "theoretical-best-space-complexity"], [29, "theoretical-best-space-complexity"], [43, "theoretical-best-space-complexity"]], "Theoretical Best Time Complexity": [[13, "theoretical-best-time-complexity"], [19, "theoretical-best-time-complexity"], [29, "theoretical-best-time-complexity"], [43, "theoretical-best-time-complexity"]], "Theoretical Best Time/Space Complexity and Space-Time Tradeoff": [[29, "theoretical-best-time-space-complexity-and-space-time-tradeoff"]], "Theoretical FLOPs in Transformer Models": [[118, "theoretical-flops-in-transformer-models"]], "Theoretical Foundations": [[48, "theoretical-foundations"]], "Theoretical Foundations and Practical Implications": [[29, "theoretical-foundations-and-practical-implications"]], "Theoretical Model FLOPs Utilization (MFU) Indicates a Rough Benchmark of Efficiency": [[118, "theoretical-model-flops-utilization-mfu-indicates-a-rough-benchmark-of-efficiency"]], "Thread": [[216, "thread"]], "Thread ID": [[216, "thread-id"]], "Thread Safety": [[214, null]], "Thread Safety Considerations": [[227, "thread-safety-considerations"]], "Threading": [[216, "threading"]], "Threads and Race Conditions": [[231, "threads-and-race-conditions"]], "Three Predictors": [[76, "three-predictors"]], "Tikz Code": [[30, null], [32, null]], "Time Complexity": [[11, "time-complexity"], [13, "time-complexity"], [17, "time-complexity"], [19, "time-complexity"], [20, "time-complexity"], [20, "id5"], [22, "time-complexity"], [23, "time-complexity"], [23, "dequeue"], [26, "time-complexity"], [27, "time-complexity"], [27, "id8"], [29, "time-complexity"], [30, "time-complexity"], [32, "time-complexity"], [34, "time-complexity"], [34, "stack"], [35, "time-complexity"], [36, "time-complexity"], [36, "id2"], [37, "time-complexity"], [43, "time-complexity"], [46, "time-complexity"], [68, "time-complexity"], [230, "time-complexity"]], "Time Complexity Table": [[30, "time-complexity-table"], [30, "id4"]], "Time Complexity Using Big O Notation \\mathcal{O}(g(N))": [[30, "time-complexity-using-big-o-notation-mathcal-o-g-n"]], "Time Complexity of Dictionary Operations": [[17, "dict-time-complexity"]], "Time Complexity of K-Means": [[61, "time-complexity-kmeans"]], "Time Complexity of Linear Search": [[30, "linear-search-time-complexity-linear-search-iterative"]], "Time Complexity of Linear Search (Recursive)": [[30, "linear-search-time-complexity-recursive"]], "Time Complexity of List Operations": [[11, "list-time-complexity"]], "Time Complexity of Naive Bayes": [[74, "time-complexity-naive-bayes"]], "Time Complexity of Pop Operation": [[36, "pop-time-complexity"]], "Time Complexity of Push Operation": [[36, "push-time-complexity"]], "Time Complexity of Queue Implemented using List": [[22, "queue-list-time-complexity"]], "Time Complexity of Two-Sum Function Using Hash Map": [[19, "two-sum-time-complexity-hash-map"]], "Time Complexity of Two-Sum Function Using Nested Loops": [[13, "two-sum-time-complexity-nested-loops"]], "Time Complexity of Two-Sum Sorted Function Using Two-Pointer Approach": [[43, "two-sum-167-two-sum-ii-input-array-is-sorted-two-pointers"]], "Time Complexity: Inefficient Membership Testing": [[239, "time-complexity-inefficient-membership-testing"]], "Time Efficiency": [[213, "time-efficiency"]], "Time and Space Complexity": [[61, "time-and-space-complexity"], [74, "time-and-space-complexity"]], "Timeit Profiler": [[112, "timeit-profiler"]], "Token Embedding and Positional Encoding": [[56, "token-embedding-and-positional-encoding"]], "Token Embedding and Vector Representation Process": [[58, "token-embedding-and-vector-representation-process"]], "Token Embeddings": [[58, "token-embeddings"]], "Token to Index, and Index to Token Mappings": [[56, "token-to-index-and-index-to-token-mappings"]], "Tokenization": [[59, "tokenization"]], "Tokenization and Vocabulary": [[58, "tokenization-and-vocabulary"]], "Tokenizer": [[120, "tokenizer"]], "Tools": [[94, "tools"], [94, "id11"]], "Top-Down Testing": [[94, "top-down-testing"]], "Torch Cuda Event": [[113, "torch-cuda-event"]], "Torch Profiler": [[113, "torch-profiler"]], "Total Space": [[13, "total-space"], [19, "total-space"], [43, "total-space"]], "Total Space Complexity": [[20, "total-space-complexity"], [20, "id9"], [27, "total-space-complexity"], [27, "id12"], [29, "total-space-complexity"], [30, "total-space-complexity"]], "Total Trainable Parameters": [[118, "total-trainable-parameters"]], "Trace": [[113, "trace"]], "Tractability": [[102, "tractability"]], "Traffic": [[94, "traffic"]], "Train LoRA": [[72, "train-lora"]], "Trained Attention Heatmaps": [[59, "trained-attention-heatmaps"]], "Trainer": [[59, "trainer"]], "Training": [[77, "training"], [119, "training"], [120, "training"]], "Training Chronicles": [[106, "training-chronicles"]], "Training Dynamics And Tricks": [[122, null]], "Training Paradigm": [[59, "training-paradigm"]], "Training a Mini-GPT to Learn Two-Digit Addition": [[59, null]], "Transactional And Analytical Processing Databases": [[98, "transactional-and-analytical-processing-databases"]], "Transactional Databases Are Row-Major": [[98, "transactional-databases-are-row-major"]], "Transactional Processing": [[98, "transactional-processing"]], "Translating to a First True in a Sorted Boolean Array Problem": [[29, "translating-to-a-first-true-in-a-sorted-boolean-array-problem"]], "Transpose Property": [[85, "transpose-property"]], "Transpose of a Vector": [[82, "transpose-of-a-vector"]], "Troubleshooting": [[90, "troubleshooting"]], "Truth Table for 6 samples": [[66, "truth-table-1"]], "Two (Continuous) Predictors": [[76, "two-continuous-predictors"]], "Two Pointers": [[45, null], [47, null]], "Two Pointers And Sliding Window": [[39, null]], "Two Pointers Opposite Direction": [[47, "two-pointers-opposite-direction"]], "Two Pointers Same Direction": [[47, "two-pointers-same-direction"]], "Two Sum": [[13, null], [19, null]], "Two Sum II - Input Array Is Sorted": [[43, null], [47, "two-sum-ii-input-array-is-sorted"], [47, null]], "Type Argument": [[5, "type-argument"]], "Type Binding": [[6, "type-binding"]], "Type Safety": [[3, null], [3, "id1"]], "Type Theory, A Very Rudimentary Introduction": [[10, null]], "Type Variable and Type Parameter": [[5, "type-variable-and-type-parameter"]], "Type Variables And Substitution": [[6, "type-variables-and-substitution"]], "TypeGuard: Runtime Type Checking": [[94, "typeguard-runtime-type-checking"]], "Types Of Data Analysis": [[101, "ml-lifecycle-04-data-analysis"]], "Types are Sets": [[2, "types-are-sets"]], "Types of Data Inputs for Machine Learning": [[96, "ml-lifecycle-02-types-of-data-inputs"]], "Types of Inputs": [[96, "types-of-inputs"]], "Understanding Closures and Late Binding": [[235, "understanding-closures-and-late-binding"]], "Understanding GPU Memory 1: Visualizing All Allocations over Time": [[115, "understanding-gpu-memory-1-visualizing-all-allocations-over-time"]], "Understanding Integration Testing in Practice": [[94, "understanding-integration-testing-in-practice"]], "Understanding Model And Data Assumptions": [[102, "understanding-model-and-data-assumptions"]], "Understanding the Connection: Business Goals and Corresponding Machine Learning Tasks": [[96, "understanding-the-connection-business-goals-and-corresponding-machine-learning-tasks"]], "Uniform Distribution of X": [[30, "uniform-distribution-of-x"]], "Union Bound": [[66, "union-bound"], [203, "union-bound"]], "Union Type": [[6, "union-type"]], "Union Type versus Constrained Type Variable": [[6, "union-type-versus-constrained-type-variable"]], "Uniquely determines the distribution": [[200, "uniquely-determines-the-distribution"]], "Unit Test As Documentation": [[94, "unit-test-as-documentation"]], "Unit Testing": [[94, "unit-testing"]], "Unit vs Integration vs System vs E2E Testing": [[94, "unit-vs-integration-vs-system-vs-e2e-testing"]], "Univariate Linear Model": [[68, "univariate-linear-model"]], "Unnormalized Logits": [[124, "unnormalized-logits"]], "Unordered Sequential Search": [[30, "unordered-sequential-search"]], "Unsafe Overloading Variants": [[8, "unsafe-overloading-variants"]], "Update Covariance Matrix of Running Example": [[53, "update-covariance-matrix-of-running-example"]], "Update Mean of Running Example": [[53, "update-mean-of-running-example"]], "Update Weight/Prior of Running Example": [[53, "update-weight-prior-of-running-example"]], "Updated Book Relation": [[98, "ml-lifecycle-032-updated-book-relation"]], "Updated Matrix Description Table with Batch and Head Dimensions": [[56, "updated-matrix-description-table-with-batch-and-head-dimensions"]], "Upgrade pip, setuptools and wheel": [[94, "upgrade-pip-setuptools-and-wheel"]], "Upper Bounding Type Variables": [[6, "upper-bounding-type-variables"]], "Use Case 1. Timeouts in HTTP Requests": [[9, "use-case-1-timeouts-in-http-requests"]], "Using HuggingFace": [[120, "using-huggingface"]], "Using Processes": [[216, "using-processes"]], "Using PyTorch\u2019s Dataset and Dataloader": [[58, "using-pytorch-s-dataset-and-dataloader"]], "Using Threads": [[216, "using-threads"]], "Using Two-Sample t-Tests for Data Drift": [[110, "using-two-sample-t-tests-for-data-drift"]], "Using __dict__": [[117, "using-dict"]], "Using a Generator Function": [[213, "using-a-generator-function"]], "Using dir": [[117, "using-dir"]], "Using functools.wraps": [[229, "using-functools-wraps"]], "Using inspect.getmembers": [[117, "using-inspect-getmembers"]], "Using vars": [[117, "using-vars"]], "Utilities": [[58, "utilities"], [143, "utilities"], [146, "utilities"], [148, "utilities"], [156, "utilities"], [159, "utilities"]], "VC-Analysis": [[66, "vc-analysis"]], "Valid Parentheses": [[35, null]], "Validates Functional Coherence": [[94, "validates-functional-coherence"]], "Variable Window Size Sliding Window Technique": [[46, "variable-window-size-sliding-window-technique"]], "Variable vs Random Variable": [[137, "variable-vs-random-variable"]], "Variance": [[142, "variance"], [158, "variance"], [165, "variance"]], "Vector Addition and Subtraction": [[83, "vector-addition-and-subtraction"]], "Vector Addition is Commutative": [[83, "vector-addition-is-commutative"]], "Vector Database (A High-dimensional Playground for Large Language Models)": [[98, "vector-database-a-high-dimensional-playground-for-large-language-models"]], "Vector Norm and Distance": [[84, null]], "Vector Orientation": [[82, "vector-orientation"]], "Vector Quantization": [[63, "vector-quantization"]], "Vector and Its Definition": [[82, null]], "Vector and Its Operations": [[83, null]], "Vector is Invariant under Coordinate Transformation": [[82, "vector-is-invariant-under-coordinate-transformation"]], "Vector-Scalar Multiplication is Commutative": [[83, "vector-scalar-multiplication-is-commutative"]], "Vector-Scalar Multiplication is Invariant under Rotation": [[83, "vector-scalar-multiplication-is-invariant-under-rotation"]], "Vectors": [[86, null]], "Verbatim": [[94, null]], "Version Control": [[94, "version-control"]], "Violating Type Safety": [[3, "violating-type-safety"]], "Virtual Environment": [[90, "virtual-environment"], [94, "virtual-environment"]], "Visualisation": [[43, "visualisation"], [44, "visualisation"]], "Visualising Positional Encodings": [[58, "visualising-positional-encodings"]], "Visualization": [[27, "visualization"], [29, "visualization"], [109, "visualization"]], "Visualization (Batch Features only)": [[109, "visualization-batch-features-only"], [109, "id3"]], "Visualization (Online Features)": [[109, "visualization-online-features"]], "Visualization of Process and Thread": [[216, "visualization-of-process-and-thread"]], "Visualizing Likelihood and Maximum Likelihood Estimation as N Increases": [[211, "visualizing-likelihood-and-maximum-likelihood-estimation-as-n-increases"]], "Visualizing Variance of Dot Product": [[58, "visualizing-variance-of-dot-product"]], "Visualizing the Convergence": [[207, "visualizing-the-convergence"]], "Visualizing the Likelihood Function": [[211, "visualizing-the-likelihood-function"]], "Vocabulary": [[56, "vocabulary"], [59, "vocabulary"]], "Walkthrough / Whiteboarding": [[19, "walkthrough-whiteboarding"], [43, "walkthrough-whiteboarding"]], "Warmup": [[59, "warmup"], [123, "warmup"]], "Warning": [[174, null]], "We Adhere To Good Design Principles": [[222, "we-adhere-to-good-design-principles"]], "Weak Law of Large Numbers": [[206, "weak-law-of-large-numbers"]], "Weight Sharing": [[56, null]], "Weighted Likelihood": [[53, "weighted-likelihood"]], "Weighted Likelihood of One Single Data Point \\boldsymbol{x}^{(n)}": [[53, "weighted-likelihood-of-one-single-data-point-boldsymbol-x-n"]], "Weighted Likelihood of the Entire Dataset \\boldsymbol{X}": [[53, "weighted-likelihood-of-the-entire-dataset-boldsymbol-x"]], "Weights And Embeddings": [[56, "weights-and-embeddings"]], "What (raw) data do I need to extract (relevant to my project)?": [[99, "what-raw-data-do-i-need-to-extract-relevant-to-my-project"], [99, "id1"]], "What Are The Key Elements?": [[222, "what-are-the-key-elements"]], "What Is An Iterable?": [[234, "what-is-an-iterable"]], "What Is An Iterator?": [[234, "what-is-an-iterator"]], "What We Did Not Handle?": [[238, "what-we-did-not-handle"]], "What are Constraints for?": [[19, "what-are-constraints-for"], [36, "what-are-constraints-for"], [43, "what-are-constraints-for"]], "What are my budget constraints?": [[99, "what-are-my-budget-constraints"]], "What are my project requirements?": [[99, "what-are-my-project-requirements"], [99, "id12"]], "What are the data processing techniques and tools I should use?": [[99, "what-are-the-data-processing-techniques-and-tools-i-should-use"]], "What are the data security and compliance requirements?": [[99, "what-are-the-data-security-and-compliance-requirements"]], "What are the performance requirements?": [[99, "what-are-the-performance-requirements"], [99, "id14"]], "What are the scalability and flexibility requirements?": [[99, "what-are-the-scalability-and-flexibility-requirements"], [99, "id15"]], "What considerations should I keep in mind when loading the data?": [[99, "what-considerations-should-i-keep-in-mind-when-loading-the-data"]], "What format is the data in? Is it in a format that I can use?": [[99, "what-format-is-the-data-in-is-it-in-a-format-that-i-can-use"], [99, "id3"]], "What is Nominal Subtyping?": [[2, "what-is-nominal-subtyping"]], "What is Structural Subtyping?": [[2, "what-is-structural-subtyping"]], "What is get_origin and get_args?": [[238, "what-is-get-origin-and-get-args"]], "What is the Difference between Linting and Formatting?": [[94, "what-is-the-difference-between-linting-and-formatting"]], "What is the Singleton Pattern?": [[227, "what-is-the-singleton-pattern"]], "What tools do I need to extract the data?": [[99, "what-tools-do-i-need-to-extract-the-data"], [99, "id4"]], "What type of data am I dealing with?": [[99, "what-type-of-data-am-i-dealing-with"], [99, "id13"]], "When can K-Means Fail?": [[61, "when-can-k-means-fail"]], "When to Use K-Means?": [[61, "when-to-use-k-means"]], "Where Is The MLOps?": [[106, "where-is-the-mlops"]], "Where can I find this data? This means finding all potential data sources": [[99, "where-can-i-find-this-data-this-means-finding-all-potential-data-sources"], [99, "id2"]], "Where did these Assumptions come from?": [[155, null]], "Where should I store the extracted data?": [[99, "where-should-i-store-the-extracted-data"]], "Where to Start?": [[94, "where-to-start"]], "Whiteboarding": [[29, "whiteboarding"]], "Why Characteristic Function?": [[198, "why-characteristic-function"]], "Why DAG?": [[100, "ml-lifecycle-03-why-dag"]], "Why Does Calibration Matter?": [[103, "why-does-calibration-matter"]], "Why Does Cosine Annealing With Warmup Stabilize Training?": [[123, null]], "Why Does This Happen?": [[214, "why-does-this-happen"]], "Why Eigenvalues and Eigenvectors defined the shape of Multivariate Gaussian?": [[193, "why-eigenvalues-and-eigenvectors-defined-the-shape-of-multivariate-gaussian"]], "Why GMM has no Closed-Form Solution": [[53, "why-gmm-has-no-closed-form-solution"]], "Why Is This Safer?": [[216, "why-is-this-safer"]], "Why It\u2019s CPU-Bound": [[216, "why-it-s-cpu-bound"]], "Why It\u2019s I/O-Bound": [[216, "why-it-s-i-o-bound"]], "Why Left + Right // 2 May Cause Overflow?": [[27, "why-left-right-2-may-cause-overflow"]], "Why Nominal Subtyping?": [[2, "why-nominal-subtyping"]], "Why Not Use Constraints?": [[6, "why-not-use-constraints"]], "Why Structural Subtyping?": [[2, "why-structural-subtyping"]], "Why Use a List for Stack Implementation?": [[32, "why-use-a-list-for-stack-implementation"]], "Why Use a Singleton?": [[227, "why-use-a-singleton"]], "Why Use the Factory Method Pattern?": [[222, "why-use-the-factory-method-pattern"]], "Why data points are considered random variables": [[158, "why-data-points-are-considered-random-variables"]], "Why do you multiply probabilities?": [[125, "why-do-you-multiply-probabilities"], [136, "why-do-you-multiply-probabilities"]], "Why is it Useful in the Context of Machine Learning?": [[208, "why-is-it-useful-in-the-context-of-machine-learning"]], "Why is it useful?": [[200, "why-is-it-useful"]], "Why is the Joint Distribution the Product of the Likelihood and Prior?": [[53, "why-is-the-joint-distribution-the-product-of-the-likelihood-and-prior"]], "Why mask our target in Adder?": [[59, "why-mask-our-target-in-adder"]], "Why must h be fixed and defined before generating the dataset \\mathcal{S}?": [[66, "why-must-h-be-fixed-and-defined-before-generating-the-dataset-mathcal-s"]], "Why the Unexpected Output Occurs": [[235, "why-the-unexpected-output-occurs"]], "Why \u201cFactory Method\u201d?": [[222, "why-factory-method"]], "With Distributed Barrier": [[91, "with-distributed-barrier"]], "Workarounds": [[235, "workarounds"]], "Workflow": [[97, "workflow"], [99, "workflow"], [99, "id8"], [99, "id16"]], "Worst Case": [[30, "worst-case"]], "Wrap": [[238, "wrap"]], "YAML Driven Configuration": [[217, "yaml-driven-configuration"]], "Yield": [[213, "yield"]], "Your specific questions": [[66, "your-specific-questions"]], "Your specific setup": [[66, "your-specific-setup"]], "\\mathbf{W}_{e}: Embedding Matrix": [[56, "mathbf-w-e-embedding-matrix"]], "\\mathbf{X}: Output of the Embedding Layer": [[56, "mathbf-x-output-of-the-embedding-layer"]], "\\tilde{\\mathbf{X}}: Output of the Positional Encoding Layer": [[56, "tilde-mathbf-x-output-of-the-positional-encoding-layer"]], "a. Encapsulation of Object Creation": [[222, "a-encapsulation-of-object-creation"]], "a. Single Responsibility Principle (SRP)": [[222, "a-single-responsibility-principle-srp"]], "b. Adherence to the Open/Closed Principle": [[222, "b-adherence-to-the-open-closed-principle"]], "b. Dependency Inversion Principle (DIP)": [[222, "b-dependency-inversion-principle-dip"]], "c. Open/Closed Principle (OCP)": [[222, "c-open-closed-principle-ocp"]], "c. Promoting Loose Coupling": [[222, "c-promoting-loose-coupling"]], "d. Enhancing Scalability and Maintainability": [[222, "d-enhancing-scalability-and-maintainability"]], "d. Interface Segregation Principle (ISP)": [[222, "d-interface-segregation-principle-isp"]], "e. Facilitating Testing and Mocking": [[222, "e-facilitating-testing-and-mocking"]], "e. Liskov Substitution Principle (LSP)": [[222, "e-liskov-substitution-principle-lsp"]], "e. Overriding the __init__ Method": [[227, "e-overriding-the-init-method"]], "failureCode is HeadNodeBootstrapFailure with failureReason Cluster creation timed out": [[90, "failurecode-is-headnodebootstrapfailure-with-failurereason-cluster-creation-timed-out"]], "\u21e2 AsyncIO": [[216, "id2"]], "\u21e2 Multiprocessing": [[216, "id4"]], "\u21e2 Threading": [[216, "id3"]]}, "docnames": ["bibliography", "citations", "computer_science/type_theory/01-subtypes", "computer_science/type_theory/02-type-safety", "computer_science/type_theory/03-subsumption", "computer_science/type_theory/04-generics", "computer_science/type_theory/05-typevar-bound-constraints", "computer_science/type_theory/06-invariance-covariance-contravariance", "computer_science/type_theory/07-pep-3124-overloading", "computer_science/type_theory/08-pep-661-sentinel-values", "computer_science/type_theory/intro", "dsa/array/concept", "dsa/array/intro", "dsa/array/questions/01-two-sum", "dsa/array/questions/intro", "dsa/complexity_analysis/intro", "dsa/complexity_analysis/master_theorem", "dsa/hash_map/concept", "dsa/hash_map/intro", "dsa/hash_map/questions/01-two-sum", "dsa/hash_map/questions/49-group-anagrams", "dsa/hash_map/questions/intro", "dsa/queue/concept", "dsa/queue/dequeue", "dsa/queue/intro", "dsa/queue/questions/125-valid-palindrome", "dsa/queue/questions/hot-potatoes", "dsa/searching_algorithms/binary_search/concept", "dsa/searching_algorithms/binary_search/intro", "dsa/searching_algorithms/binary_search/problems/875-koko-eating-bananas", "dsa/searching_algorithms/linear_search/concept", "dsa/searching_algorithms/linear_search/intro", "dsa/stack/concept", "dsa/stack/intro", "dsa/stack/questions/155-min-stack", "dsa/stack/questions/20-valid-parentheses", "dsa/stack/questions/232-implement-queue-using-stacks", "dsa/stack/questions/344-reverse-string", "dsa/stack/questions/intro", "dsa/two_pointers/intro", "dsa/two_pointers/questions/intro", "dsa/two_pointers/questions/sliding_window/438-find-all-anagrams-in-a-string", "dsa/two_pointers/questions/sliding_window/intro", "dsa/two_pointers/questions/two_pointers/167-two-sum-ii-input-array-is-sorted", "dsa/two_pointers/questions/two_pointers/26-remove-duplicates-from-sorted-array", "dsa/two_pointers/questions/two_pointers/intro", "dsa/two_pointers/sliding_window", "dsa/two_pointers/two_pointers", "influential/cove/cove", "influential/empirical_risk_minimization/01_intro", "influential/empirical_risk_minimization/02_concept", "influential/empirical_risk_minimization/03_bayes_optimal_classifier", "influential/gaussian_mixture_models/01_intro", "influential/gaussian_mixture_models/02_concept", "influential/gaussian_mixture_models/03_implementation", "influential/generative_pretrained_transformer/01_intro", "influential/generative_pretrained_transformer/02_notations", "influential/generative_pretrained_transformer/03_concept", "influential/generative_pretrained_transformer/04_implementation", "influential/generative_pretrained_transformer/05_adder", "influential/kmeans_clustering/01_intro", "influential/kmeans_clustering/02_concept", "influential/kmeans_clustering/03_implementation", "influential/kmeans_clustering/04_image_segmentation", "influential/kmeans_clustering/05_conceptual_questions", "influential/learning_theory/01_intro", "influential/learning_theory/02_concept", "influential/linear_regression/01_intro", "influential/linear_regression/02_concept", "influential/linear_regression/03_implementation", "influential/low_rank_adaptation/01_intro", "influential/low_rank_adaptation/02_concept", "influential/low_rank_adaptation/03_implementation", "influential/naive_bayes/01_intro", "influential/naive_bayes/02_concept", "influential/naive_bayes/03_implementation", "influential/naive_bayes/04_example_penguins", "influential/naive_bayes/05_application_mnist", "intro", "linear_algebra/01_preliminaries/01-fields", "linear_algebra/01_preliminaries/02-systems-of-linear-equations", "linear_algebra/01_preliminaries/intro", "linear_algebra/02_vectors/01-vector-definition", "linear_algebra/02_vectors/02-vector-operation", "linear_algebra/02_vectors/03-vector-norm", "linear_algebra/02_vectors/04-vector-products", "linear_algebra/02_vectors/intro", "notations/machine_learning", "operations/distributed/01_notations", "operations/distributed/02_basics", "operations/distributed/03_how_to_setup_slurm_in_aws", "operations/distributed/04_ablation", "operations/distributed/intro", "operations/machine_learning_lifecycle/00_intro", "operations/machine_learning_lifecycle/010_continuous_integration_deployment_learning_and_training", "operations/machine_learning_lifecycle/01_problem_formulation", "operations/machine_learning_lifecycle/02_project_scoping", "operations/machine_learning_lifecycle/03_dataops_pipeline/031_data_source_and_format", "operations/machine_learning_lifecycle/03_dataops_pipeline/032_data_model_and_storage", "operations/machine_learning_lifecycle/03_dataops_pipeline/033_etl", "operations/machine_learning_lifecycle/03_dataops_pipeline/03_dataops_pipeline", "operations/machine_learning_lifecycle/04_mlops_data_pipeline", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/051_model_selection", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/052_metric_selection", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/053_experiment_tracking", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/054_model_testing", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/05_ml_training_pipeline", "operations/machine_learning_lifecycle/06_model_evaluation", "operations/machine_learning_lifecycle/07_model_validation_registry_and_pushing_model_to_production", "operations/machine_learning_lifecycle/08_model_deployment_and_serving", "operations/machine_learning_lifecycle/09_model_monitoring", "operations/profiling/01_synchronize", "operations/profiling/02_timeit", "operations/profiling/03_time_profiler", "operations/profiling/04_small_gpt_profile", "operations/profiling/05_memory_leak", "operations/profiling/intro", "playbook/how_to_inspect_function_and_class_signatures", "playbook/training/how_to_calculate_flops_in_transformer_based_models", "playbook/training/how_to_finetune_decoder_with_cross_attention", "playbook/training/how_to_finetune_decoder_with_last_token_pooling", "playbook/training/how_to_teacher_student_knowledge_distillation", "playbook/training/intro", "playbook/training/why_cosine_annealing_warmup_stabilize_training", "playbook/why_softmax_preserves_order_translation_invariant_not_invariant_scaling", "probability_theory/01_mathematical_preliminaries/01_combinatorics", "probability_theory/01_mathematical_preliminaries/02_calculus", "probability_theory/01_mathematical_preliminaries/03_contours", "probability_theory/01_mathematical_preliminaries/exercises", "probability_theory/01_mathematical_preliminaries/intro", "probability_theory/02_probability/0202_probability_space", "probability_theory/02_probability/0203_probability_axioms", "probability_theory/02_probability/0204_conditional_probability", "probability_theory/02_probability/0205_independence", "probability_theory/02_probability/0206_bayes_theorem", "probability_theory/02_probability/intro", "probability_theory/02_probability/summary", "probability_theory/03_discrete_random_variables/0301_random_variables", "probability_theory/03_discrete_random_variables/0302_discrete_random_variables", "probability_theory/03_discrete_random_variables/0303_probability_mass_function", "probability_theory/03_discrete_random_variables/0304_cumulative_distribution_function", "probability_theory/03_discrete_random_variables/0305_expectation", "probability_theory/03_discrete_random_variables/0306_moments_and_variance", "probability_theory/03_discrete_random_variables/bernoulli/0308_bernoulli_distribution_application", "probability_theory/03_discrete_random_variables/bernoulli/0308_bernoulli_distribution_concept", "probability_theory/03_discrete_random_variables/bernoulli/intro", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_application", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_concept", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_implementation", "probability_theory/03_discrete_random_variables/binomial/intro", "probability_theory/03_discrete_random_variables/exercises", "probability_theory/03_discrete_random_variables/geometric/0310_geometric_distribution_concept", "probability_theory/03_discrete_random_variables/geometric/intro", "probability_theory/03_discrete_random_variables/iid", "probability_theory/03_discrete_random_variables/intro", "probability_theory/03_discrete_random_variables/poisson/0311_poisson_distribution_concept", "probability_theory/03_discrete_random_variables/poisson/0311_poisson_distribution_implementation", "probability_theory/03_discrete_random_variables/poisson/intro", "probability_theory/03_discrete_random_variables/summary", "probability_theory/03_discrete_random_variables/uniform/0307_discrete_uniform_distribution_application", "probability_theory/03_discrete_random_variables/uniform/0307_discrete_uniform_distribution_concept", "probability_theory/03_discrete_random_variables/uniform/intro", "probability_theory/04_continuous_random_variables/0401_continuous_random_variables", "probability_theory/04_continuous_random_variables/0402_probability_density_function", "probability_theory/04_continuous_random_variables/0403_expectation", "probability_theory/04_continuous_random_variables/0404_moments_and_variance", "probability_theory/04_continuous_random_variables/0405_cumulative_distribution_function", "probability_theory/04_continuous_random_variables/0406_mean_median_mode", "probability_theory/04_continuous_random_variables/0407_continuous_uniform_distribution", "probability_theory/04_continuous_random_variables/0408_exponential_distribution", "probability_theory/04_continuous_random_variables/0409_gaussian_distribution", "probability_theory/04_continuous_random_variables/0410_skewness_and_kurtosis", "probability_theory/04_continuous_random_variables/0411_convolve_and_sum_of_random_variables", "probability_theory/04_continuous_random_variables/0412_functions_of_random_variables", "probability_theory/04_continuous_random_variables/from_discrete_to_continuous", "probability_theory/04_continuous_random_variables/intro", "probability_theory/05_joint_distributions/0501_joint_pmf_pdf/concept", "probability_theory/05_joint_distributions/0501_joint_pmf_pdf/intro", "probability_theory/05_joint_distributions/0502_joint_expectation_and_correlation/concept", "probability_theory/05_joint_distributions/0502_joint_expectation_and_correlation/intro", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/application", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/concept", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/intro", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/concept", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/exercises", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/intro", "probability_theory/05_joint_distributions/0505_sum_of_random_variables/concept", "probability_theory/05_joint_distributions/0505_sum_of_random_variables/intro", "probability_theory/05_joint_distributions/0506_random_vectors/concept", "probability_theory/05_joint_distributions/0506_random_vectors/intro", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/application_transformation", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/concept", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/eigendecomposition", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/geometry_of_multivariate_gaussian", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/intro", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/psd", "probability_theory/05_joint_distributions/from_single_variable_to_joint_distributions", "probability_theory/05_joint_distributions/intro", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/characteristic_function", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/intro", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/moment_generating_function", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/moment_generating_function_application_sum_of_rv", "probability_theory/06_sample_statistics/0602_probability_inequalities/application", "probability_theory/06_sample_statistics/0602_probability_inequalities/concept", "probability_theory/06_sample_statistics/0602_probability_inequalities/intro", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/application", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/concept", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/convergence", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/intro", "probability_theory/06_sample_statistics/intro", "probability_theory/08_estimation_theory/intro", "probability_theory/08_estimation_theory/maximum_likelihood_estimation/concept", "probability_theory/08_estimation_theory/maximum_likelihood_estimation/intro", "software_engineering/concurrency_parallelism_asynchronous/generator_yield", "software_engineering/concurrency_parallelism_asynchronous/insights/locks_for_thread_safety", "software_engineering/concurrency_parallelism_asynchronous/intro", "software_engineering/concurrency_parallelism_asynchronous/overview", "software_engineering/config_management/01-pydra", "software_engineering/config_management/02-state", "software_engineering/config_management/concept", "software_engineering/config_management/intro", "software_engineering/design_patterns/dependency_inversion_principle", "software_engineering/design_patterns/factory_method", "software_engineering/design_patterns/god_object_pattern", "software_engineering/design_patterns/intro", "software_engineering/design_patterns/named_constructor", "software_engineering/design_patterns/registry", "software_engineering/design_patterns/singleton", "software_engineering/design_patterns/strategy", "software_engineering/python/decorator", "software_engineering/python/generators_over_lists", "software_engineering/python/gil", "software_engineering/python/intro", "software_engineering/python/is_vs_equality", "software_engineering/python/iterator_protocol", "software_engineering/python/late_binding_closures", "software_engineering/python/mutable_default", "software_engineering/python/new_vs_init", "software_engineering/python/pydantic", "software_engineering/python/set_vs_list"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["bibliography.md", "citations.md", "computer_science/type_theory/01-subtypes.md", "computer_science/type_theory/02-type-safety.md", "computer_science/type_theory/03-subsumption.md", "computer_science/type_theory/04-generics.md", "computer_science/type_theory/05-typevar-bound-constraints.md", "computer_science/type_theory/06-invariance-covariance-contravariance.md", "computer_science/type_theory/07-pep-3124-overloading.md", "computer_science/type_theory/08-pep-661-sentinel-values.md", "computer_science/type_theory/intro.md", "dsa/array/concept.md", "dsa/array/intro.md", "dsa/array/questions/01-two-sum.ipynb", "dsa/array/questions/intro.md", "dsa/complexity_analysis/intro.md", "dsa/complexity_analysis/master_theorem.md", "dsa/hash_map/concept.md", "dsa/hash_map/intro.md", "dsa/hash_map/questions/01-two-sum.ipynb", "dsa/hash_map/questions/49-group-anagrams.md", "dsa/hash_map/questions/intro.md", "dsa/queue/concept.ipynb", "dsa/queue/dequeue.ipynb", "dsa/queue/intro.md", "dsa/queue/questions/125-valid-palindrome.ipynb", "dsa/queue/questions/hot-potatoes.ipynb", "dsa/searching_algorithms/binary_search/concept.md", "dsa/searching_algorithms/binary_search/intro.md", "dsa/searching_algorithms/binary_search/problems/875-koko-eating-bananas.md", "dsa/searching_algorithms/linear_search/concept.md", "dsa/searching_algorithms/linear_search/intro.md", "dsa/stack/concept.md", "dsa/stack/intro.md", "dsa/stack/questions/155-min-stack.ipynb", "dsa/stack/questions/20-valid-parentheses.ipynb", "dsa/stack/questions/232-implement-queue-using-stacks.md", "dsa/stack/questions/344-reverse-string.ipynb", "dsa/stack/questions/intro.md", "dsa/two_pointers/intro.md", "dsa/two_pointers/questions/intro.md", "dsa/two_pointers/questions/sliding_window/438-find-all-anagrams-in-a-string.md", "dsa/two_pointers/questions/sliding_window/intro.md", "dsa/two_pointers/questions/two_pointers/167-two-sum-ii-input-array-is-sorted.md", "dsa/two_pointers/questions/two_pointers/26-remove-duplicates-from-sorted-array.md", "dsa/two_pointers/questions/two_pointers/intro.md", "dsa/two_pointers/sliding_window.md", "dsa/two_pointers/two_pointers.md", "influential/cove/cove.md", "influential/empirical_risk_minimization/01_intro.md", "influential/empirical_risk_minimization/02_concept.md", "influential/empirical_risk_minimization/03_bayes_optimal_classifier.md", "influential/gaussian_mixture_models/01_intro.md", "influential/gaussian_mixture_models/02_concept.md", "influential/gaussian_mixture_models/03_implementation.ipynb", "influential/generative_pretrained_transformer/01_intro.md", "influential/generative_pretrained_transformer/02_notations.md", "influential/generative_pretrained_transformer/03_concept.md", "influential/generative_pretrained_transformer/04_implementation.ipynb", "influential/generative_pretrained_transformer/05_adder.ipynb", "influential/kmeans_clustering/01_intro.md", "influential/kmeans_clustering/02_concept.md", "influential/kmeans_clustering/03_implementation.ipynb", "influential/kmeans_clustering/04_image_segmentation.ipynb", "influential/kmeans_clustering/05_conceptual_questions.md", "influential/learning_theory/01_intro.md", "influential/learning_theory/02_concept.md", "influential/linear_regression/01_intro.md", "influential/linear_regression/02_concept.md", "influential/linear_regression/03_implementation.ipynb", "influential/low_rank_adaptation/01_intro.md", "influential/low_rank_adaptation/02_concept.md", "influential/low_rank_adaptation/03_implementation.ipynb", "influential/naive_bayes/01_intro.md", "influential/naive_bayes/02_concept.md", "influential/naive_bayes/03_implementation.ipynb", "influential/naive_bayes/04_example_penguins.ipynb", "influential/naive_bayes/05_application_mnist.ipynb", "intro.md", "linear_algebra/01_preliminaries/01-fields.md", "linear_algebra/01_preliminaries/02-systems-of-linear-equations.md", "linear_algebra/01_preliminaries/intro.md", "linear_algebra/02_vectors/01-vector-definition.md", "linear_algebra/02_vectors/02-vector-operation.md", "linear_algebra/02_vectors/03-vector-norm.md", "linear_algebra/02_vectors/04-vector-products.md", "linear_algebra/02_vectors/intro.md", "notations/machine_learning.md", "operations/distributed/01_notations.md", "operations/distributed/02_basics.md", "operations/distributed/03_how_to_setup_slurm_in_aws.md", "operations/distributed/04_ablation.md", "operations/distributed/intro.md", "operations/machine_learning_lifecycle/00_intro.md", "operations/machine_learning_lifecycle/010_continuous_integration_deployment_learning_and_training.md", "operations/machine_learning_lifecycle/01_problem_formulation.md", "operations/machine_learning_lifecycle/02_project_scoping.md", "operations/machine_learning_lifecycle/03_dataops_pipeline/031_data_source_and_format.md", "operations/machine_learning_lifecycle/03_dataops_pipeline/032_data_model_and_storage.md", "operations/machine_learning_lifecycle/03_dataops_pipeline/033_etl.md", "operations/machine_learning_lifecycle/03_dataops_pipeline/03_dataops_pipeline.md", "operations/machine_learning_lifecycle/04_mlops_data_pipeline.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/051_model_selection.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/052_metric_selection.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/053_experiment_tracking.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/054_model_testing.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/05_ml_training_pipeline.md", "operations/machine_learning_lifecycle/06_model_evaluation.md", "operations/machine_learning_lifecycle/07_model_validation_registry_and_pushing_model_to_production.md", "operations/machine_learning_lifecycle/08_model_deployment_and_serving.md", "operations/machine_learning_lifecycle/09_model_monitoring.md", "operations/profiling/01_synchronize.ipynb", "operations/profiling/02_timeit.ipynb", "operations/profiling/03_time_profiler.ipynb", "operations/profiling/04_small_gpt_profile.ipynb", "operations/profiling/05_memory_leak.ipynb", "operations/profiling/intro.md", "playbook/how_to_inspect_function_and_class_signatures.ipynb", "playbook/training/how_to_calculate_flops_in_transformer_based_models.ipynb", "playbook/training/how_to_finetune_decoder_with_cross_attention.ipynb", "playbook/training/how_to_finetune_decoder_with_last_token_pooling.ipynb", "playbook/training/how_to_teacher_student_knowledge_distillation.ipynb", "playbook/training/intro.md", "playbook/training/why_cosine_annealing_warmup_stabilize_training.md", "playbook/why_softmax_preserves_order_translation_invariant_not_invariant_scaling.md", "probability_theory/01_mathematical_preliminaries/01_combinatorics.md", "probability_theory/01_mathematical_preliminaries/02_calculus.md", "probability_theory/01_mathematical_preliminaries/03_contours.ipynb", "probability_theory/01_mathematical_preliminaries/exercises.ipynb", "probability_theory/01_mathematical_preliminaries/intro.md", "probability_theory/02_probability/0202_probability_space.md", "probability_theory/02_probability/0203_probability_axioms.md", "probability_theory/02_probability/0204_conditional_probability.md", "probability_theory/02_probability/0205_independence.md", "probability_theory/02_probability/0206_bayes_theorem.md", "probability_theory/02_probability/intro.md", "probability_theory/02_probability/summary.md", "probability_theory/03_discrete_random_variables/0301_random_variables.md", "probability_theory/03_discrete_random_variables/0302_discrete_random_variables.md", "probability_theory/03_discrete_random_variables/0303_probability_mass_function.md", "probability_theory/03_discrete_random_variables/0304_cumulative_distribution_function.md", "probability_theory/03_discrete_random_variables/0305_expectation.md", "probability_theory/03_discrete_random_variables/0306_moments_and_variance.md", "probability_theory/03_discrete_random_variables/bernoulli/0308_bernoulli_distribution_application.ipynb", "probability_theory/03_discrete_random_variables/bernoulli/0308_bernoulli_distribution_concept.md", "probability_theory/03_discrete_random_variables/bernoulli/intro.md", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_application.ipynb", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_concept.md", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_implementation.ipynb", "probability_theory/03_discrete_random_variables/binomial/intro.md", "probability_theory/03_discrete_random_variables/exercises.md", "probability_theory/03_discrete_random_variables/geometric/0310_geometric_distribution_concept.md", "probability_theory/03_discrete_random_variables/geometric/intro.md", "probability_theory/03_discrete_random_variables/iid.md", "probability_theory/03_discrete_random_variables/intro.md", "probability_theory/03_discrete_random_variables/poisson/0311_poisson_distribution_concept.md", "probability_theory/03_discrete_random_variables/poisson/0311_poisson_distribution_implementation.ipynb", "probability_theory/03_discrete_random_variables/poisson/intro.md", "probability_theory/03_discrete_random_variables/summary.md", "probability_theory/03_discrete_random_variables/uniform/0307_discrete_uniform_distribution_application.ipynb", "probability_theory/03_discrete_random_variables/uniform/0307_discrete_uniform_distribution_concept.md", "probability_theory/03_discrete_random_variables/uniform/intro.md", "probability_theory/04_continuous_random_variables/0401_continuous_random_variables.md", "probability_theory/04_continuous_random_variables/0402_probability_density_function.md", "probability_theory/04_continuous_random_variables/0403_expectation.md", "probability_theory/04_continuous_random_variables/0404_moments_and_variance.md", "probability_theory/04_continuous_random_variables/0405_cumulative_distribution_function.md", "probability_theory/04_continuous_random_variables/0406_mean_median_mode.md", "probability_theory/04_continuous_random_variables/0407_continuous_uniform_distribution.md", "probability_theory/04_continuous_random_variables/0408_exponential_distribution.md", "probability_theory/04_continuous_random_variables/0409_gaussian_distribution.md", "probability_theory/04_continuous_random_variables/0410_skewness_and_kurtosis.md", "probability_theory/04_continuous_random_variables/0411_convolve_and_sum_of_random_variables.md", "probability_theory/04_continuous_random_variables/0412_functions_of_random_variables.md", "probability_theory/04_continuous_random_variables/from_discrete_to_continuous.md", "probability_theory/04_continuous_random_variables/intro.md", "probability_theory/05_joint_distributions/0501_joint_pmf_pdf/concept.md", "probability_theory/05_joint_distributions/0501_joint_pmf_pdf/intro.md", "probability_theory/05_joint_distributions/0502_joint_expectation_and_correlation/concept.md", "probability_theory/05_joint_distributions/0502_joint_expectation_and_correlation/intro.md", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/application.md", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/concept.md", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/intro.md", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/concept.md", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/exercises.md", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/intro.md", "probability_theory/05_joint_distributions/0505_sum_of_random_variables/concept.md", "probability_theory/05_joint_distributions/0505_sum_of_random_variables/intro.md", "probability_theory/05_joint_distributions/0506_random_vectors/concept.md", "probability_theory/05_joint_distributions/0506_random_vectors/intro.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/application_transformation.ipynb", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/concept.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/eigendecomposition.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/geometry_of_multivariate_gaussian.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/intro.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/psd.md", "probability_theory/05_joint_distributions/from_single_variable_to_joint_distributions.md", "probability_theory/05_joint_distributions/intro.md", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/characteristic_function.md", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/intro.md", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/moment_generating_function.md", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/moment_generating_function_application_sum_of_rv.md", "probability_theory/06_sample_statistics/0602_probability_inequalities/application.md", "probability_theory/06_sample_statistics/0602_probability_inequalities/concept.md", "probability_theory/06_sample_statistics/0602_probability_inequalities/intro.md", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/application.md", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/concept.md", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/convergence.ipynb", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/intro.md", "probability_theory/06_sample_statistics/intro.md", "probability_theory/08_estimation_theory/intro.md", "probability_theory/08_estimation_theory/maximum_likelihood_estimation/concept.md", "probability_theory/08_estimation_theory/maximum_likelihood_estimation/intro.md", "software_engineering/concurrency_parallelism_asynchronous/generator_yield.md", "software_engineering/concurrency_parallelism_asynchronous/insights/locks_for_thread_safety.md", "software_engineering/concurrency_parallelism_asynchronous/intro.md", "software_engineering/concurrency_parallelism_asynchronous/overview.md", "software_engineering/config_management/01-pydra.md", "software_engineering/config_management/02-state.md", "software_engineering/config_management/concept.md", "software_engineering/config_management/intro.md", "software_engineering/design_patterns/dependency_inversion_principle.md", "software_engineering/design_patterns/factory_method.md", "software_engineering/design_patterns/god_object_pattern.md", "software_engineering/design_patterns/intro.md", "software_engineering/design_patterns/named_constructor.md", "software_engineering/design_patterns/registry.ipynb", "software_engineering/design_patterns/singleton.md", "software_engineering/design_patterns/strategy.md", "software_engineering/python/decorator.ipynb", "software_engineering/python/generators_over_lists.ipynb", "software_engineering/python/gil.ipynb", "software_engineering/python/intro.md", "software_engineering/python/is_vs_equality.ipynb", "software_engineering/python/iterator_protocol.ipynb", "software_engineering/python/late_binding_closures.ipynb", "software_engineering/python/mutable_default.ipynb", "software_engineering/python/new_vs_init.ipynb", "software_engineering/python/pydantic.ipynb", "software_engineering/python/set_vs_list.ipynb"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 41, 43, 44, 46, 47, 48, 50, 54, 56, 57, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 184, 190, 191, 193, 198, 200, 201, 204, 206, 207, 210, 213, 214, 217, 218, 219, 221, 222, 223, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238], "0": [2, 6, 7, 8, 11, 16, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 41, 43, 44, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 97, 98, 101, 102, 103, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 133, 134, 136, 137, 139, 140, 143, 144, 146, 147, 148, 150, 151, 155, 156, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 174, 176, 178, 180, 181, 184, 186, 188, 190, 191, 192, 193, 195, 200, 201, 203, 204, 206, 207, 210, 211, 213, 214, 216, 217, 218, 221, 222, 226, 228, 229, 230, 231, 234, 235, 238, 239], "00": [54, 58, 59, 62, 75, 77, 90, 112, 113, 114, 216, 217, 238], "000": [43, 58, 59, 63, 66, 71, 76, 77, 87, 97, 115, 203, 211, 213, 214, 230], "0000": [58, 63, 76], "000000": 76, "00000001": [174, 217], "00000002": 174, "000001": 217, "0000212": 76, "00002296180803007320": 59, "000022962": 59, "0000230073928833": 58, "000056": 112, "00005645197712961995": 112, "00007591251522123026": 112, "000076": 112, "0000e": 58, "0001": [63, 66, 68], "000108": 112, "00010837518017815013": 112, "000117": 112, "00011720387667794871": 112, "00012318090522739773": 146, "00013780312900865102": 112, "000138": 112, "00014655353377531386": 112, "000147": 112, "00015573308791388857": 112, "000156": 112, "0001934": 76, "0002": 76, "000201": 112, "00020125986010833822": 112, "00025268062760848447": 112, "000253": 112, "000278": 112, "0002783071457913188": 112, "00028567627457812104": 123, "0002963292387221365": 123, "0003": [76, 111, 180, 217], "0003337215379814711": 112, "0003956739992645453": 111, "0006117052461950424": 112, "000612": 112, "0006176728557486812": 118, "0006335017983123325": 146, "00066589243287212298": 59, "000686556815682806": 112, "000687": 112, "000773": 112, "000773164099660496": 112, "000786432": 148, "0008809659262803036": 112, "000881": 112, "000e": 148, "000u": [113, 114], "001": [53, 59, 68, 77, 112, 113, 114, 116, 124, 211, 213, 217, 226, 230], "0010": 63, "001036": 112, "0010361814617577633": 112, "0010535790334329838": 112, "001054": 112, "00117851130197757937": 59, "001241": 76, "001250000": 59, "001253137": 59, "00125948180464969628": 59, "00130882305771417282": 59, "0013218201389535288": 112, "001322": 112, "00135982073305105332": 59, "001435": 112, "001435256951747305": 112, "001474": 112, "0014744814187987805": 112, "00148872833543853430": 59, "0015": 180, "001610": 112, "0016100557130809725": 112, "00166297526309434830": 59, "001767767": 59, "00176955": 180, "001776673": 59, "00191741247211842623": 59, "002": [124, 213], "002163735205972857": 112, "002164": 112, "0022265049091528": 112, "002227": 112, "0028": 124, "002828659192464365": 146, "002m": 114, "003": [59, 213], "0032607856453568743": 112, "003261": 112, "00368": 120, "0037": 58, "003e": 148, "004": [59, 119], "0040": 58, "0042": 124, "0047": 124, "0048": [58, 120], "005": [59, 213], "0052": 76, "0053": 124, "005505024000000005": 148, "00635da5926ac5242": 90, "007": 59, "007358": 112, "007358246850183679": 112, "0079": 120, "008": [53, 59, 213], "009": [59, 213], "0093": 124, "01": [3, 53, 54, 58, 59, 66, 69, 71, 72, 77, 82, 112, 113, 114, 120, 124, 148, 159, 180, 190, 203, 217, 238], "010": [59, 213], "0100": 58, "0105": 59, "0106": 124, "010800335098500296": 146, "011": [53, 59], "01100100": 63, "0111": 124, "01113741": 75, "011485": 180, "0117": [120, 124], "0117797851562": 58, "0119": 58, "012": 59, "0121": 124, "0123": 120, "013": 59, "01326592e": 148, "0133": 76, "0134": 58, "01348": 118, "0139": 58, "014": [59, 231], "015": [59, 174, 213], "016": [58, 59, 203], "017": 76, "0176": 124, "018": [53, 59], "0183": 155, "019": 59, "01989888e": 148, "01_demo_start_mast": 89, "01_demo_start_work": 89, "01t00": 238, "02": [53, 54, 58, 59, 72, 83, 112, 113, 114, 119, 120, 148, 180], "020": [1, 10, 59, 76, 230], "0200": 58, "0202": 124, "02031558": 75, "02051282": 75, "020m": 114, "021": [59, 231], "0213": [58, 124], "021837805972314456": 72, "021837813003862862": 72, "021838": 72, "021u": 114, "022": 59, "0220": 120, "022951": 72, "023": 59, "0230": 58, "02310": 59, "02311": 118, "0234": 124, "0237": [120, 124], "023u": 114, "024": 59, "0240000000000006e": 148, "02400000e": 148, "024319": 72, "025": 59, "02531": 121, "026": 59, "0261": 124, "026424115199999983": 148, "026965": 72, "027": 59, "027700": 72, "028": 59, "0287": 120, "029": 59, "0291": 58, "029624": 120, "02978723": 62, "02cc9a3a21eecdc77": 90, "02e": 148, "03": [3, 54, 59, 76, 89, 112, 113, 114, 120, 148, 180, 230, 239], "030": 59, "0300": 58, "03001556": 69, "0302": 58, "030300": 72, "030542": 72, "0307_discrete_uniform_distribut": 158, "031": [59, 76], "031093": 120, "0311": 76, "0312": 120, "0317": 124, "03181818": 75, "032": 59, "0320": 58, "0321": 124, "03265": [0, 1, 55, 57, 123], "032m": 114, "033": 59, "033271": 120, "03333333333333333": 75, "034": 59, "03400": 0, "0344": 120, "03456107231520094": 146, "035": 59, "036": 59, "0362": 124, "0365": 120, "0366": 155, "0369": 120, "037": 59, "0376": 124, "03762": 0, "038": 59, "0385": 58, "038522": 120, "0387": 58, "0387310738": 0, "039": [59, 112], "0397": 124, "0398": 58, "03983": [0, 1, 123], "04": [54, 59, 63, 69, 75, 91, 113, 114, 120, 146, 148, 230], "040": [59, 230], "0400": 58, "04075968": 75, "040u": 114, "041": [59, 112, 230], "042": [59, 112, 230], "042384711361475": 118, "042m": 114, "042u": 114, "043": [59, 112], "0431": 59, "0432": 124, "044": [59, 112], "044715": [56, 58], "045": [59, 112], "04554": 76, "046": [59, 112], "04615385": 62, "0466": 124, "047": 59, "0473": 0, "047m": 114, "048": 59, "0488": 76, "048m": 114, "049": 59, "05": [0, 30, 54, 58, 59, 62, 66, 68, 75, 76, 89, 90, 91, 111, 112, 113, 114, 115, 119, 120, 124, 146, 148, 156, 174, 217], "050": 59, "0500": [58, 69], "0504aa": [143, 148, 159, 174], "050m": 114, "051": 59, "05101": [0, 1, 55, 57], "0513": 124, "05137": 0, "052": 59, "05245375": 69, "053": 59, "054": 59, "0549": 76, "054911": 76, "054e": 148, "055": 59, "055036514621123e": 146, "05541": 76, "05579": 76, "0558": 124, "056": 59, "057": [53, 59], "0576": 58, "057m": 114, "058": [53, 59, 120], "0580": 58, "059": [58, 59], "0596": 58, "05t07": 90, "06": [54, 59, 72, 112, 114, 120, 146, 148, 159, 174, 180, 217], "060": 59, "0600": 58, "0605": 58, "061": 59, "0611e": [58, 124], "061714": 76, "061u": 114, "062": 59, "0623": 58, "0625": 66, "0629": 58, "062u": 114, "063": 59, "0631": 59, "063954498667164e": 146, "064": 59, "0642": [58, 124], "064411": 72, "06444215": 75, "064466": 72, "0648": 69, "065": 59, "065888": 72, "066": [53, 59], "06666667": 127, "067": 59, "0671": 69, "0672": 58, "0674": 120, "0677": 58, "068": 59, "069": 59, "0694": 124, "0695": 124, "0699": 58, "06x": 231, "07": [54, 59, 72, 76, 111, 112, 114, 115, 119, 120, 128, 146, 148, 211], "070": [59, 112], "0709589389998655": 112, "070959": 112, "070m": 114, "071": [59, 112], "07112360400060425": 112, "071131": 112, "07113105599910341": 112, "07117068199986534": 112, "071171": 112, "07128997600011644": 112, "0713498349996371": 112, "071350": 112, "07184": 59, "072": [59, 76, 112, 231], "072292": 112, "07229203399947437": 112, "07239872597": 69, "0725": 124, "07290069700047752": 112, "073": [59, 112], "07313682499989227": 112, "073137": 112, "0732": 120, "07369880799979": 112, "073699": 112, "07374182e": 148, "07376415900034772": 112, "0737714920005601": 112, "07379378780005937": 112, "073794": 112, "0738": 112, "07382289199995284": 112, "073823": 112, "07382382700052403": 112, "073859": 112, "07385925299968221": 112, "074": 59, "074113": 112, "07411301600022853": 112, "07425473500006774": 112, "074255": 112, "07425991700074519": 112, "0744": 58, "07448": 59, "074693272212485": 118, "075": [59, 112, 231], "0750": 124, "075171": 112, "07517127899973275": 112, "0752": 124, "0756": 58, "0759": 76, "076": 59, "077": [59, 112], "0770235424421242": 112, "0773": 124, "0774": 58, "077u": 114, "078": [59, 112], "07841499799997109": 112, "078464": 112, "07846403200073837": 112, "07897": 59, "079": [59, 112], "0791": 58, "079124": 112, "07912403600003018": 112, "08": [54, 58, 59, 63, 69, 75, 76, 83, 91, 111, 112, 113, 114, 115, 143, 146, 170, 174, 217], "080": 59, "080725": 72, "081": 59, "081857": 76, "082": 59, "0827": 58, "082m": 114, "083": 59, "083u": 114, "084": 59, "085": 59, "086": 59, "0861": 124, "087": 59, "08730": 0, "0876": 58, "087u": 114, "088": 59, "0880803839999999": 148, "0881": 124, "089": 59, "08d41f68bf12ca54b": 90, "08it": 59, "09": [54, 58, 59, 69, 75, 111, 112, 114, 119, 124, 146, 217, 231], "090": 59, "09015931908313288": 146, "0904": 77, "0909": 77, "091": 59, "0915": 59, "092": 59, "0927": 58, "093": 59, "09317": 76, "0935": 124, "093519": 112, "0935192509996341": 112, "0937": 76, "093725": 76, "0938": 58, "094": 59, "095": 59, "0958": 58, "095999999999997e": 148, "096": 59, "09600000e": 148, "096400": 72, "0967": 77, "09685": [0, 70, 71], "097": 59, "0974": 77, "0975": 77, "0978": 58, "098": [59, 238], "0986": [58, 77], "0987": [58, 77], "0987654321": 238, "099": 59, "09903": 59, "0992": 77, "0993": 77, "0a0": 114, "0b3": 100, "0d": 80, "0d3": 59, "0e": 217, "0m": 114, "0mb": 77, "0mnote": 114, "0pt": 30, "0x": 237, "0x102258670": 222, "0x1023d53a0": 222, "0x1023d5700": 222, "0x1023d58b0": 222, "0x1023d5b80": 222, "0x104d06270": 117, "0x104d1ab00": 117, "0x1050cbf70": 117, "0x1050cf3a0": 117, "0x1073469d0": 117, "0x1073610d0": 117, "0x1075ee3a0": 117, "0x107dfab80": 237, "0x1092e4250": 117, "0x1092e4e20": 117, "0x10c214040": 237, "0x10c214310": 237, "0x110569740": 230, "0x1181f8e50": 235, "0x1181f8ee0": 235, "0x1181f8f70": 235, "0x118202040": 235, "0x1182020d0": 235, "0x1463d6d30": 117, "0x1463d6dc0": 117, "0x1463d6e50": 117, "0x1463d6ee0": 117, "0x1463d6f70": 117, "0x1463dd040": 117, "0x1463dd0d0": 117, "0x1463dd160": 117, "0x1463dd1f0": 117, "0x1463dd280": 117, "0x1463dd310": 117, "0x1463dd430": 117, "0x1463dd4c0": 117, "0x1463dd550": 117, "0x1463dd5e0": 117, "0x1463dd700": 117, "0x1463dd820": 117, "0x1463dd8b0": 117, "0x1463dd9d0": 117, "0x1463dda60": 117, "0x1463ddaf0": 117, "0x1463ddb80": 117, "0x1463ddc10": 117, "0x1463ddca0": 117, "0x1463ddd30": 117, "0x1463dddc0": 117, "0x1463dde50": 117, "0x1463ddee0": 117, "0x1463ddf70": 117, "0x1463e0040": 117, "0x1463e00d0": 117, "0x1463e0160": 117, "0x1463e01f0": 117, "0x1463e0280": 117, "0x1463e0310": 117, "0x1463e03a0": 117, "0x1463e0430": 117, "0x1463e04c0": 117, "0x1463e0550": 117, "0x1463e05e0": 117, "0x1463e0670": 117, "0x1463e0700": 117, "0x1463e0790": 117, "0x1463e0820": 117, "0x1463e08b0": 117, "0x1463e0940": 117, "0x1463e09d0": 117, "0x1463e0a60": 117, "0x1463e0af0": 117, "0x1463e0b80": 117, "0x1463e0c10": 117, "0x1463e0ca0": 117, "0x1463e0d30": 117, "0x1463e0dc0": 117, "0x1463e0e50": 117, "0x1463e0ee0": 117, "0x1463e0f70": 117, "0x1463e4040": 117, "0x1463e40d0": 117, "0x1463e4160": 117, "0x1463e41f0": 117, "0x1463e4280": 117, "0x14b2a79d0": 117, "0x14b2a7a60": 117, "0x14b2a7af0": 117, "0x14c9e6940": 117, "0x14c9e71f0": 117, "0x14c9e7280": 117, "0x14c9e7310": 117, "0x14c9e73a0": 117, "0x15d0ca9a0": 59, "0x15d0caaf0": 59, "0x15d2b0be0": 59, "0x294a745e0": 117, "0x29a6b1430": 63, "0x29b3b2040": 117, "0x29b3b20d0": 117, "0x29b3b2160": 117, "0x29b3b21f0": 117, "0x29b3b2280": 117, "0x29b3b29d0": 117, "0x29b3b2a60": 117, "0x29b3b2af0": 117, "0x29b3b2b80": 117, "0x29b3b2c10": 117, "0x29b3b2ca0": 117, "0x29b3b2d30": 117, "0x29b3b2dc0": 117, "0x29b3b2e50": 117, "0x29b3b40d0": 117, "0x29b3b4160": 117, "0x29b3b41f0": 117, "0x29b3b4280": 117, "0x29b3b4310": 117, "0x29b3b43a0": 117, "0x29b3b4430": 117, "0x29b3b44c0": 117, "0x29b3b4550": 117, "0x29b3b4670": 117, "0x29b3b4700": 117, "0x29b3b4790": 117, "0x29b3b4820": 117, "0x29b3b48b0": 117, "0x29b3b4940": 117, "0x29b3b49d0": 117, "0x29b3b4a60": 117, "0x29b3b4af0": 117, "0x29b3b4b80": 117, "0x29b3b4ca0": 117, "0x29b3b4dc0": 117, "0x29b3b4e50": 117, "0x29b3b4ee0": 117, "0x29b3b4f70": 117, "0x29b3ebb80": 117, "0x29b3ebc10": 117, "0x29b3ebca0": 117, "0x29b3ebd30": 117, "0x29b3ebdc0": 117, "0x29b3ebf70": 117, "0x29b3ed040": 117, "0x29b3ed0d0": 117, "0x29b3ed160": 117, "0x29b3ed1f0": 117, "0x29b3ed280": 117, "0x29b3ed310": 117, "0x29b3ed3a0": 117, "0x29b3ed5e0": 117, "0x29b3ed670": 117, "0x29b3ed700": 117, "0x29b3edb80": 117, "0x29b3edc10": 117, "0x29b3edca0": 117, "0x29b3edd30": 117, "0x29b3edee0": 117, "0x29b3edf70": 117, "0x29b3ef040": 117, "0x29b3ef0d0": 117, "0x29b3ef160": 117, "0x29b3ef1f0": 117, "0x29b3ef280": 117, "0x29b3ef310": 117, "0x29b3ef3a0": 117, "0x29b3ef430": 117, "0x29b3ef4c0": 117, "0x29b3ef550": 117, "0x29b3ef5e0": 117, "0x29b3ef670": 117, "0x29b3ef700": 117, "0x29b3ef790": 117, "0x29b3ef820": 117, "0x29b3ef940": 117, "0x29b3efa60": 117, "0x29b3efaf0": 117, "0x29b3efb80": 117, "0x29b3efc10": 117, "0x29b3efca0": 117, "0x29b3efe50": 117, "0x29b3efee0": 117, "0x29b3f2040": 117, "0x29b3f20d0": 117, "0x29b3f2160": 117, "0x29b79acf0": 117, "0x29b7a2e40": 117, "0x29b7a5190": 117, "0x29bbf71c0": 117, "0x29bcacdc0": 117, "0x29bcace50": 117, "0x29bcacee0": 117, "0x29bcacf70": 117, "0x29bcae040": 117, "0x29bcae0d0": 117, "0x29bcae160": 117, "0x29bcae1f0": 117, "0x29bcae280": 117, "0x29bcae310": 117, "0x29bcae3a0": 117, "0x29bcae430": 117, "0x29bcae4c0": 117, "0x29bcae550": 117, "0x29bcae5e0": 117, "0x29bcae670": 117, "0x29bcae700": 117, "0x29bcae790": 117, "0x29bcae820": 117, "0x29bcae8b0": 117, "0x29bcae940": 117, "0x29bcae9d0": 117, "0x29bcaea60": 117, "0x29bcaeaf0": 117, "0x29bcaeb80": 117, "0x29bcaec10": 117, "0x29bcaeca0": 117, "0x29bcaed30": 117, "0x29bcaedc0": 117, "0x29bcaee50": 117, "0x29bcaeee0": 117, "0x29bcaef70": 117, "0x29bcb0040": 117, "0x29bcb00d0": 117, "0x29bcb0160": 117, "0x29bcb01f0": 117, "0x29bcb0280": 117, "0x29bcb0310": 117, "0x29bcb03a0": 117, "0x29bcb0430": 117, "0x29bcb04c0": 117, "0x29bcb0550": 117, "0x29bcb05e0": 117, "0x29bcb0670": 117, "0x29bcb0700": 117, "0x29bcb0790": 117, "0x29bcb0820": 117, "0x29bcb08b0": 117, "0x29bcb0940": 117, "0x29bcb09d0": 117, "0x29bcb0a60": 117, "0x29bcb0af0": 117, "0x29bcb0b80": 117, "0x29bcb0c10": 117, "0x29bcb0ca0": 117, "0x29bcb0d30": 117, "0x29bcb0dc0": 117, "0x29bcb0e50": 117, "0x29bcb0ee0": 117, "0x29bcb0f70": 117, "0x29bcb3040": 117, "0x29bcb30d0": 117, "0x29bcb3160": 117, "0x29bcb31f0": 117, "0x29bcb3280": 117, "0x29bcb3310": 117, "0x29bcb33a0": 117, "0x29bcb3430": 117, "0x29bcb34c0": 117, "0x29bcb3550": 117, "0x29bcb35e0": 117, "0x29bcb3670": 117, "0x29bcb3700": 117, "0x29bcb3f70": 117, "0x29bcd5340": 117, "0x29bcd5580": 117, "0x29bcdfe50": 117, "0x29bce4160": 117, "0x29bce45e0": 117, "0x29bce4670": 117, "0x29bce4790": 117, "0x29bce4820": 117, "0x29bce48b0": 117, "0x29bce4940": 117, "0x29bce49d0": 117, "0x29bce4af0": 117, "0x29bce50a0": 117, "0x29bce59d0": 117, "0x29bce61f0": 117, "0x29bce6310": 117, "0x29bce64c0": 117, "0x29bce65e0": 117, "0x29bce6700": 117, "0x29bce6820": 117, "0x29bce68b0": 117, "0x29bcec040": 117, "0x29bcfb2f0": 117, "0x7fcb15f17d40": 76, "0x7fcb160914c0": 76, "0x7fcb18638680": 76, "1": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 17, 19, 20, 22, 23, 25, 26, 27, 30, 32, 34, 35, 36, 37, 41, 43, 44, 47, 50, 51, 52, 54, 55, 59, 60, 62, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 93, 96, 98, 103, 106, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 155, 156, 158, 159, 160, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 183, 186, 188, 190, 191, 192, 193, 195, 196, 198, 201, 203, 206, 207, 210, 211, 213, 214, 217, 218, 219, 221, 222, 226, 228, 229, 230, 231, 233, 234, 235, 237, 239], "10": [0, 1, 4, 5, 8, 10, 11, 16, 17, 19, 20, 27, 29, 30, 35, 43, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 71, 72, 74, 76, 77, 78, 83, 85, 87, 89, 90, 93, 95, 97, 98, 103, 106, 108, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 127, 130, 140, 143, 146, 147, 148, 150, 153, 155, 156, 158, 159, 168, 169, 170, 174, 178, 190, 203, 207, 211, 213, 214, 217, 222, 226, 230, 231, 234], "100": [3, 6, 8, 11, 17, 20, 29, 36, 53, 54, 58, 59, 62, 63, 68, 69, 72, 74, 76, 77, 80, 94, 95, 97, 98, 103, 113, 114, 115, 118, 119, 123, 124, 127, 143, 144, 146, 147, 148, 153, 156, 158, 159, 172, 180, 190, 207, 211, 213, 222, 226, 235, 238], "1000": [16, 43, 53, 54, 59, 62, 66, 68, 69, 72, 74, 97, 103, 118, 120, 123, 124, 128, 143, 144, 148, 156, 158, 159, 170, 171, 178, 207, 210, 217, 222, 231, 233], "10000": [27, 53, 56, 58, 59, 62, 66, 68, 69, 112, 113, 119, 128, 143, 146, 148, 156, 171, 172, 216], "100000": [17, 76, 115, 118, 156, 213, 216, 239], "1000000": [11, 17, 97, 128], "100000000": 230, "1000000000": 211, "1000000000000": 68, "10000001": [11, 17], "100000076": 230, "1000001": 17, "100001": 213, "100005": 213, "10001": 238, "10005": 120, "1001": 16, "100253": 114, "10029": 121, "100411": 213, "100417": 213, "100e": 148, "100m": 114, "100th": 104, "101": [5, 53, 59, 114, 143, 213], "1010": 63, "1012": 58, "101200": 120, "1016": [1, 10], "10165": [1, 124], "101694": 112, "1016942249998465": 112, "1017": 58, "102": [53, 59, 114], "1020": 114, "1022": 77, "1024": [57, 58, 72, 112, 115, 118, 120], "1024568889997681": 112, "102457": 112, "1029353620": 230, "102m": 114, "103": [53, 59, 118, 163], "1033807330004493": 112, "10368073345018": 118, "103785": 216, "1039": 58, "1039737": 75, "104": [11, 53, 59], "1043404643013807e": 146, "1044": [58, 77], "105": [59, 62, 114], "1053": 124, "1054": 58, "1055": [58, 59], "106": [59, 114, 163], "107": [53, 59, 114, 148, 213], "10737418240000003": 148, "10737418240000006": 148, "10782541": 75, "108": [11, 53, 59, 114], "1089": 124, "108m": 114, "109": 59, "1095": 114, "10_000": [112, 114], "10cm": 159, "10m": [11, 17], "10pt": [30, 32], "10x": 231, "11": [0, 1, 19, 27, 29, 43, 46, 52, 53, 54, 55, 57, 58, 59, 62, 66, 69, 72, 74, 75, 76, 77, 80, 83, 94, 111, 112, 113, 114, 118, 120, 123, 127, 146, 148, 150, 156, 159, 190, 191, 211, 213, 216], "110": [59, 62, 114], "1100": 69, "1102": 58, "1103": 58, "1109": 59, "111": [53, 59, 62, 83, 94, 113, 114, 213], "1111": [58, 63, 216], "111111": 216, "1119": 58, "112": [53, 59, 76, 114, 213, 226], "1124": 77, "1129": 213, "113": [59, 226], "11305118925439782": 72, "113055": 112, "1130551600008403": 112, "1134": 62, "113814": 120, "113m": 114, "114": [59, 77, 114, 226, 230], "114418": 68, "11495": [0, 48], "115": [59, 168, 226], "11503": 58, "1155": 58, "1159": 121, "115902369059602": 118, "116": [59, 231], "117": [53, 59, 62, 76, 169, 226], "11764": 121, "117m": [57, 58], "118": 59, "1184635700001309": 112, "118464": 112, "1185": 230, "1188": 124, "119": [59, 62, 114], "1190": 58, "1194": 213, "1197": 58, "11am": 216, "12": [0, 1, 6, 27, 32, 46, 48, 53, 54, 56, 57, 58, 59, 60, 61, 62, 66, 68, 72, 74, 77, 80, 82, 83, 84, 85, 87, 94, 112, 113, 114, 115, 118, 120, 123, 124, 127, 146, 147, 150, 155, 156, 160, 168, 170, 171, 172, 178, 190, 191, 200, 211, 213, 216, 217], "120": [59, 75, 94, 98, 103, 114, 128, 144, 148, 169, 170, 174, 190, 207, 211], "1200": 69, "1201": 230, "1205213247": 59, "1207959552": 118, "121": [59, 112, 113, 114, 213], "12108": 59, "1215": 230, "121601": 112, "1216013510002085": 112, "1217": 124, "121720": 112, "1217202600000746": 112, "121951": 76, "122": [58, 59, 62, 72, 114, 231], "122484": 58, "1229": 58, "123": [5, 59, 62, 76, 97, 112, 230, 238], "1232": 58, "12345": [5, 216, 238], "1234567890": 238, "1234567890abcdef0": 90, "12346": 216, "1235": 58, "123m": 114, "124": [52, 59, 76, 112, 120, 230], "12423": 59, "124337664": 118, "1244": 124, "124439808": 118, "124m": 118, "125": [59, 62, 68, 112, 114, 120, 141, 144, 147, 155, 160], "1253": 58, "1258": [124, 213], "12580756501576662": 72, "126": [59, 76, 114, 231], "1260": 58, "126720": 59, "127": [57, 59, 68, 180, 213], "1275": 120, "1277": 72, "1277818483567122": 72, "128": [53, 58, 59, 63, 72, 77, 94, 112, 114, 119, 213], "1280": [57, 58, 118], "1282120808": 83, "1285": 120, "1287": 58, "12871": 59, "129": [59, 62], "12932281": 75, "129371140494332e": 146, "1294382": 231, "12988579352203838": 146, "1298857935220386": 146, "12lhq": 118, "12x10": 53, "12xlarg": 90, "12\u00b2": 48, "13": [0, 1, 30, 43, 53, 54, 58, 59, 61, 62, 63, 72, 75, 76, 80, 87, 91, 94, 112, 114, 119, 146, 180, 211, 213], "130": [59, 68], "1300": 69, "1302": 58, "1306": 180, "131": [59, 112], "13116": 59, "1316": 69, "131894": 76, "132": [59, 72, 114, 118], "133": [59, 114, 120, 141, 142], "1332": 58, "1335": 113, "1337": 59, "133m": 114, "134": [59, 114, 120], "134256": 72, "1348": 124, "1349": [58, 124], "135": [59, 63, 72, 120, 178], "136": [58, 59, 72, 114, 142], "1365": 114, "1368": 58, "136885": 72, "1369": 69, "136m": 114, "137": [59, 114, 120, 144], "1370": 58, "137562": 63, "137634": 63, "1377": 113, "138": [59, 62, 72], "1381": [58, 69], "138639285402722e": 146, "139": [59, 68, 113, 213], "1390": 213, "139018": 72, "13901817798614502": 72, "13901824007066116": 72, "139018252491951": 72, "13901830174555815": 72, "1391": 120, "1393": 58, "139x_1": 68, "13px": 76, "14": [0, 1, 5, 7, 27, 46, 52, 53, 54, 55, 57, 59, 60, 61, 62, 66, 68, 72, 76, 94, 112, 114, 118, 123, 127, 146, 166, 181, 211, 213, 230, 231], "140": [59, 62, 68, 72, 144, 213], "1400": 69, "140641746878592": 216, "1409": 0, "14096916299559473": 72, "141": [59, 63, 68], "1411": 58, "1412": [0, 1, 55, 57], "1417883": 75, "1418": 124, "142": [59, 144], "1420": 114, "142215": 74, "1427": 58, "142m": 114, "143": [59, 68, 113, 147], "144": [48, 59, 63, 69, 114], "1448": 58, "145": [59, 114], "146": [59, 68], "1465": 213, "147": [59, 69], "1473": 113, "1474": 113, "1476": 124, "147786": 112, "14778646800004935": 112, "148": [59, 62, 69, 188], "14855": 58, "149": [59, 69, 76, 147, 151], "1492051968": 118, "1494": 72, "14960491599958914": 112, "149605": 112, "14986462840006426": 112, "149865": 112, "14995777100011765": 112, "149958": 112, "15": [0, 13, 19, 27, 29, 30, 43, 53, 54, 58, 59, 60, 61, 62, 63, 66, 68, 69, 72, 76, 83, 94, 98, 112, 114, 120, 127, 128, 146, 170, 184, 190, 213, 217, 230], "150": [5, 59, 62, 68, 69, 75, 103, 114], "1500": 69, "15016293000007863": 112, "15019284299978608": 112, "150193": 112, "15019696000035765": 112, "1502": 58, "150206": 112, "15020622800057026": 112, "15025364100001753": 112, "150254": 112, "1503": 121, "15043866700034414": 112, "15047101199979807": 112, "15051599399976112": 112, "150516": 112, "150528": [188, 196], "1506": 76, "150630": 76, "150662": 112, "1506624739995459": 112, "151": [59, 62, 68, 76, 114], "151141": 112, "15114111419989057": 112, "151170": 76, "151385": 112, "15138537599978008": 112, "15140369100026874": 112, "151430": 112, "15143018500020844": 112, "15144059900012508": 112, "151467": 112, "15146724180012824": 112, "151482": 112, "15148220399987622": 112, "15148427300027834": 112, "1515": 72, "151533": 114, "15155341100035002": 112, "15156354600003397": 112, "151564": 112, "15169357899958413": 112, "151694": 112, "1518": 58, "151936": 72, "152": [59, 76, 151, 155], "1525": 120, "153": [59, 188], "154": 59, "1542470366": 118, "1542m": [57, 58], "1543": 58, "1544": 213, "1547": 58, "154u": 114, "155": 59, "1551": 213, "1555": 58, "1558m": 118, "156": [59, 114], "1562": 213, "157": [59, 127, 213], "158": [59, 68], "158000": 120, "1587": 180, "159": [59, 68, 112, 114, 230], "1596": 58, "15mm": 30, "16": [0, 5, 27, 52, 53, 54, 57, 58, 59, 62, 63, 66, 69, 70, 71, 72, 75, 76, 82, 83, 84, 85, 91, 94, 103, 112, 114, 118, 119, 120, 146, 150, 174, 176, 183, 203, 213, 222, 230, 236], "160": [59, 68, 72], "1600": [57, 58, 69, 118], "1601": [120, 121], "160583": 72, "1606": 124, "1608": [0, 1, 123], "161": [59, 62, 112, 114], "1610612736": 118, "162": [59, 112, 114], "16246": 121, "1626": 58, "163": [59, 77, 112], "163336342344337e": 69, "1639": 58, "1639481738": 83, "163u": 114, "164": [5, 59, 155, 230], "164500": 72, "1649313251": 213, "165": 59, "1650744": 63, "166": [59, 62, 68, 114], "1662": 58, "1663501395": 169, "1666": 69, "167": [59, 62, 231], "1674": 58, "167u": 114, "168": 59, "169": 59, "16_14": 59, "16e9": 118, "16gb": 121, "17": [0, 5, 30, 43, 53, 54, 56, 58, 59, 62, 63, 66, 70, 71, 72, 76, 79, 83, 94, 112, 113, 114, 119, 146, 150, 170, 177, 213], "170": [59, 68, 76, 113], "1700": 69, "1703": 0, "1705": 58, "1706": 0, "170m": 114, "171": [59, 113, 118], "1711": [0, 1, 55, 57], "1715": 58, "172": [59, 73, 74, 76, 163, 174, 230], "1726049235": 83, "173": [59, 68, 113], "1730": 58, "173m": 114, "174": [59, 114, 137, 231], "1740": 58, "175": [59, 71, 114, 158], "1750": 58, "175000000000": 71, "1751": 124, "1756": 58, "175_000_000_000": 71, "175b": 71, "175cm": 158, "176": [59, 211], "1762": 58, "17687": 58, "1769472": 118, "177": 59, "17716740096": 118, "1775": 89, "17793": 59, "178": [59, 62, 76], "1784": 77, "1785": 120, "179": [59, 120, 143], "1797": 62, "179m": [113, 114], "17_21": 119, "17a": [60, 61, 68], "18": [0, 1, 5, 10, 43, 46, 53, 54, 59, 62, 66, 69, 72, 76, 77, 79, 83, 84, 85, 89, 94, 112, 114, 123, 124, 146, 165, 173, 174, 179, 200, 213, 231], "180": [53, 59, 73, 74, 83, 85, 103, 114, 124, 146, 158, 163, 164, 174], "1800": 69, "18000": 146, "1805": 77, "1806": 0, "180m": 114, "181": [59, 76, 114], "181376": 72, "1816": 58, "182": 59, "1824": 58, "183": [59, 69], "1832": 58, "1837010324217706e": 146, "184": [59, 114, 124, 164, 165], "18415520493576068": 146, "185": [59, 83, 165, 166], "1854": 58, "1857448230": 84, "1859": 58, "185m": 114, "186": [59, 76], "186992": 76, "186m": 114, "187": 59, "1870": [58, 76], "1874": 58, "1877": 58, "188": 59, "1882": 58, "1883946428808775e": 146, "189": [59, 62, 76], "1895": 213, "189m": 113, "19": [0, 30, 54, 59, 61, 62, 69, 72, 76, 80, 83, 84, 94, 112, 113, 114, 118, 146, 169, 182, 185, 213, 230, 231], "190": [59, 76, 230], "1900": 69, "1903": 48, "1908": [0, 1, 55, 57, 58, 123], "191": [59, 63], "1910": [69, 213], "1911": 48, "1915": 58, "192": [59, 72, 83, 113], "1920929e": 211, "1923": 124, "193": [59, 66, 76, 77, 84], "1930": 69, "1937": 58, "193m": 114, "194": [59, 76], "19474": 59, "195": [59, 76], "1951": 77, "196": [58, 59, 76, 166, 167], "1964": 48, "196406": 58, "1967": 124, "1969": 48, "197": [59, 76, 84, 114], "1970": [58, 98], "197674": 76, "1977": 53, "198": [58, 59, 76], "1980": 16, "1982": 143, "1988": 76, "198830": 76, "198m": 114, "199": [59, 141], "1990": 238, "1992": [53, 54, 58, 59, 62, 71, 75, 104, 128, 143, 156, 174, 217], "1997": [66, 73, 74, 82, 83], "1998": 77, "1999": [53, 238], "199m": 114, "19th": 10, "1_": 51, "1_000_000": [114, 118], "1_loss": 107, "1cm": [30, 32, 159], "1d": [53, 54, 58, 62, 63, 74, 80, 176, 191, 211], "1e": [54, 58, 59, 62, 75, 112, 114, 115, 119, 120, 124, 211, 230, 239], "1e6": 120, "1f": 170, "1f88c7c765d2532fd57d8ee719a751b3_mit18_05s14_reading5b": 0, "1introduct": [22, 23], "1j": 56, "1k": 61, "1m": [11, 17], "1n": [56, 80, 118], "1p": [56, 118], "1st": [53, 58, 66, 119, 133, 207], "1x7": 59, "1x7x18": 59, "2": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 17, 19, 20, 22, 26, 30, 32, 34, 36, 43, 44, 47, 49, 50, 51, 52, 54, 55, 59, 60, 62, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 93, 95, 97, 102, 106, 111, 112, 113, 114, 115, 116, 117, 120, 121, 125, 126, 127, 128, 130, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 155, 156, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 183, 186, 190, 191, 192, 193, 194, 195, 196, 198, 201, 203, 204, 206, 207, 210, 211, 213, 214, 217, 221, 226, 228, 229, 230, 231, 233, 234, 235, 237, 239], "20": [0, 5, 29, 30, 51, 53, 54, 57, 58, 59, 62, 63, 66, 68, 69, 72, 76, 80, 83, 85, 89, 90, 94, 98, 103, 112, 113, 114, 118, 119, 120, 124, 127, 128, 143, 146, 155, 156, 159, 169, 170, 174, 177, 180, 181, 190, 213, 216, 230, 231, 238], "200": [59, 62, 69, 76, 94, 95, 96, 103, 118, 123, 146, 148, 174, 190, 213, 231], "2000": [53, 58, 59, 69, 87, 119, 124, 143, 146, 148], "20000": [27, 111, 146], "200000": 216, "2001": [60, 61, 68], "2003": [53, 58, 238], "2005": 213, "2006": [1, 124], "2007": [0, 1, 10, 53, 68, 74, 124], "20077778": 143, "2008": 94, "2009": 77, "200u": 114, "201": [59, 114, 141, 167, 168], "2010": 58, "2012": [1, 10, 66], "2013": [1, 10], "20132659199999992": 148, "2013265920000001": 148, "2014": [0, 1, 55, 57, 58, 59, 66, 76, 84, 140, 141, 142, 168, 169, 170, 173, 174, 198, 200, 201, 203, 204, 206], "2015": 121, "2016": [0, 1, 52, 53, 59, 60, 61, 63, 67, 68, 73, 74, 123, 124, 193, 194], "2017": [0, 1, 50, 51, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 71, 73, 74, 93, 95, 97, 98, 100], "2018": [0, 57, 68, 87], "2018fa": 74, "2019": [0, 1, 55, 56, 57, 58, 59, 71, 123, 146], "202": [53, 59, 62, 142], "2020": [0, 52, 53, 57, 58, 76, 79, 80, 84], "2021": [0, 1, 49, 53, 55, 57, 68, 70, 71, 73, 74, 76, 121, 123, 124, 130, 133, 141, 142, 143, 144, 147, 151, 153, 155, 156, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 200, 201, 203, 204, 206, 207, 208, 210, 211], "2022": [0, 30, 50, 52, 53, 60, 61, 63, 67, 68, 73, 74, 76, 87, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 118, 143, 155, 217, 237], "2023": [0, 1, 27, 48, 49, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 87, 114, 123, 124, 211], "20230310": [112, 114], "2024": [58, 59, 62, 72, 89, 90, 91, 111, 112, 113, 114, 115, 119, 120, 121, 217, 231], "20240509_155331": 217, "2025": [54, 69, 75], "203": [59, 181], "20388": 58, "204": [59, 181], "2047": 58, "204m": 114, "205": [59, 62, 63, 114, 168, 169, 180], "205386853706048e": 146, "205k": 59, "206": [59, 77, 142, 213], "2061": 58, "206343": 63, "20647": 91, "206487": 63, "207": [59, 114, 191, 195], "2072": 58, "207k": 59, "208": 59, "2083": 121, "209": [59, 127, 213], "20_000_000": 231, "21": [0, 27, 52, 53, 54, 59, 60, 61, 62, 63, 66, 68, 72, 74, 76, 80, 83, 94, 112, 114, 118, 120, 132, 146, 190, 191, 213, 216], "210": [59, 62], "2100": 69, "2103": 58, "2106": [0, 1, 70, 71, 124], "211": [59, 169, 170], "21120": 58, "2118": 230, "212": [59, 62, 76], "212272604": 71, "2125": 124, "212600881152": 118, "212625": 120, "212800": 120, "213": [55, 57, 59, 66, 76, 114, 206, 213], "2139551385": 117, "214": [59, 76, 114], "215": [59, 62, 76, 112], "2154": 213, "215m": 114, "216": [59, 171, 213], "21621622": 75, "2168": 59, "216m": 114, "217": [59, 76, 112], "217m": 114, "218": [59, 77, 89, 112], "21832664599969576": 112, "218327": 112, "2188": 59, "219": [59, 112, 114, 207], "219012": 120, "22": [0, 1, 53, 54, 55, 57, 59, 61, 62, 68, 72, 73, 74, 75, 80, 83, 85, 94, 112, 114, 118, 137, 139, 146, 173, 190, 191, 211, 213, 231], "220": [59, 77, 171, 207], "2200": 69, "22008085299967206": 112, "2201": 120, "22015970299980836": 112, "220160": 112, "22016962399993645": 112, "22020937799970852": 112, "220236": 112, "22023602300032508": 112, "2203388449999693": 112, "220339": 112, "2204": 118, "2204785499998252": 112, "220479": 112, "22048294700016413": 112, "220491": 112, "22049137779995362": 112, "22057815300013317": 112, "22060177200000908": 112, "2206222049999269": 112, "22067614660008986": 112, "22077888900003018": 112, "22078104100000928": 112, "2207913634": 170, "220830": 112, "22083036900039588": 112, "22087210900008358": 112, "221": 59, "22108890900017286": 112, "221089": 120, "22120609100056754": 112, "221m": 114, "222": [59, 76, 114, 211], "222001509455": 69, "22200150945545": 69, "22234672700051306": 112, "222347": 112, "22247255000002042": 112, "222473": 112, "22247573399999965": 112, "222476": 112, "22253749899937247": 112, "22256395700060239": 112, "222564": 112, "22257933899982163": 112, "222611": 112, "22261103200016805": 112, "22269292600049084": 112, "222693": 112, "2227": [0, 58], "22273382500043226": 112, "222744": 112, "2227441450004335": 112, "22283626599983108": 112, "223": [1, 10, 59, 62, 170, 173], "22307": 58, "22369271400002616": 112, "223693": 112, "224": [59, 115, 188, 196, 217], "224073": 112, "22407326100073988": 112, "22419899699980306": 112, "224199": 112, "22421371400014323": 112, "22424623200004135": 112, "224320": 112, "2243202702000417": 112, "224344": 112, "22434405200001492": 112, "2243646639999497": 112, "224365": 112, "224382": 112, "22438234299988835": 112, "224439366000297": 112, "22444049899968377": 112, "22447669499979384": 112, "224477": 112, "22448583999994298": 112, "224486": 112, "2245766099995308": 112, "224577": 112, "225": [59, 211, 217], "225000": 76, "2252": [58, 69], "2255011379993448": 112, "226": [59, 69, 174], "2260": 58, "2264": 120, "2267": 124, "2267129073316": 77, "227": [59, 63, 69], "2275": 66, "227551": 120, "2279": 120, "228": [59, 69], "228008": 112, "22800831199947424": 112, "229": [59, 173, 217], "2291029060015717": 112, "229103": 112, "23": [0, 27, 29, 48, 54, 59, 61, 62, 72, 80, 85, 89, 94, 98, 112, 113, 114, 123, 139, 146, 148, 188, 191, 213], "230": [59, 174], "2300": 69, "2300073": 75, "2305": 58, "23063": 59, "2308809866": 84, "2309": [0, 48], "231": [59, 69, 72, 76, 114, 213], "2313": 69, "2314": 120, "231u": 114, "232": [59, 113], "2323": 58, "232_queue_using_stacksapop": 36, "233": [27, 59], "234": [27, 59, 69], "2341": 124, "234320807092859e": 146, "2345": 59, "234u": 114, "235": [59, 62], "235053": 76, "2353": 124, "235313": 76, "2359296": 118, "236": [59, 173], "2360064": 118, "23606797749979": 82, "236458": 76, "2365": 69, "237": [6, 59, 69, 80, 114], "23786125": 69, "238": [59, 63, 80], "239": [59, 69, 80, 114], "2399": [58, 120], "24": [0, 1, 54, 57, 58, 59, 62, 63, 72, 75, 94, 98, 112, 114, 118, 123, 124, 146, 174, 213, 230], "240": [59, 63, 76, 150], "2400": 69, "2401": 120, "2403": 58, "240309": 76, "2407": [58, 121], "241": [27, 55, 57, 59, 80], "24102564": 75, "2411": 69, "2415": 59, "242": [59, 69, 80, 113, 173], "2425508965889174": 118, "24291": 59, "243": [59, 80, 113], "2435": 58, "244": [59, 69, 114, 177], "2443": 58, "244672": 112, "24467239400019025": 112, "2447970040002474": 112, "244915": 112, "24491532199990615": 112, "24495568000020285": 112, "244956": 112, "244981": 112, "2449814139999944": 112, "245": [59, 77, 80], "24501344400050584": 112, "24505015699924115": 112, "24507564099985757": 112, "245076": 112, "245088": 112, "2450883880001129": 112, "2451": 0, "24528420900060155": 112, "24582058120031433": 112, "245821": 112, "2458e": 76, "246": [59, 62, 80], "247": [59, 69, 114], "2471": 58, "2476": 58, "248": [59, 72, 168], "248761": 112, "24876118500014854": 112, "249": [59, 169], "24n": 63, "24x": 231, "25": [0, 30, 53, 54, 57, 58, 59, 61, 62, 63, 66, 69, 72, 76, 83, 98, 103, 113, 114, 115, 118, 120, 123, 128, 136, 139, 140, 146, 174, 207, 213, 230, 236], "250": [53, 59, 62, 69, 75, 84, 118], "2500": 69, "2502265868963244e": 69, "250u": 114, "251": [59, 114, 120], "25135": 59, "2518": 58, "252": [59, 169], "2529": 69, "253": [59, 69, 153, 170], "254": [59, 114, 153], "2548": 69, "255": [59, 62, 63, 69, 77, 213], "2551": 58, "255440": 63, "255488": 63, "256": [59, 66, 115, 119, 217, 231, 233], "2561": 113, "256172436538177e": 146, "2562": 113, "256245": 211, "2563": 113, "257": [57, 58, 177, 179], "25709": 59, "2579": 58, "258": 69, "2586369978069964e": 146, "2588": 58, "259": [178, 231], "2594": 120, "25993": 59, "259m": 114, "259u": 114, "26": [0, 1, 20, 55, 57, 58, 59, 62, 72, 75, 83, 112, 113, 114, 115, 123, 128, 139, 146, 170, 176, 203, 213, 230], "260": 170, "2600": 69, "2603": 58, "2604": [58, 69], "2604872299998533": 112, "261": [69, 178, 230, 231], "26100": 71, "26145": 71, "2616": 58, "2618": 58, "26188341": 62, "261m": 114, "262": [58, 120, 121], "2621": 58, "263": 69, "2636": 58, "26387144": 75, "264": 62, "2643": 58, "265": [66, 114], "265m": 113, "266": [69, 179, 182], "2669": 58, "2675": 69, "2676506002282307e": 146, "267u": 114, "268": [77, 148], "26843545599999996": 148, "2685": 69, "268u": 114, "269": [69, 114], "2691": 124, "26camp": 0, "26creativ": 0, "26creativeasin": 0, "26linkcod": 0, "26tag": 0, "27": [0, 5, 29, 59, 62, 69, 72, 83, 113, 114, 118, 120, 146, 176, 213], "2700": [69, 76], "2702": 58, "270226": 59, "2705954031709139": 146, "2707": 58, "2711": 69, "272": 69, "272m": 114, "273": [62, 114], "274": 69, "2740": 58, "27496": 59, "274u": 114, "275": [62, 121, 182, 185, 213], "275124": 63, "2754": 69, "275508": 63, "275u": 114, "276": [114, 213], "27623280740364115": 146, "2764": 58, "277": 69, "2776829": 234, "278": [62, 113, 213], "278037351314524e": 146, "2784": 121, "2787": 69, "279": [90, 185], "2794": 58, "28": [0, 5, 53, 59, 61, 62, 77, 83, 91, 120, 146, 158, 203, 213], "280": [62, 69, 71, 187], "2800": 69, "2803": 58, "280302738926063": 72, "280u": 114, "2814": 58, "28156": 59, "2816": [59, 72], "2816445108714582": 72, "283": 69, "2837": 58, "284": 114, "2847": 58, "285": [69, 114], "28576": 59, "286": 187, "2860": 58, "2861": 58, "287": 113, "287084": 76, "288": [69, 114], "28887": 59, "2890644827": 59, "2899": [58, 120], "289u": 114, "28mb": 77, "29": [0, 53, 59, 61, 62, 83, 91, 112, 113, 114, 123, 146, 213, 231], "290": [58, 114], "2900": 69, "2907": 58, "291": [58, 69], "291648307200": 118, "292": [62, 69, 77], "292u": 114, "2931": 58, "2935": 58, "294": [69, 120], "2940": 120, "294118": 76, "2943": 58, "29448": 58, "29451963": 75, "29468": 69, "29500": [59, 89, 90, 91, 119], "2959": 58, "296": 69, "2961808030073203e": 59, "2966": 124, "297": 114, "2975": 58, "2979": 58, "2985": 58, "299": [59, 62, 69], "2993": 58, "2a": 16, "2b": 16, "2c": [16, 234], "2cm": [32, 159], "2d": [11, 54, 58, 62, 63, 69, 74, 76, 83, 84, 127, 128, 176, 180, 191, 207, 210], "2d3233": 128, "2e": [66, 120, 121], "2f": [63, 68, 69, 76, 118, 171, 178, 216, 230, 231], "2fa": 94, "2j": 56, "2k": 61, "2m": 66, "2mn": 68, "2mn\u00b2": 68, "2n": [16, 19, 30, 36, 48, 59, 80, 118], "2nd": [53, 58, 76, 115], "2nkd": 74, "2p": [118, 126], "2t": 118, "2x": [7, 80, 97, 137, 173], "2x2": 53, "2x_1": 7, "2x_2": 7, "2y": 80, "3": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 26, 27, 29, 30, 32, 34, 36, 43, 46, 52, 54, 55, 58, 59, 60, 62, 66, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 87, 88, 89, 91, 93, 103, 106, 112, 113, 114, 115, 117, 118, 119, 120, 121, 125, 126, 127, 128, 130, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 155, 156, 158, 159, 165, 166, 168, 170, 171, 172, 173, 174, 178, 180, 181, 182, 185, 186, 188, 190, 193, 194, 196, 198, 200, 201, 206, 207, 211, 213, 214, 217, 219, 221, 222, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239], "30": [0, 1, 3, 9, 29, 30, 32, 43, 53, 55, 57, 58, 59, 61, 62, 63, 64, 66, 69, 74, 75, 76, 77, 80, 97, 98, 103, 112, 113, 114, 118, 120, 123, 124, 128, 146, 150, 156, 171, 174, 213, 226, 230, 231, 238], "300": [53, 63, 69, 114, 118, 174, 231], "3000": [69, 124], "30000": [27, 115], "300000": 76, "3000285877644368": 72, "3006": 124, "300b": 118, "300e9": 118, "300m": 114, "301": [58, 77], "301029995": 211, "3017": 120, "301958": 58, "301966": 58, "30198988800000004": 148, "302": 69, "3024361499992665": 112, "30291978655031": 62, "303": [63, 120], "3032": 58, "304": [62, 69], "3053": 58, "305m": 114, "307": 69, "3072": [57, 58, 118], "307620": 76, "3077061068": 190, "308": [59, 62], "30833333": 75, "308m": 114, "308u": 114, "309": [59, 69, 75], "3095": 58, "3097": 59, "309715571000197": 112, "309716": 112, "309u": 114, "30d963e": [112, 114], "31": [0, 13, 27, 59, 62, 74, 80, 98, 118, 123, 146, 203, 213, 217], "310": 114, "3100": 69, "3103": 58, "311": 120, "3117": 58, "312": [69, 113, 114, 115, 118], "3124": 8, "3126": 58, "312e12": 118, "313": 62, "3132": 58, "3134690575704466": 118, "313600": 72, "314": [62, 69], "3146": 58, "315": [61, 76], "316": 69, "3161": 76, "3167": 58, "3169": 59, "316u": 114, "317617745567845e": 146, "318": [69, 113, 114, 115], "31884": [120, 121], "319450": 76, "3197": 58, "31m": 114, "31merror": 114, "32": [0, 19, 27, 30, 53, 55, 57, 58, 59, 61, 62, 63, 69, 72, 74, 76, 77, 80, 90, 91, 97, 113, 114, 118, 119, 120, 121, 123, 146, 170, 211, 213, 217], "320": [69, 97], "3200": 69, "32013901": 69, "321066": 112, "3210660050017395": 112, "322": [69, 113, 114, 115], "3223057644110276": 72, "323": 69, "3230": 128, "32348": 128, "3237": 58, "3237948": 63, "323m": 113, "324": 200, "32432432": 75, "3244176": 62, "32450061149613": 118, "325": [69, 75, 114, 200], "3250": 76, "32519": 59, "325785": 76, "326": [58, 200], "327": 69, "328": [74, 114], "3285": 58, "329": [69, 74], "32e9": 118, "33": [0, 5, 59, 62, 80, 114, 123, 146, 211, 213], "330": 71, "3300": 69, "3309": 59, "331": [69, 114], "3313": 77, "3315072216": 174, "3322": 124, "332666429276160": 120, "3327": 121, "3328": 58, "333": [69, 76], "33333333": 127, "333u": 114, "334": 62, "3340": 113, "33492": 59, "335": 69, "335m": 113, "336": 114, "3364": 58, "336676": 76, "337": [69, 76], "3370": 58, "338": 76, "338386": 76, "339": [69, 76, 115], "3390": 0, "3392": 58, "339256": 76, "339u": 114, "34": [0, 59, 61, 62, 76, 91, 98, 113, 114, 115, 120, 123, 146, 213, 216], "340": 76, "3400": [58, 69], "3406": 58, "340m": 113, "341": [69, 76], "3419": 58, "342": 76, "3422": 58, "343": [69, 76], "3439": 69, "344": [69, 76], "3440": 62, "3443": 58, "3450": 76, "345m": [57, 58, 113], "346": 69, "3475": 124, "348": [68, 69], "3488": 72, "348m": 113, "35": [0, 13, 53, 59, 61, 62, 94, 112, 114, 123, 146, 148, 210, 213], "350": 69, "3500": 69, "3504": 62, "350m": 118, "351": [62, 120], "352": 69, "3526": 58, "353": [62, 114], "3536": 69, "354": 69, "355": [69, 114], "3550": 76, "35534775": 62, "355853": 112, "3558534099993267": 112, "3559": 59, "35592011": 62, "356": 58, "357": 69, "3577977121694196e": 146, "358": [74, 112], "3581": 121, "358m": 114, "359": [69, 76, 112], "3596": 76, "3596197342614926": 72, "359649": 76, "3598617398414237e": 146, "36": [0, 57, 58, 59, 62, 68, 76, 91, 112, 114, 118, 123, 125, 133, 136, 137, 139, 146, 174, 213], "360": [112, 114], "3600": [69, 118], "36002": 59, "360465": 76, "3605": [58, 76], "36051": 58, "361": [69, 112, 114], "362": [62, 69, 112], "3623878656": 118, "363": 112, "363u": 114, "364": [69, 112], "365": [76, 112, 114, 128, 146], "3650": 76, "3659": 58, "366": [69, 112], "3665": 58, "36666667": 75, "367": 112, "3672": 124, "3689689390002968": 112, "368969": 112, "369": 69, "369m": 114, "37": [59, 62, 68, 75, 89, 114, 118, 120, 123, 146, 213], "3700": 69, "370565": 112, "37056508000114263": 112, "3706": 58, "370740459995136": 72, "370u": 114, "371": 69, "37148195211411106": 118, "372": [62, 69], "37216339": 62, "372800000000001e": 148, "37280000e": 148, "37286": 58, "373": [58, 59], "3730": 58, "3732": 120, "374": [53, 62, 69], "375": [62, 112], "3750": 76, "375972": 76, "376": [62, 69], "3761": 113, "376m": 114, "377": 112, "377m": 114, "378": [69, 112], "379": [59, 69, 112], "3791314968461": 118, "3792": 58, "37943855": 63, "379456": 120, "3797": 58, "38": [19, 27, 59, 62, 64, 68, 76, 77, 113, 114, 146, 213], "380": [59, 69], "3800": [69, 76], "381": [59, 120], "3811": 58, "382": 59, "3821": 58, "383": 59, "3831": 58, "384": [59, 63], "385": 59, "3854": 58, "38549307": 62, "3857": 58, "38597376": 118, "386": 59, "387": 111, "3870": 58, "388": 114, "389": [58, 111], "38918905": 75, "389420": 62, "389m": 114, "38cm": 159, "39": [59, 62, 64, 68, 75, 76, 112, 114, 146, 213], "3900": 69, "3901": 216, "390332": 62, "390419142823334e": 146, "390m": 114, "391492": 76, "391m": 114, "392": [59, 213], "3921": 58, "392cm": 159, "392m": 114, "39383808": 118, "394u": 114, "395": 59, "3950": 58, "395620": 112, "39562018000015087": 112, "3957": 59, "396": 59, "3960": 69, "3961": 69, "3962": 69, "3963": 69, "3964": 69, "3965": [69, 113], "3966": 69, "3967": 69, "3968": 69, "3969": 69, "397": [59, 114], "3971": 69, "3972": 69, "3973853284": 170, "3974": [69, 113], "3976": 69, "3978": 69, "3979669969222125": 120, "398": 53, "3980": 69, "398093": 76, "3983": 69, "398364459428767e": 146, "3985": 69, "3987": 58, "3988": 69, "399": 59, "3992": [69, 76], "3995": 69, "3999": 69, "3_1_5_special_discrete_distr": 143, "3cm": 159, "3d": [53, 54, 63, 76, 83, 84, 127, 180, 190], "3d0387310738": 0, "3d13ct5cvb80yfwjepws02": 0, "3d165953": 0, "3d2025": 0, "3dw": 0, "3dxm2": 0, "3e": [59, 123, 124, 217], "3f": [76, 124, 127, 190], "3fsubscriptionid": 0, "3n": [13, 19, 29, 43], "3rd": [1, 53, 55, 57, 58, 124, 228], "3x": 68, "3x1": 53, "3x2": 97, "3x4x2": 75, "4": [0, 1, 2, 5, 6, 11, 13, 16, 19, 20, 22, 23, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 49, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 96, 97, 98, 103, 106, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 126, 127, 128, 130, 133, 136, 137, 139, 140, 141, 142, 144, 146, 148, 150, 155, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 181, 185, 190, 194, 198, 206, 211, 213, 217, 221, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239], "40": [8, 30, 59, 62, 63, 66, 68, 76, 103, 113, 114, 118, 146, 213], "400": 69, "4000": [53, 69, 124], "40000": 27, "4003": 69, "4008": 69, "4013": 69, "4016": 58, "4016769020687333e": 146, "40178591009753": 72, "4018": 69, "4024": 69, "4025": 58, "4025641": 75, "4029074868": 85, "403": 62, "4031": 69, "4033": 69, "4037": 69, "4038": 69, "404": 94, "4046": 69, "4050": 76, "4054": 69, "4055": 69, "406": [58, 217], "4064": 69, "4066": 58, "4068": 69, "4071": 58, "4071274942": 62, "4071303748": 61, "4075": 69, "408": [59, 72], "4080": 69, "4082": 58, "4083204686": 190, "4086": 69, "4096": [57, 58, 71, 104], "4099": [58, 69], "409m": 114, "40e9": 118, "40gb": [57, 118], "41": [54, 59, 72, 74, 80, 83, 85, 113, 114, 146, 213], "410": [62, 112], "4100": 69, "41026743": 69, "4103": 58, "411": 112, "4112": 69, "4113": 120, "411400": 72, "411u": 114, "412": 62, "4127": 69, "412m": 113, "412u": 114, "413": 112, "4130": 58, "41369606": 62, "4137": 69, "414": [173, 174, 177, 179, 182, 185], "41418363219630583": 118, "4143": 58, "4144": 69, "4144910469995011": 112, "4156278679993193": 112, "415628": 112, "4161": 58, "4162": 69, "4164": 58, "418": [62, 71], "4181": 69, "4184": 58, "4185": 58, "418m": 114, "419": [62, 114], "4190616449996014": 112, "419062": 112, "419068941002479": 112, "419069": 112, "4192": 58, "4195425559992145": 112, "419543": 112, "419u": 114, "42": [1, 6, 8, 10, 30, 53, 54, 58, 59, 62, 63, 68, 72, 76, 83, 85, 94, 112, 113, 114, 115, 119, 120, 121, 146, 148, 159, 171, 190, 207, 211, 213, 237], "420": [114, 230], "4200": [69, 76], "4201": 76, "4203": 69, "4208": 58, "4210": 58, "4217562": 63, "4218": 58, "422": 69, "4225": 69, "4226": 69, "42285238": 62, "4231182596449616": 118, "423m": 113, "424": 62, "4243": 120, "42466": 59, "425": 114, "425197": 76, "4252": 69, "4257": 120, "4259": 58, "425m": 114, "42602": 58, "42604197": 63, "4267": 58, "427": 114, "4276138693308093": 119, "4280": 69, "428587": 72, "42972": 59, "43": [54, 59, 62, 72, 74, 76, 83, 113, 114, 146, 213, 230], "430": [5, 114], "4300": 69, "431": 62, "431046962738037": 72, "4311": 69, "432": 114, "4321": 238, "432m": 114, "433": 114, "43312883": 62, "43336": 59, "4334": 58, "434": 76, "4345": 69, "434704371920785e": 146, "4348": 69, "435": 62, "437": 76, "4379880944": 227, "438": 114, "4382": 69, "4383": 58, "44": [53, 54, 59, 62, 72, 75, 76, 83, 113, 114, 127, 146, 170, 213], "440": 114, "4400": 69, "4404918486533809e": 146, "4405": 124, "441": 62, "4412": 113, "4415": 76, "441520": 76, "441860": 76, "44187": 59, "442": [59, 114], "442112": 120, "4423": [69, 113], "442u": 114, "443": [59, 231], "4467": 69, "446u": 114, "4476": 58, "448": 72, "4483": 120, "4485": 58, "448506": 76, "4498473744": 237, "449m": 114, "45": [32, 53, 57, 59, 62, 68, 74, 76, 83, 91, 103, 112, 113, 120, 121, 123, 146, 158, 213, 226], "4500": 69, "450000": 76, "4503311258278": 118, "45056539": 69, "451": 213, "4512": 58, "45132940": 58, "4516": 69, "452473": 58, "454m": 113, "4551": 58, "455431": 112, "4554312190002747": 112, "456": [217, 238], "456120704485886e": 146, "4564365": 231, "45671": 59, "4569": 69, "457": 230, "4570": 77, "458": [112, 114], "458u": 114, "459": 112, "459584": 76, "4598": 89, "45iter": 54, "46": [54, 59, 62, 72, 74, 76, 83, 112, 114, 118, 120, 123, 146, 213, 226], "460": 112, "4600": 69, "460m": 114, "461": [58, 59, 112], "46153846": 75, "461943": 112, "4619431142000394": 112, "462": 59, "4620": 89, "4627": 69, "462u": 114, "463": [72, 112], "46323080499951175": 112, "463462": 112, "4634621249997508": 112, "46350148": 62, "463649": 112, "46364944700053456": 112, "4636755310002627": 112, "4636971440004345": 112, "46372856899961334": 112, "463729": 112, "463939": 112, "46393922600054793": 112, "464": [72, 113, 114], "4640383700007078": 112, "464213": 112, "4642132010003479": 112, "464_07": 185, "465": 113, "4659": 69, "465929": 112, "4659291400002985": 112, "466": 75, "4665": 120, "466m": 114, "468202": 76, "46844444": 62, "4691": 69, "4695": 58, "469u": 114, "47": [54, 59, 62, 69, 74, 76, 83, 89, 113, 114, 120, 123, 146, 213, 226], "470": 74, "4700": 69, "470u": 114, "471": 211, "47117": 120, "471607": 76, "47178546": 69, "471916": 76, "4719360": 118, "472": 211, "473": [62, 114], "4730964467005076": 72, "4732": 58, "4734": 120, "47437275321498723": 118, "474m": [113, 114], "4750": 76, "4761": 69, "476m": 113, "477": 230, "477m": 113, "4780": 74, "478300": 120, "48": [8, 54, 57, 58, 59, 62, 63, 74, 76, 77, 89, 112, 114, 118, 123, 146, 174, 213], "4800": 69, "480336": 112, "4803364019999208": 112, "480672001838684": 113, "48205128": 62, "483": [3, 4, 5, 7, 10], "48312557359986386": 112, "483126": 112, "4831838208": 118, "48341351999988547": 112, "483475": 112, "4834751440002947": 112, "48351270700004534": 112, "483513": 112, "48362178600018524": 112, "4837": 69, "483791": 112, "48379133800062846": 112, "483812": 112, "48381232899992027": 112, "48389172999941366": 112, "484": [5, 7, 58, 62, 112], "48418703799961804": 112, "4842157639996003": 112, "484216": 112, "484244": 112, "4842440839993287": 112, "484976": 76, "485": [62, 114, 217], "4850": 76, "486": 121, "4864": 58, "4873": 59, "488": 62, "48850": 121, "489": 112, "48979592": 62, "49": [54, 59, 62, 74, 76, 84, 112, 113, 114, 123, 128, 146, 213], "4900": 69, "491": 112, "491445663235104e": 146, "492": 112, "492051968": 118, "4921": 69, "4925": 76, "493": 112, "4934": 59, "494": 62, "4973": 58, "4973441634": 62, "4978": 76, "497845": 76, "4984": 58, "4986": 58, "499": [62, 68], "49900": 59, "4995": [58, 62], "4b71eb3c8dc7": 128, "4c0333854cb905966f8cc4e9a74068c1e507c7b7": 72, "4cm": 32, "4d": [59, 80], "4e": 119, "4f": [62, 69, 97, 118, 120, 121], "4n": [36, 118], "4o": 48, "4p": 66, "4th": 59, "4x": 80, "4x2": 75, "4xlarg": 88, "4y": 80, "5": [0, 1, 2, 3, 4, 5, 6, 7, 11, 16, 17, 19, 26, 27, 29, 30, 32, 36, 43, 46, 52, 53, 54, 55, 58, 59, 61, 62, 63, 66, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 88, 89, 93, 95, 97, 101, 108, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 133, 136, 137, 139, 140, 143, 144, 146, 147, 148, 150, 151, 153, 155, 156, 159, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 182, 185, 186, 187, 190, 203, 207, 211, 213, 214, 217, 228, 230, 231, 233, 234, 235, 236, 238, 239], "50": [30, 53, 54, 57, 58, 59, 62, 69, 75, 76, 77, 80, 89, 103, 112, 113, 114, 120, 128, 144, 146, 147, 156, 158, 170, 213, 231, 238], "500": [53, 54, 62, 69, 75, 94, 97, 148, 159, 203, 207, 231], "5000": [69, 97, 124, 143, 147, 156, 168, 169, 170, 207], "50000": [62, 119], "500000": 76, "5000000": 231, "500853903912116e": 146, "500u": [113, 114], "5013": 69, "5015": 124, "5017": 59, "502": 58, "50227": 59, "50256": 120, "50257": [58, 118, 120], "503": 54, "5039": 69, "504": 114, "5041": 58, "5044": 58, "50458": 59, "504878": 76, "5049": 76, "50502400e": 148, "50625": 59, "507": [62, 114], "5071": 120, "507m": 113, "508": 112, "5083": 120, "509m": 114, "50mm": 76, "51": [59, 62, 72, 74, 79, 113, 114, 120, 146, 213], "510": [112, 114, 231], "5100": 69, "510880": 63, "5109": 58, "510952": 63, "511": [112, 114], "5113": 69, "512": [57, 58, 112, 118], "5120": [57, 58], "512m": 114, "513": 114, "513638": 76, "51408752": 69, "5154": 58, "516": 114, "5161": 58, "517": 59, "5174": 121, "518": [59, 94], "518792": 128, "519": 59, "52": [54, 59, 69, 72, 74, 111, 112, 113, 114, 213], "520": 60, "5200": [69, 76], "5207": 69, "521": [114, 230, 231], "5211807202738746e": 146, "522": 231, "5223": 69, "5226": 77, "5227443557760843e": 146, "523": 231, "5232": 59, "5248": 58, "525": [59, 62], "52517": 59, "525228869166441e": 146, "526": 59, "527": [59, 62], "52777778": 62, "528": [59, 213], "52941176": 62, "5296": 58, "53": [53, 54, 59, 72, 74, 113, 114, 146, 213, 217], "530": 59, "5300": 69, "5304": 58, "531": 59, "53166227": 62, "5319817168701279": 72, "532": [59, 213], "5323": 69, "5326": 69, "532m": 113, "532u": 114, "533576": 76, "533m": 114, "5343": 69, "534m": 113, "534u": 114, "5362": 58, "53682": 59, "5380": 58, "539": 213, "5394": 58, "539457": 76, "5395": 58, "5397": 58, "5398e": [58, 124], "54": [54, 59, 76, 113, 114, 213, 214, 231], "5400": [69, 76], "5403": 58, "541111111111111cm": 159, "542470366": 118, "542u": 114, "5432": [69, 225], "544": [2, 114], "544u": 114, "545": 112, "5459": 69, "546": 213, "5475": 69, "547m": 114, "548": 230, "5486": 58, "5487": 58, "548866": 76, "54894": 158, "549": 213, "54976875": 119, "549u": 114, "54k": 77, "55": [53, 59, 72, 74, 91, 111, 113, 114, 119, 146, 183, 213], "5500": 69, "5502": 58, "551": [114, 120], "5522448429284077": 118, "55309364": 231, "5547": 59, "555": 114, "555m": 114, "55610225252113": 72, "556291": 76, "5566": 58, "5598": 69, "5599587203302373": 72, "55mb": 77, "56": [27, 54, 59, 62, 74, 111, 112, 114, 213], "560": 76, "5600": 69, "5611": 120, "5613": 58, "5619": 69, "562582205430263e": 146, "5628899835796387": 72, "563": 230, "5639": 58, "565": 76, "56590909": 75, "565u": 114, "5670": 121, "5677": 58, "56889605": 62, "569": 62, "57": [16, 59, 68, 72, 112, 114, 146, 213], "570": 120, "5700": 69, "5715": 58, "5720": 58, "5725": 58, "573": 213, "574": 62, "5750": 76, "575435": 120, "576": 114, "576138": 76, "5777": 69, "5780": 73, "5786": 62, "5799": 58, "58": [59, 62, 90, 112, 114, 146, 213, 231], "580": 72, "5800": 69, "580143": 76, "5807": 58, "5819": 58, "5821": 120, "58214": 59, "583296614400": 118, "583851": 76, "5847": 120, "584m": 114, "585": 121, "5865": 58, "587": 213, "5872": 69, "588": 114, "5886": 121, "589": 114, "5893": 121, "589824": [72, 118], "589m": 114, "58b6fa859eda": 237, "59": [36, 54, 55, 57, 59, 62, 76, 90, 112, 213], "5900": 69, "5902": 58, "590792": [0, 158], "590m": 113, "591m": 114, "592": 72, "5920": 59, "5925": 121, "593079": 158, "593084": 158, "595": 59, "595110": 76, "5955": 58, "596": 59, "5962": 58, "596449": 120, "5968": 58, "597": 58, "5972173617868683e": 146, "598": 53, "5988": 62, "5998": [1, 55, 57, 70, 71], "599999": 120, "59x": 231, "5_1_3_conditioning_independ": 185, "5_1_5_conditional_expect": 185, "5b": [0, 72], "5cm": [32, 143, 159], "5e12": 118, "5f": [76, 118], "5mm": 30, "6": [0, 1, 5, 6, 7, 11, 19, 27, 29, 30, 32, 36, 41, 43, 46, 53, 54, 55, 58, 59, 61, 62, 63, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 88, 93, 97, 102, 103, 104, 106, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 126, 130, 133, 136, 137, 139, 142, 146, 148, 150, 153, 156, 159, 160, 168, 170, 171, 172, 174, 180, 181, 198, 200, 201, 203, 204, 206, 207, 211, 213, 214, 228, 230, 231, 235], "60": [30, 59, 62, 68, 74, 76, 77, 85, 103, 113, 114, 128, 146, 147, 150, 213], "600": [69, 90], "6000": [69, 111], "60000": 62, "600000": 76, "6005": 69, "6006": 76, "6008": [1, 55, 57, 70, 71], "600m": 114, "601": 66, "6015": 124, "601m": 114, "603": [62, 120], "603u": 114, "604": 213, "604498": 76, "6047": 59, "60503967351663e": 146, "6060": 58, "6063": 120, "607": [59, 72], "6077": 58, "608": [59, 62, 72], "608643": 120, "608m": 114, "60it": 59, "61": [59, 76, 85, 114, 159, 213], "6100": 69, "611246350448613e": 146, "6116": 120, "6119": 124, "612724": 120, "612m": 114, "6130560": 63, "6132": 58, "613m": 114, "614": 213, "6144": 58, "61472122": 58, "6159": 69, "615u": 114, "616": 59, "6164": 69, "6167": 121, "616u": 114, "6178": 58, "618m": 114, "619": [59, 114], "62": [59, 74, 75, 111, 113, 114, 146, 213, 231], "6200": 69, "620201745890709e": 146, "621": 59, "6211": 124, "6216": 59, "623": [113, 213], "6232": 58, "62352941": 62, "6253": 58, "6257": 77, "6258": 58, "625829189863": 71, "626": 230, "6271": 58, "627m": 114, "6285": 120, "628m": 114, "63": [59, 62, 112, 113, 114, 115, 120, 121, 213, 230], "6300": [69, 76], "630039458606517e": 146, "630194235588974": 62, "6302": 120, "6312": 58, "632": 114, "6324970042866496": 118, "6340956189978897": 112, "634096": 112, "6349": 121, "635": 112, "6353": 58, "6362": 58, "6364": 124, "637": 112, "6379": 225, "638": [62, 112], "63863636": 75, "63888889": 62, "63iter": 54, "64": [16, 27, 58, 59, 62, 63, 72, 80, 94, 114, 119, 120, 121, 213], "640": [59, 230], "6400": [57, 58, 69], "6400553": 63, "640220": 112, "6402201920000152": 112, "6406": 69, "641559": 76, "64241152e": 148, "6428": 121, "643": 114, "643384": 76, "6435": 121, "644": 62, "644u": 114, "645": 230, "6450": 58, "6455": 58, "6469": 69, "6474": 58, "647m": 113, "648": 113, "6482e": 76, "649": [59, 114], "6492525648321494": 72, "64966443": 62, "64mb": 230, "65": [59, 62, 69, 75, 82, 91, 103, 113, 114, 146, 213], "650": [59, 63], "6500": 69, "650u": 114, "6513": 58, "652": [59, 76], "6528": 76, "653": 213, "6535": 69, "653536": 76, "6536": 58, "654800": 120, "654u": 114, "65535": 89, "65536": [59, 119], "655613": 76, "656": 114, "65607": 59, "656181": 76, "6567345287852233": 118, "6570": 58, "65714286": 62, "6581": 58, "6582": 69, "65957447": 62, "65iter": 54, "65m": 77, "66": [58, 59, 62, 72, 75, 76, 83, 113, 114, 118, 120, 213], "6600": 69, "661": 9, "661162": 76, "662u": 114, "663": 62, "6632": 58, "663405": 76, "66529492": 62, "6666": 69, "6666666666666666": 62, "6667": 29, "667u": 114, "66881829": 69, "66886954": 69, "669166": 76, "6693280": 71, "67": [59, 83, 114, 146, 213], "6702": 58, "670m": 113, "6713": 58, "672": 112, "673m": 114, "674": 112, "6741": 58, "674881715648123": 118, "674m": 113, "675": [72, 112], "676": [112, 213], "677": 230, "6774e": 76, "6784": 59, "68": [59, 62, 76, 84, 114, 118, 213], "680": 120, "6802": 69, "6807": 58, "6815": 58, "682084": 112, "6820840510008566": 112, "68339": 112, "683391": 112, "6833910059995105": 112, "6835393290002685": 112, "6835425659992325": 112, "683543": 112, "6837199530000362": 112, "6838137882004958": 112, "683814": 112, "68381571899954": 112, "6839085111998429": 112, "683909": 112, "683922": 112, "6839223050010332": 112, "684": 213, "684006079000028": 112, "68421053": 62, "68435456e": 148, "684m": 114, "6852539360006631": 112, "685254": 112, "68529412": 62, "6853": 112, "6853365530005249": 112, "685337": 112, "685866328816647e": 146, "68599": 158, "6866": 59, "6868": 120, "6878": 58, "68781": 63, "68782": 158, "6879": 69, "688": 114, "68829": 63, "68877005": 62, "689": [59, 230], "689371": 76, "6898": 58, "69": [59, 69, 75, 84, 114, 213, 226], "69078947": 62, "691": 114, "692": 62, "692u": 114, "693": 71, "6935": 120, "6937": 121, "693708384291344": 118, "69437951": 69, "6945": 58, "695558": 72, "6957": 58, "6960": 124, "6966": 120, "696m": 113, "698": 72, "6980": [0, 1, 55, 57], "698m": 114, "6cm": 159, "6e": 72, "6lhq": 118, "6n": 118, "6nd": 118, "6x": 97, "7": [0, 1, 2, 6, 13, 19, 27, 29, 30, 36, 43, 46, 53, 54, 55, 58, 59, 62, 63, 66, 72, 73, 74, 76, 78, 79, 83, 85, 88, 89, 93, 97, 103, 109, 112, 113, 114, 117, 119, 123, 127, 128, 130, 133, 142, 146, 148, 150, 159, 172, 173, 174, 190, 203, 206, 207, 211, 213, 216, 228], "70": [30, 50, 53, 59, 62, 66, 75, 91, 103, 113, 114, 137, 146, 148, 213, 226], "700": [57, 69, 213], "7000": [59, 69], "700000": 76, "700e": 148, "700m": 114, "7017": 69, "702": 230, "702005": 72, "702667": 76, "702m": 114, "703m": 114, "7044": 77, "706": 62, "7063": 120, "706563": 76, "707": 62, "7070": 58, "7079424": 118, "7086": 69, "709": 231, "71": [59, 114, 213, 226, 230, 231], "7115": 58, "713": [217, 230], "715": 217, "715684": 76, "7159": 69, "7167": 72, "7168": 58, "718m": 114, "719085": 76, "7193": 121, "7194": 58, "7196": 120, "72": [27, 59, 63, 74, 114, 118, 213, 226], "72041": 89, "72042": 89, "72043": 89, "72044": 89, "7205": 121, "720m": 114, "7210": 69, "722m": 114, "723": 114, "7253e": 58, "7257": 120, "726": [112, 114, 213], "7260": 58, "726191": 112, "7261910039997019": 112, "7264139199996862": 112, "7264165149990731": 112, "726417": 112, "726529": 112, "7265293540003768": 112, "7266": 112, "7266143320002811": 112, "726819": 112, "7268191237995779": 112, "727164707999691": 112, "727165": 112, "7272930130002351": 112, "727781": 112, "7277811669991934": 112, "727m": 113, "728": 230, "728044": 112, "7280440384000031": 112, "7287": 58, "7294365609996021": 112, "729m": 114, "729u": 114, "72iter": 54, "73": [59, 84, 114, 118, 176, 213, 231], "730000": 146, "730475": 112, "7304752370000642": 112, "731369": 76, "732": [53, 113], "7320": 121, "7334": 58, "734": 213, "735m": 114, "737m": 114, "7390": 0, "739m": 114, "74": [59, 75, 113, 114, 213], "740": 230, "740088": 120, "742e": 148, "743": 213, "744": 63, "744076": 76, "7453": 58, "74652523": 69, "7472": 121, "748": 230, "749323": 112, "7493231420003212": 112, "74iter": 54, "75": [17, 53, 59, 76, 114, 213], "750": 213, "750491": 76, "750u": 114, "751268": 112, "7512682050000876": 112, "751428467252": 69, "752m": 114, "75341": 59, "7539": 58, "753u": 114, "754386": 76, "754k": 77, "755": 118, "7553": 58, "7557055709994529": 112, "755706": 112, "756": 72, "7568": 58, "757": 114, "757336": 112, "7573362090006412": 112, "7579": 58, "758m": 113, "759": 230, "7590": 58, "759u": 114, "75iter": 54, "76": [59, 74, 113, 114, 150, 213], "76046437346437": 62, "760u": 114, "7612242146420387": 118, "761m": 113, "76216216": 75, "7626": 124, "762945": 76, "762m": [57, 58], "76364276": 69, "7645": 76, "764503": 76, "76484561": 62, "765": 238, "766320": 63, "766464": 63, "766m": 114, "767": 213, "767m": 114, "768": [57, 58, 112, 114, 118], "7680": 114, "7694444444444445": 62, "769u": 114, "77": [53, 59, 74, 113, 114, 138, 150, 159, 162, 213, 230], "771": 213, "771983": 223, "7737": 69, "774m": 118, "775": 230, "7754": 58, "775m": 114, "777": 90, "778": 62, "77iter": 54, "78": [59, 62, 74, 75, 114, 137, 213], "780": 59, "7807": 58, "7809": 58, "780e": 148, "781": 62, "78179": 59, "782": 230, "783": 114, "784": [62, 72, 77], "7841": 120, "785": 213, "7856": 58, "786432": 118, "786k": 77, "788": 58, "788u": 114, "7890": 238, "78987": 59, "79": [59, 85, 94, 114, 213], "79047426048": 118, "790760979727912e": 146, "790760979727948e": 146, "790e": 148, "791391": 76, "7914": 76, "792": 114, "7923": 69, "7928": 58, "7930": 120, "795": 143, "795599698575646": 118, "7956": 69, "7973": 120, "7974": 120, "798": 62, "79922222": 143, "7cm": 159, "7f": 76, "7mb": 77, "8": [0, 1, 16, 19, 22, 23, 27, 29, 30, 36, 46, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 88, 89, 93, 94, 103, 104, 110, 112, 114, 117, 118, 119, 120, 121, 123, 124, 127, 128, 130, 133, 143, 144, 146, 147, 148, 150, 156, 159, 168, 174, 190, 203, 211, 213, 222, 228, 230, 235], "80": [30, 58, 59, 85, 94, 103, 114, 139, 143, 162, 174, 213], "800": [69, 77, 148], "8000": 143, "800984": 213, "800u": 114, "801": [76, 230], "8018": [121, 143], "80228": 59, "8034": 59, "803m": 114, "804": 114, "8044": 69, "8045": 58, "8053063680": 118, "805m": 114, "805u": 114, "807322219562096e": 146, "807u": 114, "80803840e": 148, "80iter": 54, "81": [59, 68, 103, 113, 114, 120, 159, 213, 230], "811883582334536": 62, "813": 112, "814": 213, "8140": 58, "81408": 59, "8145": 58, "815": 112, "8150": 121, "8156": 121, "816": [62, 112], "8169": 58, "8182": 58, "819": 72, "8192": 58, "81iter": 54, "81x_3": 68, "82": [59, 114, 213], "820": 62, "820m": 114, "821": [143, 231], "8225": 69, "823": 62, "8231": 69, "8235": 76, "823529": 76, "8238": 121, "823m": 113, "824": 111, "825284": 120, "825m": 114, "8286": 59, "828u": 114, "83": [59, 63, 75, 113, 114, 140, 213], "8307": 180, "8338": 76, "833824": 76, "8344": 76, "8373": 69, "83783784": 62, "83iter": 54, "84": [59, 114, 213], "8401": 58, "8413": 180, "8415": 58, "841m": 114, "842": 230, "8421": 58, "8423": 69, "8427": 77, "842u": 114, "8439": 69, "845": 112, "845815": 72, "846u": 114, "847": 112, "8478": 58, "848": 112, "8483": 76, "848750": 72, "849": [112, 230], "8493": 59, "84953088": 118, "8495507137248904e": 146, "85": [53, 59, 113, 114, 213], "8501": 72, "8510": 58, "851748": 76, "851m": 114, "853": 230, "854307": 76, "854553600": 118, "858": 112, "8582": 58, "8585": 69, "858u": 114, "85905225": 62, "85iter": 54, "86": [59, 74, 113, 114, 142, 144, 213, 230], "860": 62, "860237": 120, "8616": 58, "8621": 68, "8621x_2": 68, "8639": 76, "863916": 76, "864": 114, "86432000e": 148, "867": 114, "867180": 72, "8675309": 211, "86825596": 62, "8688": 121, "86iter": 54, "87": [59, 74, 114, 213], "871202": 76, "8714": 58, "8722": 120, "8738": 77, "873m": 114, "874944921600": 118, "874m": 114, "875062886400": 118, "87506288640000": 118, "8753": 58, "876099": 120, "877m": 113, "87iter": 54, "88": [59, 74, 94, 114, 213], "880": [58, 114], "880m": 114, "880u": 114, "881": 59, "881m": 114, "882": [59, 114], "8833333333333333": 62, "886": 112, "88648649": 75, "887": 62, "8874175820001255": 111, "888": 112, "88858774": 69, "8896": 58, "889m": 114, "89": [59, 74, 114, 213], "890": 112, "8901731489346717e": 127, "8901731489346794e": 127, "89017341": 62, "890u": 114, "891": 62, "89162011": 62, "892": 69, "89276": 59, "89285714": 62, "894": 59, "8943": 120, "8955": 120, "895753": 72, "89585889": 63, "896": 72, "89631926654981": 118, "897": [59, 62], "8971": 76, "897491012859949": 118, "898": 62, "8981086857156975": 118, "8986519194402697e": 128, "89882": 59, "89iter": 54, "8cm": 159, "8xa100": 118, "9": [0, 1, 2, 3, 6, 7, 11, 13, 19, 27, 29, 32, 36, 43, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 72, 73, 74, 76, 77, 78, 82, 83, 84, 89, 90, 93, 94, 101, 103, 112, 113, 114, 115, 117, 118, 119, 120, 124, 130, 144, 146, 147, 148, 159, 168, 174, 190, 203, 211, 213, 217, 228, 230, 231, 234], "90": [30, 58, 59, 66, 85, 96, 103, 113, 114, 144, 146, 213], "900": [69, 143, 148, 159], "9000": [62, 143], "9006": 58, "9007": 59, "90081522": 62, "901044": 120, "903": 59, "9031": 120, "903625": 120, "903m": 114, "904": 59, "904508": 123, "9047619": 62, "905": [59, 62], "906": 59, "906788": 120, "9070": 58, "907315629326824e": 69, "908": 112, "909": 112, "9093": 58, "9095": 58, "909526": 120, "909733": 72, "90iter": 54, "90y": 146, "91": [27, 53, 59, 75, 114, 213, 239], "910": 112, "910443": 72, "9116": 120, "912348": 72, "9125": 69, "913684": 72, "9137": 72, "914": 62, "914779": 120, "915205": 76, "91589": 59, "915999": 120, "916m": 114, "917u": 114, "91879": 59, "919": 75, "91m": 77, "92": [58, 59, 62, 75, 76, 114, 146, 213], "920": 75, "920098": 62, "9204": 58, "920468": 72, "920626": 72, "921": [75, 114], "921905": 120, "921930": 76, "922": 75, "92289442": 62, "923062": 120, "923m": 114, "923u": 114, "924": [62, 113], "924157": 72, "92451": 68, "925": 114, "9261": 72, "9269": 59, "927157": 72, "92760181": 62, "9277": 58, "927814": 120, "9293": 121, "929515": 120, "92967186547287": 62, "93": [53, 59, 75, 90, 213], "9305": 58, "930785": 120, "9315789473684211": 72, "931579": 72, "93181818": 62, "932": 62, "933": 75, "933540": 120, "933m": 114, "933u": 114, "934": [53, 75, 112], "934282": 72, "9343": 58, "935": 111, "935628": 120, "936": 112, "936106": 72, "936106070735046": 72, "937": [62, 112], "938": [69, 112], "938326": 120, "93969849": 62, "93iter": 54, "94": [50, 59, 74, 75, 113, 114, 191, 213], "941042": 72, "941155": 72, "9411551411551411": 72, "942398": 120, "942731": [72, 120], "942775": 120, "9427876863479427e": 146, "943": 53, "9445": 120, "944542635210379e": 146, "944779": 120, "945m": 114, "9471012658228": 62, "947137": 72, "947m": 114, "949336": 120, "949m": 114, "94iter": 54, "95": [53, 59, 62, 66, 72, 75, 76, 103, 113, 114, 213], "950": 103, "951": 231, "951m": 113, "952219": 72, "952987": 120, "9536": 76, "953642": 76, "954": 62, "954536": 76, "954921": 72, "954u": 114, "955": 112, "9559": 69, "955947": 72, "955u": 114, "957": 112, "9571": 69, "9573": 58, "958": 112, "9589": 58, "959": [75, 231], "9592": 216, "959318": 120, "959u": 114, "95iter": 54, "96": [53, 58, 59, 72, 75, 113, 114, 146, 213, 239], "960": [75, 231], "960062": 120, "9602": 58, "960352": 72, "960352422907489": 72, "9605e": 58, "9607": 120, "961": [59, 75], "961750": 120, "961793": 120, "962": 68, "962396": 120, "9626068376068373": 118, "962x_1": 68, "963": 59, "963399": 120, "966": 58, "9663676416": 118, "967851": 72, "9679": 128, "9683": 58, "9692": 121, "9696603103": 62, "96a5ecabf65b": [0, 146, 148], "97": [59, 62, 75, 113, 114, 128, 180, 213], "970": 59, "970182": 72, "9704": 58, "9705": 128, "971": 59, "9713101437659449": 211, "9713101437890875": 211, "9718": 124, "971857": 72, "971m": 114, "972": 59, "9720": 58, "972136": 120, "9725": 77, "973": 59, "974": 59, "9747298715068023": 72, "974730": 72, "974793": 76, "975164": 72, "975445": 123, "976": 62, "97685": 59, "976m": 114, "977": 59, "977165": 72, "977606": 120, "977963": 72, "978": 59, "978308342070981e": 146, "979": 59, "979735": 120, "97iter": 54, "97k": 59, "97mb": [77, 230], "98": [53, 59, 75, 113, 119, 180, 213], "9800": 58, "980495": 120, "981": 114, "9812046605398257": 72, "981205": 72, "982279": 72, "983136": 72, "984": 114, "9841": 69, "984542": 72, "985105": 72, "9851052470652112": 72, "985478": 72, "985e": 148, "986": 75, "9863": 58, "986326": 120, "986865": 223, "986947": 223, "987029641": 69, "9873": 58, "987603": 120, "988262": 72, "98863636": 75, "989": 112, "989035": 120, "989355": 72, "989370": 72, "98iter": 54, "99": [6, 53, 59, 66, 71, 75, 101, 103, 113, 114, 180, 203, 213], "990": [72, 103], "9900": 58, "990026": 120, "990476": 72, "990863": 72, "990918": 72, "991": [94, 112], "991196": 120, "991540": 120, "992": 112, "992234": 72, "992m": 114, "993": [59, 112], "9930856553147576": 72, "993086": 72, "993103": 120, "993395": 72, "9936": 120, "993630": 72, "993739": 120, "994": 59, "9944": 76, "994530": 72, "994745": 120, "994755": 120, "994777": 72, "994828": 120, "995271": 120, "995431": 72, "9954314720812182": 72, "995570": 72, "9955702958862339": 72, "996": 97, "9961": 120, "996175": 71, "996349": 72, "996470": 72, "996582": 120, "996616": 72, "996647": 120, "996782": 72, "996798": 72, "997": 124, "997293": 72, "9976": 58, "9976021664879227e": 69, "997859": 72, "997951": 72, "998": 59, "9981937602627258": 72, "998194": 72, "9982": 58, "998358": 72, "9985": 180, "998522": 72, "9988": 58, "9988615953476088": 72, "998862": 72, "998957": 72, "999": [53, 59, 217], "999064": 72, "9992": 58, "9995e": [58, 124], "9996": 58, "9998": 58, "9999": 58, "99995": 124, "99999": 239, "999999": 17, "9999999900000000": 230, "99999999999999": 127, "999m": 114, "99th": 94, "9cm": 159, "9k": 77, "9pwqo": [146, 148], "A": [0, 1, 2, 4, 5, 7, 11, 17, 27, 30, 32, 36, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 64, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 91, 95, 96, 97, 99, 101, 102, 103, 105, 108, 109, 110, 115, 117, 118, 124, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 146, 147, 150, 155, 158, 162, 163, 164, 173, 176, 178, 180, 185, 188, 190, 192, 195, 196, 203, 211, 215, 217, 218, 219, 222, 225, 227, 229, 231, 234, 237, 238, 239], "AND": [59, 66, 72, 123], "AS": 66, "And": [5, 7, 8, 17, 26, 27, 30, 34, 35, 36, 37, 46, 50, 53, 57, 59, 61, 63, 66, 68, 76, 78, 80, 84, 90, 93, 94, 95, 100, 105, 106, 116, 117, 118, 119, 124, 130, 143, 146, 148, 150, 158, 174, 178, 180, 181, 190, 193, 207, 220, 238], "As": [5, 6, 13, 16, 20, 27, 29, 30, 32, 36, 46, 48, 50, 53, 56, 57, 58, 59, 61, 63, 64, 66, 68, 71, 74, 76, 77, 83, 84, 87, 95, 97, 98, 99, 100, 101, 102, 104, 115, 117, 118, 123, 124, 128, 133, 139, 140, 150, 156, 163, 164, 170, 171, 173, 174, 178, 180, 206, 207, 211, 216, 217, 221, 222, 231], "At": [27, 29, 30, 32, 44, 46, 56, 61, 66, 77, 82, 94, 96, 100, 101, 106, 109, 124, 128, 146, 213, 216, 218, 219], "BUT": [48, 66], "BY": 98, "Be": [11, 32, 155], "Being": 30, "But": [3, 5, 6, 7, 8, 9, 27, 29, 44, 46, 53, 54, 57, 58, 59, 66, 68, 71, 72, 74, 76, 77, 78, 80, 85, 89, 90, 94, 96, 97, 103, 105, 106, 109, 110, 115, 117, 125, 126, 127, 130, 136, 143, 148, 158, 159, 170, 174, 179, 180, 202, 205, 217, 221, 229, 231, 238], "By": [2, 3, 4, 5, 9, 11, 19, 27, 29, 43, 44, 47, 48, 52, 53, 56, 57, 58, 59, 61, 66, 68, 74, 77, 80, 82, 83, 85, 87, 93, 94, 95, 96, 97, 98, 100, 103, 104, 106, 107, 109, 117, 123, 124, 125, 127, 136, 146, 150, 163, 166, 180, 191, 193, 200, 201, 207, 214, 216, 217, 219, 221, 222, 234, 235, 236], "FOR": [66, 91], "For": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 27, 29, 30, 32, 36, 43, 46, 47, 48, 50, 51, 53, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 115, 117, 118, 121, 122, 123, 124, 126, 127, 128, 130, 131, 136, 139, 141, 142, 143, 146, 148, 155, 158, 159, 164, 170, 171, 173, 174, 176, 178, 179, 180, 181, 182, 184, 188, 190, 196, 198, 200, 203, 204, 210, 211, 213, 216, 217, 218, 221, 222, 228, 231, 232, 233, 237, 238], "IF": 66, "IN": 58, "IT": [66, 94], "If": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 85, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 117, 118, 119, 120, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 136, 137, 142, 143, 144, 146, 148, 156, 166, 168, 169, 170, 174, 176, 178, 188, 190, 191, 192, 195, 196, 198, 200, 201, 203, 206, 210, 211, 214, 216, 217, 218, 231, 234, 236, 239], "In": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 155, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 217, 218, 219, 221, 222, 226, 227, 228, 231, 235, 236, 238], "Into": [1, 57, 58, 123, 124, 211], "It": [2, 3, 5, 6, 7, 8, 9, 10, 11, 16, 17, 19, 27, 29, 30, 35, 36, 43, 44, 46, 47, 48, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 115, 118, 119, 120, 121, 123, 124, 126, 128, 130, 131, 133, 137, 141, 143, 144, 146, 150, 155, 158, 159, 160, 164, 172, 181, 184, 185, 190, 193, 198, 201, 203, 207, 208, 210, 211, 213, 214, 217, 218, 219, 221, 225, 226, 227, 228, 230, 237], "Its": [1, 10, 16, 30, 46, 48, 77, 78, 85, 86, 221], "NO": [66, 89, 91], "NOT": [6, 62, 66, 72], "No": [2, 6, 7, 13, 19, 48, 58, 59, 66, 76, 85, 95, 98, 103, 117, 123, 171, 213, 216, 217, 228, 229, 236, 238], "Not": [9, 16, 27, 61, 66, 74, 78, 85, 98, 115, 216, 232], "OF": [59, 66, 123], "ON": [59, 123], "OR": [66, 89], "Of": [17, 50, 57, 59, 62, 66, 68, 74, 76, 78, 87, 92, 94, 116, 117, 215, 230], "On": [0, 1, 2, 5, 7, 11, 27, 29, 30, 36, 43, 55, 57, 58, 61, 62, 66, 73, 74, 94, 98, 102, 118, 123, 124, 153, 180, 213, 236], "One": [0, 7, 11, 27, 29, 36, 50, 52, 57, 61, 63, 68, 71, 74, 77, 80, 83, 84, 89, 94, 96, 98, 100, 101, 102, 103, 106, 109, 110, 111, 115, 124, 125, 128, 130, 131, 133, 136, 142, 143, 146, 165, 173, 174, 181, 191, 203, 211, 216, 217, 229, 235, 237], "Or": [85, 90, 109, 119], "Such": [5, 51, 56, 57, 66, 71, 76, 88], "THE": [59, 66, 123], "TO": 91, "That": [3, 6, 13, 29, 44, 47, 50, 52, 58, 65, 66, 68, 71, 74, 76, 85, 124, 136, 140, 141, 148, 150, 153, 164, 176, 180, 181, 188, 190, 193], "The": [0, 1, 2, 3, 4, 8, 9, 10, 11, 16, 18, 20, 26, 27, 28, 33, 34, 36, 37, 43, 49, 50, 51, 52, 54, 55, 59, 60, 62, 63, 67, 69, 72, 73, 75, 78, 80, 82, 83, 84, 87, 89, 90, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 110, 112, 113, 115, 117, 118, 119, 120, 121, 123, 127, 128, 132, 133, 134, 137, 139, 140, 142, 144, 146, 150, 153, 155, 156, 160, 161, 163, 165, 166, 167, 168, 169, 170, 172, 174, 176, 178, 179, 180, 181, 184, 185, 186, 188, 189, 190, 191, 192, 194, 198, 200, 201, 204, 206, 207, 208, 210, 212, 214, 217, 218, 219, 221, 223, 225, 226, 229, 230, 232, 233, 235, 236, 237, 238, 239], "Their": [80, 84], "Then": [3, 6, 7, 22, 27, 29, 36, 43, 44, 50, 51, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 74, 76, 77, 84, 85, 90, 94, 96, 99, 100, 103, 106, 118, 125, 126, 127, 130, 132, 133, 134, 136, 137, 140, 141, 143, 144, 146, 147, 148, 150, 151, 153, 155, 158, 160, 164, 166, 167, 170, 173, 174, 176, 178, 179, 180, 181, 183, 184, 186, 188, 190, 191, 192, 193, 195, 201, 203, 206, 207, 211, 213, 214, 217, 221, 238], "There": [6, 19, 20, 27, 29, 43, 44, 53, 58, 59, 61, 62, 63, 66, 67, 68, 74, 76, 79, 80, 84, 89, 94, 96, 98, 100, 101, 102, 103, 104, 106, 109, 117, 121, 130, 159, 170, 192, 195, 203, 207, 211, 214, 217], "These": [4, 5, 6, 8, 10, 19, 27, 29, 36, 43, 53, 56, 57, 58, 59, 66, 72, 76, 79, 80, 82, 84, 85, 89, 94, 95, 96, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 115, 116, 118, 216, 221], "To": [2, 5, 6, 13, 19, 27, 29, 30, 32, 36, 43, 46, 50, 53, 55, 56, 57, 61, 63, 66, 68, 71, 74, 76, 77, 78, 79, 80, 82, 83, 87, 89, 90, 91, 94, 96, 99, 101, 104, 110, 115, 116, 117, 122, 123, 125, 126, 127, 131, 133, 142, 146, 158, 162, 167, 172, 174, 176, 180, 181, 182, 188, 190, 193, 203, 207, 211, 213, 214, 216, 217, 218, 221, 223, 227, 231, 234, 235, 238], "WITH": [58, 66], "Will": [66, 68, 97, 99, 117], "With": [0, 23, 27, 29, 53, 57, 58, 60, 61, 63, 66, 67, 68, 73, 74, 78, 80, 84, 85, 93, 94, 96, 97, 98, 99, 101, 113, 116, 122, 130, 137, 146, 150, 159, 180, 181, 214, 216, 219, 222, 226, 231], "_": [2, 3, 6, 7, 11, 16, 17, 27, 29, 30, 36, 50, 51, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 76, 77, 82, 85, 87, 97, 102, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 124, 126, 128, 143, 146, 148, 156, 159, 178, 181, 183, 186, 188, 190, 191, 192, 196, 198, 200, 203, 207, 210, 211, 213, 214, 216, 222, 231, 234], "_0": [27, 30, 68, 80], "_1": [4, 27, 30, 52, 53, 56, 58, 61, 63, 64, 66, 68, 74, 80, 82, 84, 85, 87, 94, 96, 118, 124, 180, 192, 193, 207, 211], "_2": [4, 16, 53, 56, 58, 61, 63, 64, 66, 68, 74, 80, 82, 84, 85, 87, 94, 96, 118, 124, 180, 192, 207], "_3": [53, 56, 58, 61, 66, 68, 80, 82], "_4": 56, "_5": 56, "_6": 58, "__": [7, 117], "___": 117, "__add__": [5, 6, 7], "__all__": [58, 71], "__and__": 213, "__annotations__": 117, "__args__": [117, 238], "__bases__": 117, "__bool__": [9, 58], "__builtin__": 117, "__builtins__": 117, "__call__": [117, 121, 124, 213, 230, 236, 237], "__class__": [2, 3, 4, 9, 58, 117, 221, 227], "__class_getitem__": 7, "__closure__": 117, "__code__": 117, "__constants__": 58, "__contains__": [5, 7], "__defaults__": 117, "__delattr__": [9, 58, 117], "__delitem__": 7, "__dict__": [2, 58], "__dir__": 117, "__doc__": [117, 229], "__enter__": 230, "__eq__": [7, 117, 218, 227], "__exit__": [213, 230], "__file__": [143, 211], "__format__": 117, "__future__": [3, 6, 22, 23, 36, 54, 58, 59, 62, 63, 69, 71, 72, 75, 89, 91, 94, 111, 112, 114, 115, 119, 120, 121, 123, 128, 143, 211, 217, 218, 219, 222, 225, 226, 227, 228, 229, 234], "__ge__": [7, 117], "__get__": 117, "__getattr__": [117, 213], "__getattribute__": 117, "__getitem__": [7, 8, 58, 119, 120, 121, 213, 221, 234], "__getstate__": 117, "__globals__": 117, "__gt__": [7, 117], "__hash__": [7, 117, 213], "__i": 7, "__iadd__": 7, "__imul__": 7, "__index": 7, "__init__": [2, 4, 5, 7, 8, 22, 23, 34, 36, 54, 58, 62, 69, 72, 75, 94, 100, 112, 114, 115, 117, 118, 119, 120, 121, 123, 124, 213, 214, 219, 221, 226, 228, 230, 231, 234, 236, 237], "__init_subclass__": 117, "__instancecheck__": 213, "__item": 7, "__iter": 7, "__iter__": [7, 22, 32, 234], "__kei": 7, "__kwdefaults__": 117, "__le__": [7, 117], "__len__": [2, 6, 7, 8, 22, 23, 32, 58, 72, 119, 120, 121, 213], "__loader__": 117, "__lt__": [7, 117, 213], "__main__": [48, 54, 75, 89, 91, 111, 112, 113, 115, 117, 120, 156, 171, 214, 216, 217, 221, 222, 225, 226, 228, 229, 230, 231, 235, 237, 238], "__module__": 117, "__mro__": [2, 117], "__mul__": 7, "__name__": [2, 3, 4, 9, 48, 54, 58, 75, 89, 91, 97, 111, 112, 113, 114, 115, 117, 120, 121, 171, 214, 216, 217, 221, 222, 225, 226, 227, 228, 229, 230, 231, 237, 238], "__ne__": 117, "__new__": [9, 58, 117, 213, 226, 237], "__next__": [22, 213, 234], "__object": 7, "__or__": 213, "__origin__": [117, 238], "__package__": 117, "__post_init__": [118, 217], "__private_attr": 117, "__pycache__": 94, "__qualname__": 117, "__reduce__": 117, "__reduce_ex__": 117, "__reference__": [112, 114], "__repr__": [8, 9, 58, 117], "__reversed__": 7, "__rmul__": 7, "__setattr__": [9, 58, 117], "__setitem__": 7, "__setstate__": 117, "__sizeof__": 117, "__slots__": [2, 58], "__spec__": 117, "__start": 7, "__stop": 7, "__str__": [5, 117, 231], "__subclasscheck__": 213, "__subclasshook__": [2, 117], "__tagged__": [112, 114], "__valu": 7, "__vsc_ipynb_file__": 117, "__weakref__": 117, "_abc": 213, "_abc_subclasscheck": 213, "_activ": [112, 114], "_activate_neftun": 117, "_add_callback": 213, "_add_positional_encod": 58, "_add_regular": 69, "_add_sm_patterns_to_gitignor": 117, "_alia": 59, "_annot": 117, "_appli": 117, "_assign_sampl": 62, "_asyncio": 213, "_autoset_attn_implement": 117, "_b": [16, 56, 192], "_backward_compatibility_gradient_checkpoint": 117, "_book": 158, "_bootstrap": 213, "_c": [62, 89, 114], "_calculate_conditional_gaussian_pdf": 75, "_calculate_joint_likelihood": [74, 75], "_calculate_joint_log_likelihood": 75, "_calculate_posterior": [74, 75], "_calculate_prior": [74, 75], "_call_impl": 117, "_call_soon": 213, "_callback": 115, "_centroid": 62, "_check_and_enable_flash_attn_2": 117, "_check_and_enable_sdpa": 117, "_check_clos": 213, "_check_input_shap": 69, "_check_method": 2, "_check_mp_mod": 213, "_childclass__private_attr": 117, "_compon": 53, "_compute_argmin_assign": 62, "_contain": 5, "_contextvar": 213, "_contour": 53, "_convert_head_mask_to_5d": 117, "_copy_lm_head_original_to_res": 117, "_count_ctxmgr": 230, "_create_grid": 54, "_create_repo": 117, "_creator": 222, "_cycl": 115, "_d": [62, 68, 74, 85, 192, 193, 211], "_deactivate_neftun": 117, "_default": 117, "_devic": [58, 115], "_dh": 117, "_dispatch_accelerate_model": 117, "_distributed_c10d": 89, "_dtype": 58, "_dump_snapshot": [114, 115], "_e": [56, 58], "_e_step": 54, "_estimate_gaussian_paramet": 54, "_estimate_likelihood_paramet": [74, 75], "_estimate_prior_paramet": [74, 75], "_estimate_respons": 54, "_estimate_weight": 54, "_expand_inputs_for_gener": 117, "_experimentalconfig": 114, "_extract_past_from_model_output": 117, "_f": 71, "_fig": [54, 62, 144, 147, 155], "_finish_current_push": 117, "_fit": 69, "_foreach_sqrt": 114, "_from_config": 117, "_gather_and_numpifi": 117, "_gener": [32, 36], "_genericalia": [117, 238], "_get_attr_opt": 213, "_get_backward_hook": 117, "_get_backward_pre_hook": 117, "_get_candidate_gener": 117, "_get_collator_with_removed_column": 117, "_get_cosine_schedule_with_warmup_lr_lambda": [59, 123], "_get_decoder_start_token_id": 117, "_get_distance_metr": 62, "_get_div_term_vector": 58, "_get_eval_sampl": 117, "_get_files_timestamp": 117, "_get_generation_mod": 117, "_get_learning_r": 117, "_get_likelihood": 54, "_get_logits_processor": 117, "_get_logits_warp": 117, "_get_margin": 54, "_get_nam": 117, "_get_nk": 54, "_get_no_split_modul": 117, "_get_output_dir": 117, "_get_position_vector": 58, "_get_prior": 54, "_get_resized_embed": 117, "_get_resized_lm_head": 117, "_get_stopping_criteria": 117, "_get_train_sampl": 117, "_get_valu": 213, "_getitemiter": 234, "_h": [56, 58, 68], "_handle_ev": 213, "_handle_fromlist": 213, "_handle_recv": 213, "_has_code_flag": 230, "_has_converg": [54, 62], "_heapq": 213, "_hook_rss_memory_post_forward": 117, "_hook_rss_memory_pre_forward": 117, "_hp_search_setup": 117, "_i": [56, 58, 66, 68, 117, 121, 124, 192], "_i1": 117, "_i2": 117, "_i3": 117, "_i4": 117, "_i5": 117, "_i6": 117, "_ih": 117, "_ii": 117, "_iii": 117, "_inertia": 62, "_init_centroid": 62, "_init_positional_encod": 58, "_init_weight": [58, 72, 112, 114, 117, 119, 120], "_initi": 54, "_initialize_weight": [69, 117], "_inner_training_loop": 117, "_instanc": [9, 58, 226, 227, 237], "_intern": 217, "_io": 230, "_is_master_process": [213, 230], "_issue_warnings_after_load": 117, "_j": [56, 58, 61, 124, 192], "_k": [52, 61, 62, 63, 64, 74, 124], "_key_from_fd": 213, "_kind": 117, "_label": 62, "_load_best_model": 117, "_load_from_checkpoint": 117, "_load_from_state_dict": 117, "_load_optimizer_and_schedul": 117, "_load_pretrained_model": 117, "_load_pretrained_model_low_mem": 117, "_load_rng_stat": 117, "_lock": 227, "_lora_a_init_param": 72, "_lora_b_init_param": 72, "_lrschedul": [59, 120, 123], "_lsprof": [213, 230], "_m": [27, 58, 66, 118, 207], "_m_step": 54, "_main": 231, "_maybe_initialize_input_ids_for_gener": 117, "_maybe_log_save_evalu": 117, "_maybe_warn_non_full_backward_hook": 117, "_mean": 62, "_memory_profil": 114, "_merg": 72, "_merge_criteria_processor_list": 117, "_method": 62, "_min": 34, "_miss": [9, 59], "_modul": 72, "_move_model_to_devic": 117, "_n": [30, 53, 56, 57, 62, 87, 117, 207], "_name": 117, "_named_memb": 117, "_nested_gath": 117, "_notgiven": [9, 58], "_oh": 117, "_p": [84, 207], "_paramet": 59, "_plot_contour": 54, "_plot_scatter_origin": 54, "_plot_scatter_predict": 54, "_prepare_attention_mask_for_gener": 117, "_prepare_decoder_input_ids_for_gener": 117, "_prepare_encoder_decoder_kwargs_for_gener": 117, "_prepare_input": 117, "_prepare_model_input": 117, "_private_instance_attr": 117, "_process_ev": 213, "_profil": 114, "_protected_attr": 117, "_push_from_checkpoint": 117, "_qkv_same_embed_dim": 58, "_qsize": 213, "_queue_item": [22, 23], "_really_send": 213, "_rebuild_io_st": 213, "_recip": 229, "_record_memory_histori": [114, 115], "_register_load_state_dict_pre_hook": 117, "_register_state_dict_hook": 117, "_remove_unused_column": 117, "_reorder_cach": 117, "_replicate_for_data_parallel": 117, "_report_to_hp_search": 117, "_reset_clust": 62, "_reset_inertia": 62, "_reset_label": 62, "_resize_token_embed": 117, "_rotate_checkpoint": 117, "_run": 213, "_run_callback": 213, "_run_onc": 213, "_save": 117, "_save_checkpoint": 117, "_save_optimizer_and_schedul": 117, "_save_rng_st": 117, "_save_to_state_dict": 117, "_save_tpu": 117, "_schedul": 226, "_schedule_flush": 230, "_schedule_in_thread": 213, "_self_": 217, "_set_default_torch_dtyp": 117, "_set_gradient_checkpoint": 117, "_set_num_samples_and_featur": 75, "_set_signature_columns_if_need": 117, "_slow_forward": 117, "_sorted_checkpoint": 117, "_stack_item": [32, 34], "_strategi": 228, "_supportsnextt": 234, "_t": [7, 56, 58, 124, 234], "_t_co": 7, "_target_": 217, "_temporary_reorder_cach": 117, "_tensor": 115, "_tensor_await": 115, "_tensor_s": 115, "_thread": [213, 230], "_tie_encoder_decoder_weight": 117, "_tie_or_clone_weight": 117, "_to_copi": 113, "_trained_st": [59, 119], "_tune_save_checkpoint": 117, "_type": [32, 36, 59], "_unwrap_parti": 230, "_update_centroid": 62, "_update_handl": 213, "_update_model_kwargs_for_gener": 117, "_upload_modified_fil": 117, "_validate_generated_length": 117, "_validate_model_class": 117, "_validate_model_kwarg": 117, "_view_dim": 115, "_w": 56, "_wrap": 89, "_wrap_model": 117, "_wrapped_call_impl": 117, "_y": 77, "a1": 48, "a100": 118, "a100_40gb": 118, "a100_bfloat16_flops_promis": 118, "a100_bfloat16_promised_flop": 118, "a2": 48, "a3": 48, "a4": 48, "a5": 48, "a_": [27, 30, 46, 56, 80, 118, 190, 203], "a_0": [27, 30], "a_1": [27, 30, 43, 46, 84, 85, 124, 131, 134, 136, 183, 188], "a_2": [43, 46, 84, 85, 124, 131, 134, 136, 188], "a_3": [84, 134], "a_bas": [89, 91], "a_bhl": 58, "a_d": [84, 85], "a_i": [43, 46, 48, 124, 130, 131, 134, 136, 141, 164, 183], "a_j": [43, 134], "a_k": [43, 134, 136], "a_l": 43, "a_list": 58, "a_m": 43, "a_n": [43, 46, 124, 131, 134, 183, 188], "a_ref_count": 231, "a_setup": [89, 91], "a_tensor": 115, "aaa": 238, "aab": 20, "aaron": 0, "ab": [0, 1, 48, 54, 56, 68, 69, 70, 71, 72, 79, 85, 118, 121, 123], "aba": 20, "abandon": 96, "abbeel": 0, "abbreiv": 58, "abbrevi": [53, 87], "abbrievi": 66, "abc": [4, 8, 35, 41, 58, 94, 100, 213, 221, 222, 226, 228, 229, 238], "abcdef": 20, "abcdef1234567890": 90, "abcdefg": 37, "abcedf": 5, "abcmeta": 2, "abid": [5, 6], "abil": [7, 29, 48, 57, 58, 66, 68, 87, 98, 103, 106, 107, 108, 109, 143, 180, 216, 230], "abl": [3, 5, 7, 8, 19, 27, 29, 32, 36, 53, 57, 58, 59, 66, 68, 71, 72, 77, 90, 94, 95, 96, 100, 101, 102, 109, 117, 120, 121, 130, 158, 159, 182, 211, 213, 217, 238], "ablat": [78, 92], "about": [5, 7, 8, 9, 11, 19, 27, 29, 30, 36, 43, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 66, 68, 73, 74, 76, 77, 79, 80, 82, 83, 84, 89, 90, 91, 94, 96, 98, 99, 100, 101, 102, 104, 106, 108, 109, 110, 115, 118, 124, 126, 130, 133, 143, 145, 148, 149, 156, 157, 158, 159, 170, 174, 180, 181, 189, 194, 203, 206, 208, 211, 217, 221, 228, 234], "abov": [2, 3, 5, 6, 7, 9, 16, 27, 29, 30, 32, 36, 43, 46, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 76, 79, 85, 88, 89, 94, 96, 109, 117, 118, 119, 124, 126, 127, 133, 139, 146, 148, 158, 159, 163, 170, 171, 174, 180, 188, 193, 203, 211, 219, 228, 234, 237], "abrupt": 102, "absenc": [9, 17, 27, 30, 58, 68], "absent": 9, "absolut": [54, 57, 59, 65, 66, 68, 84, 85, 94, 103, 106, 107, 110, 113, 123, 141, 164], "abstract": [3, 4, 5, 17, 29, 32, 33, 48, 58, 79, 82, 84, 100, 117, 130, 210, 213, 217, 221, 222, 228], "abstract_method": 222, "abstractmethod": [2, 4, 8, 58, 100, 221, 222, 226, 228, 229], "absurd": 158, "abu": 66, "abund": 96, "abus": [27, 29, 68, 74, 76, 87, 136, 158, 211], "ac": 85, "academ": [97, 109], "academi": [0, 17, 18, 22, 23, 27, 30, 31, 32, 33, 127], "acceler": [57, 58, 94], "accept": [3, 5, 6, 7, 8, 11, 17, 19, 29, 32, 36, 43, 44, 68, 106, 109, 110, 117, 213], "access": [0, 30, 32, 48, 53, 58, 61, 66, 71, 77, 87, 94, 95, 97, 98, 100, 213, 214, 216, 217, 218, 221, 227, 231, 234], "accessdeni": 216, "accid": [101, 109], "accident": 5, "accommod": [5, 57, 68, 110, 118, 222], "accomplish": [58, 63, 96], "accord": [2, 4, 8, 27, 47, 52, 53, 58, 59, 61, 66, 68, 72, 74, 75, 87, 95, 104, 117, 123, 159, 191, 229], "accordingli": [58, 59, 94, 98], "account": [17, 19, 30, 53, 57, 58, 59, 63, 66, 68, 76, 85, 87, 90, 94, 96, 98, 103, 110, 114, 117, 118, 119, 231], "account1": 231, "account2": 231, "acculum": [57, 58], "accumul": [48, 57, 58, 59, 62, 94, 115, 118, 236], "accur": [48, 56, 57, 59, 66, 68, 76, 87, 90, 94, 95, 99, 101, 103, 110, 112, 117, 124, 127, 143, 159, 174, 180, 230], "accuraci": [48, 59, 61, 66, 72, 75, 77, 94, 95, 96, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 119, 120, 121], "accuracy_scor": [72, 76, 120, 121], "accustom": 109, "acf": 68, "achiev": [19, 29, 30, 32, 48, 51, 58, 59, 63, 66, 71, 72, 74, 77, 94, 95, 96, 98, 102, 103, 106, 107, 117, 118, 124, 203, 213, 216, 221, 222, 235], "acknowledg": [71, 83], "ackowledg": 148, "acl": 94, "acquir": [227, 231], "acquisit": 214, "acronym": 118, "across": [4, 5, 10, 17, 29, 32, 48, 53, 54, 56, 57, 58, 59, 61, 68, 71, 74, 76, 77, 80, 87, 88, 89, 94, 96, 97, 98, 100, 106, 107, 108, 109, 112, 113, 115, 123, 159, 172, 216, 219, 222, 226, 227, 236, 237], "act": [5, 29, 32, 48, 56, 57, 58, 89, 91, 97, 98, 99, 100, 101, 104, 226], "act_fn": 72, "action": [6, 27, 32, 58, 61, 80, 83, 88, 89, 91, 94, 96, 97, 100, 101, 110, 112, 115, 130, 143, 148, 159, 206, 211, 213, 227, 236, 238], "activ": [29, 57, 59, 71, 89, 90, 98, 101, 104, 106, 109, 112, 113, 114, 115, 118, 119, 120, 123, 124, 128, 144, 169, 170, 174, 190, 207, 211, 216, 238], "activation_nam": [112, 114], "active_adapt": 117, "activityprofilercontrol": [113, 114, 115], "actual": [2, 3, 5, 6, 7, 8, 29, 41, 44, 46, 48, 50, 53, 57, 58, 59, 61, 66, 68, 70, 71, 74, 76, 80, 85, 89, 90, 94, 96, 100, 101, 102, 103, 105, 107, 110, 111, 117, 118, 119, 120, 123, 127, 136, 158, 174, 180, 203, 207, 213, 214, 216, 217, 221, 225, 235, 238], "actual_list": 46, "actual_timeout": 9, "acut": 85, "acycl": 100, "ad": [2, 3, 5, 6, 7, 11, 13, 16, 17, 23, 27, 32, 36, 43, 46, 47, 53, 56, 57, 58, 59, 63, 68, 69, 71, 72, 75, 76, 77, 80, 94, 97, 100, 101, 109, 115, 118, 123, 124, 126, 216, 218, 222, 228, 230, 236, 238], "adam": [0, 1, 8, 55, 57, 59, 71, 119, 123], "adamconfig": [59, 119], "adamw": [59, 114, 117, 118, 120, 121, 217], "adamw_torch": [72, 120], "adapt": [0, 1, 2, 5, 8, 30, 48, 55, 57, 58, 59, 61, 63, 66, 68, 72, 78, 98, 100, 101, 109, 118, 123, 174, 176, 203, 207, 210, 211, 213], "add": [2, 5, 6, 7, 11, 13, 19, 27, 30, 32, 43, 46, 47, 53, 56, 58, 61, 62, 68, 69, 72, 74, 76, 77, 82, 83, 89, 90, 91, 94, 96, 98, 100, 104, 109, 114, 115, 117, 118, 123, 124, 125, 128, 130, 134, 136, 148, 174, 190, 211, 213, 214, 217, 218, 226, 228, 229, 230, 231, 238, 239], "add1": 3, "add_adapt": 117, "add_argu": [89, 91, 115], "add_artist": 53, "add_callback": [59, 117, 119, 213], "add_const": 68, "add_front": 23, "add_funct": 230, "add_memory_hook": 117, "add_model_tag": 117, "add_modul": 117, "add_new_employee_using_list": 7, "add_norm_1": [58, 59, 119, 120], "add_norm_2": [58, 59, 119, 120], "add_norm_config_1": [58, 59, 119], "add_norm_config_2": [58, 59, 119], "add_rear": [23, 25], "add_subplot": [53, 83, 127, 190], "add_text": 82, "add_text_annot": [83, 84, 85], "add_to_list": 94, "add_to_list_and_purposely_make_the_list_very_very_very_long": 94, "add_vector": 82, "add_vectors_to_plott": [83, 84, 85], "addbackward0": 58, "added_tokens_decod": 120, "addedtoken": 120, "addend": 59, "adder_dataset": 59, "adderdataset": 59, "addertoken": 59, "addervocabulari": 59, "addhandl": [120, 121], "addit": [2, 4, 5, 8, 11, 13, 17, 19, 20, 27, 29, 30, 36, 43, 44, 53, 55, 56, 57, 58, 61, 66, 68, 72, 74, 77, 78, 79, 82, 85, 90, 93, 94, 95, 97, 98, 100, 101, 104, 108, 118, 123, 125, 150, 176, 178, 180, 211, 218, 225, 229, 238, 239], "addition": [57, 58, 68, 80, 87, 89, 95, 100], "additional_depend": 94, "additional_metadata": [97, 104], "additionalproperti": 238, "addnorm": [59, 119, 120, 121], "addnormconfig": [58, 59, 119, 120, 121], "addopt": 94, "address": [5, 11, 17, 27, 30, 48, 58, 59, 66, 68, 90, 94, 95, 97, 98, 99, 106, 108, 217, 227, 238], "adeli": 76, "adept": [57, 96], "adeptli": 57, "adequ": [93, 94], "adher": [2, 4, 6, 7, 29, 30, 32, 59, 79, 82, 84, 94, 97, 98, 99, 100, 101, 221], "adjac": [47, 98], "adject": 130, "adjust": [27, 29, 43, 46, 48, 53, 56, 57, 58, 59, 71, 85, 90, 95, 99, 103, 106, 110, 118, 123, 230], "administ": 180, "administratoraccess": 90, "adopt": [30, 53, 68, 71, 74, 94, 99, 104, 124, 210, 218], "advanc": [1, 2, 17, 28, 29, 30, 55, 57, 59, 70, 71, 85, 98, 100, 106, 115, 116, 213, 222], "advancedchunk": 222, "advanceddoc_": 222, "advancedembedd": 222, "advancedretriev": 222, "advantag": [5, 30, 32, 46, 58, 61, 71, 94, 95, 97, 99, 140, 198, 213, 216], "advent": 101, "advers": 94, "adversari": 96, "advic": 102, "advoc": [9, 221], "aerin": 174, "aerospac": [1, 10], "affect": [2, 4, 7, 11, 27, 30, 46, 58, 59, 66, 68, 71, 76, 83, 88, 94, 95, 97, 100, 102, 108, 110, 118, 124, 130, 133, 155, 180, 191, 216, 221, 236, 237], "affili": 115, "affin": [56, 68], "affirm": 29, "afford": 95, "afforement": [59, 123], "aforement": [58, 100, 217], "afshi": [68, 87], "afshin": [0, 66], "after": [6, 8, 10, 22, 29, 30, 32, 35, 36, 48, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 69, 71, 72, 74, 85, 89, 90, 91, 94, 96, 98, 99, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 118, 120, 123, 124, 128, 132, 134, 136, 143, 158, 172, 173, 178, 211, 213, 214, 217, 218, 221, 227, 229, 235], "ag": [68, 80, 87, 96, 97, 98, 110, 181, 238], "again": [5, 6, 11, 20, 27, 29, 36, 53, 56, 58, 59, 61, 66, 68, 71, 74, 76, 84, 90, 94, 96, 98, 100, 117, 121, 123, 124, 130, 148, 180, 188, 211, 213, 227, 228, 234, 236], "against": [6, 48, 58, 61, 94, 95, 96, 100, 101, 105, 108, 136, 207, 221], "agenc": 98, "agent": [99, 117], "ageron": 53, "agg": 76, "aggreg": [5, 56, 58, 59, 96, 98, 99, 100, 109, 124], "aggregate_data": 100, "aggregated_data": 100, "aggregation_funct": 100, "aggres": 104, "agi": 96, "agil": [94, 99], "agnost": [0, 57, 71, 99, 101, 221, 222], "agre": 66, "agreement": [29, 108], "ah": [59, 66], "ahead": [58, 59, 84, 85], "ai": [0, 57, 58, 66, 67, 70, 73, 77, 84, 93, 95, 101, 106, 107, 109, 118, 127], "aic": 53, "aid": [57, 58, 68, 94], "aidan": 0, "aim": [27, 29, 43, 53, 56, 57, 58, 59, 61, 63, 71, 80, 87, 94, 95, 96, 124, 212, 219, 231], "aiop": [78, 96], "airbyt": 100, "airflow": 100, "airplan": [2, 125], "ajax": 99, "aka": 58, "akin": [6, 27, 29, 32, 82, 128, 191, 213], "akra": 16, "akshatgadodia": 237, "al": [30, 48, 53, 56, 57, 58, 59, 68, 71, 79, 80, 84, 123, 124, 211], "alammar": [57, 58], "alarm": 180, "albument": 94, "aldo": [0, 49, 52, 53], "alec": 0, "alert": [94, 96, 99, 108, 109, 110], "alex": 58, "alexand": [0, 49, 52, 53, 60, 61, 67, 68, 73, 74, 87], "algebra": [0, 58, 67, 70, 71, 79, 84, 97, 124, 126, 178, 192, 211], "algo": [28, 29], "algomonst": [27, 43, 44], "algorist": [28, 29], "algorithm": [0, 10, 11, 13, 17, 19, 20, 32, 33, 35, 36, 46, 47, 49, 50, 54, 56, 57, 58, 59, 63, 66, 68, 69, 75, 76, 77, 79, 84, 85, 87, 88, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 123, 124, 191, 203, 211, 216, 228], "ali": 96, "alia": [58, 112, 114, 238], "alic": [5, 98, 238], "alicia": 76, "align": [0, 2, 4, 5, 16, 19, 20, 27, 29, 30, 32, 43, 50, 51, 52, 53, 56, 57, 58, 59, 61, 64, 66, 68, 71, 74, 76, 77, 79, 80, 82, 84, 85, 87, 94, 95, 96, 97, 102, 103, 108, 109, 123, 124, 126, 130, 137, 139, 140, 143, 144, 146, 147, 148, 150, 158, 159, 163, 170, 171, 173, 176, 178, 180, 181, 183, 184, 186, 188, 191, 193, 195, 198, 200, 201, 211], "alignat": [52, 61, 68], "aliv": 216, "all": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 89, 90, 91, 94, 96, 97, 98, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 137, 139, 140, 143, 144, 146, 148, 150, 153, 158, 159, 163, 164, 174, 176, 180, 181, 184, 188, 191, 192, 195, 198, 200, 204, 207, 208, 210, 211, 214, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 230, 231, 232, 235, 237], "all_arg": 117, "all_config": 112, "all_lett": 128, "all_param": 170, "all_pr": 107, "all_reduc": 89, "allclos": [58, 62], "allen": [0, 70, 71], "aller": 57, "allevi": [57, 58], "alloc": [11, 27, 29, 32, 36, 66, 78, 116, 213, 216, 231, 237], "allof": 238, "allot": 29, "allow": [2, 3, 5, 6, 7, 8, 9, 11, 13, 16, 17, 29, 30, 32, 36, 43, 44, 46, 47, 53, 56, 57, 58, 59, 61, 63, 66, 68, 71, 74, 76, 77, 83, 94, 95, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 113, 118, 123, 126, 128, 130, 143, 174, 180, 183, 184, 193, 199, 212, 213, 216, 217, 218, 219, 221, 222, 225, 226, 228, 231, 235, 237, 238], "almost": [2, 16, 53, 58, 76, 87, 124, 164, 172, 208, 231], "aloc": 128, "alon": [68, 74, 76, 96, 103, 126, 211], "along": [19, 30, 32, 46, 51, 53, 56, 57, 58, 61, 66, 68, 72, 76, 80, 83, 85, 94, 95, 96, 98, 99, 103, 106, 108, 109, 115, 117, 126, 127, 190, 193, 203, 208, 211, 217, 225], "alongsid": [53, 57, 68, 74, 106, 109, 185], "alpha": [53, 54, 56, 57, 58, 59, 62, 66, 68, 70, 71, 72, 74, 76, 83, 96, 102, 121, 123, 124, 143, 146, 148, 155, 156, 159, 168, 171, 174, 178, 207], "alpha1": 77, "alpha_": [59, 123], "alpha_1": 123, "alpha_2": 123, "alpha_3": 123, "alpha_4": 123, "alpha_5": 123, "alpha_6": 123, "alpha_7": 123, "alpha_d": 192, "alpha_f": [59, 123], "alpha_t": 123, "alphabet": [30, 128], "alphago": 96, "alreadi": [2, 19, 26, 27, 29, 30, 36, 43, 47, 53, 56, 58, 59, 61, 62, 66, 68, 72, 76, 77, 94, 95, 96, 100, 101, 104, 106, 119, 133, 137, 143, 146, 148, 158, 159, 174, 180, 181, 183, 211, 213, 227, 229, 237], "also": [2, 3, 4, 5, 6, 7, 8, 11, 13, 16, 17, 19, 23, 27, 29, 30, 32, 36, 43, 46, 48, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 72, 74, 76, 77, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 140, 141, 142, 143, 144, 146, 147, 148, 150, 155, 156, 158, 159, 162, 164, 165, 169, 170, 173, 174, 175, 178, 179, 180, 183, 188, 190, 191, 195, 201, 203, 204, 207, 208, 210, 211, 213, 217, 218, 219, 222, 225, 226, 227, 228, 234, 238, 239], "alter": [4, 7, 11, 27, 36, 71, 83, 94, 124, 213, 222], "altern": [5, 27, 30, 36, 53, 58, 61, 66, 68, 76, 83, 90, 96, 98, 99, 216, 225], "although": [8, 10, 17, 27, 30, 32, 53, 56, 57, 58, 59, 61, 63, 66, 68, 71, 96, 98, 106, 123, 148, 203, 223], "altogeth": 27, "alwai": [4, 11, 16, 17, 27, 29, 30, 36, 43, 44, 51, 56, 57, 58, 59, 63, 66, 68, 74, 76, 77, 84, 85, 88, 91, 94, 95, 99, 101, 102, 103, 104, 105, 106, 109, 117, 124, 130, 137, 144, 158, 166, 173, 180, 191, 192, 211, 212, 214, 231, 233, 234], "am": [58, 59, 62, 66, 68, 100, 111, 113, 119, 174], "am_i_in_jupyt": 58, "aman": [57, 58], "amax": 62, "amazon": [0, 97, 98, 99, 109], "ambient": 80, "ambigu": [53, 58, 148], "ameet": [0, 66, 68, 87], "amen": 58, "ami": [90, 103], "aminian": 96, "aml": 66, "amodei": [0, 1, 55, 57], "among": [46, 50, 53, 56, 58, 61, 66, 71, 76, 80, 89, 94, 107, 124, 181, 214], "amongst": [32, 66, 68, 76, 96, 143, 159], "amount": [11, 13, 16, 17, 19, 27, 29, 32, 36, 43, 57, 63, 66, 68, 74, 77, 80, 94, 95, 96, 100, 101, 109, 110, 113, 115, 118, 124, 133, 203, 204, 216, 230, 231, 238], "amplif": 71, "amplifi": [57, 58, 71, 103, 124], "amplitud": 123, "amsgrad": [59, 217], "an": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 23, 27, 29, 32, 35, 36, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 84, 85, 87, 89, 90, 91, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 117, 118, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 150, 153, 155, 158, 159, 160, 163, 164, 165, 167, 169, 172, 174, 176, 178, 180, 183, 184, 188, 189, 193, 195, 196, 200, 203, 207, 210, 211, 214, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 236, 237, 238, 239], "anaconda": 90, "anagram": [18, 21, 39, 40, 42, 78], "analog": [30, 32, 98], "analogi": [7, 48, 94, 216], "analogu": 80, "analys": 101, "analysi": [0, 5, 10, 16, 20, 32, 48, 56, 57, 58, 59, 60, 61, 62, 67, 68, 71, 78, 80, 84, 85, 93, 94, 95, 96, 98, 99, 100, 103, 104, 108, 109, 118, 124, 136, 171, 211], "analyt": [84, 85, 93, 99, 100, 101], "analyz": [19, 27, 29, 58, 94, 95, 96, 98, 99, 101, 108, 109, 146, 203], "ancestr": 53, "anderson": 68, "andrej": [57, 118], "andrew": 87, "angl": [53, 58, 178], "ani": [2, 3, 4, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 34, 36, 43, 44, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 113, 114, 115, 117, 118, 120, 121, 123, 124, 126, 127, 128, 130, 131, 134, 136, 137, 140, 141, 142, 143, 144, 146, 147, 150, 155, 158, 162, 164, 166, 168, 176, 178, 181, 183, 191, 192, 195, 198, 200, 203, 206, 207, 211, 213, 214, 216, 217, 218, 219, 221, 225, 226, 228, 229, 230, 235, 238], "anim": [2, 3, 4, 6, 57, 66, 94, 96, 98], "animaltyp": 6, "ann": [73, 74, 141, 142, 144, 147, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 198, 200, 201, 203, 204, 206, 211], "anneal": [78, 122], "annot": [3, 6, 22, 23, 36, 53, 54, 57, 58, 59, 62, 63, 68, 69, 71, 72, 75, 82, 89, 91, 94, 111, 112, 114, 115, 119, 120, 121, 123, 128, 143, 211, 217, 218, 219, 222, 225, 226, 227, 228, 229, 234, 238], "annotation_text": 82, "announc": 58, "anomali": [84, 93, 99, 101, 109], "anoth": [2, 3, 5, 6, 8, 9, 29, 30, 43, 53, 57, 58, 59, 62, 66, 68, 71, 76, 79, 85, 88, 89, 94, 96, 98, 100, 103, 106, 109, 116, 117, 120, 124, 130, 140, 155, 179, 180, 188, 203, 214, 216, 217, 229, 231, 238], "answer": [0, 5, 11, 13, 19, 20, 29, 43, 48, 53, 57, 58, 59, 61, 65, 66, 68, 69, 76, 96, 101, 125, 128, 132, 136, 137, 143, 148, 158, 159, 174, 180, 181, 208, 211, 230], "antarct": 76, "antarctica": [76, 94], "anthoni": 5, "anti": [4, 223, 225], "anticip": [19, 36, 43, 95, 97], "antideriv": 126, "anymor": [59, 61, 126], "anyof": 238, "anyon": 84, "anyth": [16, 51, 53, 59, 66, 74, 98, 101, 119, 211, 217, 221], "anytown": 238, "anywai": [59, 68, 126, 134, 136], "anywher": 227, "ap": 90, "apach": [94, 98, 99, 100, 114], "apart": [58, 61, 62, 72, 213], "api": [9, 68, 93, 94, 97, 98, 99, 100, 108, 109, 113, 216, 231], "app": [95, 96, 100, 109], "app_config_group": 217, "app_nam": [217, 225], "appar": [47, 59, 61, 68, 85, 94, 101, 111, 132, 134, 136, 159, 195, 210, 234], "appconfig": 225, "appear": [16, 35, 44, 53, 58, 68, 76, 77, 82, 94, 96, 97, 106, 109, 125, 213], "appeas": 59, "append": [5, 7, 11, 20, 23, 32, 34, 36, 41, 53, 54, 58, 59, 62, 63, 69, 74, 75, 76, 77, 89, 91, 94, 100, 112, 117, 118, 119, 123, 124, 128, 143, 146, 148, 156, 159, 168, 169, 170, 178, 190, 207, 211, 213, 214, 216, 217, 222, 231, 235, 236, 239], "append_and_return_list": 5, "append_int_and_return_list": 5, "append_int_to_stack": 32, "append_pi": 7, "append_str_and_return_list": 5, "append_str_to_stack": 32, "append_to_list": 236, "append_to_list_mutable_default": 236, "append_to_stack": 32, "appendix": 118, "appl": [17, 77, 97], "appli": [2, 4, 5, 6, 7, 11, 16, 17, 20, 23, 27, 29, 30, 48, 53, 56, 57, 59, 61, 66, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 83, 84, 87, 94, 95, 99, 100, 101, 112, 113, 114, 115, 117, 119, 120, 123, 124, 126, 127, 137, 173, 178, 180, 182, 186, 192, 211, 213, 217, 221], "applic": [0, 1, 2, 6, 7, 10, 17, 27, 29, 30, 32, 46, 47, 57, 59, 60, 61, 66, 67, 68, 69, 71, 73, 74, 78, 79, 80, 82, 83, 84, 85, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 127, 145, 154, 161, 195, 199, 211, 216, 217, 219, 221, 225, 226], "apply_lora_to_base_model": 72, "apply_transform": 221, "apply_weight_decay_to_different_param_group": [59, 119], "appreci": [5, 11, 35, 63, 87, 178, 203], "apprehend": 29, "approach": [2, 5, 9, 16, 17, 19, 27, 30, 36, 44, 46, 47, 48, 50, 53, 58, 59, 61, 66, 68, 71, 74, 76, 80, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 123, 124, 126, 174, 200, 206, 207, 212, 213, 216, 221, 230, 231], "appropri": [4, 29, 56, 57, 58, 59, 61, 63, 68, 71, 72, 90, 94, 95, 96, 98, 99, 100, 101, 103, 106, 107, 109, 124, 155, 216, 221, 228], "approv": [100, 108], "approx": [13, 19, 26, 34, 35, 37, 43, 48, 50, 56, 57, 58, 66, 71, 74, 76, 84, 112, 114, 118, 126, 150, 155, 174, 211], "approxim": [3, 13, 19, 27, 32, 36, 43, 53, 54, 57, 59, 61, 66, 68, 70, 71, 80, 102, 103, 112, 114, 118, 119, 120, 124, 126, 127, 174, 203], "apr": [1, 10], "apt": [90, 100], "aptli": [6, 94], "ar": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 16, 17, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 37, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 66, 67, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 146, 147, 148, 150, 153, 155, 156, 159, 160, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 221, 223, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238], "arang": [53, 54, 58, 76, 112, 114, 143, 146, 148, 156, 159, 174, 211], "arbitrari": [30, 56, 58, 79, 94, 109, 123, 137, 207, 238], "arbitrarili": [66, 80, 206], "arbitrary_types_allow": [58, 218, 222], "arbor": [73, 74, 141, 142, 144, 147, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 198, 200, 201, 203, 204, 206, 211], "arcfac": 87, "architect": 110, "architectur": [55, 57, 59, 71, 72, 94, 96, 97, 104, 106, 109, 117, 118, 222], "archiv": 108, "arctan": [53, 84], "arctang": 84, "area": [4, 29, 53, 58, 68, 76, 84, 87, 94, 96, 99, 100, 103, 109, 118, 126, 132, 133, 170, 174, 176, 199, 222], "aren": [7, 68, 94, 109], "arg": [3, 5, 6, 7, 8, 22, 23, 29, 32, 53, 54, 58, 59, 63, 69, 72, 74, 75, 76, 89, 91, 94, 97, 100, 112, 115, 117, 119, 120, 128, 213, 214, 216, 229, 231, 236, 238], "arg1": 6, "arg2": 6, "argmax": [50, 51, 54, 56, 57, 59, 68, 71, 72, 74, 75, 76, 77, 119, 120, 124, 167, 211], "argmin": [50, 56, 57, 58, 61, 62, 64, 68, 71], "argpars": [89, 91, 115], "args_list": 59, "argu": [4, 9, 62, 71, 94, 100, 101], "argument": [3, 6, 8, 9, 22, 32, 43, 53, 58, 59, 63, 66, 76, 78, 117, 120, 123, 133, 143, 200, 213, 217, 226, 229, 232, 235, 238], "argumentpars": [89, 115], "ari": 103, "aris": [2, 5, 27, 29, 32, 56, 59, 68, 84, 87, 91, 94, 96, 100, 109, 146], "arithmet": [4, 59, 68, 118, 124, 211], "arizona": 185, "arjancod": [221, 228], "around": [7, 9, 30, 58, 59, 66, 68, 72, 76, 95, 98, 109, 111, 124, 128, 156, 158, 174, 207, 216, 217, 218, 229, 234], "arr": 63, "arrai": [5, 6, 7, 13, 17, 19, 20, 22, 23, 27, 32, 39, 40, 45, 46, 48, 53, 54, 56, 57, 58, 62, 63, 66, 68, 69, 71, 74, 76, 78, 82, 84, 94, 96, 97, 98, 100, 110, 124, 127, 128, 140, 143, 146, 148, 176, 181, 186, 188, 190, 191, 200, 207, 210, 211, 216, 238], "arrang": [27, 30, 61, 66, 118], "arraylik": 58, "arriv": [29, 36, 53, 56, 58, 66, 74, 77, 98, 109, 155], "arrow": [30, 32, 85], "arrow_length_ratio": 83, "arrowprop": 53, "art": [57, 94], "art3d": 127, "arthur": 61, "articl": [3, 5, 27, 58, 60, 61, 63, 71, 93, 94, 96, 98, 99, 105, 109, 121, 146, 174, 223], "artifact": [48, 72, 100, 106, 120, 217, 218], "artifact_uri": 218, "artifici": [68, 93], "artist": 148, "arxiv": [0, 1, 48, 55, 57, 58, 70, 71, 118, 120, 121, 123, 124], "as_datafram": 62, "as_tensor": 58, "asarrai": [128, 143], "ascend": [17, 27, 30, 43, 59, 76, 99, 112, 113, 123], "ascertain": 68, "ascii_lowercas": 128, "asctim": [54, 69, 75, 111, 112, 113, 114, 115, 120, 121, 214, 217, 231], "ashish": 0, "asian": 99, "asid": [57, 158], "ask": [7, 27, 36, 53, 58, 59, 66, 68, 71, 76, 94, 96, 97, 125, 130, 137, 143, 144, 147, 150, 155, 170, 174, 180, 181, 184, 188, 191, 203, 211, 217, 231], "asli": [0, 48], "aspect": [2, 9, 27, 30, 53, 58, 67, 80, 82, 84, 85, 93, 94, 95, 96, 103, 104, 207, 216, 222], "aspx": 126, "assembl": 222, "assembli": 222, "assert": [2, 4, 8, 9, 27, 43, 53, 58, 59, 62, 66, 69, 75, 89, 94, 112, 113, 114, 115, 117, 118, 119, 120, 123, 217, 218, 227, 237, 238], "assert_allclos": [54, 62, 75], "assert_array_equ": 62, "assert_clos": [56, 58, 59, 124], "assert_equ": [27, 29, 30], "assess": [2, 4, 29, 48, 53, 57, 63, 93, 95, 96, 97, 106, 108, 118], "asset": [27, 59, 63, 82, 83, 213, 238], "assets_dir": 63, "assign": [3, 5, 7, 8, 9, 30, 54, 56, 58, 59, 62, 63, 84, 88, 94, 95, 97, 98, 101, 103, 112, 114, 118, 120, 124, 126, 128, 130, 158, 211, 216, 217, 227, 231, 237, 238], "assign_project": 7, "assignment1": [112, 114], "assignment2": [112, 114, 116], "assimil": 57, "assist": [48, 109], "assisted_decod": 117, "associ": [4, 6, 17, 30, 50, 53, 58, 61, 66, 68, 72, 74, 79, 80, 83, 85, 88, 90, 94, 95, 103, 104, 108, 109, 124, 143, 146, 148, 159, 160, 181, 211, 239], "assum": [3, 4, 5, 6, 7, 11, 13, 16, 17, 19, 20, 26, 27, 29, 30, 34, 35, 37, 43, 44, 51, 53, 56, 57, 58, 59, 61, 63, 66, 67, 68, 71, 72, 74, 76, 77, 80, 82, 85, 87, 88, 89, 94, 95, 98, 100, 102, 103, 118, 119, 123, 124, 125, 126, 128, 130, 133, 134, 146, 159, 167, 173, 174, 180, 188, 191, 192, 201, 211], "assumed_mfu": 118, "assumpiton": 76, "assumpt": [5, 30, 48, 58, 60, 66, 73, 76, 77, 95, 120, 124, 143, 146, 150, 153, 158, 173, 180, 192, 195], "assur": [11, 30, 99], "ast": [94, 186], "aston": [0, 58, 73, 74], "astrai": 48, "astut": 180, "astyp": [58, 62, 63, 76, 207], "asymptot": [16, 29, 46, 66, 74, 203], "async": [48, 115, 216], "async_op": 89, "asynchrn": 111, "asynchron": [48, 78, 91, 111, 112, 113], "asyncio": [48, 115, 213, 230], "asyncopenai": 48, "ate": [20, 58], "aten": [113, 114], "atm": 97, "atol": [58, 62, 75, 124], "atom": [214, 216], "attach": [90, 117], "attachment_id": 90, "attachmentid": 90, "attain": [57, 167], "attempt": [5, 29, 58, 66, 72, 74, 110, 117, 126, 130, 146, 213, 227], "attend": [56, 57, 58, 59, 119], "attent": [0, 1, 53, 55, 61, 62, 64, 66, 70, 71, 72, 78, 79, 97, 112, 114, 118, 120, 121, 122, 161], "attention_mask": [72, 119, 120, 121], "attention_matrix": [59, 119], "attention_scor": [56, 58, 112, 114, 118, 119], "attention_weight": [56, 58, 59, 112, 114, 119], "attention_weights_summed_over_sequ": 58, "attn": [56, 58, 112, 114], "attn_pdrop": [112, 114], "attr": [58, 59, 112, 114], "attract": 96, "attribut": [2, 3, 5, 7, 22, 23, 36, 54, 57, 59, 62, 69, 75, 80, 84, 94, 95, 97, 98, 99, 112, 114, 115, 124, 218, 231, 237, 238], "attributeerror": [3, 5, 7, 9, 54, 58, 59, 231], "attrsettr": 213, "atyp": 66, "au": 57, "auc": [72, 103, 107, 108, 120, 121], "audio": [94, 96, 97, 98, 99], "audit": [48, 99, 108], "aug": [0, 1, 55, 57, 123, 124], "augment": [16, 213, 217], "auroc": [95, 96], "authent": [57, 94, 97, 99], "author": [7, 10, 48, 56, 57, 58, 59, 66, 68, 71, 76, 90, 93, 94, 98, 99, 100, 101, 115, 123, 133, 146, 163, 172, 173, 207, 238], "authorit": 48, "auto": [55, 56, 59, 62, 63, 72, 89, 112, 115, 120, 228], "auto_exampl": 53, "autocal": 117, "autocast": [112, 114], "autocast_config": [59, 119], "autocast_smart_context_manag": 117, "autocomplet": [95, 109], "autoencod": [84, 96], "autofil": 96, "autograd": [89, 114, 115, 124], "autom": [93, 99, 101, 104, 106, 108, 110, 117], "automat": [2, 5, 8, 9, 32, 54, 77, 89, 94, 96, 97, 100, 104, 106, 117, 214, 228, 231, 234], "autonom": [95, 96, 109], "autoregress": [0, 48, 58, 59, 120], "aux": 216, "auxiliari": [17, 36, 46], "avail": [3, 5, 8, 9, 11, 27, 29, 57, 70, 71, 76, 80, 89, 90, 94, 95, 96, 97, 98, 99, 104, 106, 109, 111, 113, 121, 124, 204, 213, 222, 226], "avals2": 156, "avenu": 4, "averag": [11, 17, 32, 36, 43, 48, 50, 53, 58, 59, 61, 62, 63, 66, 68, 72, 76, 87, 95, 96, 98, 99, 100, 102, 103, 106, 107, 120, 123, 126, 141, 142, 146, 150, 155, 156, 159, 164, 165, 179, 184, 185, 208, 211, 217, 239], "average_batch_loss": 59, "average_batch_perplex": 59, "average_precision_scor": [72, 120, 121], "avg": [59, 75, 113, 114, 217, 219], "avg_bia": 218, "avg_expected_loss": 218, "avg_loss": [120, 121], "avg_val_loss": 120, "avg_vari": 218, "avoid": [2, 10, 11, 27, 29, 43, 44, 48, 58, 71, 72, 74, 75, 87, 94, 101, 102, 103, 110, 117, 124, 188, 216, 218, 219, 230, 231, 236], "avro": 97, "aw": [78, 88, 92, 94, 96, 97, 99, 109, 110], "awai": [29, 57, 58, 66, 68, 77, 87, 94, 126, 140, 181, 210], "await": [9, 48, 115, 216], "awaitable_leak": 115, "awaitabletensor": 115, "awaitabletensorwithviewcallback": 115, "awaken": 94, "awar": [32, 56, 97, 120], "awk": 89, "aws_access_kei": 90, "aws_secret_kei": 90, "awscli": 90, "awsec2": 90, "ax": [53, 54, 58, 59, 62, 63, 76, 77, 80, 82, 83, 84, 85, 123, 124, 127, 128, 140, 141, 143, 144, 147, 155, 159, 160, 164, 168, 170, 173, 174, 178, 190, 193, 207, 211], "ax1": 53, "ax2": 53, "ax3": 53, "ax4": 53, "ax_": 68, "ax_0": 80, "ax_1": 68, "ax_kwarg": [82, 83, 84, 85], "axes3d": [76, 127], "axesimag": 63, "axhlin": [68, 76], "axi": [53, 54, 56, 58, 59, 61, 62, 63, 69, 72, 75, 76, 77, 82, 83, 84, 85, 103, 106, 115, 120, 126, 140, 180, 188, 190, 193], "axiom": [29, 78, 84, 126, 130, 135, 174, 203], "axisgrid": 76, "axler": [82, 83], "axvlin": 76, "aznd": 211, "azur": [93, 97, 98, 99], "b": [1, 2, 4, 6, 7, 11, 16, 26, 27, 46, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 76, 77, 79, 80, 82, 83, 84, 85, 101, 103, 108, 110, 112, 114, 115, 117, 118, 119, 120, 124, 126, 128, 130, 131, 132, 133, 134, 136, 141, 142, 146, 148, 150, 155, 156, 160, 162, 163, 164, 166, 168, 170, 171, 173, 174, 176, 181, 186, 188, 190, 192, 195, 200, 203, 216, 217, 221, 231, 233, 234, 238], "b023": 235, "b101": 94, "b201": 94, "b301": 94, "b601": 94, "b_": [56, 114, 115, 118], "b_1": [66, 80, 85, 188], "b_2": [66, 80, 85, 188], "b_3": 80, "b_d": 85, "b_demo": 89, "b_h": 68, "b_i": 80, "b_m": [66, 80], "b_n": [80, 188], "ba": [0, 1, 55, 57, 59, 79], "baa": 20, "babi": 68, "back": [7, 10, 27, 29, 32, 36, 53, 56, 57, 58, 59, 61, 63, 68, 72, 76, 80, 90, 94, 95, 98, 100, 104, 109, 112, 114, 123, 127, 130, 134, 137, 158, 159, 174, 180, 183, 188, 193, 213, 214, 217, 231], "backbon": [57, 58, 63, 71, 99, 112, 114, 119, 120], "backbone_last_layer_hidden_st": 120, "backdrop": 2, "backend": [58, 59, 71, 91, 94, 104, 119], "background": [2, 57, 58, 109, 238], "backoff": 100, "backoff_factor": [59, 119], "backpropag": [58, 59, 71, 84, 118, 124], "backslash": 188, "backtest": 94, "backtick": 7, "backtrack": 106, "backup": [94, 99, 100], "backward": [7, 47, 58, 89, 112, 114, 115, 118, 120, 121, 217], "backward_pass": 114, "backward_tot": 118, "bad": [5, 59, 62, 66, 68, 71, 76, 100, 103, 119, 228], "baddest": 66, "bag": [101, 102], "baguett": 80, "bahdanau": [0, 58, 118], "bake": 80, "balanc": [11, 17, 57, 58, 59, 94, 95, 98, 101, 107, 109, 121, 231], "ball": [2, 3, 4, 130], "banach": [0, 84], "banana": [17, 28, 78, 98], "bandit": 94, "bandwidth": [29, 63, 94, 216], "bank": [57, 58, 94, 97, 98], "bankaccount": 231, "bar": [59, 66, 68, 74, 76, 124, 143, 174, 178, 203, 206, 207, 217], "bar1": 76, "bar2": 76, "bar_label": 174, "barbara": 4, "barcontain": 148, "bare": 218, "barplot": 76, "barrier": [89, 214, 231], "base": [2, 5, 7, 11, 16, 17, 20, 27, 29, 30, 32, 43, 44, 46, 47, 48, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 76, 78, 80, 82, 83, 84, 85, 87, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 117, 119, 122, 123, 124, 127, 144, 186, 198, 201, 204, 210, 212, 213, 216, 217, 219, 221, 222, 226, 227, 228, 230, 231, 237, 238], "base_class": 117, "base_config": 217, "base_ev": 213, "base_model": [72, 119, 120], "base_model_merged_and_unload": 72, "base_model_total_train": 72, "base_model_with_adapt": 72, "base_model_with_adapter_total_train": 72, "basedecod": 58, "baseestim": [8, 54, 62, 75], "basefmt": [143, 159], "baselin": [48, 57, 93, 96, 103, 106, 108], "basemodel": [6, 48, 58, 72, 89, 100, 112, 114, 117, 118, 217, 218, 219, 222, 225, 226, 238], "bash": [90, 100], "bashrc": 90, "basi": [3, 36, 57, 80, 82, 101, 203], "basic": [0, 2, 4, 10, 11, 16, 17, 30, 36, 49, 51, 52, 53, 56, 58, 59, 60, 61, 67, 68, 71, 72, 78, 87, 92, 94, 96, 99, 100, 106, 110, 112, 116, 117, 119, 120, 123, 124, 135, 144, 148, 213, 217, 226], "basic_launch": 217, "basic_schema": 238, "basic_sweep": 217, "basic_typ": 238, "basicconfig": [54, 69, 75, 111, 112, 113, 114, 115, 214, 231], "basicd": [22, 23], "basiclaunch": 217, "basicsweep": 217, "bat": 20, "batch": [57, 58, 69, 71, 72, 76, 93, 98, 106, 112, 114, 117, 118, 119, 120, 121, 213, 217, 218], "batch_decode_equ": 59, "batch_first": [59, 119], "batch_index": [59, 119], "batch_shap": 76, "batch_siz": [58, 59, 72, 112, 114, 118, 119, 120, 121, 213, 217, 219], "batchmean": 121, "batchnorm": 59, "bathroom": [68, 87], "bay": [49, 53, 78, 124, 135, 150, 176, 180, 181, 182, 211], "bayes_pr": 77, "bayes_pred_st": 77, "bayesian": [76, 77, 104, 106, 124], "bazzi": 16, "bbb": 56, "bbox": 53, "bc": 79, "bcheggeseth": 143, "beam": 114, "beam_sampl": 117, "beam_search": 117, "bear": [98, 144], "beast": 100, "beat": [30, 136], "beatrix": 114, "beauti": [94, 99], "becam": 159, "becaus": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 49, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 113, 115, 117, 118, 119, 120, 123, 124, 126, 130, 131, 133, 143, 144, 146, 147, 148, 150, 153, 155, 158, 159, 160, 172, 173, 174, 176, 180, 181, 192, 193, 195, 196, 201, 204, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 225, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239], "becom": [2, 4, 5, 11, 17, 19, 27, 29, 32, 36, 43, 46, 48, 53, 56, 57, 58, 59, 63, 66, 68, 71, 74, 76, 79, 80, 83, 95, 96, 98, 99, 100, 104, 106, 109, 110, 113, 123, 124, 130, 132, 136, 143, 148, 172, 174, 176, 180, 181, 188, 193, 195, 200, 203, 207, 208, 211, 213, 221, 222, 228, 230, 231, 236, 238], "bed": 68, "bedrock": 30, "bedroom": [68, 87], "been": [5, 9, 27, 29, 30, 36, 43, 48, 53, 55, 58, 61, 66, 69, 72, 84, 85, 87, 88, 90, 94, 99, 100, 101, 103, 107, 108, 110, 117, 130, 190, 212, 213, 218, 227, 237, 238], "befor": [2, 3, 7, 9, 10, 13, 17, 19, 27, 29, 30, 32, 36, 43, 57, 58, 59, 61, 63, 68, 69, 71, 72, 74, 75, 76, 77, 80, 83, 85, 89, 90, 91, 94, 95, 96, 98, 100, 101, 102, 103, 106, 108, 109, 111, 112, 115, 117, 118, 120, 123, 124, 155, 172, 174, 181, 188, 207, 211, 212, 213, 214, 216, 217, 218, 227, 229, 230, 231], "beforehand": [46, 59, 61], "begin": [11, 16, 19, 20, 27, 29, 30, 32, 36, 43, 44, 46, 47, 50, 51, 52, 53, 56, 57, 58, 59, 61, 63, 64, 66, 68, 71, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 94, 96, 97, 100, 103, 106, 110, 118, 123, 124, 126, 127, 130, 137, 139, 140, 143, 144, 146, 147, 148, 150, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 178, 180, 181, 183, 184, 186, 188, 190, 191, 192, 193, 195, 198, 200, 201, 210, 211], "beginn": [59, 102, 106, 121, 130, 132, 231], "behalf": 90, "behav": [2, 4, 6, 7, 48, 66, 80, 94, 180, 226, 233, 234, 236], "behavior": [2, 3, 4, 7, 29, 30, 32, 36, 58, 59, 66, 71, 87, 93, 94, 95, 96, 101, 102, 103, 106, 109, 110, 120, 121, 123, 199, 213, 214, 216, 217, 219, 222, 230, 233, 235, 236], "behaviour": [7, 9, 58, 59, 114], "behind": [19, 27, 29, 32, 43, 44, 56, 58, 59, 61, 83, 100, 123, 126], "beij": [93, 95, 97, 98, 100], "being": [2, 4, 6, 7, 9, 11, 16, 27, 29, 30, 32, 36, 46, 50, 53, 56, 57, 58, 59, 61, 63, 66, 68, 74, 76, 77, 79, 80, 84, 91, 94, 95, 96, 98, 99, 101, 109, 118, 120, 123, 124, 130, 131, 143, 148, 155, 159, 160, 174, 180, 181, 183, 211, 213, 216, 219, 227, 231, 238], "believ": [57, 58, 66, 76, 96, 133, 158], "bell": [98, 117, 172, 180], "belong": [2, 6, 53, 54, 56, 58, 61, 62, 74, 76, 82, 103, 106, 124, 132, 170], "below": [2, 3, 5, 6, 7, 8, 16, 17, 20, 23, 27, 29, 30, 32, 36, 44, 53, 56, 57, 58, 59, 61, 63, 66, 68, 71, 72, 74, 76, 79, 80, 84, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 113, 115, 118, 119, 120, 123, 124, 126, 127, 128, 130, 131, 133, 134, 137, 143, 144, 146, 147, 148, 155, 156, 158, 160, 167, 168, 169, 170, 172, 174, 176, 178, 180, 183, 188, 200, 207, 210, 211, 214, 216, 217, 218, 221, 225, 226, 229, 234, 236, 237, 238], "ben": 66, "benchmark": [57, 58, 68, 71, 95, 96, 102, 104, 106, 108, 114, 116], "bend": [30, 32], "benderski": 124, "beneath": 58, "benefici": [5, 30, 56, 57, 58, 59, 84, 94, 101, 102, 216, 218, 219], "benefit": [30, 48, 57, 58, 100, 120, 213, 216, 230, 231, 239], "bengio": [0, 1, 77, 124], "benign": 103, "bentlei": 16, "ber": 207, "bern": [144, 146, 147, 148, 186], "bernoulli": [52, 56, 74, 76, 78, 148, 149, 152, 154, 158, 180, 184], "bernoullibinomi": 143, "bert": 96, "besid": [9, 58, 74, 79, 202, 205, 218], "best": [11, 17, 36, 50, 53, 58, 59, 61, 62, 63, 66, 68, 74, 80, 87, 93, 96, 97, 98, 99, 101, 102, 106, 109, 111, 127, 136, 179, 210, 211, 216, 218, 233], "bet": 58, "beta": [56, 58, 59, 66, 68, 69, 77, 80, 96, 119, 124, 171, 178, 211, 217], "beta_": 68, "beta_0": 68, "beta_1": [59, 68], "beta_1x_1": 68, "beta_2": [59, 68], "beta_3": 68, "beta_d": [56, 58, 68], "beta_h": 68, "beta_hat": 68, "beta_k": 68, "beta_n": 68, "better": [3, 6, 11, 17, 29, 46, 48, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 76, 77, 80, 87, 93, 94, 95, 96, 97, 98, 101, 102, 104, 106, 108, 110, 116, 119, 120, 121, 123, 130, 174, 179, 202, 205, 210, 217], "better_knowledge_distil": 121, "between": [2, 5, 6, 7, 8, 9, 11, 16, 17, 19, 27, 29, 30, 43, 47, 50, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 69, 71, 74, 76, 77, 79, 80, 82, 83, 84, 87, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 110, 118, 119, 121, 123, 124, 126, 130, 137, 148, 155, 158, 159, 162, 170, 174, 178, 179, 180, 182, 190, 203, 206, 207, 211, 213, 216, 218, 219, 221, 222, 233, 234, 236], "bewar": [11, 17], "beyond": [0, 1, 17, 20, 27, 29, 36, 55, 57, 59, 77, 95, 102, 103, 104, 106, 108, 110, 117, 123], "bf16": 118, "bfloat16": [112, 114, 117, 118], "bgrcmyk": 54, "bi": [57, 58, 98], "bia": [48, 56, 58, 59, 66, 72, 77, 87, 94, 106, 108, 112, 114, 118, 119, 120, 121, 123, 124], "bias": [56, 57, 58, 59, 68, 94, 101, 104, 110, 118, 144], "bibliographi": 78, "bic": 53, "bidirect": [57, 58], "big": [11, 13, 16, 17, 19, 29, 43, 59, 66, 68, 70, 71, 74, 77, 95, 100, 195, 217, 229, 238], "bigcap_": 74, "bigcup": 66, "bigcup_": [56, 66, 130, 203], "bigger": [5, 66], "biggest": 102, "bigo": 68, "bigoplus_": 56, "bigqueri": [96, 98, 99], "bigsqcup_": [61, 124, 131], "biject": [56, 119, 137, 162], "bike": 101, "bilinear": 85, "bill": [26, 76, 94], "bill_depth_mm": 76, "bill_length_mean_std": 76, "bill_length_mm": 76, "billion": [68, 71, 77, 211, 223], "bin": [53, 58, 76, 89, 90, 94, 100, 103, 143, 146, 148, 156, 159, 171, 174, 207, 216], "bin_56": 174, "bin_67": 174, "bin_78": 174, "bin_89": 174, "bin_910": 174, "bin_end": 174, "bin_interv": 174, "bin_start": 174, "binari": [11, 16, 30, 47, 53, 56, 58, 66, 74, 76, 77, 78, 94, 95, 96, 98, 99, 102, 103, 106, 108, 115, 143, 144, 148], "binary_search": [11, 27], "binary_search_it": 27, "binary_search_recurs": 27, "binary_search_recursive_help": 27, "bincount": [54, 75, 124], "bind": [5, 78, 146, 221, 232], "binom": [146, 147, 148, 155, 156, 207], "binomi": [0, 76, 77, 78, 144, 148, 154, 158, 184, 186, 200, 207], "biomark": 95, "bird": [2, 3], "birth": 238, "birth_dat": 238, "bisco": 76, "bisect": 27, "bishop": [0, 1, 52, 53, 60, 61, 63, 67, 68, 73, 74, 124, 193, 194], "bit": [27, 30, 46, 57, 58, 66, 68, 70, 74, 76, 77, 89, 96, 97, 105, 106, 118, 123, 126, 146, 159, 180, 211, 217, 231], "bitbucket": 94, "bitshift": 4, "bivari": [76, 178], "bk": 66, "bla": 97, "blabber": 124, "black": [48, 53, 58, 62, 66, 69, 76, 77, 94, 96, 107, 116, 127, 130, 143, 146, 148, 159, 171, 174, 190, 207], "blacklist": [59, 94], "blacklist_weight_modul": 59, "blind": 48, "bloat": 222, "blob": [53, 72, 75, 97, 99, 112, 114, 214, 231], "blob_cent": 53, "blob_std": 53, "block": [11, 35, 57, 59, 85, 91, 94, 97, 111, 112, 113, 114, 118, 213, 216, 227, 228, 231], "block_siz": [58, 118], "blog": [27, 30, 57, 58, 61, 68, 70, 90, 99, 102, 110, 115, 118, 194], "blood": 96, "bloom": 0, "blostein": 16, "blue": [32, 53, 56, 63, 66, 69, 76, 80, 83, 84, 85, 108, 130, 171, 178, 190], "blur": [57, 59], "bmatrix": [53, 56, 58, 61, 63, 68, 74, 80, 82, 83, 84, 85, 87, 97, 118, 124, 127, 178, 188, 190, 191, 192, 193, 211], "bmm": 114, "bmmbackward0": 114, "bmp": 63, "bmw": 97, "bo": [53, 56, 59, 146, 148, 156], "board": 112, "bob": [5, 98, 229], "bodi": [8, 30, 76, 213], "body_mass_g": 76, "bogosort": 94, "boil": [66, 68, 229], "boilerpl": 94, "bold": [68, 74, 76, 82, 188], "boldsymbol": [50, 51, 52, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 71, 74, 75, 76, 87, 97, 123, 127, 178, 188, 190, 191, 192, 193, 195, 196, 210, 211], "bone": 181, "book": [0, 22, 23, 32, 53, 58, 64, 67, 68, 76, 80, 87, 94, 96, 102, 106, 109, 125, 147, 173, 181, 203, 211, 214, 228, 231], "bookmark": 158, "bool": [2, 5, 7, 22, 23, 25, 29, 30, 32, 35, 36, 48, 54, 58, 59, 62, 63, 66, 69, 71, 100, 104, 111, 112, 114, 115, 117, 118, 119, 120, 123, 127, 128, 171, 174, 216, 217, 218, 219, 225, 226, 227, 238, 239], "bool_typ": 238, "boolean": [5, 9, 30, 58, 63, 66, 97, 128, 238], "booleanpair": 5, "booltensor": [58, 59, 112, 114, 119, 120], "boost": [94, 96, 102, 228], "bootstrap": 107, "border": [30, 32], "born": [5, 10, 98], "born_in": 98, "bos_token": 120, "boss": [103, 179, 211], "boston": [60, 61, 67, 68, 73, 74], "bot": 58, "both": [2, 3, 4, 5, 6, 7, 8, 9, 11, 17, 20, 22, 23, 29, 30, 32, 36, 44, 46, 47, 48, 53, 54, 56, 57, 58, 59, 61, 62, 66, 68, 71, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 89, 90, 94, 95, 96, 97, 98, 100, 101, 104, 106, 108, 109, 118, 119, 120, 124, 125, 130, 131, 132, 136, 143, 146, 159, 171, 172, 174, 176, 179, 180, 191, 210, 211, 213, 214, 216, 218, 219, 221, 225, 226, 230, 231, 233], "bother": 6, "boto3": 99, "bottleneck": [94, 99, 100, 118, 216, 231], "bottom": [36, 66, 76, 82, 83, 84, 85, 124, 127, 216], "bottom_bar": 76, "bottou": 77, "bound": [5, 9, 10, 11, 16, 27, 29, 30, 32, 36, 49, 56, 57, 58, 59, 61, 65, 78, 85, 94, 96, 102, 117, 123, 126, 160, 163, 204, 206, 207, 208, 213, 222, 229], "boundari": [6, 27, 29, 46, 53, 66, 75, 95, 101, 124], "bounded": [56, 58], "boundedfloattext": 156, "bow": 101, "bowl": 229, "box": [30, 32, 48, 53, 96, 107, 109, 116, 158, 176, 217], "box1": 30, "box7": 30, "bpe": 58, "bracket": 35, "branch": [3, 48, 94, 211], "brandon": [57, 58], "breach": [94, 108], "bread": 80, "break": [2, 7, 19, 27, 30, 36, 41, 43, 46, 48, 53, 54, 58, 59, 62, 71, 72, 76, 90, 94, 96, 100, 119, 120, 121, 123, 126, 234], "breakdown": [46, 47, 76, 213, 235], "breast": 211, "breath": [29, 48], "brent": 58, "brick": 94, "bridg": [79, 97], "brief": [3, 48, 70, 71, 94, 96, 97, 102], "brief_explan": 48, "briefli": [27, 30, 58, 59, 68, 124], "brier": [72, 120], "brier_scor": [72, 120], "brier_score_loss": [72, 120, 121], "brilliant": 48, "bring": [71, 74, 98], "broad": [57, 67, 100, 109, 117], "broadcast": [6, 53, 54, 56, 59, 119, 120], "broadcast_prior": 54, "broader": [5, 7, 29, 59, 83, 94, 99, 109], "broadli": 5, "broken": [29, 48, 57, 66, 94, 96, 134, 136, 181], "broker": 97, "brows": [96, 109], "browser": [32, 94, 97], "brute": [19, 30, 43, 74], "bryan": 0, "bslatkin": [214, 231], "bson": 98, "bst": 27, "bt": 58, "bt1p5tjwn_0": 143, "bubbl": 27, "bucket": 17, "buddi": 238, "budget": [95, 97], "buffer": [89, 112, 114, 115, 117, 118], "bug": [3, 5, 27, 48, 100, 216, 218, 231, 236], "bugbear": 94, "buggi": 236, "bui": [30, 98, 146], "build": [3, 7, 11, 44, 56, 57, 58, 59, 66, 76, 77, 80, 85, 95, 96, 98, 99, 100, 101, 103, 106, 107, 119, 126, 174, 208, 226], "build_meta": 94, "builder": [100, 226], "built": [8, 19, 32, 58, 59, 66, 71, 77, 94, 97, 98, 99, 100, 104, 108, 113, 117, 213, 217, 230, 231], "builtin": [5, 8, 94, 117, 213, 230], "bullet": [66, 94], "bump": [66, 143, 146], "bunch": [50, 118], "burden": [56, 57], "burst": 90, "busi": [66, 68, 94, 98, 99, 100, 101, 103, 106, 108, 109, 217], "buster": 100, "butter": 80, "button": [32, 211], "buyer": 98, "bwd": 118, "bxc": 118, "bxd": 118, "bxt": 59, "by_0": 80, "by_kei": 53, "bypass": [5, 27, 94, 216], "byte": [11, 58, 97, 118, 213], "bytecod": [216, 231], "byteunit": 118, "c": [0, 1, 2, 3, 4, 7, 8, 10, 11, 16, 26, 27, 29, 30, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 68, 69, 71, 73, 74, 76, 79, 80, 82, 83, 84, 85, 87, 97, 102, 113, 115, 117, 118, 119, 120, 123, 124, 130, 131, 132, 133, 136, 141, 142, 158, 164, 167, 173, 176, 181, 186, 188, 190, 191, 193, 200, 217, 237, 238], "c10d": [89, 90], "c3": [143, 159], "c3o": [143, 159], "c408": [112, 114], "c416": 59, "c_": [16, 27, 53, 56, 57, 62, 118], "c_1": [53, 61, 62], "c_2": [53, 61, 62], "c_3": 53, "c_k": [53, 61, 62], "c_proj": 58, "cabl": 94, "cach": [11, 72, 94, 97, 100, 109, 112, 117, 121, 216, 225], "cache_config": 225, "cache_en": [59, 119], "cache_host": 225, "cache_port": 225, "cache_typ": 225, "cacheconfig": 225, "cached_func": 236, "cachedfunc": 236, "cafe": [64, 179], "caim": 0, "caiu": 58, "cake": 179, "calc_vowel_consonant_prob": 128, "calciii": 126, "calcul": [4, 7, 11, 17, 19, 27, 29, 43, 46, 53, 54, 56, 57, 58, 59, 62, 63, 66, 68, 69, 71, 74, 75, 76, 77, 78, 80, 84, 85, 87, 94, 98, 100, 106, 107, 109, 110, 115, 122, 126, 127, 128, 130, 148, 180, 181, 182, 231], "calculate_al": 7, "calculate_checkpoint_s": 118, "calculate_fluff_ratio": 118, "calculate_memory_ratio": 118, "calculate_num_bit": 63, "calculate_same_birthday_prob": 128, "calculate_same_birthday_probability_rng_choic": 128, "calculu": [68, 78, 96, 118, 124, 129, 166, 181, 211], "calibr": [57, 96, 106], "call": [2, 3, 5, 6, 7, 8, 9, 11, 16, 17, 22, 27, 29, 30, 32, 36, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 79, 80, 84, 85, 88, 89, 91, 94, 97, 98, 100, 110, 111, 113, 114, 115, 117, 118, 119, 120, 123, 124, 126, 127, 134, 137, 139, 142, 143, 144, 147, 151, 155, 158, 159, 162, 178, 188, 192, 200, 213, 214, 217, 218, 219, 221, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238], "call_at": 213, "call_lat": 213, "call_model_init": 117, "call_soon": 213, "callabl": [2, 58, 59, 62, 69, 97, 113, 115, 117, 221, 222, 226, 228, 229, 234, 235, 238], "callback": [59, 115, 117, 118, 217, 219], "caller": [7, 155, 213, 221], "cam": 102, "cambridg": [0, 1, 49, 52, 53, 55, 57, 66, 73, 74, 79, 80, 84, 123, 124], "came": [22, 57, 58, 59, 94, 211], "camera": [30, 96, 101, 109], "campaign": 109, "can": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 23, 25, 26, 27, 29, 30, 32, 36, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 153, 155, 156, 158, 159, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238], "can_gener": 117, "can_we_fli": [2, 3], "canari": 108, "cancel": [66, 74, 85, 95, 118, 181], "cancer": [96, 103, 106, 181, 211], "candid": [29, 66, 108, 210], "cannot": [2, 3, 4, 6, 7, 11, 16, 19, 27, 29, 30, 32, 35, 36, 43, 48, 49, 50, 53, 57, 58, 59, 61, 64, 66, 68, 71, 74, 76, 80, 84, 85, 96, 98, 117, 119, 130, 131, 133, 140, 143, 155, 174, 181, 211, 216, 217, 221, 226, 238, 239], "canon": 217, "cap": [53, 57, 66, 94, 131, 132, 133, 134, 136, 176, 180, 181, 186, 238], "capabl": [2, 5, 7, 48, 57, 58, 77, 94, 97, 99, 100, 109, 117, 118, 216], "capac": [17, 32, 56, 58, 87, 94, 95, 99, 105, 106, 118], "capit": [98, 109, 229, 238], "capitalize_nam": 238, "captcha": 99, "caption": 96, "captiv": 29, "captur": [8, 29, 53, 56, 57, 58, 59, 66, 68, 71, 74, 93, 94, 96, 99, 101, 109, 110, 115, 124, 191, 235], "car": [2, 3, 6, 97, 101, 196], "card": [96, 97, 109], "cardin": [61, 66], "care": [4, 5, 11, 48, 59, 62, 66, 68, 100, 106, 125, 128, 130, 136, 155, 238], "carefulli": [22, 36, 53, 56, 58, 66, 68, 74, 76, 90, 94, 95, 96, 101, 130, 137, 158, 174, 207, 211, 218, 231], "carelessli": 58, "carlo": 53, "carol": 98, "carri": [56, 57, 58, 74, 96, 100], "cart": 109, "cartesian": [57, 80, 94], "case": [2, 4, 5, 7, 8, 20, 35, 41, 44, 46, 47, 50, 51, 53, 56, 57, 59, 61, 62, 63, 64, 71, 72, 74, 76, 77, 83, 84, 85, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 111, 117, 118, 119, 120, 123, 126, 127, 128, 131, 137, 140, 143, 144, 146, 148, 158, 159, 160, 161, 162, 166, 168, 169, 173, 174, 176, 179, 180, 183, 190, 191, 200, 204, 211, 212, 216, 217, 227, 228, 229, 231, 236, 237, 238, 239], "caskroom": [62, 117, 230, 231], "cassandra": [97, 99], "cast": [5, 54, 58, 59, 112, 114, 121, 213], "cat": [2, 3, 6, 23, 52, 53, 56, 57, 58, 87, 89, 90, 94, 96, 97, 98, 121], "catagor": [75, 211], "catalog": [30, 95, 97], "catch": [3, 5, 6, 48, 68, 76, 94, 213, 234, 238], "categor": [59, 61, 66, 82, 96, 97, 101, 102, 103, 178], "categori": [2, 47, 57, 58, 59, 71, 74, 75, 76, 77, 95, 96, 97, 104, 109, 143, 146, 148, 156, 159, 222, 229], "catgor": 74, "cauchi": 198, "caught": [3, 5, 94, 213], "caus": [3, 5, 6, 11, 17, 23, 50, 53, 57, 58, 59, 62, 63, 66, 68, 71, 98, 104, 112, 114, 124, 128, 136, 144, 169, 170, 174, 181, 190, 207, 211, 213, 217, 229, 231, 234], "causal": [112, 114, 120, 121], "causal_attent": 58, "causal_mask": [112, 114, 120], "causal_mha": 58, "causalmultiheadselfattent": [112, 114], "caution": [66, 211], "caveat": 74, "cbaebabacd": 41, "cbar": [68, 76], "cc": [72, 217], "ccc": [53, 74, 191], "cccc": [56, 58, 68, 181, 188, 190], "cd": [90, 99, 106, 108], "cdf": [56, 58, 68, 143, 154, 158, 159, 162, 163, 196], "cdot": [13, 19, 20, 27, 29, 30, 43, 48, 50, 53, 56, 57, 58, 59, 61, 63, 64, 66, 68, 71, 74, 76, 77, 80, 82, 83, 84, 85, 87, 118, 121, 124, 134, 137, 141, 142, 144, 147, 150, 151, 155, 159, 164, 165, 172, 173, 174, 176, 178, 181, 183, 186, 188, 190, 191, 192, 193, 196, 198, 200, 201, 203, 207, 211], "ce": 121, "ce_loss": 121, "ceil": [27, 63, 213], "celikyilmaz": [0, 48], "cell": [58, 59, 61, 62, 72, 117, 123, 226], "censu": 97, "center": [9, 30, 32, 53, 54, 58, 62, 68, 75, 87, 124, 127, 180, 190, 193], "central": [7, 76, 80, 82, 83, 94, 98, 99, 100, 104, 106, 108, 172, 178, 216, 219, 222, 225, 226], "centroid": [53, 54, 62, 63], "centroids_s": 63, "centuri": 10, "ceo": 7, "certain": [2, 6, 11, 17, 29, 30, 43, 47, 56, 57, 59, 61, 66, 68, 76, 77, 79, 80, 83, 93, 94, 96, 98, 100, 101, 103, 105, 106, 109, 123, 124, 126, 130, 159, 187, 200, 203, 204, 211, 216, 217], "certainli": 47, "certainti": [79, 96, 103], "certifi": 66, "cfg": [59, 94, 100, 217], "cfn": 90, "chadha": [57, 58], "chain": [0, 4, 17, 56, 66, 68, 71, 74, 77, 78, 96, 124, 126, 217], "challeng": [29, 36, 57, 58, 59, 61, 68, 71, 94, 95, 96, 109, 236], "chan": [0, 66, 68, 73, 74, 76, 130, 133, 137, 141, 142, 144, 147, 151, 153, 155, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 200, 201, 203, 204, 206, 207, 208, 210, 211], "chanc": [30, 53, 58, 65, 66, 68, 76, 94, 103, 108, 128, 130, 136, 144, 160, 180], "chang": [2, 3, 7, 11, 27, 30, 36, 43, 44, 46, 53, 57, 58, 59, 61, 62, 66, 68, 71, 74, 76, 82, 83, 90, 93, 94, 95, 98, 99, 100, 101, 102, 104, 106, 109, 110, 117, 119, 123, 124, 125, 126, 136, 142, 155, 170, 173, 180, 190, 192, 193, 211, 217, 218, 219, 221, 222, 225, 228, 230, 236, 237, 238, 239], "changer": 30, "channel": [63, 77, 176, 180, 196], "chaotic": 106, "chapman": 76, "chapter": [30, 49, 51, 52, 53, 55, 57, 58, 60, 61, 63, 66, 67, 68, 73, 74, 76, 78, 80, 82, 83, 84, 87, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 123, 124, 125, 130, 133, 137, 141, 142, 144, 147, 150, 151, 153, 155, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 185, 187, 190, 193, 194, 196, 198, 200, 201, 203, 204, 206, 211, 214, 216, 231], "chapter3": 143, "chapter5": 185, "chapter_appendix": 77, "chapter_linear": 66, "char": [20, 25, 35, 37, 41, 58, 192], "charact": [20, 34, 35, 37, 56, 57, 58, 59, 94, 96, 97, 98, 238], "character": [27, 32, 48, 50, 57, 66, 74, 83, 87, 88, 193, 196, 210], "characterist": [2, 11, 19, 30, 36, 58, 59, 76, 78, 80, 94, 95, 97, 101, 103, 106, 124, 180, 209, 222], "charger": 30, "charl": 0, "charlesreid1": 226, "charli": 5, "chart": [76, 127], "chase": [29, 56], "chat": 48, "chatbot": [95, 109], "chatgpt": [57, 58, 99, 234], "chdir": 217, "cheap": [68, 90, 97], "cheaper": 94, "cheat": 66, "check": [2, 4, 5, 6, 8, 9, 10, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 47, 48, 53, 54, 58, 66, 68, 72, 76, 77, 90, 98, 99, 100, 104, 105, 106, 108, 120, 121, 128, 132, 136, 159, 195, 206, 211, 213, 216, 217, 218, 227, 233, 234, 236, 238, 239], "check_cod": 94, "check_output": 104, "check_palindrom": 25, "checkabl": 48, "checker": [2, 3, 4, 5, 6, 7, 32, 48, 94], "checklist": 108, "checkout": [94, 104], "checkpoint": [57, 58, 59, 72, 91, 100, 119, 120, 121, 218], "checkpoint_s": 118, "chees": [56, 179, 229], "chef": 90, "chelsea": 0, "chemistri": 48, "chen": [0, 1, 55, 57, 70, 71, 80, 123], "cheng": [0, 49, 52, 53], "chervonenki": [66, 87], "chess": 29, "chicken": 58, "chief": 58, "child": [0, 1, 16, 55, 57, 216], "child_class_methods_using_dict": 117, "child_class_methods_using_dir": 117, "child_class_methods_using_getmemb": 117, "child_class_methods_using_var": 117, "childclass": 117, "children": [16, 72, 117], "chinstrap": 76, "chip": [60, 64, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110], "chloe": 98, "chmod": [90, 100], "cho": 0, "choic": [11, 29, 30, 50, 53, 54, 56, 58, 59, 61, 62, 66, 68, 74, 80, 82, 84, 95, 96, 97, 98, 99, 102, 103, 104, 106, 109, 123, 124, 125, 126, 128, 130, 133, 136, 143, 146, 148, 159, 211, 216, 217, 226], "choo": [80, 125], "choos": [8, 16, 29, 30, 53, 56, 59, 66, 68, 74, 87, 94, 97, 99, 102, 106, 109, 117, 118, 119, 124, 125, 130, 148, 203, 216], "choose_backend": 230, "choosealicens": 94, "chop": 229, "chose": [58, 66, 115, 130], "chosen": [27, 29, 52, 53, 54, 56, 58, 61, 66, 72, 80, 82, 94, 97, 101, 104, 106, 109, 128, 146, 150, 183], "chosen_lett": 128, "christian": [113, 114, 116], "christianjmil": 112, "christoph": [0, 52, 53, 60, 61, 63, 67, 68, 73, 74, 124, 193, 194], "chromadb": 7, "chrome": [113, 216], "chronolog": 30, "chunk": [58, 59, 222], "chunk_siz": 58, "chunker": 222, "chunker_typ": 222, "churn": [95, 96], "ci": [60, 99, 106, 108], "cifar10": 217, "cine": 57, "cinema": 57, "circ": [66, 74], "circl": [57, 61, 66, 128, 132, 133, 207, 231], "circle_color": 53, "circular": [4, 53], "circumv": 216, "citat": 78, "cite": [50, 57, 65, 74, 77, 94, 118, 126, 130, 158], "citet": 77, "citi": [98, 101, 238], "citizen": [7, 58], "civitai": 70, "ck": 85, "ckpt": 118, "cl": [2, 7, 9, 56, 58, 117, 120, 217, 218, 219, 222, 225, 226, 227, 228, 229, 237, 238], "cl100k_base": 58, "clabel": [127, 190], "claim": [29, 48, 53, 59, 61, 64, 68, 123, 125, 130, 193, 202, 205], "clarifi": [11, 17, 43, 109, 213], "clariti": [2, 4, 5, 9, 27, 32, 59, 83, 85, 89, 180], "class": [3, 4, 5, 6, 7, 8, 9, 13, 19, 20, 22, 23, 25, 26, 27, 29, 32, 34, 35, 37, 41, 43, 44, 48, 51, 53, 54, 57, 58, 59, 61, 62, 66, 68, 69, 72, 75, 76, 77, 78, 87, 89, 94, 95, 96, 100, 102, 103, 106, 112, 114, 115, 118, 119, 120, 121, 124, 126, 136, 155, 174, 196, 210, 213, 214, 217, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 234, 236, 237, 238], "class_annot": 117, "class_attr": 117, "class_child": 117, "class_child_all_memb": 117, "class_colour": 76, "class_condit": 76, "class_field": 117, "class_id": 76, "class_idx": 62, "class_index": [72, 120], "class_method": 117, "class_nam": [75, 76], "class_par": 117, "class_prior_": 75, "classcastexcept": 5, "classes_to_inspect": 117, "classic": [7, 17, 32, 47, 48, 73, 80, 94, 96, 101, 102, 109, 115, 126], "classif": [50, 51, 53, 57, 61, 68, 70, 72, 73, 74, 75, 76, 78, 87, 94, 96, 97, 101, 102, 106, 107, 110, 121, 122, 124, 210, 211, 221], "classifi": [2, 13, 47, 49, 57, 61, 66, 73, 74, 75, 78, 87, 96, 102, 103, 119, 121, 180], "classmethod": [2, 117, 217, 218, 219, 222, 225, 226, 228, 229, 238], "classvar": 7, "claudio": 94, "claus": [35, 98, 213], "clean": [48, 57, 94, 99, 100, 101, 225, 228], "clean_data": 100, "clean_up_tokenization_spac": [120, 121], "cleaner": [19, 94, 219, 222], "cleanup": [112, 213], "clear": [4, 5, 6, 8, 9, 16, 32, 50, 53, 56, 57, 58, 59, 61, 62, 66, 68, 71, 77, 87, 94, 95, 98, 108, 115, 119, 131, 133, 134, 143, 180, 181, 183, 213, 221, 228], "clear_output": 119, "clearer": [9, 58, 94, 113], "clearli": [2, 29, 36, 44, 57, 58, 63, 77, 94, 95, 98, 119, 207, 211], "clerk": 58, "clever": [126, 211], "clf": 156, "click": [30, 32, 89, 95, 96, 109, 110], "client": [29, 48, 90, 94, 97, 222], "clifford": 0, "clinic": 95, "clinician": 95, "clip_grad_norm": [59, 119], "clock": 29, "clone": [58, 59, 90, 114], "close": [4, 5, 9, 27, 29, 35, 50, 56, 57, 58, 62, 66, 68, 69, 76, 90, 96, 103, 108, 110, 118, 124, 126, 143, 159, 170, 174, 176, 178, 208, 211, 223, 228], "close_al": 77, "closer": [36, 53, 56, 58, 59, 61, 68, 84, 85, 96, 109, 124, 146, 159, 172, 208], "closest": [53, 61, 62, 63, 64, 76, 109], "closur": [48, 78, 79, 232], "cloud": [29, 66, 90, 94, 97, 99, 100, 109, 110], "cloudwatch": 110, "clr": 30, "clue": 180, "cluster": [17, 52, 54, 62, 63, 68, 75, 78, 84, 87, 88, 89, 96, 99, 100, 101, 102, 106], "cluster_1": 62, "cluster_2": 62, "cluster_3": 62, "cluster_assign": 62, "cluster_centers_": 63, "cluster_idx": 62, "cluster_nam": 90, "cluster_std": [53, 54, 62], "clustermgtd": 90, "clusterstatusmgtd": 90, "cm": [53, 68, 158, 159], "cmap": [53, 58, 59, 62, 68, 119, 127, 128, 190], "cmd": 100, "cmu": [61, 66, 174], "cn": 48, "cnn": [96, 98, 102], "co": [16, 53, 56, 58, 59, 72, 76, 85, 121, 123, 178], "coars": [63, 174], "cockroachdb": 98, "codd": 98, "code": [2, 3, 4, 5, 6, 7, 8, 9, 11, 17, 20, 29, 35, 53, 56, 57, 58, 59, 61, 62, 66, 68, 74, 76, 77, 78, 83, 88, 90, 91, 98, 99, 100, 105, 111, 113, 115, 116, 117, 118, 119, 120, 123, 124, 127, 128, 143, 146, 156, 158, 170, 190, 203, 204, 207, 211, 213, 214, 216, 217, 218, 219, 221, 222, 223, 225, 228, 230, 231, 234, 237, 238], "code_": 238, "code_456": 238, "code_aaa": 238, "codebas": [94, 104, 117, 216, 217, 218, 219, 222, 225], "codebook": 63, "codomain": [56, 137], "coef": 69, "coef_": [68, 69], "coef_valu": 68, "coeff": 75, "coeffici": [19, 43, 69, 80, 103, 158, 179, 192, 203], "coerc": [2, 5, 238], "coercion": [8, 58, 94, 217, 238], "coerciv": [1, 10], "coexist": 5, "coffe": 179, "cognit": 48, "coher": [57, 58, 63], "cohes": [8, 94, 97, 100], "cohesion_arrai": 11, "cohesion_list": 11, "coin": [66, 130, 131, 146, 148], "coincid": [36, 58, 59, 61, 63, 68, 74, 75, 80, 118, 123, 124, 128, 137, 218], "col": [82, 97, 112], "col_idx": 97, "col_v": 82, "colab": [57, 58], "cold": [112, 146], "collabor": [36, 94, 99, 100, 104, 108, 110], "collaps": 88, "collat": [53, 121, 211], "collate_fn": [59, 119, 120, 121], "collate_fn_config": 59, "collate_for_birect": 119, "collate_for_unidirect": [119, 120], "collated_batch": 119, "colleagu": 203, "collect": [2, 6, 7, 8, 11, 20, 32, 44, 53, 54, 56, 57, 61, 62, 66, 68, 71, 75, 79, 82, 87, 88, 89, 94, 95, 96, 97, 98, 100, 101, 102, 106, 107, 109, 110, 112, 113, 114, 115, 120, 121, 124, 128, 130, 174, 203, 206, 211, 213, 226, 239], "colleg": [85, 174], "collinear": 85, "colon": 79, "color": [53, 54, 56, 58, 62, 63, 66, 68, 69, 76, 80, 82, 83, 84, 85, 94, 98, 101, 115, 127, 128, 130, 137, 143, 146, 148, 156, 159, 171, 174, 178, 190], "color_bgr2rgb": 63, "color_it": 53, "colorbar": [58, 127, 128, 190], "colored_imag": 63, "colour": 76, "columbia": 30, "column": [11, 53, 54, 56, 58, 59, 62, 68, 71, 74, 75, 76, 82, 83, 87, 96, 98, 107, 112, 113, 117, 124, 180, 181, 192, 207, 211], "com": [0, 36, 53, 58, 59, 63, 69, 71, 72, 74, 76, 90, 94, 112, 114, 120, 121, 126, 128, 143, 146, 148, 158, 185, 214, 216, 223, 231, 234, 237, 238], "combin": [5, 6, 8, 16, 20, 30, 48, 52, 53, 54, 56, 57, 58, 59, 61, 64, 68, 76, 77, 78, 79, 83, 87, 89, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 121, 123, 129, 136, 142, 217, 226, 228], "combinatori": [29, 57, 61], "combo": 76, "come": [2, 3, 5, 7, 8, 11, 17, 19, 27, 29, 32, 53, 56, 58, 59, 61, 63, 66, 71, 72, 74, 76, 80, 84, 94, 95, 96, 98, 99, 100, 104, 106, 109, 118, 123, 124, 128, 130, 148, 158, 174, 180, 181, 186, 195, 211, 213, 216, 217, 218], "comm": 89, "command": [71, 94, 109, 118, 216, 217], "commenc": 123, "comment": [16, 66, 87, 94, 96, 101, 120], "comment1097323_593084": 158, "comment118259946_66886954": 69, "commerc": 109, "commerci": [94, 97], "commit": [27, 95, 98, 100, 104], "commit_hash": 104, "commitizen": 94, "common": [2, 3, 8, 9, 29, 30, 47, 50, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 76, 80, 82, 84, 85, 89, 94, 96, 98, 100, 101, 102, 103, 105, 106, 107, 109, 118, 124, 136, 154, 159, 175, 180, 181, 200, 206, 210, 216, 218, 221, 223, 234, 237], "common_ax_kwarg": 85, "common_issu": 7, "common_norm": 76, "commonli": [11, 30, 36, 46, 56, 57, 58, 59, 68, 71, 80, 87, 94, 96, 101, 118, 214], "commonsens": 57, "commun": [57, 58, 88, 89, 94, 95, 216], "commut": [4, 79, 85], "compact": [53, 68, 74, 76, 97, 124, 188], "compactli": [53, 56, 68, 74], "compani": [71, 80, 95, 96, 98, 109, 146, 238], "compar": [6, 13, 16, 17, 19, 27, 29, 30, 43, 44, 48, 53, 54, 56, 57, 58, 59, 61, 62, 63, 68, 75, 76, 77, 84, 88, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 110, 118, 123, 124, 130, 143, 146, 159, 203, 213, 216, 218, 230, 231, 233, 239], "compare_length": 6, "compare_model": 218, "compare_test_cas": [41, 44, 46], "comparison": [13, 20, 30, 43, 47, 53, 66, 68, 76, 102, 103, 106, 115, 118, 124, 171, 231, 233], "comparison_msg": 118, "comparison_result": 118, "compass": 29, "compat": [2, 3, 4, 7, 8, 58, 59, 94, 96, 97, 99, 100, 108], "compel": [48, 211], "compens": 71, "compet": 94, "competit": [66, 102], "compil": [3, 5, 6, 8, 10, 57, 59, 94, 103, 112, 117, 217], "complain": [8, 58, 94, 217], "complaint": 217, "complement": [13, 19, 66, 76, 99, 180], "complementari": 94, "complet": [11, 17, 27, 29, 30, 43, 47, 48, 53, 56, 57, 58, 59, 61, 69, 74, 80, 83, 85, 94, 98, 100, 103, 104, 107, 108, 111, 113, 114, 115, 117, 118, 123, 137, 139, 143, 146, 148, 156, 159, 173, 174, 186, 207, 211, 213, 216, 235, 238], "completion_statu": 213, "complex": [2, 5, 7, 9, 16, 44, 47, 52, 53, 56, 57, 59, 60, 62, 71, 73, 77, 78, 79, 82, 84, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 109, 117, 118, 198, 199, 203, 211, 216, 217, 225, 238], "complex_typ": 238, "complexus": 238, "compli": [16, 94], "complianc": [94, 96, 97, 108], "complic": [11, 74, 76, 94, 117, 173, 228], "compon": [29, 51, 52, 53, 54, 56, 58, 59, 66, 68, 71, 74, 76, 82, 83, 84, 85, 87, 90, 94, 100, 101, 104, 106, 118, 124, 127, 218, 219, 223], "componentfactori": 222, "compos": [74, 77, 118, 119, 126, 191, 217, 218, 219, 223, 228], "composer_block_s": 58, "composit": [126, 228], "compound": 48, "comprehend": [32, 79, 82, 83], "comprehens": [9, 30, 57, 58, 71, 79, 85, 90, 94, 96, 100, 103, 106, 108, 124, 213, 230, 235], "compress": [58, 59, 60, 71, 78, 83, 99, 109, 120, 176], "compress_imag": 63, "compressed_imag": 63, "compressed_image_s": 63, "compressed_ratio": 63, "compressed_s": 63, "compression_ratio": 63, "compris": [57, 63, 80], "compromis": [4, 7, 57], "compulsori": 130, "comput": [4, 7, 10, 11, 17, 27, 29, 30, 32, 36, 46, 47, 52, 53, 54, 56, 57, 60, 61, 62, 63, 66, 68, 69, 71, 73, 74, 76, 77, 79, 80, 82, 84, 85, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 104, 109, 110, 112, 115, 117, 118, 121, 123, 124, 126, 139, 140, 155, 167, 170, 176, 180, 185, 188, 206, 207, 211, 213, 216, 230, 234, 235, 236], "computation": [29, 50, 58, 61, 71, 74, 95, 96, 98, 106, 109, 127], "compute_factori": 216, "compute_factorial_process": 216, "compute_lora_paramet": 71, "compute_loss": 117, "compute_loss_context_manag": 117, "compute_metr": [72, 117, 120], "compute_metrics_for_single_label_classif": [72, 120], "compute_sample_average_of_bernoulli": 207, "compute_transition_scor": 117, "computed_field": 58, "computeresourc": 90, "con": 109, "conan": 98, "concat": [56, 58, 59, 76], "concaten": [3, 11, 20, 53, 58, 59, 69, 94, 96, 174], "concav": 124, "concentr": [29, 57, 109, 124, 156], "concept": [2, 3, 4, 5, 7, 8, 9, 10, 12, 18, 23, 24, 28, 29, 31, 33, 36, 49, 52, 55, 58, 59, 60, 63, 65, 67, 70, 73, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 96, 98, 102, 106, 107, 109, 113, 123, 127, 129, 143, 145, 148, 149, 152, 154, 157, 158, 159, 161, 173, 175, 177, 195, 208, 209, 210, 221], "conceptu": [2, 27, 30, 56, 57, 59, 60, 74, 78, 83, 174, 181, 213], "concern": [2, 53, 57, 66, 80, 94, 96, 97, 117, 221, 222], "concis": [29, 36, 53, 68, 85, 98, 104, 131, 158, 196, 203, 204], "conclud": [27, 29, 30, 44, 53, 68, 74, 124, 198, 235], "conclus": [5, 27, 30, 59, 66, 68, 76, 84, 94, 103, 123], "concret": [2, 5, 6, 7, 29, 36, 50, 53, 56, 57, 58, 59, 61, 63, 65, 68, 71, 74, 76, 80, 83, 87, 88, 90, 95, 109, 110, 115, 120, 123, 124, 127, 130, 137, 142, 158, 159, 163, 165, 174, 176, 180, 184, 185, 211, 213, 221, 222], "concrete_method": 222, "concurr": [57, 78, 91, 94, 98, 99, 214], "cond": 76, "cond_exp": 185, "conda": [72, 90, 115, 120, 121], "condens": 2, "condit": [4, 7, 9, 16, 27, 29, 30, 46, 47, 48, 51, 52, 56, 58, 59, 66, 71, 72, 77, 78, 85, 91, 94, 98, 99, 102, 106, 108, 118, 119, 123, 124, 128, 135, 143, 150, 153, 176, 178, 180, 188, 191, 197, 203, 213, 214, 227, 230], "condition": [51, 57, 68, 74, 76, 77, 143, 181], "conduct": [17, 68, 94, 98, 100, 101, 104, 106, 108, 110], "conf": [100, 217], "confid": [53, 66, 96, 110, 180, 203, 207], "config": [9, 72, 78, 89, 90, 91, 94, 100, 104, 112, 114, 117, 119, 120, 121, 143, 211, 218, 222, 223, 225, 226, 238], "config_arg": 118, "config_class_str": 117, "config_data": 225, "config_dict": [217, 219], "config_manag": [59, 217], "config_nam": [112, 217], "config_obj": 217, "config_path": 217, "config_pydant": 217, "config_sourc": 217, "config_stor": 217, "configclass": 117, "configer": 115, "configstor": 217, "configur": [9, 59, 66, 71, 78, 88, 89, 97, 99, 100, 104, 106, 112, 123, 218, 220, 222, 223, 225, 227, 238], "configure_deterministic_mod": [58, 71, 104, 128, 144, 169, 170, 174, 190, 207, 211], "configure_logg": 89, "confirm": [4, 16, 17, 29, 30, 44, 48, 58, 76, 80, 93, 94, 100, 118], "conflict": [94, 96, 114], "confluenc": 94, "conform": [4, 94, 100, 101, 213, 222, 238], "confound": 94, "confus": [9, 23, 29, 36, 50, 53, 56, 57, 58, 59, 61, 62, 68, 71, 72, 74, 76, 80, 84, 87, 94, 109, 118, 120, 123, 130, 137, 146, 148, 153, 158, 159, 180, 183, 188, 191], "confusion_matrix": [72, 120, 121], "confusiong": 53, "congest": 101, "conjectur": [57, 58], "conjunct": [94, 106], "connect": [9, 10, 27, 29, 30, 61, 89, 98, 99, 100, 109, 124, 159, 170, 174, 203, 219, 231], "connector": 99, "conquer": [27, 203], "consecut": [8, 46, 97, 119], "consensu": 94, "consequ": [2, 3, 5, 6, 7, 8, 22, 23, 27, 29, 30, 36, 53, 57, 58, 59, 61, 63, 64, 66, 68, 74, 76, 80, 82, 84, 85, 88, 89, 91, 94, 96, 101, 103, 118, 120, 123, 124, 137, 144, 146, 150, 170, 173, 174, 176, 178, 180, 181, 183, 185, 191, 210, 211, 213, 235, 236], "conserv": [3, 17, 66], "consid": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 22, 27, 29, 30, 32, 36, 43, 44, 46, 47, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 76, 77, 80, 82, 83, 84, 85, 87, 88, 89, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 109, 110, 111, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 133, 136, 137, 140, 144, 155, 171, 172, 173, 176, 179, 181, 183, 193, 200, 201, 203, 207, 210, 211, 213, 214, 216, 225, 226, 227, 235, 238], "consider": [11, 17, 27, 29, 59, 76, 94, 95, 102, 123, 124, 180], "consist": [4, 5, 6, 11, 20, 27, 29, 30, 32, 35, 44, 46, 48, 53, 56, 57, 58, 68, 71, 74, 76, 79, 80, 82, 84, 85, 87, 99, 100, 103, 108, 118, 119, 124, 130, 143, 144, 147, 176, 185, 210, 211, 225, 226], "consol": [30, 59, 90, 119, 217], "consolid": 94, "conson": 128, "constaint": 27, "constant": [11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 36, 43, 46, 47, 56, 58, 59, 61, 66, 68, 71, 76, 77, 80, 102, 103, 109, 112, 119, 123, 124, 127, 128, 137, 141, 142, 144, 146, 147, 155, 164, 168, 173, 178, 193, 199, 200, 203, 211], "constant_": 58, "constantli": [96, 103, 106, 109, 132, 136], "constitu": 68, "constitut": [29, 53, 63, 109], "constrain": [36, 74, 94, 102, 216, 217], "constrained_beam_search": 117, "constraint": [5, 7, 10, 53, 57, 58, 59, 74, 78, 80, 94, 98, 102, 104, 123, 217], "constrast": 68, "construct": [2, 5, 11, 17, 29, 50, 51, 53, 54, 56, 61, 66, 68, 75, 76, 94, 95, 96, 103, 106, 114, 115, 124, 126, 127, 130, 133, 137, 143, 192, 237], "construct_dummy_batch_causal_mask": 120, "construct_dummy_batch_cross_attention_mask": 119, "construct_dummy_batch_future_mask": [58, 59, 119], "construct_dummy_batch_target_padding_mask": [58, 59, 119], "construct_target_tensor": 59, "constructor": [5, 7, 68, 78, 94, 100, 117, 219, 221, 222, 224], "consult": [9, 126], "consum": [7, 11, 17, 29, 59, 71, 97, 98, 99, 100, 109, 118, 213, 230], "consumpt": [71, 80, 110, 230], "contact": 94, "contain": [2, 3, 7, 11, 19, 27, 29, 30, 32, 35, 44, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 69, 71, 72, 74, 76, 77, 80, 87, 94, 97, 98, 99, 100, 106, 109, 117, 118, 120, 124, 126, 128, 188, 191, 207, 210, 211, 213, 217, 219, 221, 227, 230, 234, 236, 239], "container": 94, "containsdupl": 128, "contamin": 48, "contend": 57, "content": [2, 27, 48, 57, 58, 66, 71, 79, 94, 96, 97, 99, 101, 109, 158, 174, 198, 213, 216, 217, 233, 236], "contest": 136, "context": [2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 27, 29, 30, 36, 47, 48, 50, 53, 56, 59, 63, 66, 68, 71, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 94, 95, 96, 99, 100, 101, 102, 103, 106, 109, 110, 112, 114, 118, 119, 120, 124, 130, 133, 134, 137, 146, 158, 191, 192, 213, 214, 218, 219, 221, 224], "context_dir": 100, "context_fc": [58, 59, 112, 114, 119, 120], "context_length": [58, 59, 112, 114, 118, 119, 120], "context_project": [56, 58, 59, 112, 114, 119, 120], "context_vector": [56, 58, 59, 112, 114, 119], "context_vector_concat": 58, "contextlib": [112, 114, 216, 230], "contextobject": 223, "contextu": [56, 58, 71, 79, 98, 109, 119, 227], "contigu": [30, 44, 46, 56, 58, 59, 97, 112, 114, 119, 120], "contin": 164, "conting": [57, 62, 79], "contingency_matrix": 62, "contingency_matrix_": 62, "continu": [0, 27, 35, 43, 46, 47, 53, 56, 58, 59, 62, 66, 68, 69, 78, 91, 93, 95, 96, 97, 99, 100, 101, 102, 103, 109, 110, 111, 117, 118, 123, 126, 130, 140, 163, 164, 165, 167, 169, 170, 173, 177, 178, 181, 183, 188, 194, 200, 213, 216], "contour": [53, 54, 76, 78, 128, 129, 193, 210], "contour_1": 190, "contour_2": 190, "contour_3": 190, "contour_plot": 76, "contourf": [53, 76, 127], "contra": 7, "contract": [5, 6, 221], "contradict": [7, 43, 48, 66, 174], "contradictori": 66, "contraposit": 94, "contrari": 61, "contrarili": 7, "contrast": [2, 29, 53, 57, 58, 79, 94, 95, 97, 99, 105, 109, 124, 159, 173, 216], "contrastive_search": 117, "contravari": [10, 30, 78], "contribut": [20, 27, 57, 58, 59, 62, 71, 84, 118, 121, 123], "contributor": [58, 99], "control": [2, 9, 27, 47, 58, 66, 99, 100, 102, 104, 106, 117, 121, 211, 213, 216, 217, 219, 221, 222, 227, 231, 238], "conundrum": [29, 126], "conv1d": 72, "conveni": [11, 29, 53, 57, 58, 59, 61, 64, 74, 76, 77, 84, 89, 90, 102, 112, 114, 117, 126, 234], "convent": [56, 57, 58, 59, 80, 82, 94, 98, 119, 124, 144, 147, 155, 168, 169, 170, 221], "convention": [8, 82], "converg": [29, 50, 53, 54, 56, 58, 59, 60, 62, 63, 66, 68, 71, 123, 124, 126, 128, 141, 143, 156, 159, 164, 208], "converged_": 54, "convers": [2, 5, 7, 27, 29, 30, 68, 69, 71, 80, 83, 94, 95, 99, 100, 109, 124, 146, 181, 216, 234], "convert": [2, 5, 16, 17, 48, 53, 56, 58, 59, 63, 66, 74, 75, 76, 82, 94, 96, 97, 98, 99, 101, 117, 118, 121, 127, 166, 170, 181, 217], "convex": [52, 53, 58, 61, 124, 195], "convinc": [125, 130, 174, 218], "convolut": [58, 78, 96, 98, 102, 115, 175], "cook": 211, "cookbook": [58, 94], "cooki": 99, "coolwarm": 68, "coordin": [53, 54, 62, 80, 89, 124, 170, 176, 193, 200, 227], "coordinat": 80, "copi": [7, 11, 16, 17, 32, 44, 58, 62, 72, 77, 90, 94, 97, 99, 100, 118, 123, 146, 148, 216, 218, 229, 238], "copper": 53, "copy_": 113, "copy_context": 213, "coqa": 57, "core": [2, 9, 27, 29, 30, 32, 48, 49, 58, 59, 62, 74, 76, 84, 88, 89, 91, 94, 117, 118, 119, 120, 121, 213, 216, 217, 222, 225, 231], "core_plugin": 217, "corej2eepattern": 223, "cormen": [0, 16, 30], "cornel": [73, 74], "corner": [66, 77, 127], "cornflowerblu": 53, "corollari": [50, 183], "coroutin": [213, 216, 230], "corpu": [57, 58, 59, 71, 118], "corr": [0, 1, 68, 76, 123], "corr_matrix": 68, "correct": [2, 4, 6, 7, 8, 13, 19, 35, 36, 44, 57, 58, 59, 61, 66, 68, 76, 77, 87, 94, 100, 103, 119, 123, 124, 148, 174, 181, 184, 203, 211, 222, 226, 231, 238], "correct_predict": [120, 121], "correctli": [4, 5, 6, 27, 29, 30, 44, 48, 59, 66, 87, 94, 95, 100, 103, 109, 128, 180, 211, 238], "correl": [48, 68, 71, 76, 78, 96, 100, 101, 158, 181, 197, 203, 211], "correspond": [2, 4, 7, 16, 17, 20, 29, 30, 32, 35, 36, 46, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 75, 76, 77, 80, 82, 83, 87, 88, 89, 95, 97, 109, 119, 120, 124, 127, 128, 138, 143, 146, 148, 174, 181, 190, 192, 193, 207, 210], "correspondingli": [66, 119, 128, 130], "corrupt": 214, "cosin": [58, 72, 78, 109, 120, 122], "cosine_lr": 226, "cosine_warm_restart": 226, "cosineannealinglr": [59, 119, 120, 226], "cosineannealinglrconfig": [119, 226], "cosineannealingwarmrestart": 226, "cosineannealingwarmrestartsconfig": 226, "cosineannealingwithwarmupschedul": [59, 123], "cosinedecaywithwarmupschedul": 123, "cost": [17, 27, 29, 32, 36, 48, 50, 57, 58, 62, 63, 66, 71, 74, 87, 95, 97, 98, 99, 100, 103, 118], "costli": [96, 97], "couchbas": 99, "could": [3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 29, 36, 53, 57, 58, 59, 66, 68, 76, 77, 80, 82, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 118, 123, 124, 126, 130, 158, 180, 211, 214, 218, 230, 231], "count": [7, 29, 30, 32, 48, 53, 59, 74, 76, 77, 80, 90, 96, 99, 103, 113, 117, 126, 128, 130, 136, 143, 174, 213, 214, 239], "count_label": 120, "count_up_to": 213, "countabl": [124, 126, 130, 131, 139, 140], "counter": [26, 29, 41, 59, 62, 120, 121, 130, 143, 213, 214, 216, 231], "counterintuit": [7, 59, 180], "counterlock": [214, 231], "counterpart": [35, 57, 94, 155, 164, 174, 181], "countri": [68, 96, 98], "coupl": [2, 58, 59, 94, 106, 123, 127, 182, 213, 221], "cours": [0, 5, 17, 27, 29, 50, 51, 57, 58, 59, 60, 61, 62, 66, 67, 68, 72, 73, 74, 76, 80, 87, 89, 94, 96, 97, 109, 116, 117, 125, 126, 127, 130, 136], "coursera": 76, "courvil": [0, 1, 124], "cov": [53, 54, 94, 178, 188, 190, 191, 195, 211], "cov_k": [53, 54], "covar": 53, "covari": [10, 30, 54, 57, 58, 61, 67, 68, 74, 75, 76, 78, 127, 193, 194, 210, 211, 213], "covariance_determin": 127, "covariance_invers": 127, "covariance_matrix": [76, 127, 190], "covariance_matrix_determin": 127, "covariance_matrix_invers": 127, "covariance_typ": 53, "covariances_": [53, 54], "cover": [4, 27, 58, 59, 61, 63, 94, 98, 100, 102, 109, 123, 176, 207, 217], "coverag": 94, "covid": [143, 147, 148], "cpp": [113, 114, 115], "cprofil": [213, 230], "cpu": [58, 59, 71, 72, 88, 90, 91, 94, 97, 104, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 217, 230, 239], "cpu_bound_task": 231, "cpu_children": 113, "cpu_count": [72, 120], "cpu_par": 113, "cpu_time_tot": [113, 114], "cpython": [216, 231], "craft": [5, 94, 96, 105], "crash": [5, 8, 98, 231], "crave": 66, "crawl": 99, "crc": 76, "creat": [4, 5, 6, 11, 16, 17, 20, 22, 23, 27, 32, 36, 43, 46, 48, 52, 53, 54, 56, 58, 62, 68, 72, 75, 76, 83, 85, 89, 96, 97, 98, 99, 100, 101, 102, 104, 108, 110, 113, 115, 117, 119, 120, 121, 123, 124, 127, 128, 143, 148, 159, 190, 207, 210, 213, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238], "create_accelerator_and_postprocess": 117, "create_add_dataset": 59, "create_advanced_chunk": 222, "create_advanced_embedd": 222, "create_advanced_retriev": 222, "create_attention_mask": 121, "create_cmap": 54, "create_config_class_str": 117, "create_directori": 59, "create_extended_attention_mask_for_decod": 117, "create_gmm": 53, "create_incorrect_pair": 5, "create_inst": [59, 119], "create_load": 59, "create_misleading_pair": 5, "create_model": 238, "create_model_card": 117, "create_multipli": 235, "create_multipliers_inn": 235, "create_multipliers_lambda": 235, "create_optim": 117, "create_optimizer_and_schedul": 117, "create_profile_config": 112, "create_schedul": [117, 226], "create_silent_error_pair": 5, "create_simple_chunk": 222, "create_simple_embedd": 222, "create_simple_retriev": 222, "create_system": 222, "create_tabbed_svg_view": 27, "create_target_mask": [58, 59], "created_at": 100, "creation": [5, 11, 77, 89, 94, 108, 216, 219, 221, 227, 228, 230, 235], "creator": [217, 222], "credenti": [90, 94, 99, 219], "credit": [16, 53, 57, 58, 59, 66, 71, 74, 76, 84, 85, 93, 94, 95, 96, 97, 98, 100, 103, 106, 109, 110, 115, 123, 126, 159, 174, 176, 190, 193, 203, 210], "crimin": 98, "crimp": 94, "crit": [16, 27], "criteria": [2, 3, 95, 98, 99, 108], "criterion": [3, 7, 29, 53, 58, 61, 112, 114, 119, 120, 218], "criterion_config_cl": [59, 119], "criterion_pydantic_config": [59, 119], "criterion_registri": [59, 119], "critic": [3, 11, 16, 17, 27, 48, 58, 59, 66, 74, 94, 95, 96, 97, 100, 101, 103, 104, 108, 110], "croissant": 80, "cronjob": 100, "crop": [58, 77, 112, 114], "crop_context_length": [112, 114], "cross": [48, 57, 58, 59, 61, 66, 68, 78, 83, 85, 96, 101, 102, 107, 108, 120, 121, 122, 124, 125, 136, 207, 211], "cross_attention_mask": 119, "cross_color": 53, "crossentropyloss": [58, 59, 112, 114, 115, 119, 120, 121, 217], "crossentropylossconfig": 119, "crowdsourc": 97, "crucial": [2, 4, 5, 11, 16, 30, 32, 43, 47, 48, 50, 53, 68, 79, 80, 82, 84, 85, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 126, 180, 216, 227, 239], "crud": 98, "crux": [29, 57], "cry": 72, "crystal": 94, "crystallographi": 61, "cs170": 27, "cs2030": [3, 4, 5, 7], "cs211": 27, "cs2112": 27, "cs324": [57, 58], "cs336": [88, 89, 112, 114], "cs4780": [73, 74], "cs70": 174, "csc412": [57, 58], "cse": 27, "cse241": 27, "css": 99, "cstride": 53, "csv": [68, 96, 97, 98, 99, 109], "ct": [97, 98], "ctr": [95, 96], "ctype": 216, "cu113": 94, "cubinlink": 114, "cubla": [59, 71, 72], "cublas_workspace_config": [58, 71, 104], "cublasapi_reproduc": 71, "cucumb": 229, "cuda": [57, 58, 71, 72, 78, 94, 97, 104, 112, 114, 116, 117, 120, 121, 128, 144, 169, 170, 174, 190, 207, 211], "cuda11x": 114, "cuda_bla": 72, "cuda_dnn": 72, "cuda_fft": 72, "cuda_memory_usag": [113, 114], "cuda_time_tot": [113, 114], "cuda_visible_devic": 89, "cudadevicesynchron": [113, 114], "cudalaunchkernel": [113, 114], "cudamemcpyasync": 113, "cudastreamsynchron": 113, "cudf": 114, "cudnn": [58, 71, 72, 104], "cufft": 72, "cultiv": 57, "cultur": 94, "cumbersom": [68, 188], "cuml": 114, "cumsum": [58, 140], "cumtim": [213, 230], "cumul": [56, 58, 78, 144, 147, 154, 159, 160, 162, 163, 175, 176, 181, 230], "cumulative_prob": 58, "cup": [57, 61, 66, 131, 134, 183], "cup_": 66, "cupi": 114, "curat": 57, "curi": 48, "curr": [5, 34], "curr_min_list": 34, "curr_val": 34, "current": [2, 19, 22, 23, 27, 29, 30, 35, 36, 46, 47, 53, 54, 56, 57, 58, 59, 62, 63, 69, 72, 75, 89, 90, 94, 102, 108, 109, 110, 114, 117, 118, 120, 123, 128, 143, 159, 211, 213, 214, 216, 217, 218, 221, 230, 235, 236, 238], "current_file_path": [59, 143, 211], "current_min": 34, "current_path": [36, 54, 59, 62, 63, 75, 128, 143, 211], "current_step": [59, 123], "current_valu": 214, "curs": [76, 101, 102], "curv": [53, 59, 61, 66, 76, 87, 103, 123, 126, 127, 170, 172, 174, 180, 203], "curvatur": [124, 128], "custom": [5, 8, 30, 58, 59, 62, 77, 94, 95, 96, 98, 99, 100, 109, 110, 117, 118, 119, 146, 184, 213, 217, 221, 233, 238], "custom_hn_exercise_count": 94, "customari": [57, 61], "customdataset": 221, "customiz": 94, "cut": [23, 29, 66, 89, 96], "cv": 96, "cv2": 63, "cvtcolor": 63, "cwd": [36, 54, 59, 62, 63, 75, 128, 143, 211, 217], "cx": [141, 164], "cxd": 118, "cycl": [47, 53, 59, 61, 64, 94, 113, 123, 213], "cyclic": [59, 123], "cz": 80, "cz_0": 80, "d": [1, 11, 13, 19, 26, 27, 46, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 75, 76, 77, 79, 80, 82, 83, 85, 87, 89, 90, 94, 98, 102, 106, 112, 114, 115, 117, 118, 119, 120, 124, 126, 127, 130, 146, 147, 148, 153, 156, 166, 167, 170, 171, 173, 174, 177, 178, 181, 183, 186, 188, 191, 192, 193, 195, 198, 200, 201, 206, 207, 210, 211, 217, 238], "d1": [59, 72, 191, 211, 237], "d2": [59, 72, 191, 237], "d2l": [0, 66, 67, 76, 77], "d3": 59, "d_": [56, 58, 114, 115, 217], "d_1": [59, 125], "d_2": [59, 125], "d_3": 125, "d_ablat": 91, "d_ff": [57, 58, 59, 112, 114, 119, 120], "d_k": [56, 58, 59, 118], "d_model": [57, 58, 59, 112, 114, 118, 119, 120], "d_q": [56, 58, 112, 114, 118, 119], "d_qkv": 58, "d_v": [56, 58, 112, 114, 118, 119], "daemon": [89, 91], "dafriedman97": 76, "dai": [29, 80, 94, 96, 101, 103, 109, 118, 128, 150, 179, 184], "daili": [70, 101, 110], "daily_revenu": 146, "dake": [52, 60, 61, 62, 66, 73, 203, 204], "dall": 29, "dan": [73, 74], "danger": 8, "daniela": [0, 60, 61, 67, 68, 73, 74], "dario": 0, "dark": 2, "darkblu": 76, "darker": 76, "darkorang": 53, "darl": 68, "dartboard": 133, "dash": [53, 76, 127, 190], "dashboard": [100, 101], "dask": [99, 114], "data": [0, 2, 3, 5, 8, 9, 12, 13, 17, 19, 20, 27, 33, 36, 43, 47, 48, 49, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 74, 75, 76, 77, 80, 84, 85, 87, 88, 90, 92, 93, 94, 103, 105, 107, 108, 109, 112, 117, 118, 119, 121, 124, 127, 128, 139, 141, 142, 143, 144, 146, 147, 151, 153, 155, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 182, 185, 187, 188, 190, 193, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 214, 216, 217, 218, 221, 223, 230, 231, 234, 236, 238], "data1": [100, 221], "data2": [100, 221], "data3": 221, "data4": 221, "data5": 221, "data_col": [72, 117, 120], "data_config": 59, "data_dir": [217, 219], "data_dtyp": 58, "data_fold": 58, "data_path": 58, "data_s": 230, "data_se": [72, 120], "data_shap": 58, "data_transform": 77, "data_typ": [11, 17], "databas": [27, 94, 96, 97, 99, 100, 109, 216, 219, 225], "databaseconfig": 225, "databrick": [70, 98, 99], "dataclass": [5, 9, 25, 26, 35, 37, 58, 59, 83, 117, 118, 217, 218, 223], "datacol": 117, "datacollatorwithpad": [72, 117, 120, 121], "dataconfig": [59, 119, 217, 219], "datadog": 110, "datafram": [62, 68, 76, 97, 112, 113, 118, 120], "dataload": [7, 104, 119, 121, 217, 219], "datamodel": 238, "datamodul": [217, 219], "dataop": [78, 93, 99, 101], "dataset": [2, 17, 27, 29, 30, 50, 54, 61, 62, 63, 68, 69, 71, 75, 76, 77, 80, 87, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 117, 118, 123, 124, 136, 143, 159, 178, 210, 211, 213, 217, 221, 230, 239], "dataset_dir": [59, 119], "dataset_load": 94, "dataset_nam": [58, 59, 119], "dataset_path": [59, 119], "dataset_s": [59, 119], "dataset_str": 59, "dataset_tensor": 59, "dataset_test": 221, "dataset_train": 221, "dataset_url": [59, 119], "dataset_vers": 218, "datasetload": 94, "datasheet": 118, "datatyp": 2, "date": [99, 100, 106, 108, 238], "datefmt": 115, "datetim": [90, 114, 115, 238], "datetime_pars": 238, "dation": 109, "daum": 0, "daum\u00e9": [51, 60, 61, 67, 68, 73, 74], "david": [0, 26, 66], "davison": 57, "db": 100, "db_config": 225, "db_host": 225, "db_name": 225, "db_password": 225, "db_port": 225, "db_usernam": 225, "dc": 158, "dd": [100, 191, 217], "ddot": [53, 56, 58, 74, 85, 118, 124, 188, 190, 191, 192, 193, 211], "ddp": [88, 89, 90, 97, 118], "ddp_tutori": 92, "de": [57, 58, 59, 99, 123], "deadlin": 29, "deadlock": 120, "deal": [7, 11, 17, 27, 36, 53, 58, 59, 68, 74, 76, 77, 84, 94, 97, 98, 100, 101, 106, 109, 126, 163, 188, 195, 230], "dean": 121, "debat": 216, "deberta": [72, 121], "debertav2forsequenceclassif": 121, "debertav2token": 121, "debug": [58, 59, 69, 94, 104, 105, 106, 108, 115, 119, 214, 217, 219, 225, 231], "debug_sampl": [59, 119], "debugg": 229, "dec": [0, 1, 55, 57], "decad": 77, "decai": [0, 1, 55, 57, 59, 66, 169], "decathlon": [0, 57], "decemb": 57, "decent": [94, 120], "decid": [3, 17, 29, 46, 58, 66, 80, 94, 95, 96, 97, 98, 101, 106, 107, 109, 110, 179, 180], "decim": [7, 53, 76], "decis": [8, 9, 11, 27, 29, 30, 53, 57, 66, 68, 75, 80, 87, 94, 95, 96, 97, 101, 102, 103, 104, 106, 107, 108, 109, 114, 119, 124, 228], "decision_tre": 228, "decisiontre": 228, "decisiontreestrategi": 228, "declar": [5, 6, 8, 50, 62, 94, 229, 238], "declin": 110, "decod": [55, 57, 59, 63, 78, 104, 118, 121, 122], "decode_batch": 59, "decode_equ": 59, "decoded_equ": 59, "decoded_input": 59, "decoded_sent": 59, "decoded_target": 59, "decoder_block": [57, 58, 59, 119, 120], "decoder_block_config": [58, 59, 119], "decoderblock": 57, "decoderblockconfig": [58, 59, 119, 120, 121], "decoderconfig": [58, 59, 119, 120, 121], "decoderforsequenceclassificationconfig": [119, 120], "decomp": 107, "decompos": [48, 56, 58, 61, 68, 71, 74, 150, 183, 193, 203], "decomposit": [48, 56, 57, 70], "decor": [2, 8, 17, 78, 94, 97, 217, 222, 226, 228, 232, 238], "decoupl": [0, 1, 48, 55, 57, 59, 94, 100, 217, 219, 221, 222, 223], "decoupledadamw": 59, "decreas": [7, 11, 17, 29, 43, 44, 47, 57, 59, 62, 68, 71, 94, 95, 103, 105, 110, 123, 124, 140, 166, 170, 216], "decrement": [43, 47, 62, 231], "decrib": 74, "dedic": [47, 65, 100, 118], "deduc": [4, 61, 85, 134, 136], "deduct": [94, 98], "deem": [3, 57, 58, 59, 100], "deep": [0, 10, 11, 55, 56, 57, 58, 59, 63, 66, 68, 71, 72, 73, 74, 77, 82, 85, 88, 95, 98, 101, 102, 104, 106, 107, 111, 115, 116, 123, 124, 180, 181, 208, 211, 213, 218, 219, 223, 226, 238], "deepak": [93, 100], "deepcopi": 72, "deeper": [9, 17, 30, 58, 66, 68, 80, 96, 101, 123], "deeplearningbook": 0, "deepli": [82, 84, 94], "deepspe": 117, "def": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 41, 43, 44, 46, 48, 53, 54, 56, 58, 59, 62, 63, 68, 69, 71, 72, 74, 75, 76, 77, 89, 91, 94, 97, 98, 100, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 127, 128, 140, 141, 143, 146, 148, 156, 159, 164, 171, 174, 178, 188, 203, 207, 211, 213, 214, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239], "defa": [150, 173], "default": [9, 22, 23, 35, 53, 54, 58, 59, 62, 63, 68, 69, 71, 72, 76, 78, 89, 90, 97, 106, 111, 113, 115, 117, 118, 120, 121, 124, 128, 213, 216, 217, 218, 232, 234, 235, 238], "default_data_col": 117, "default_factori": [25, 26, 35, 37, 117], "default_repr": 117, "default_rng": [58, 104, 128, 148], "default_square_trac": 113, "default_tim": [111, 112], "default_valu": [117, 238], "defaultdict": [20, 124], "defb": [150, 173], "defc": 173, "defd": 173, "defeat": 66, "defect": 94, "defeq": [137, 170], "defer": 5, "defin": [2, 3, 4, 5, 8, 9, 19, 27, 29, 32, 35, 36, 44, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 64, 68, 71, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 93, 94, 95, 96, 97, 98, 100, 102, 103, 106, 108, 109, 110, 112, 114, 117, 118, 119, 121, 123, 124, 126, 127, 131, 132, 134, 137, 140, 141, 142, 143, 144, 146, 147, 148, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 174, 176, 178, 180, 181, 183, 186, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 206, 207, 210, 211, 213, 216, 217, 219, 221, 222, 226, 235, 236, 238], "definit": [4, 5, 6, 8, 9, 11, 17, 30, 36, 50, 53, 57, 61, 63, 66, 68, 71, 74, 76, 78, 80, 84, 86, 87, 88, 89, 98, 101, 102, 106, 112, 114, 117, 121, 124, 126, 130, 136, 142, 143, 144, 146, 150, 154, 158, 159, 165, 167, 171, 173, 174, 176, 178, 180, 181, 182, 184, 188, 189, 191, 192, 201, 203, 207, 210, 212, 213, 219, 227, 234, 235, 236], "defunct": 66, "degener": 29, "degrad": [17, 57, 71, 94, 106, 108, 110], "degre": [53, 58, 68, 71, 83, 85, 102, 178, 179, 204, 211], "deisenroth": [0, 49, 52, 53, 79, 80, 84], "del": [17, 112, 115, 121, 231], "delai": [27, 94, 95, 103], "deleg": [222, 228], "delet": [17, 98, 112, 115, 121, 225, 231], "deliber": [48, 57], "deliv": [87, 109], "deliveri": [93, 94, 106], "delta": [48, 54, 66, 68, 71, 76, 99, 126, 155, 163, 166, 174, 178, 203], "delta_": [48, 124], "demand": [32, 47, 94, 95, 99, 118, 211], "demarc": 46, "demo": 96, "demograph": [94, 96, 97, 108, 109], "demonstr": [2, 7, 19, 29, 30, 32, 48, 53, 57, 58, 59, 62, 84, 89, 94, 115, 124, 167, 213, 226, 227, 228], "demonstrate_multinomial_sampling_effect": 124, "dempster": 53, "demystifi": 237, "denomin": [36, 53, 54, 58, 74, 75, 76, 77, 118, 124, 125, 136, 150, 176, 180, 181], "denot": [3, 4, 5, 6, 7, 11, 16, 17, 19, 22, 27, 29, 30, 43, 44, 46, 47, 48, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 74, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 98, 118, 121, 123, 124, 125, 126, 130, 132, 137, 139, 142, 143, 144, 147, 148, 150, 170, 172, 180, 186, 188, 191, 207, 210, 211, 234], "dens": [56, 57, 58, 76, 118, 121, 174], "denser": 174, "densiti": [53, 54, 74, 76, 78, 87, 124, 127, 143, 146, 148, 156, 159, 162, 164, 165, 166, 168, 169, 170, 171, 175, 176, 191, 193, 198, 211], "deparallel": 117, "depart": 71, "depend": [5, 8, 11, 13, 16, 19, 22, 23, 27, 29, 30, 32, 36, 43, 46, 47, 48, 56, 57, 59, 61, 63, 66, 67, 68, 71, 77, 78, 83, 85, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 114, 118, 123, 124, 130, 133, 136, 137, 159, 176, 180, 181, 183, 193, 203, 211, 214, 216, 217, 223, 224, 231], "dependencie": 57, "depict": [29, 58], "deploi": [48, 59, 71, 90, 93, 94, 95, 96, 99, 106, 108, 109, 110, 219], "deploy": [78, 93, 95, 96, 99, 219], "depract": [120, 121], "deprec": [69, 72, 120, 213], "deprecationwarn": [69, 143, 146, 148, 156, 159, 213], "depth": [10, 27, 30, 48, 57, 58, 63, 95, 100, 106, 108, 130], "dequ": [25, 36, 213], "dequeu": [22, 23, 26, 36], "dequeuelist": [23, 25], "deriv": [5, 7, 11, 27, 30, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 80, 85, 89, 94, 95, 100, 102, 109, 150, 169, 173, 176, 178, 200, 203, 211], "desc": [54, 98, 112, 119, 120, 121, 217], "descend": [30, 58, 76, 99, 123, 124], "descent": [0, 1, 59, 68, 69, 79, 84, 123, 211], "describ": [2, 3, 4, 7, 16, 27, 29, 30, 46, 47, 53, 57, 58, 59, 61, 68, 71, 76, 80, 82, 90, 94, 95, 96, 97, 98, 99, 123, 124, 130, 137, 140, 174, 180, 208, 210, 211, 219], "describe_anim": 3, "descript": [11, 13, 16, 17, 19, 27, 29, 30, 32, 36, 41, 43, 44, 48, 58, 71, 72, 79, 87, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 110, 112, 115, 124, 156, 203, 211, 216, 218, 238], "description_list": 46, "deseri": 217, "deserv": [48, 82], "design": [2, 4, 5, 6, 7, 9, 17, 29, 30, 32, 47, 50, 56, 57, 58, 59, 66, 68, 74, 78, 87, 89, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 120, 123, 188, 210, 218, 219, 221, 223, 226, 227, 228, 230, 235, 237], "design_pattern": [222, 227], "desir": [4, 6, 11, 17, 30, 36, 53, 56, 57, 58, 66, 68, 90, 94, 96, 97, 98, 99, 102, 104, 108, 110, 117, 118, 123, 124, 217, 222, 227, 228], "desper": 68, "despit": [2, 8, 11, 47, 58, 82, 94, 97, 106, 180, 211], "desrib": 130, "dest_fold": 58, "dest_folder_path": 58, "destin": 100, "destroi": 94, "destruct": 32, "det": [53, 69, 85, 127, 178, 192], "detach": [58, 59, 77, 90, 119, 120], "detail": [2, 3, 9, 11, 17, 25, 26, 27, 29, 30, 32, 48, 53, 57, 58, 59, 61, 66, 68, 71, 74, 77, 79, 80, 82, 90, 95, 96, 97, 98, 100, 104, 108, 109, 117, 118, 120, 121, 123, 127, 130, 133, 146, 187, 198, 202, 203, 205, 208, 211, 217, 221, 222, 228, 237], "detect": [5, 10, 47, 68, 72, 77, 84, 93, 95, 98, 99, 100, 101, 106, 109, 110, 115, 180], "detector": 115, "deteminist": 159, "determin": [3, 5, 8, 11, 17, 19, 27, 29, 30, 35, 36, 43, 46, 54, 58, 59, 61, 63, 66, 68, 69, 80, 84, 89, 94, 95, 96, 97, 99, 101, 103, 104, 106, 109, 110, 123, 124, 137, 139, 143, 146, 148, 155, 156, 159, 180, 188, 190, 191, 193, 196, 199, 207, 216, 227], "determinist": [27, 51, 58, 59, 68, 71, 94, 104, 105, 106, 110, 124, 128, 137, 141, 142, 144, 164, 165, 169, 170, 174, 176, 183, 190, 207, 211], "detour": 57, "dev": [59, 94, 100, 237, 238], "develop": [2, 3, 9, 10, 29, 57, 58, 68, 78, 93, 95, 96, 98, 101, 102, 103, 104, 107, 108, 109, 110, 116, 210, 219, 221, 225], "deviat": [53, 56, 58, 66, 68, 74, 76, 98, 103, 110, 112, 144, 159, 165, 171, 206, 207], "devic": [58, 59, 72, 93, 94, 95, 96, 97, 99, 111, 112, 113, 114, 115, 117, 119, 120, 121, 216, 217, 218, 219], "device_": 113, "device_count": 89, "device_t": 113, "device_typ": [58, 113], "devicetyp": 113, "devop": [78, 93, 101], "df": [62, 68, 76, 97, 112, 113, 118, 120, 171], "df_by_mean": 112, "df_multi": 68, "df_np": 97, "df_np_col": 97, "dfrac": [27, 56, 58, 61, 64, 68, 74, 76, 125, 130, 132, 133, 134, 136, 137, 139, 150, 158, 160, 174, 180, 211], "dhuliawala": [0, 48], "di": [94, 221], "diabetes_i": 69, "diabetes_x": 69, "diabetes_x_test": 69, "diabetes_x_train": 69, "diabetes_y_pr": 69, "diabetes_y_test": 69, "diabetes_y_train": 69, "diag": [53, 124], "diag_": 124, "diag_emb": 124, "diagnos": [95, 104, 106], "diagnosi": [103, 106], "diagnost": [95, 103], "diagon": [53, 56, 58, 59, 61, 68, 71, 76, 84, 103, 112, 114, 119, 120, 124, 188, 190, 191, 192, 193], "diagram": [26, 32, 46, 60, 61, 62, 76, 83, 85, 100, 103, 109, 127, 131, 140, 158, 174, 211, 216, 221], "dice": [74, 125, 126, 130, 133, 136, 158, 160, 172], "dice_1": 133, "dice_2": 133, "dichotim": 103, "dichotom": 63, "dict": [5, 17, 19, 20, 35, 41, 53, 54, 58, 59, 62, 63, 72, 75, 83, 98, 100, 112, 114, 117, 118, 120, 121, 124, 127, 216, 217, 218, 219, 222, 225, 226, 228, 229, 230, 238], "dict_": 17, "dict_access": 17, "dict_delet": 17, "dict_search": 17, "dict_set": 17, "dictat": [29, 58, 59, 83, 96, 221], "dictconfig": 217, "dictionari": [5, 6, 9, 19, 20, 53, 61, 63, 94, 97, 117, 124, 217, 218, 219, 225, 226, 236, 238, 239], "did": [7, 8, 27, 48, 57, 58, 61, 63, 66, 68, 74, 76, 77, 84, 94, 100, 106, 112, 113, 114, 117, 119, 120, 130, 148, 150, 163, 174, 211, 213, 225], "didn": [36, 44], "die": [58, 74, 126, 130, 133], "diederik": 0, "diff": [53, 54], "differ": [2, 3, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 29, 30, 32, 36, 44, 47, 48, 50, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 87, 89, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 121, 123, 124, 126, 128, 137, 142, 143, 144, 146, 147, 153, 158, 159, 163, 167, 171, 173, 179, 180, 190, 206, 207, 210, 211, 213, 217, 218, 221, 225, 228, 231, 233, 234, 237, 239], "differenti": [9, 56, 57, 58, 59, 63, 82, 85, 96, 102, 126, 159, 166, 173], "difficult": [5, 53, 58, 66, 68, 77, 89, 94, 96, 98, 101, 109, 118, 176, 180, 188, 211, 223], "difficulti": [29, 47, 57, 61, 66], "dig": [100, 113, 123, 238], "digest": [68, 158], "digit": [55, 62, 77, 78, 79, 95, 96, 119, 211], "digress": 76, "dii": 221, "dilemma": 57, "dill": 114, "dim": [56, 58, 59, 71, 72, 74, 77, 112, 114, 119, 120, 121, 124], "dim0": [56, 58, 112, 114, 118, 119], "dim1": [56, 58, 112, 114, 118, 119], "dimens": [30, 53, 54, 61, 68, 71, 72, 74, 75, 77, 79, 80, 82, 83, 85, 87, 96, 106, 118, 119, 120, 124, 177, 178, 188, 193, 203], "dimension": [4, 11, 50, 53, 54, 56, 57, 59, 61, 62, 63, 66, 71, 74, 76, 77, 79, 80, 82, 83, 84, 87, 96, 97, 101, 109, 124, 127, 176, 188, 191, 192, 193, 196, 211], "dimensionality_reduct": 96, "diminish": [57, 58, 76], "dinner": 125, "dip": 221, "dir": [100, 217], "dirac": 68, "direct": [2, 7, 29, 32, 57, 58, 59, 61, 66, 68, 71, 80, 82, 83, 84, 85, 94, 95, 97, 100, 102, 103, 113, 123, 124, 127, 193, 216, 221], "directli": [2, 11, 16, 17, 29, 30, 32, 48, 50, 53, 56, 57, 58, 59, 61, 62, 68, 76, 84, 88, 90, 94, 95, 96, 97, 98, 99, 124, 128, 173, 211, 213, 216, 217, 221, 239], "directori": [36, 54, 59, 62, 63, 75, 89, 90, 100, 104, 117, 128, 143, 211, 217, 227], "disabl": [5, 9, 56, 62, 71, 75, 156, 213, 217, 230], "disable_adapt": 117, "disable_by_count": 230, "disable_existing_logg": 217, "disable_input_require_grad": 117, "disadvantag": [94, 99], "disagre": 66, "disappear": [16, 181], "discard": [27, 29, 53], "discern": [29, 126], "disciplin": 94, "disclaim": 59, "disclos": 66, "discontinu": [95, 166], "discord": 216, "discount": 99, "discourag": 59, "discours": 58, "discov": [83, 95, 106], "discoveri": [30, 48, 94], "discrep": [2, 5, 50, 103, 108, 124], "discret": [50, 52, 53, 57, 63, 76, 78, 84, 87, 96, 97, 124, 128, 139, 140, 141, 142, 143, 145, 149, 152, 157, 158, 159, 163, 164, 165, 166, 172, 173, 175, 177, 178, 181, 182, 183, 200, 211], "discrimin": [57, 59, 73, 101, 103, 123, 124, 211], "discuss": [2, 3, 4, 9, 17, 27, 29, 30, 53, 55, 56, 57, 58, 59, 63, 66, 67, 68, 74, 77, 79, 80, 82, 84, 85, 87, 91, 94, 95, 96, 97, 100, 118, 123, 124, 130, 154, 175, 179, 181, 189, 198, 202, 203, 205, 208, 211, 237, 238], "diseas": [95, 96, 103, 106, 143, 148, 180], "disinguish": 9, "disjoint": [53, 61, 124, 126, 134, 136, 150, 183, 203], "disk": [63, 216, 218], "dislik": 95, "dispar": [98, 108], "dispers": [58, 68], "displai": [17, 27, 36, 53, 62, 63, 68, 76, 83, 85, 94, 112, 119, 124, 143, 211], "display_contingency_and_pur": 62, "display_result": 62, "disprov": 48, "disrupt": [94, 100], "dissatisfact": 95, "dissect": [58, 221], "dissimilar": [56, 84], "dist": 216, "dist_info": 89, "dist_info_per_process": [89, 91], "dist_tuto": 92, "distanc": [58, 61, 62, 63, 78, 85, 86, 87, 97, 98], "distibut": 76, "distil": [78, 96, 102, 122], "distillation_loss": 121, "distinct": [2, 4, 5, 9, 48, 53, 57, 58, 59, 61, 63, 66, 68, 74, 76, 80, 82, 98, 126, 137, 146, 147, 158, 159, 182, 192, 213, 219, 222, 233], "distinctli": 62, "distinfoperprocess": 89, "distinguish": [9, 30, 57, 58, 76, 79, 94, 103, 219], "distort": [62, 63], "distract": 126, "distribut": [0, 13, 17, 19, 29, 43, 49, 50, 51, 52, 54, 56, 59, 60, 61, 63, 65, 71, 73, 75, 76, 78, 79, 85, 87, 88, 90, 93, 94, 95, 99, 100, 101, 104, 106, 109, 110, 117, 118, 119, 121, 126, 127, 128, 130, 142, 150, 154, 162, 163, 165, 171, 172, 173, 174, 175, 177, 180, 182, 183, 184, 187, 189, 190, 193, 195, 198, 199, 206, 207, 209, 216, 217], "distributedconfig": [59, 119], "distributeddataparallel": [59, 89, 117], "disturb": 32, "div": 114, "div_term": 58, "divbackward0": [114, 124], "dive": [0, 1, 9, 10, 30, 55, 57, 58, 68, 73, 74, 80, 82, 83, 100, 101, 123, 124, 180, 181, 211], "diverg": [55, 59, 104, 121, 123], "divers": [30, 48, 57, 66, 71, 97, 98, 99, 101, 108, 109, 124, 202, 205], "divid": [8, 17, 20, 27, 30, 53, 58, 59, 62, 63, 76, 77, 87, 94, 118, 124, 128, 132, 133, 174, 203, 211, 222], "divis": [4, 8, 17, 29, 58, 75, 79, 118, 124], "divisor": [58, 216], "dk": [59, 61, 74], "dkx": 48, "dl": 96, "dload": 59, "dn": [77, 90], "dna": 97, "do": [2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 19, 22, 23, 26, 27, 29, 30, 36, 43, 44, 47, 48, 50, 53, 55, 56, 57, 58, 59, 61, 62, 66, 71, 72, 74, 76, 77, 78, 79, 80, 82, 84, 85, 87, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 109, 112, 113, 114, 116, 117, 118, 120, 122, 123, 124, 127, 130, 133, 140, 143, 148, 158, 159, 162, 172, 174, 179, 180, 183, 184, 190, 191, 193, 195, 196, 203, 211, 212, 213, 216, 217, 218, 226, 228, 229, 231, 232, 234, 235, 238, 239], "do_division_on_int": 8, "do_ev": [72, 120], "do_predict": [72, 120], "do_train": [72, 120], "doabl": 228, "doc": [5, 71, 72, 97, 121, 216, 222, 234, 235], "docker": [94, 100], "dockerfil": 100, "docstr": [94, 117, 229, 230], "doctor": [98, 180], "document": [8, 30, 32, 48, 57, 58, 62, 63, 66, 77, 89, 90, 93, 96, 97, 101, 106, 217, 222, 230, 234], "document_": 222, "documentari": 110, "documentclass": [30, 32], "doe": [2, 3, 4, 5, 6, 7, 9, 16, 17, 19, 20, 22, 27, 29, 30, 32, 35, 36, 46, 48, 51, 53, 57, 58, 59, 61, 62, 63, 66, 68, 69, 70, 71, 72, 74, 76, 77, 78, 80, 82, 83, 84, 85, 87, 89, 91, 94, 95, 96, 97, 98, 99, 101, 102, 106, 111, 113, 114, 115, 117, 119, 122, 124, 126, 127, 128, 130, 133, 134, 137, 142, 146, 155, 159, 173, 174, 178, 180, 191, 198, 203, 211, 216, 218, 219, 221, 226, 228, 230, 234, 235, 238, 239], "doesn": [2, 7, 16, 17, 27, 29, 32, 36, 43, 44, 48, 59, 60, 68, 97, 98, 101, 102, 109, 114, 115, 123, 124, 134, 213, 216, 222, 228, 235], "doesnt": 3, "dog": [2, 3, 4, 6, 22, 23, 56, 58, 87, 96, 238], "doi": [0, 1, 10], "dollar": [57, 58, 68, 95, 98], "domain": [29, 30, 48, 56, 57, 71, 84, 95, 98, 99, 108, 124, 127, 137, 139, 174], "domin": [16, 27, 29, 46, 48, 58, 59, 61, 68, 124], "don": [2, 8, 19, 27, 29, 36, 43, 49, 53, 58, 59, 62, 68, 71, 88, 89, 90, 94, 96, 98, 100, 101, 105, 106, 109, 110, 112, 123, 124, 125, 128, 134, 136, 143, 158, 174, 180, 216, 218, 219, 222, 231], "done": [2, 6, 16, 17, 27, 29, 30, 32, 46, 53, 57, 58, 59, 61, 66, 71, 76, 82, 83, 89, 90, 94, 98, 99, 100, 103, 104, 113, 118, 119, 120, 130, 190, 193, 211, 213, 219, 221, 229], "dont": 158, "dorothea": 16, "dorothi": 48, "dose": 70, "dot": [4, 53, 59, 61, 66, 68, 74, 76, 80, 83, 118, 119, 127, 130, 217], "doubl": [6, 7, 8, 24, 32, 36, 48, 78, 82, 90, 94, 117, 118, 180, 227], "double_int_or_int": 8, "double_scalar": 62, "doubleintegr": 126, "doublepair": 5, "douglasorr": 121, "down": [5, 19, 27, 30, 36, 43, 48, 53, 56, 57, 59, 66, 72, 76, 77, 82, 90, 96, 98, 109, 120, 121, 123, 124, 134, 136], "down_proj": 72, "downarrow": 56, "downfal": 77, "download": [58, 68, 77, 94, 99, 217], "download_fil": 59, "download_sit": 216, "downright": 94, "downsid": 98, "downstream": [7, 57, 71, 98, 99, 100, 101, 108], "downtim": [93, 108], "downward": 94, "doyl": 98, "dp": [0, 126], "dpi": [53, 63, 128, 144, 147, 155, 160, 174], "draft_respons": 48, "drafter": 48, "draftrespons": 48, "drain": 229, "dramat": 53, "drastic": [59, 71, 94, 102, 103, 123], "draw": [5, 30, 32, 50, 53, 57, 58, 66, 68, 83, 94, 100, 101, 107, 128, 130, 131, 143, 146, 147, 148, 153, 158, 188, 191, 196, 207, 210], "drawback": [5, 61, 71, 94, 97, 213], "drawn": [50, 53, 57, 66, 68, 74, 87, 102, 107, 124, 128, 146, 147, 148, 151, 153, 155, 158, 159, 160, 174, 191, 196, 207, 210, 211], "dress": 229, "drew": [50, 158], "drif": 110, "drift": [93, 94, 96, 100, 108], "drill": 108, "drink": 184, "drive": [2, 3, 80, 94, 95, 96, 218], "driven": [94, 95, 99, 101], "driver": [94, 98, 99], "drone": 30, "drop": [53, 56, 66, 76, 94, 106, 110, 210, 211, 231], "drop_last": [59, 119], "dropna": 76, "dropout": [58, 59, 72, 112, 114, 117, 119, 120], "drown": 103, "dry_run_backbon": 120, "dry_run_backbone_last_layer_hidden_st": 120, "dry_run_model": 120, "dry_run_model_config": 120, "dry_run_pool": 120, "dry_run_pooler_output": 120, "ds_store": 94, "dsa": 36, "dstack": [53, 127, 190], "dt": [126, 166], "dtype": [54, 58, 59, 62, 63, 76, 77, 111, 112, 114, 119, 120, 121, 124, 128], "dub": 57, "duck": 2, "duda": 211, "dude": 91, "due": [2, 6, 11, 13, 17, 19, 27, 29, 30, 32, 43, 44, 47, 48, 57, 58, 62, 68, 71, 72, 75, 77, 94, 96, 97, 98, 99, 101, 106, 108, 109, 115, 117, 118, 119, 124, 134, 188, 203, 207, 210, 211, 216, 218, 230, 238, 239], "dummi": [58, 68, 102, 106, 119, 221, 226], "dummy_data": 221, "dummy_model": [59, 123], "dump": [99, 217], "dunder": 234, "duo": 5, "dup_dict": 128, "duplic": [11, 17, 30, 39, 40, 45, 48, 57, 78, 98, 99, 100, 117, 128, 210, 226], "durat": [59, 95, 99, 101, 123], "durbin": 68, "durbin_watson": 68, "durbin_watson_stat": 68, "dure": [2, 3, 5, 8, 27, 29, 30, 46, 54, 56, 57, 58, 59, 62, 66, 69, 71, 72, 74, 76, 89, 90, 94, 96, 97, 101, 104, 105, 106, 107, 109, 110, 115, 118, 123, 155, 158, 216, 217, 218, 222], "dvc": [100, 104], "dwarf": 16, "dx": [126, 162, 163, 164, 165, 166, 173, 174, 176], "dx_": 188, "dx_1": 188, "dx_2": 188, "dx_n": 188, "dxd": 58, "dy": [173, 176, 180, 183], "dynam": [2, 5, 11, 27, 29, 32, 46, 48, 78, 213, 218, 226, 228], "dynamic_model": 238, "dynamicmodel": 238, "dzmitri": [0, 118], "e": [0, 2, 3, 4, 6, 7, 8, 9, 13, 16, 19, 27, 29, 32, 35, 36, 43, 44, 46, 47, 48, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 82, 84, 85, 87, 88, 91, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 115, 117, 118, 119, 123, 124, 126, 128, 131, 132, 133, 134, 137, 139, 143, 144, 146, 147, 150, 155, 158, 159, 163, 167, 169, 170, 171, 172, 173, 174, 178, 180, 181, 183, 184, 185, 186, 188, 191, 195, 198, 199, 200, 201, 203, 206, 207, 210, 211, 213, 216, 217, 219, 221, 236, 238], "e731": 59, "e_": 66, "ea": 77, "each": [2, 4, 5, 6, 8, 9, 11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 117, 118, 119, 120, 123, 124, 126, 127, 128, 130, 134, 137, 139, 142, 143, 144, 146, 147, 148, 153, 155, 158, 159, 165, 174, 176, 179, 180, 181, 184, 188, 190, 191, 193, 196, 203, 206, 207, 210, 211, 213, 214, 216, 217, 218, 219, 221, 222, 223, 230, 231, 235, 236, 238, 239], "each_dai": 146, "eager": 230, "earli": [30, 59, 95, 103, 119, 123, 158], "earlier": [2, 3, 5, 6, 7, 27, 29, 30, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 76, 80, 90, 100, 102, 106, 109, 113, 118, 119, 120, 143, 146, 148, 170, 174, 181, 183, 188, 191, 198, 201, 213, 217, 229, 231], "earn": 146, "eas": [50, 56, 71, 74, 94, 96, 97, 221], "easi": [7, 36, 50, 53, 58, 59, 61, 66, 67, 68, 74, 76, 94, 97, 98, 100, 101, 108, 115, 118, 124, 126, 131, 133, 134, 136, 137, 148, 170, 181, 213, 217, 223, 225, 228, 238], "easier": [2, 35, 58, 59, 62, 66, 74, 76, 94, 98, 99, 100, 102, 104, 109, 117, 155, 158, 176, 190, 214, 218, 221, 226, 231], "easili": [5, 11, 29, 53, 56, 58, 59, 61, 64, 66, 68, 71, 74, 84, 94, 96, 97, 99, 100, 104, 109, 110, 118, 173, 180, 191, 200, 206, 211, 216, 217, 218, 219, 221, 226, 228, 234], "east": 99, "eat": [20, 28, 32, 56, 58, 78], "eaten": 29, "ec2": 88, "ecdf": 147, "ece595": 66, "echo": [89, 90], "econom": [95, 97], "ecosystem": [100, 111], "ecr": 94, "ed": [1, 55, 57], "eda": [76, 101, 127], "edg": [48, 93, 97, 98, 109], "edgar": 98, "edgecolor": [62, 143, 146, 148, 159, 171, 174], "edit": [0, 94], "editor": [48, 94], "editori": [29, 36], "edu": [0, 68, 74, 126, 158, 185, 194], "educ": [48, 57, 61, 63, 90, 97], "edunita": [2, 3, 4], "edward": 0, "ef": [90, 99], "efa": 90, "effect": [2, 4, 5, 11, 27, 29, 30, 32, 36, 47, 53, 55, 56, 57, 58, 59, 63, 66, 68, 71, 74, 79, 82, 89, 94, 95, 96, 98, 99, 100, 101, 102, 104, 108, 117, 118, 123, 124, 214, 216, 230, 231, 235, 236], "effective_batch_s": 118, "effective_batch_size_per_it": 118, "effective_flops_per_second": 118, "effectivepython": [214, 231], "effici": [3, 19, 20, 27, 29, 32, 36, 43, 44, 47, 48, 56, 58, 59, 68, 70, 71, 74, 78, 80, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 109, 110, 117, 123, 214, 216, 231, 232, 239], "effort": [29, 57, 94, 100, 219], "efsset": 90, "eigen": 97, "eigendecomposit": [83, 193], "eigenvalu": [83, 195], "eigenvector": 83, "eigh": 53, "eighth": 59, "einsum": 56, "either": [3, 4, 6, 8, 27, 29, 30, 43, 47, 48, 53, 54, 56, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 76, 77, 80, 83, 85, 94, 98, 99, 100, 103, 106, 113, 117, 123, 124, 128, 131, 143, 146, 155, 166, 210, 213, 217, 221, 226, 227, 231, 238], "el": 34, "elabor": [53, 96], "elaps": [59, 123], "elapsed_tim": [97, 113], "elbow": 62, "elbow_method": 62, "electr": [29, 94], "electron": [30, 97], "eleg": [5, 9], "element": [2, 5, 7, 8, 11, 13, 19, 20, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 48, 51, 53, 56, 57, 58, 59, 60, 61, 62, 66, 68, 69, 71, 74, 75, 77, 79, 82, 85, 87, 95, 97, 100, 113, 117, 118, 119, 124, 126, 128, 130, 137, 159, 188, 192, 207, 217, 230, 234, 239], "element1": 32, "element2a": 32, "element2b": 32, "element3a": 32, "element3b": 32, "element3c": 32, "element4a": 32, "element4b": 32, "elementari": [181, 203], "elementwis": [58, 113], "elementwise_affin": [56, 58, 59, 119, 120], "elev": 94, "eli": 124, "elif": [8, 9, 27, 48, 54, 59, 62, 69, 112, 115, 117, 171, 221, 228, 238], "elimin": [3, 26, 27, 36, 66, 74, 80, 91, 94, 100, 133, 216, 230], "ell": [27, 53, 57, 59, 87, 140, 147, 186], "ellips": [53, 190, 193], "ellipsi": [5, 8, 117], "ellipsoid": [74, 193], "ellipt": [61, 193], "elong": 190, "els": [2, 3, 6, 8, 9, 16, 19, 20, 27, 29, 34, 35, 36, 41, 46, 47, 48, 53, 54, 56, 58, 59, 62, 63, 66, 68, 69, 72, 75, 76, 89, 91, 100, 112, 114, 115, 117, 118, 119, 120, 121, 123, 126, 127, 128, 143, 146, 171, 211, 213, 214, 218, 221, 228, 231, 234, 237, 238, 239], "elsewher": [5, 56, 58, 80], "elt": 97, "elucid": [30, 80], "elus": 29, "em": [52, 54, 60], "email": [94, 95, 96, 109, 150, 238], "eman": 80, "emb": [58, 222], "embed": [30, 59, 72, 79, 80, 82, 84, 85, 87, 93, 96, 97, 98, 99, 101, 104, 109, 112, 114, 118, 120, 222], "embed_token": 72, "embedd": [7, 222], "embedder_typ": 222, "embedding_backward": 114, "embedding_dense_backward": 114, "embedding_dim": [58, 112, 114], "embeddingbackwa": 114, "embeddingbackward0": [58, 114], "embodi": [98, 222], "emerg": [93, 94], "emit": 58, "emoji": [57, 58], "empahsi": [57, 58], "emphas": [4, 53, 56, 58, 59, 68, 76, 79, 82, 94, 98, 99, 102, 121, 123, 137, 148], "emphasi": [57, 82, 211], "emphasis": [71, 76, 180], "empir": [0, 48, 53, 59, 61, 68, 71, 76, 78, 87, 106, 123, 146, 147, 155, 156, 160, 172, 174, 195, 207, 211], "empirc": [59, 123], "empirical_mean": 159, "empirical_pmf": [143, 146, 148, 156, 159], "empirici": 159, "emploi": [29, 32, 47, 48, 57, 59, 84, 94, 95, 106, 108, 123, 126, 146, 216, 235], "employe": [5, 7, 146], "empow": [57, 98, 223], "empt": 214, "empti": [8, 11, 17, 19, 20, 22, 23, 27, 30, 32, 35, 48, 53, 58, 61, 62, 80, 94, 113, 114, 117, 121, 148, 207, 213, 231, 234, 236], "emptiv": 214, "empty_cach": [112, 115, 121], "empty_lik": [58, 114], "empty_strid": [113, 114], "emptyset": [27, 61, 130, 131, 133, 137, 146], "emul": 36, "en": [0, 7, 59, 72, 115, 121, 123, 193, 229, 238], "enabl": [2, 3, 5, 8, 11, 29, 30, 32, 48, 55, 56, 57, 59, 71, 90, 93, 94, 97, 98, 100, 102, 104, 108, 109, 111, 114, 115, 119, 124, 200, 213, 216, 219, 222, 230], "enable_adapt": 117, "enable_backward": 114, "enable_by_count": 230, "enable_input_require_grad": 117, "enable_optim": 114, "enable_tim": 113, "enact": 234, "enc": 58, "encapsul": [5, 57, 58, 79, 80, 85, 94, 97, 100, 218, 223, 225, 228], "enclos": 235, "encod": [53, 55, 63, 71, 72, 74, 75, 76, 77, 79, 96, 98, 99, 101, 117, 120, 121, 124, 213, 222], "encode_batch": 59, "encode_equ": 59, "encode_ordinari": 58, "encoded_sent": 59, "encoder_hidden_st": 58, "encoder_hidden_states_mask": 58, "encoding_nam": 58, "encompass": [5, 8, 27, 30, 94, 95, 98, 99], "encount": [8, 17, 29, 30, 35, 36, 44, 46, 59, 62, 66, 69, 76, 94, 100, 109, 211, 213, 221], "encourag": [9, 59, 68, 84, 94, 96], "encrypt": [99, 216], "end": [2, 3, 11, 16, 19, 20, 22, 24, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 95, 96, 97, 100, 101, 102, 103, 106, 109, 110, 111, 112, 113, 118, 123, 124, 126, 127, 130, 137, 139, 140, 143, 144, 146, 147, 148, 150, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 174, 176, 178, 180, 181, 183, 184, 186, 188, 190, 191, 192, 193, 195, 198, 200, 201, 207, 210, 211, 213, 217, 218, 223, 234], "end_tim": [97, 111, 216, 218, 231], "endeavor": 29, "endoftext": 120, "endpoint": [89, 109], "endswith": [58, 59, 112, 114, 119, 120, 230], "enemi": 58, "enforc": [5, 6, 32, 66, 94, 98, 100], "engag": [94, 95, 96, 101], "engagement_loss": 96, "engagement_predict": 96, "engin": [30, 59, 93, 94, 95, 96, 97, 102, 108, 109, 110, 114, 136, 199], "english": [20, 57, 58, 96, 128], "enhanc": [3, 30, 48, 56, 57, 58, 94, 95, 96, 99, 100, 101, 106, 109, 213, 216, 219, 221, 226, 230], "enjoi": 95, "enjoy": 96, "enlighten": [29, 183], "enorm": [101, 213], "enough": [6, 19, 27, 32, 50, 53, 57, 62, 63, 66, 68, 71, 76, 80, 90, 91, 94, 96, 97, 99, 115, 119, 120, 128, 143, 156, 159, 170, 174, 213, 217, 238], "enqueu": [22, 23, 25, 26, 36], "enrich": 99, "ensembl": [106, 179], "ensu": 6, "ensur": [2, 3, 4, 5, 6, 7, 9, 11, 17, 27, 29, 30, 32, 53, 56, 57, 58, 59, 62, 63, 66, 68, 69, 71, 72, 79, 84, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 114, 117, 118, 119, 123, 124, 179, 214, 216, 222, 226, 227, 230, 231, 236], "entail": [48, 57, 94, 99, 101, 119, 120], "enter": [26, 62, 94, 136, 211, 231], "enterpris": 100, "entertain": 57, "entir": [16, 27, 29, 30, 43, 44, 46, 48, 56, 57, 58, 59, 68, 74, 87, 94, 97, 98, 99, 100, 106, 107, 118, 120, 123, 126, 130, 131, 174, 203, 213, 216, 230, 231, 238], "entireti": [5, 57], "entiti": [2, 3, 5, 57, 80, 82, 83, 84, 91, 97, 98, 110, 222], "entrant": 94, "entri": [17, 53, 66, 74, 76, 82, 85, 96, 106, 191, 211, 217], "entropi": [59, 61, 66, 68, 96, 121, 124, 211], "entrypoint": [100, 217], "enum": [213, 228, 238], "enumer": [19, 53, 57, 58, 62, 63, 75, 77, 87, 109, 119, 120, 125, 128, 133, 136, 137, 139, 156, 159, 207, 216, 222, 229], "env": [58, 59, 62, 71, 89, 90, 91, 94, 100, 104, 117, 119, 217, 230, 231], "env_copi": 217, "env_set": 217, "envelop": 207, "environ": [2, 3, 32, 58, 59, 62, 71, 89, 91, 93, 95, 96, 97, 99, 101, 104, 108, 109, 117, 214, 219, 222, 225, 227], "environment": 109, "envis": 96, "eo": [56, 58, 59], "eof": 94, "eos_token": [120, 121], "eos_token_id": [120, 121], "eosin": 63, "ep": [54, 56, 58, 59, 75, 112, 114, 119, 120, 211, 217], "ephemeral_gc": 115, "epoch": [59, 69, 72, 104, 105, 106, 117, 119, 120, 121, 123, 217, 218], "epoch_index": [59, 218], "epol": 213, "epperli": 70, "epsilon": [16, 56, 58, 59, 65, 66, 68, 124, 130, 174, 187, 203, 206, 211], "epsilon_": 66, "eq": [66, 193], "eq1": 85, "eq_naive_bayes_estim": 77, "eqlabel": 77, "eqref": 77, "equal": [4, 7, 9, 16, 19, 20, 29, 30, 43, 44, 47, 48, 50, 53, 56, 58, 59, 61, 62, 66, 68, 69, 71, 74, 75, 78, 79, 80, 84, 85, 94, 97, 98, 101, 107, 117, 123, 124, 126, 127, 130, 150, 158, 159, 160, 172, 174, 176, 180, 203, 217, 218, 219, 232], "equal_idx": 59, "equal_index": 59, "equal_token_id": 59, "equat": [27, 30, 52, 53, 56, 57, 59, 61, 63, 66, 68, 71, 74, 76, 78, 81, 84, 85, 87, 94, 118, 123, 124, 133, 136, 137, 180, 188, 192, 193, 203, 211], "equation_to_str": 59, "equidist": 61, "equip": [29, 109, 117], "equiprob": 130, "equiv": 53, "equival": [4, 7, 20, 29, 32, 46, 50, 51, 53, 54, 56, 57, 63, 66, 68, 71, 74, 76, 82, 83, 84, 88, 94, 99, 117, 123, 126, 127, 128, 137, 140, 142, 163, 165, 174, 180, 181, 188, 203, 207, 211, 213, 234], "era": 99, "erad": 94, "erasur": 5, "erf": [56, 58, 114, 170], "erfbackward0": 114, "eriklindernoren": 73, "erlang": 186, "erm": [49, 66, 68], "err": [3, 5, 7, 8, 59, 90, 94, 213], "erron": 3, "error": [2, 3, 5, 6, 7, 8, 10, 11, 17, 19, 32, 36, 48, 51, 53, 59, 61, 62, 63, 65, 69, 71, 72, 77, 80, 84, 87, 89, 90, 96, 98, 99, 100, 103, 104, 106, 107, 108, 110, 112, 115, 120, 187, 203, 217, 222, 230, 238], "error_if_nonfinit": [59, 119], "error_queu": 89, "errorn": 3, "escal": 57, "escap": [61, 83, 84, 85, 169, 170, 174, 190], "especi": [5, 9, 17, 30, 58, 59, 61, 62, 74, 79, 80, 83, 84, 85, 87, 94, 95, 97, 98, 99, 100, 101, 103, 104, 106, 116, 117, 118, 123, 158, 199, 204, 213, 216, 218, 219, 223, 233], "essai": 48, "essenc": [2, 17, 29, 30, 57, 58, 82, 83, 226], "essenti": [3, 5, 7, 8, 10, 17, 27, 29, 30, 36, 46, 48, 56, 57, 58, 59, 61, 66, 68, 71, 74, 79, 80, 82, 83, 84, 85, 87, 90, 94, 95, 96, 99, 100, 101, 104, 106, 109, 110, 111, 119, 124, 142, 160, 165, 174, 176, 222, 234], "essentiali": 58, "establish": [2, 3, 4, 7, 27, 29, 30, 57, 59, 61, 66, 68, 76, 82, 85, 94, 95, 98, 100, 102, 119, 120, 123, 133, 134, 137, 174, 193, 199, 221], "estim": [36, 51, 54, 56, 58, 59, 61, 62, 66, 71, 73, 75, 76, 77, 78, 80, 94, 101, 103, 106, 107, 123, 124, 143, 148, 159, 178, 180, 195], "estimate_likelihood_paramet": 76, "estimate_mfu": 118, "estimate_p_aloc": 128, "estimate_p_aloc_for_rang": 128, "estimate_prior_paramet": 76, "estimate_token": 117, "estimate_training_dai": 118, "estimated_byt": 118, "estimated_bytes_in_byt": 118, "et": [30, 48, 53, 56, 57, 58, 59, 68, 71, 79, 80, 84, 123, 124, 211], "eta": [59, 71, 123], "eta_": [59, 123], "eta_0": [59, 123], "eta_1": 123, "eta_2": 123, "eta_3": 123, "eta_4": 123, "eta_5": 123, "eta_6": 123, "eta_7": 123, "eta_max": 123, "eta_min": [59, 119, 120, 123, 226], "eta_t": [59, 123], "etc": [4, 5, 6, 11, 17, 27, 52, 56, 58, 59, 61, 63, 66, 80, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 117, 118, 119, 120, 124, 146, 158, 211, 216, 218, 219, 221, 229], "etern": 70, "ethan": 70, "ethernet": 94, "ethic": 96, "etl": [78, 93, 97, 100], "euclidean": [58, 61, 62, 63, 80, 85, 87, 102], "euclidean_dist": 62, "eugen": [57, 58, 105], "euphoria": 103, "eval": [58, 59, 72, 117, 119, 120, 121, 217, 238], "eval_accuraci": [72, 120], "eval_brier_scor": [72, 120], "eval_confusion_matrix": [72, 120], "eval_dataset": [72, 117, 120], "eval_every_n_step": [59, 119], "eval_f1_score_macro": [72, 120], "eval_f1_score_micro": [72, 120], "eval_log_loss": [72, 120], "eval_loss": 72, "eval_pr_auc": [72, 120], "eval_pr_auc_class_": [72, 120], "eval_pr_auc_class_0": 72, "eval_pr_auc_class_1": 72, "eval_pr_auc_class_2": 72, "eval_precision_macro": [72, 120], "eval_precision_micro": [72, 120], "eval_predict": [72, 120], "eval_recall_macro": [72, 120], "eval_recall_micro": [72, 120], "eval_roc_auc": [72, 120], "eval_roc_auc_class_": [72, 120], "eval_roc_auc_class_0": 72, "eval_roc_auc_class_1": 72, "eval_roc_auc_class_2": 72, "eval_runtim": 72, "eval_samples_per_second": 72, "eval_step": [72, 120], "eval_steps_per_second": 72, "eval_strategi": [72, 120], "evalpredict": [72, 117, 120, 121], "evalu": [2, 4, 13, 19, 29, 30, 36, 46, 47, 53, 56, 57, 58, 66, 68, 77, 78, 87, 93, 94, 95, 96, 100, 101, 102, 104, 106, 108, 109, 110, 117, 118, 119, 124, 127, 137, 170, 181, 211, 213, 218, 230, 233, 236], "evaluate_and_generate_on_valid_epoch_end": 59, "evaluate_funct": 114, "evaluate_on_reverse_dataset": 119, "evaluation_loop": 117, "evaluation_strategi": [72, 120], "even": [2, 3, 5, 6, 7, 8, 9, 11, 13, 20, 27, 29, 36, 53, 57, 58, 59, 61, 66, 68, 71, 74, 76, 77, 80, 82, 84, 87, 89, 91, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 110, 111, 118, 123, 124, 133, 136, 158, 159, 174, 180, 181, 207, 211, 213, 214, 216, 219, 230, 231], "evenli": [11, 17, 43, 53, 106, 124, 207], "event": [30, 50, 59, 66, 74, 76, 77, 78, 90, 94, 96, 98, 101, 103, 110, 111, 115, 116, 124, 125, 128, 132, 134, 136, 137, 144, 146, 150, 155, 157, 176, 188, 203, 213, 216], "eventa": [176, 188], "eventa_1": 188, "eventa_2": 188, "eventa_n": 188, "eventu": [26, 27, 29, 30, 46, 61, 66, 96, 115, 174], "ever": [66, 68], "everi": [3, 4, 6, 7, 11, 13, 17, 19, 27, 29, 30, 32, 35, 36, 43, 44, 53, 56, 57, 58, 59, 61, 63, 66, 68, 71, 76, 77, 79, 80, 83, 84, 87, 91, 94, 96, 98, 101, 102, 103, 108, 109, 113, 115, 118, 119, 120, 124, 126, 142, 158, 159, 165, 207, 213, 227], "everyon": [66, 98, 211], "everyth": [3, 53, 66, 74, 76, 89, 101, 104, 146, 178, 184, 211, 221], "everytim": [94, 146, 226], "everywher": [8, 56, 58, 68, 101, 102], "evid": [29, 48, 53, 68, 71, 124], "evidenc": 53, "evolut": 108, "evolutionari": 104, "evolv": [30, 94, 95, 98, 106, 109, 172], "exacerb": 71, "exact": [2, 6, 8, 16, 29, 30, 32, 59, 66, 72, 74, 91, 94, 98, 104, 106, 113, 155, 211, 217, 233], "exactli": [7, 13, 19, 27, 29, 43, 47, 48, 49, 50, 51, 56, 58, 59, 62, 66, 68, 76, 84, 85, 90, 123, 126, 130, 147, 155, 158, 174, 211, 213, 227, 238], "exam": 66, "examin": [2, 6, 11, 17, 30, 48, 58, 59, 66, 68, 76, 80, 94, 95, 98, 101, 124, 137, 139, 211], "exampl": [2, 4, 6, 9, 10, 13, 19, 30, 35, 36, 43, 46, 47, 50, 57, 61, 62, 71, 75, 76, 77, 78, 80, 82, 84, 87, 89, 90, 100, 102, 104, 105, 106, 107, 111, 113, 115, 117, 118, 119, 120, 121, 124, 125, 126, 128, 131, 133, 136, 139, 143, 144, 148, 149, 154, 158, 159, 170, 173, 176, 179, 180, 181, 182, 183, 185, 187, 188, 190, 196, 198, 203, 210, 214, 217, 218, 219, 221, 222, 225, 228, 229, 231, 233, 235, 238], "example_attention_weight": 59, "example_cod": [214, 231], "example_input": 59, "example_logit": 59, "example_predict": 59, "example_project": 94, "example_target": 59, "exc": [112, 213, 222, 228, 238], "exce": [17, 27, 36, 57, 85, 124, 213], "exceed": [19, 36, 66, 94, 174], "excel": [11, 32, 57, 97, 99], "except": [3, 5, 7, 8, 22, 23, 27, 32, 36, 53, 58, 59, 68, 69, 83, 89, 94, 98, 112, 115, 117, 190, 211, 213, 219, 222, 228, 234, 238], "exception": 27, "excerpt": 118, "excess": 171, "exchang": [27, 30, 57, 58, 80, 85, 97], "exclud": [29, 30, 46, 59, 68, 72, 118, 123], "exclude_dir": 94, "exclude_kei": 217, "exclus": [2, 57, 58, 59, 96, 109, 113, 130, 214], "exec": [117, 213], "execut": [3, 5, 8, 13, 17, 19, 27, 30, 32, 36, 43, 46, 56, 57, 58, 78, 88, 91, 94, 97, 98, 100, 101, 111, 112, 117, 118, 213, 214, 215, 227, 228, 231, 235], "execute_search": 27, "exemplifi": [5, 11, 17, 57], "exercis": [17, 30, 66, 78, 112, 114, 129, 154, 211], "exhaust": [27, 30, 95, 96, 106, 130, 213, 230, 234], "exhibit": [4, 8, 29, 53, 66, 68, 76, 83, 235], "exist": [2, 4, 6, 13, 17, 19, 20, 27, 29, 30, 36, 43, 47, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 75, 76, 79, 80, 82, 83, 87, 90, 95, 100, 101, 102, 108, 117, 124, 128, 130, 143, 170, 173, 192, 195, 198, 200, 211, 216, 218, 222, 227, 228, 230, 231, 235, 237], "exist_ok": 58, "exit": [27, 117, 213, 231], "exitcod": 231, "exorbit": 57, "exp": [53, 56, 57, 58, 59, 68, 74, 75, 76, 114, 121, 124, 127, 128, 146, 159, 170, 176, 178, 186, 191, 193, 195, 200, 201, 203, 210, 211], "expand": [16, 46, 50, 57, 58, 59, 68, 74, 80, 88, 99, 112, 114, 119, 120], "expand_dim": 76, "expans": [16, 27, 53, 57, 58, 68], "expbackward0": 114, "expec": [50, 185], "expect": [2, 3, 4, 5, 6, 7, 8, 9, 27, 29, 32, 35, 36, 37, 41, 44, 50, 54, 57, 58, 59, 61, 63, 65, 66, 67, 74, 76, 78, 87, 90, 93, 94, 95, 100, 101, 105, 106, 107, 108, 109, 117, 118, 126, 127, 137, 142, 143, 148, 154, 159, 165, 167, 172, 175, 180, 184, 197, 199, 200, 203, 208, 211, 214, 227, 229, 231, 233, 235, 236, 238], "expected_list": 46, "expected_param": 118, "expected_total_convers": 146, "expected_total_profit": 146, "expected_total_revenu": 146, "expected_valu": 159, "expedit": 17, "expens": [17, 29, 36, 47, 58, 63, 71, 74, 94, 98, 105, 106, 118, 196], "experi": [10, 17, 29, 30, 59, 66, 71, 77, 78, 90, 93, 94, 95, 96, 102, 105, 106, 108, 109, 118, 123, 124, 131, 133, 137, 143, 144, 146, 147, 148, 158, 159, 170, 207, 208, 217, 219], "experienc": [29, 97], "experiment": [63, 96, 106, 114, 120, 143, 156], "experiment_id": 218, "experiment_nam": 218, "experimental_config": 114, "expert": [101, 116], "explain": [2, 5, 46, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 77, 94, 96, 99, 102, 103, 118, 181, 223, 230, 233], "explan": [20, 29, 30, 32, 36, 46, 48, 53, 59, 68, 77, 94, 98, 108, 118, 121, 126, 133, 211, 216], "explanatori": [59, 67, 68, 80], "explicit": [2, 6, 9, 30, 56, 58, 59, 74, 77, 80, 96, 115, 123, 124, 216, 236], "explicitli": [2, 5, 9, 56, 57, 59, 61, 74, 82, 94, 98, 109, 110, 115, 123, 124, 163, 180, 191, 211, 213, 216, 233], "explod": [58, 68, 71, 104], "exploit": [53, 71, 94], "explor": [4, 9, 27, 29, 30, 57, 58, 59, 63, 80, 82, 83, 84, 85, 93, 94, 123], "exploratori": [94, 100, 101], "explos": 106, "expoenti": 174, "expon": [16, 27, 75, 77, 102, 118, 124, 169], "exponenti": [32, 53, 57, 58, 61, 66, 74, 76, 77, 78, 94, 121, 168, 174, 175, 186, 191, 193, 195, 199, 200, 211], "export": [58, 89, 90, 109, 114, 115], "export_chrome_trac": [113, 114, 115], "export_memory_snapshot": 115, "export_memory_timelin": [114, 115], "export_stack": 114, "expos": [5, 48, 100, 109, 110, 228], "exposur": 57, "express": [3, 4, 5, 9, 11, 13, 16, 17, 29, 30, 35, 48, 52, 53, 56, 57, 58, 59, 61, 63, 66, 68, 74, 76, 77, 80, 82, 83, 84, 85, 94, 95, 102, 118, 123, 124, 134, 137, 180, 181, 183, 184, 195, 206, 210, 211, 230, 234], "ext": 217, "extend": [2, 4, 7, 16, 30, 57, 58, 59, 66, 83, 85, 94, 117, 124, 175, 177, 213, 226], "extens": [3, 8, 48, 53, 56, 58, 59, 74, 80, 84, 94, 97, 100, 106, 118, 126, 189, 195, 196, 203, 222, 225], "extent": [4, 58, 85, 174], "extern": [27, 48, 57, 58, 72, 94, 100, 117, 213, 216, 221], "extra": [13, 19, 27, 29, 30, 43, 44, 47, 58, 59, 66, 74, 94, 213, 226], "extra_repr": [58, 117], "extract": [48, 56, 58, 59, 61, 63, 66, 69, 78, 87, 93, 96, 98, 109, 117, 124, 126, 183, 203, 228, 238], "extract_from_connect": 100, "extractor": 119, "extrapol": [68, 204], "extrem": [58, 61, 68, 94, 96, 180, 217], "exxager": 66, "ey": [53, 58, 80], "f": [1, 2, 3, 4, 5, 7, 9, 16, 27, 29, 30, 32, 46, 48, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 69, 71, 72, 74, 75, 76, 82, 83, 84, 85, 89, 91, 94, 97, 98, 100, 102, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 126, 127, 128, 137, 140, 143, 146, 148, 156, 159, 162, 163, 167, 170, 171, 174, 178, 191, 192, 195, 198, 200, 207, 211, 213, 216, 217, 221, 222, 226, 227, 228, 229, 230, 231, 237, 238], "f1": [53, 72, 75, 89, 94, 95, 96, 103, 106, 107, 108, 110, 120], "f1_score": [72, 120, 121], "f2": [53, 89], "f_": [56, 57, 58, 66, 71, 74, 76, 121, 124, 127, 176, 178, 180, 181, 183, 188, 191, 193, 196, 200, 210, 211], "f_1": 4, "f_2": [4, 66], "f_4": 66, "f_c": 192, "f_n": [4, 61], "f_t": [103, 121], "f_u": 159, "f_x": [74, 146, 163, 167, 171, 173, 174, 176, 180, 186, 196, 200], "f_y": [74, 173, 176, 180, 183, 186], "f_z": 186, "fabric": 84, "face": [57, 61, 70, 90, 94, 95, 98, 126, 136], "facebook": [96, 97, 217], "facecolor": 53, "facial": 95, "facil": [94, 106, 109], "facilit": [3, 53, 56, 57, 59, 94, 95, 97, 98, 99, 100, 104, 216], "fact": [3, 4, 5, 7, 8, 9, 11, 13, 30, 43, 56, 57, 58, 59, 61, 66, 68, 71, 74, 76, 77, 82, 85, 89, 94, 109, 124, 126, 130, 134, 136, 176, 180, 181, 184, 188, 195, 201, 211, 217, 219, 228], "fact_check": 48, "fact_check_result": 48, "factcheckansw": 48, "facto": 58, "factor": [13, 16, 17, 20, 27, 29, 32, 46, 47, 53, 56, 57, 58, 59, 66, 68, 70, 74, 83, 94, 95, 96, 97, 99, 101, 104, 109, 110, 118, 123, 124, 176, 211, 216], "factori": [72, 78, 117, 216, 224, 226], "factory_kwarg": 58, "factory_method": 222, "factscor": 48, "fail": [6, 11, 58, 66, 68, 80, 90, 94, 95, 96, 98, 100, 102, 103, 110, 115, 143, 180, 213, 228, 238], "failur": [3, 19, 36, 88, 90, 94, 96, 98, 100, 109, 124, 143, 144, 146, 147, 148], "fair": [66, 74, 89, 103, 137, 144, 172, 211], "fairli": [7, 29, 53, 68, 180, 228], "faisal": [0, 49, 52, 53, 79, 80, 84], "faith": 46, "fall": [29, 61, 115], "fallback": 117, "fals": [2, 3, 5, 7, 9, 22, 23, 25, 26, 29, 30, 32, 35, 36, 37, 47, 53, 54, 56, 58, 59, 62, 69, 71, 72, 75, 76, 77, 83, 89, 91, 94, 95, 97, 100, 103, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 127, 128, 140, 143, 146, 148, 156, 159, 171, 174, 180, 213, 216, 217, 218, 225, 226, 233, 234, 238, 239], "falsi": 9, "falsifi": 48, "famili": [49, 52, 55, 56, 76, 87, 96, 98, 170, 180, 186], "familiar": [61, 68, 79, 82, 83, 84, 85, 94, 95, 98, 181, 211, 213], "famish": 58, "famou": 2, "fanci": 59, "fantat": 61, "far": [29, 30, 46, 48, 53, 58, 59, 61, 62, 66, 68, 72, 74, 85, 94, 101, 142, 159, 165, 189, 211], "fare": 98, "fashion": [7, 47, 57, 58, 61, 62, 76, 117, 148], "fast": [0, 6, 11, 27, 29, 32, 44, 47, 57, 66, 94, 95, 97, 98, 99, 100, 102, 106, 107, 109, 111, 184, 216], "fastapi": [94, 109], "faster": [11, 17, 29, 30, 54, 57, 58, 59, 61, 68, 89, 91, 97, 98, 213, 216, 231], "fastest": [29, 231], "favor": [68, 95, 96], "favorit": [68, 94], "favour": 58, "fc": 217, "fd": 231, "fear": 6, "feasibl": [19, 36, 43, 50, 71, 95, 213], "featur": [2, 8, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 69, 71, 75, 77, 80, 84, 85, 87, 94, 97, 98, 99, 100, 104, 106, 108, 110, 117, 119, 120, 124, 178, 180, 213, 216, 217, 218], "feature_dim": [58, 59, 119, 120], "feb": [1, 10], "fed": 100, "feed": [57, 59, 66, 96, 97, 99, 100, 101, 118, 120], "feed_forward": [58, 59, 119, 120], "feed_forward_config": [58, 59, 119], "feedback": [66, 94, 95, 97, 106, 109], "feel": [56, 68, 76], "feet": [68, 87], "felin": 94, "felix": 126, "femal": [76, 185], "ferrari": [188, 196], "fetch": [2, 3, 4, 90, 109, 216, 219, 221, 222], "few": [6, 30, 53, 56, 57, 59, 61, 63, 66, 68, 74, 76, 77, 85, 89, 94, 95, 96, 97, 98, 102, 106, 109, 117, 143, 148, 159, 217], "fewer": [29, 66, 71, 94], "ff": [56, 58], "ffn": [56, 59, 112, 114, 119, 120], "ffw": 118, "ffw1": 118, "ffw2": 118, "ffw_size": 118, "fi": [90, 238], "fiat": 97, "fibonacci": 229, "field": [2, 25, 26, 29, 30, 35, 37, 48, 57, 58, 72, 78, 81, 82, 83, 84, 85, 89, 90, 97, 100, 103, 109, 112, 117, 118, 130, 192, 203, 211, 217, 218, 219, 228], "field_info": 238, "field_metadata": 238, "field_nam": 238, "field_typ": 238, "field_valid": [58, 217, 219, 238], "fieldinfo": 238, "fiesta": 97, "fifo": 36, "fifth": 66, "fifti": 136, "fig": [16, 36, 53, 58, 59, 62, 63, 66, 76, 80, 82, 83, 84, 85, 123, 124, 127, 128, 132, 140, 143, 144, 146, 156, 159, 160, 168, 174, 176, 178, 190, 203, 207, 210, 211], "figaspect": 127, "figsiz": [53, 54, 58, 59, 62, 63, 68, 76, 77, 82, 83, 84, 85, 119, 123, 124, 127, 128, 140, 143, 144, 146, 147, 155, 156, 159, 160, 168, 170, 171, 174, 178, 190, 207, 211], "figur": [3, 35, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 72, 74, 76, 83, 84, 88, 98, 119, 120, 124, 127, 132, 134, 140, 146, 156, 171, 183, 190, 203, 210], "figure_format": [143, 211], "figure_kwarg": [58, 59], "file": [3, 6, 8, 27, 36, 54, 58, 59, 62, 63, 75, 89, 94, 96, 97, 99, 100, 101, 104, 113, 114, 115, 117, 118, 128, 143, 211, 216, 217, 218, 219, 225, 230, 231, 238], "file_nam": 6, "file_path": [213, 225], "file_prefix": [114, 115], "file_reader_using_gener": 213, "file_reader_using_iter": 213, "filehandl": 217, "filenam": [213, 217, 230], "filepath": [58, 218], "filipino": 99, "fill": [5, 9, 11, 30, 32, 56, 59, 76, 94, 125], "filter": [58, 90, 94, 95, 96, 98, 99, 100, 109, 115, 117, 126], "filtered_us": 98, "filterwarn": [53, 75, 140, 143, 146, 148, 156, 159, 168], "final": [8, 11, 20, 27, 32, 44, 46, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 80, 84, 94, 95, 96, 97, 99, 108, 118, 120, 123, 128, 130, 159, 180, 195, 211, 216, 217, 218, 225, 231, 235], "final_answ": 48, "financi": [58, 94, 95, 97], "financial_phrasebank": [72, 120, 121], "financialdataset": 120, "financialphrasecol": 121, "financialphrasedataset": 121, "find": [3, 5, 6, 11, 13, 17, 19, 29, 30, 36, 39, 40, 42, 43, 44, 47, 50, 53, 54, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 80, 84, 85, 87, 94, 95, 96, 98, 100, 101, 104, 106, 109, 123, 124, 126, 128, 130, 133, 134, 136, 143, 146, 148, 158, 166, 172, 174, 180, 181, 184, 188, 200, 207, 210, 211, 212, 216, 217, 228, 230, 236], "find_dupl": 239, "find_duplicates_effici": 239, "find_free_port": [89, 91], "find_kth_largest": 48, "find_min_max": 5, "find_prim": 216, "find_root_dir": [36, 54, 59, 62, 63, 75, 128, 143, 211], "findanagram": 41, "finder": [105, 106], "fine": [7, 8, 9, 58, 59, 63, 66, 70, 72, 76, 78, 90, 94, 115, 117, 122, 123, 126, 221], "finer": 219, "finetun": 116, "finfo": [54, 211], "finish": [26, 29, 32, 61, 64, 216, 218], "finit": [6, 11, 29, 30, 50, 53, 56, 57, 60, 66, 87, 124, 126, 130, 159, 198, 200, 204], "finn": [0, 57], "fire": [7, 103], "first": [5, 6, 7, 8, 11, 16, 19, 22, 26, 27, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 52, 53, 57, 58, 61, 62, 63, 64, 66, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 89, 90, 94, 95, 96, 97, 98, 99, 100, 108, 109, 110, 111, 113, 115, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 133, 134, 136, 137, 148, 159, 167, 174, 175, 180, 181, 190, 193, 200, 203, 211, 213, 214, 217, 218, 221, 222, 226, 227, 231, 234, 236, 237, 238], "first_el": 5, "first_in_q": 26, "first_row": 213, "first_sentence_norm": 58, "first_sequ": 58, "first_sequence_": 58, "first_sequence_decod": 58, "first_sequence_mean": 58, "first_sequence_var": 58, "firstli": [36, 43, 53, 57, 58, 59, 71, 76, 80, 96, 98, 119, 120, 123, 124], "firstrow": 118, "fit": [2, 8, 27, 53, 54, 56, 59, 62, 63, 66, 67, 69, 75, 80, 88, 94, 97, 98, 99, 102, 103, 106, 107, 119, 123, 124, 136, 146, 174, 190, 210, 211, 212, 219, 228], "fit_intercept": 69, "fittedvalu": 68, "five": [106, 133, 235], "fivetran": 100, "fix": [5, 6, 11, 13, 16, 17, 29, 32, 50, 53, 56, 57, 58, 59, 61, 62, 64, 68, 71, 74, 76, 77, 80, 87, 94, 98, 104, 106, 115, 118, 119, 123, 125, 137, 147, 148, 155, 157, 170, 173, 174, 180, 181, 183, 204, 211, 236], "fixer": 94, "fixm": [58, 143, 148, 218], "fixtur": 105, "flag": [8, 30, 59, 69, 71, 94, 101, 106, 217, 227], "flags_help": 217, "flake8": 94, "flamegraph": 113, "flat": [58, 97, 211], "flatten": [58, 59, 69, 77, 123, 196], "flaw": [48, 68, 94, 133], "flexibl": [2, 3, 5, 6, 11, 17, 32, 46, 53, 68, 94, 98, 100, 216, 217, 219, 221, 222, 225], "flink": 99, "flip": [36, 53, 66, 101, 119, 148, 203, 211], "flipper": 76, "flipper_length_mean_std": 76, "flipper_length_mm": 76, "float": [2, 3, 4, 5, 6, 7, 8, 9, 30, 46, 53, 54, 56, 58, 59, 62, 63, 68, 69, 72, 75, 77, 97, 111, 112, 113, 114, 117, 119, 120, 121, 123, 124, 127, 128, 143, 146, 148, 156, 159, 171, 207, 211, 217, 218, 219, 222, 226, 228, 231, 238], "float16": [112, 118], "float32": [58, 77, 94, 111, 124, 211], "float64": [6, 62, 76], "float_valu": 2, "floatfmt": 118, "floating_point_op": 117, "floatingpointprecis": 118, "floattensor": [58, 112, 114, 120], "floor": [27, 29, 77, 94], "flop": [78, 96, 113, 122], "flops_achieved_per_second": 118, "flops_need": 118, "flops_per_iter_per_fwdbwd": 118, "flops_per_sequence_per_fwdbwd": 118, "flops_per_token_per_fwdbwd": 118, "flops_throughput": 118, "flops_tot": 118, "flour": 80, "flow": [32, 53, 56, 58, 61, 71, 94, 100, 110, 219, 229], "fluctuat": 68, "fluent": 48, "fluff_ratio": 118, "fluffi": 238, "fly": [2, 3, 30, 71, 109, 213, 230, 234], "flyabl": [2, 3], "fmt": [30, 54, 58, 59, 62, 68, 71, 104, 112, 114, 118, 119, 127, 190], "fn": [62, 89, 91, 95, 103], "fn_kwarg": [72, 120], "fname": 53, "fnr": 95, "focal": 96, "focu": [2, 13, 53, 57, 58, 59, 66, 67, 68, 71, 76, 77, 79, 94, 97, 98, 99, 100, 101, 110, 133, 210], "focus": [2, 8, 27, 29, 30, 32, 53, 57, 58, 83, 94, 118, 120, 222], "fold": [71, 94, 106, 107, 108, 128], "folder": [58, 94, 104, 117, 217, 230], "follow": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 20, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 68, 71, 72, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 109, 111, 114, 115, 117, 118, 119, 120, 123, 124, 126, 127, 130, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 153, 155, 159, 160, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 176, 178, 180, 181, 183, 184, 186, 187, 188, 190, 191, 195, 196, 200, 201, 203, 204, 206, 210, 211, 213, 217, 221, 222, 230, 234, 235, 237, 238], "font": [30, 76], "fontsiz": [53, 58, 82, 83, 84, 85, 127, 128, 174, 190], "foo": 217, "food": 184, "fool": 48, "foot": 68, "footag": [68, 80], "footbal": 63, "footer": 217, "footnot": 68, "footnotes": 30, "footprint": [17, 58, 71, 102, 104, 128, 144, 169, 170, 174, 190, 207, 211, 213, 230], "foral": [2, 4, 6, 27, 29, 52, 56, 66, 74, 158, 191, 195], "forbid": 226, "forc": [6, 19, 30, 35, 43, 48, 58, 59, 68, 74, 94, 101, 111, 112, 113, 114, 115, 120, 213], "force_memory_leak": 115, "ford": 97, "foreach": [30, 59, 119], "forecast": 102, "foreign": 98, "foremost": 94, "foresight": [29, 112, 114, 120], "forest": [96, 102, 114, 228], "forget": [68, 74, 94, 96, 130], "forgiv": 119, "forgot": 115, "forgotten": 94, "fork": [94, 120, 216], "form": [2, 3, 8, 9, 17, 20, 27, 30, 35, 47, 48, 50, 51, 52, 56, 57, 59, 61, 62, 63, 66, 68, 69, 71, 76, 79, 82, 83, 87, 90, 94, 96, 97, 100, 101, 106, 107, 109, 117, 119, 123, 128, 133, 146, 170, 180, 181, 192, 207, 208, 210, 211, 221], "formal": [2, 3, 4, 6, 9, 10, 29, 30, 43, 44, 48, 50, 56, 57, 58, 59, 60, 61, 66, 68, 74, 76, 80, 83, 84, 87, 96, 108, 123, 124, 126, 130, 133, 158, 162, 172, 174, 178, 180, 181, 182, 183, 187, 191, 192, 203, 211, 213, 221], "format": [3, 8, 16, 27, 53, 54, 57, 58, 59, 63, 69, 75, 78, 90, 93, 95, 96, 98, 100, 101, 108, 109, 111, 112, 113, 114, 115, 118, 120, 214, 217, 225, 231, 238], "formatt": [94, 120, 121, 217], "former": [7, 58, 61, 63, 66, 74, 98, 117, 148, 238], "formul": [4, 27, 47, 50, 56, 57, 58, 59, 74, 78, 93, 96, 150, 173], "formula": [11, 16, 46, 53, 56, 58, 59, 63, 66, 68, 76, 85, 110, 118, 123, 124, 130, 132, 133, 134, 136, 150], "forth": 113, "fortran": 97, "fortun": [77, 94, 96, 110], "forum": 99, "forward": [44, 47, 57, 59, 66, 68, 71, 72, 104, 112, 114, 115, 117, 119, 120, 210], "forward_backward": 112, "forward_pass": 114, "forward_tot": 118, "forwardref": 238, "foster": [94, 222], "found": [3, 4, 5, 6, 8, 11, 19, 25, 26, 27, 29, 30, 36, 43, 44, 46, 47, 50, 53, 54, 57, 58, 59, 61, 62, 63, 64, 66, 68, 74, 75, 76, 85, 89, 90, 99, 110, 117, 128, 141, 143, 173, 180, 200, 211, 214, 226, 229, 231, 234], "foundat": [0, 3, 4, 11, 17, 57, 66, 68, 79, 80, 85, 87, 94, 98, 102, 113, 143, 170, 177], "four": [48, 53, 59, 63, 66, 80, 88, 96, 97, 103, 109, 137, 210, 211], "fourier": 200, "fourth": [66, 171, 236], "fowler": [94, 221], "fp": [95, 103], "fp16": 118, "fp32": 118, "fp64": 118, "fpr": [72, 95, 120], "frac": [13, 16, 19, 27, 29, 30, 36, 43, 50, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 74, 76, 77, 79, 84, 85, 87, 88, 102, 103, 110, 118, 121, 123, 124, 126, 127, 128, 130, 133, 140, 150, 151, 153, 155, 158, 159, 166, 167, 168, 169, 170, 171, 173, 174, 176, 178, 180, 181, 184, 186, 191, 193, 195, 198, 200, 201, 203, 206, 207, 210, 211], "frac16": 126, "frac56": 126, "fraction": [53, 56, 59, 94, 118, 181], "fragil": 57, "frame": [27, 56, 57, 71, 74, 76, 78, 82, 93, 95, 100, 101, 109, 119], "framework": [2, 4, 29, 55, 57, 58, 59, 61, 68, 79, 94, 97, 104, 203, 204, 213], "frank": 0, "fraser": 76, "fraud": [95, 96, 98, 101, 103, 109], "fraudul": [94, 96, 109], "free": [53, 59, 71, 82, 83, 89, 94, 98, 110, 112, 115, 216, 231], "freedom": [68, 71], "freeli": [6, 96, 211], "freez": [71, 72], "french": [57, 96], "freq": 143, "freqeunci": 76, "frequenc": [58, 74, 76, 101, 103, 110, 128, 130, 143, 144, 207], "frequent": [17, 30, 32, 47, 63, 78, 94, 96, 97, 98, 99, 109, 115, 232], "fresh": [48, 94, 101, 106, 216, 234, 236], "friction": 94, "fridai": 150, "friedman": [60, 61, 68, 77], "friend": [96, 98], "friendli": [95, 100, 196], "frighteningli": 62, "frobeniu": 71, "from": [2, 3, 4, 5, 6, 7, 9, 11, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 39, 40, 43, 45, 46, 53, 54, 55, 56, 59, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 126, 127, 128, 130, 133, 134, 137, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 156, 158, 159, 164, 165, 168, 169, 170, 171, 172, 175, 176, 178, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 195, 197, 200, 201, 203, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239], "from_account": 231, "from_dict": [217, 219, 225], "from_env": 225, "from_json": 225, "from_numpi": [58, 76], "from_openai": 48, "from_par": 231, "from_pretrain": [58, 72, 117, 118, 120, 121], "from_token": 59, "from_xxx": 225, "from_yaml": 225, "fromnumer": 62, "front": [23, 25, 36, 59, 76, 94], "frost": 68, "frozen": [25, 26, 35, 37, 57, 71, 213, 218], "frozen_out": 72, "frustrat": [94, 96], "fsdp": 89, "fsx": [90, 99], "fubini": 211, "fulfil": [2, 3, 59, 68, 85, 94, 126, 128, 148, 180], "full": [8, 17, 27, 48, 53, 54, 57, 59, 61, 71, 77, 94, 98, 100, 105, 106, 109, 119, 121, 124, 132, 133, 216, 238], "full_parameter_nam": 59, "fullfil": 96, "fulli": [11, 58, 62, 66, 68, 94, 95, 98, 104, 106, 118, 126, 146, 178, 231], "fun": [0, 84, 146, 148, 218], "func": [17, 69, 97, 113, 117, 229, 230, 238], "func_all_memb": 117, "func_or_class": 117, "func_or_method": [59, 117], "func_sig": 117, "function": [0, 2, 3, 6, 9, 10, 27, 30, 32, 34, 36, 37, 46, 48, 49, 50, 51, 53, 54, 62, 63, 67, 69, 71, 75, 76, 77, 78, 84, 85, 87, 89, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 111, 113, 115, 118, 121, 123, 126, 127, 131, 132, 133, 134, 137, 141, 142, 143, 144, 147, 148, 150, 151, 154, 155, 156, 158, 159, 160, 162, 164, 165, 168, 169, 175, 176, 180, 181, 182, 183, 190, 191, 193, 196, 207, 209, 212, 216, 217, 218, 221, 222, 228, 229, 230, 231, 234, 235, 238, 239], "function_with_bound": 6, "function_with_union": 6, "functionev": 113, "functool": [54, 59, 62, 69, 75, 97, 119, 123, 128, 230, 235, 238], "fundament": [2, 4, 11, 27, 29, 30, 32, 48, 53, 59, 77, 79, 80, 82, 83, 84, 85, 87, 94, 97, 98, 100, 101, 107, 110, 120, 129, 166, 181, 203, 208, 213, 216, 237], "funtion": 61, "furri": 98, "further": [56, 74, 77, 103, 130, 133, 150, 180, 181, 183, 184, 188, 238], "furthermor": [2, 6, 7, 16, 29, 30, 32, 46, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 80, 84, 94, 96, 97, 100, 102, 104, 105, 106, 123, 124, 158, 170, 174, 180, 183, 190, 195, 207, 211, 219, 221], "fuse": [59, 96], "futil": 29, "futur": [35, 56, 57, 69, 71, 77, 80, 94, 102, 119, 120, 225, 236], "future_mask": [58, 59, 119, 120], "future_masks_expand": 59, "futurewarn": [72, 120, 121], "fwd": 118, "g": [2, 4, 7, 8, 9, 16, 27, 29, 32, 46, 48, 50, 52, 53, 56, 57, 58, 59, 62, 63, 66, 68, 74, 76, 77, 82, 83, 84, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 110, 117, 118, 121, 124, 126, 141, 156, 164, 167, 172, 173, 183, 200, 203, 207, 213, 216, 221, 222, 236, 238], "g4dn": [88, 90], "g4dn12xlarg": 90, "g4dn2x": 89, "g4dn2xlarg": [89, 90], "g_i": 124, "ga": 109, "gain": [29, 30, 57, 58, 68, 94, 109, 124, 180], "galleri": 76, "gambler": 102, "game": [30, 94, 96, 126, 136], "gamma": [56, 58, 59, 171, 178, 226], "gamma_": 58, "gamma_d": [56, 58], "gan": 96, "gao": [0, 1, 55, 57, 59, 123], "gaohn": [62, 90, 100, 117, 216, 217], "gaohongnan": 216, "gap": [11, 79], "garbag": 213, "gareth": [0, 60, 61, 67, 68, 73, 74], "garner": 57, "gate": [56, 58, 94], "gate_proj": 72, "gatewai": 90, "gather": [48, 95, 98, 99, 103, 200, 207, 216], "gather_backward": 114, "gatherbackward0": 114, "gaug": [68, 95, 96, 97, 106, 118], "gaussian": [52, 60, 61, 63, 71, 73, 75, 76, 78, 127, 136, 156, 159, 167, 171, 172, 173, 175, 180, 195, 197, 200, 207], "gaussian_1": 53, "gaussian_2": 53, "gaussian_3": 53, "gaussian_kd": 171, "gaussianmixtur": 53, "gaussianmixturemodel": 54, "gaussiannb": 75, "gaussiansymbol": 170, "gave": [3, 7, 98, 133, 137, 158, 172], "gb": [114, 118], "gc": [112, 115, 121], "gc_collect_interv": 115, "gc_interv": 115, "gca": [53, 59, 123], "gcp": 109, "gcr": 94, "gdpr": 99, "ge": [217, 219], "gear": [94, 96, 106, 109], "geeksforgeek": [22, 23, 31, 32, 33], "gelu": [57, 59, 112, 114, 119, 120], "gemini": 58, "gen": [66, 213], "gender": [96, 185], "gener": [0, 1, 2, 3, 4, 7, 8, 10, 13, 17, 22, 23, 27, 29, 36, 43, 47, 51, 52, 54, 61, 62, 63, 65, 68, 71, 72, 73, 76, 77, 78, 87, 90, 94, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 109, 112, 114, 115, 117, 119, 120, 123, 124, 126, 127, 128, 130, 143, 146, 156, 159, 171, 173, 174, 178, 180, 181, 184, 189, 194, 195, 196, 198, 203, 207, 209, 210, 211, 212, 215, 216, 218, 222, 228, 229, 232, 238], "general_util": 59, "generalis": 58, "generaliz": 57, "generalpurpos": 90, "generate_config": 59, "generate_dynamic_model": 238, "generate_k_birthdai": 128, "generate_kurtosis_data": 171, "generate_one_random_birthdai": 128, "generate_random_birthdai": 128, "generate_skewed_data": 171, "generate_x": 53, "generated_equ": 59, "generated_token": 59, "generation_util": 72, "generational_gc_": 115, "generationmixin": 117, "generator_config": 119, "generator_express": 234, "generatorconfig": [59, 119], "generatorexit": 213, "generatortyp": 234, "generic_anim": 3, "generic_animal_sound": 3, "generic_cat": 3, "generic_cat_sound": 3, "generic_dog": [3, 4], "generic_dog_sound": 3, "genericalia": 7, "genericpath": 230, "genet": 95, "genexpr": [213, 230], "genom": 97, "genr": [110, 238], "gentl": [59, 76, 123], "gentoo": 76, "genuin": 36, "geograph": [95, 97, 108], "geometr": [32, 76, 78, 84, 154, 190, 200], "geometri": [53, 61, 63, 67, 80, 84, 85, 194], "geospati": 97, "geq": [16, 27, 29, 30, 51, 56, 59, 61, 64, 66, 68, 84, 87, 102, 123, 124, 131, 144, 163, 169, 170, 195, 203, 210], "geqslant": 53, "get": [2, 5, 6, 7, 8, 9, 11, 16, 17, 20, 22, 27, 29, 35, 36, 44, 47, 50, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 75, 76, 77, 85, 89, 90, 93, 94, 96, 97, 98, 100, 101, 103, 105, 107, 109, 118, 119, 120, 123, 124, 126, 128, 130, 137, 143, 146, 148, 150, 152, 158, 159, 170, 172, 174, 179, 180, 183, 188, 193, 196, 202, 205, 207, 211, 213, 214, 216, 217, 219, 221, 222, 226, 228, 229, 230, 231, 236, 238], "get_adapter_state_dict": 117, "get_all_arg": 117, "get_args_pars": [89, 91], "get_base_class": 117, "get_batch": 58, "get_buff": 117, "get_compon": 222, "get_constructor_field_annot": 117, "get_context": 89, "get_cosine_annealing_with_warmup": [59, 123], "get_debug": 213, "get_decay_parameter_nam": 117, "get_default": 117, "get_employe": 7, "get_encod": 58, "get_eval_dataload": 117, "get_extended_attention_mask": 117, "get_extra_st": 117, "get_field_annot": [59, 117], "get_first": 5, "get_gaussian_pdf": 53, "get_head_mask": 117, "get_height": 124, "get_hostnam": 89, "get_id": 216, "get_image_compression_ratio": 63, "get_image_compression_ratio_for_kmean": 63, "get_input_embed": 117, "get_ipython": [58, 117], "get_kei": 5, "get_learning_r": [59, 123], "get_linear_schedule_with_warmup": [117, 121], "get_manag": 7, "get_members_of_function_or_method": 117, "get_memory_footprint": 117, "get_meshgrid": 76, "get_optimizer_cls_and_kwarg": 117, "get_output_embed": 117, "get_paramet": 117, "get_position_embed": 117, "get_prior": 76, "get_process_id": 89, "get_random_batch": [112, 114], "get_recip": 229, "get_running_loop": 213, "get_schedul": 226, "get_second": 5, "get_sorted_us": 98, "get_sorted_users_by_ag": 98, "get_strategi": 228, "get_string_hashmap": 41, "get_submodul": 117, "get_test_dataload": 117, "get_test_transform": 221, "get_train_dataload": 117, "get_train_transform": 221, "get_training_strategi": 228, "get_type_hint": 117, "get_valu": 5, "get_weighted_likelihood": 54, "get_width": 124, "get_with_not_given": 9, "get_x": 124, "get_xaxi": 77, "get_yaxi": 77, "getattr": [213, 217, 230], "getcwd": 59, "getdoc": 59, "getenv": 225, "gethostnam": [114, 115], "getlogg": [111, 112, 113, 114, 115, 120, 121, 217], "getmin": 34, "getmro": 117, "getpid": [213, 216, 230], "getrefcount": 231, "getsizeof": [63, 213], "getter": 7, "gettrac": 230, "getvalu": 230, "gfedcba": 37, "gif": [93, 94], "gigabyt": 118, "gil": [78, 232], "git": [36, 53, 54, 59, 62, 63, 75, 90, 100, 104, 128, 143, 211], "git_commit_hash": 100, "gitflow": 94, "github": [0, 9, 53, 62, 67, 70, 72, 76, 80, 90, 94, 100, 112, 114, 115, 116, 118, 120, 121, 143, 170, 194, 214, 226, 231], "githubusercont": [58, 59], "gitignor": [94, 104], "gitlab": 94, "give": [8, 13, 16, 17, 19, 20, 29, 30, 36, 43, 44, 46, 49, 53, 56, 58, 59, 60, 61, 66, 68, 71, 74, 76, 77, 80, 87, 90, 94, 99, 100, 105, 106, 107, 110, 111, 118, 121, 124, 128, 129, 130, 132, 143, 148, 163, 169, 174, 176, 179, 181, 183, 203, 211, 213], "given": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 48, 50, 51, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 71, 74, 75, 76, 77, 80, 82, 83, 84, 85, 89, 94, 95, 96, 98, 102, 103, 109, 113, 115, 117, 118, 119, 120, 121, 123, 124, 127, 128, 130, 131, 132, 133, 136, 137, 139, 140, 143, 144, 147, 150, 151, 153, 155, 159, 160, 166, 168, 169, 170, 173, 174, 176, 178, 180, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 203, 207, 211, 214, 216], "gladli": 35, "glanc": [46, 61, 66, 94, 96, 123], "glare": 94, "glimps": 238, "global": [53, 57, 60, 68, 78, 94, 99, 104, 112, 117, 195, 217, 226, 227, 229, 232, 237], "global_": [59, 119], "global_config": 59, "global_pool": [217, 219], "global_rank": [89, 91], "global_step": [72, 120], "globaln": 117, "gloo": [59, 91, 119], "glossari": 234, "glove": 57, "gluon": 77, "gm": 53, "gm_diag": 53, "gm_full": 53, "gm_spheric": 53, "gm_ti": 53, "gmm": [54, 61], "gmm_2d_": 53, "gmm_2d_bic_vs_k": 53, "gmm_2d_cluster": 53, "gmm_2d_data": 53, "gmm_pdf": 53, "gmm_pdf_new": 53, "gmm_pdf_new2": 53, "gmm_pdf_origin": 53, "gmm_pdf_updated_mean": 53, "gmm_pdf_updated_pi": 53, "gmm_pdf_updated_sigma": 53, "gms_per_k": 53, "gnb": 75, "gnn": 96, "gnu": 94, "go": [3, 8, 11, 17, 29, 53, 57, 58, 59, 63, 66, 67, 68, 71, 74, 76, 77, 84, 90, 94, 96, 97, 98, 99, 100, 104, 106, 109, 115, 126, 127, 128, 130, 143, 156, 180, 207, 208, 211, 217, 237], "goal": [29, 30, 44, 47, 50, 53, 56, 57, 58, 61, 66, 68, 71, 74, 94, 95, 99, 100, 101, 102, 106, 117, 124, 210, 211], "god": [78, 95, 224], "goe": [22, 23, 27, 30, 57, 58, 59, 94, 103, 108, 203, 206, 207, 213, 221, 227], "goku": 99, "golang": 2, "gold": [66, 77], "gomez": [0, 1, 55, 57, 70, 71], "gone": [29, 44, 68], "good": [2, 7, 17, 27, 30, 35, 36, 48, 50, 53, 58, 61, 66, 67, 68, 71, 72, 76, 80, 90, 94, 95, 96, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 115, 119, 120, 126, 132, 137, 146, 155, 158, 174, 180, 207, 211, 217, 231, 238], "goodboychan": [60, 62, 67, 73, 76], "goodfellow": [0, 1, 124], "goodi": 192, "googl": [57, 58, 61, 80, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 109, 118, 216], "googleapi": 63, "gorgeou": 94, "gorman": 76, "got": [53, 58, 59, 76, 89, 120, 128, 146, 214, 226, 231], "gotcha": 235, "gotten": [53, 76], "govern": [53, 66, 68, 91, 97, 99, 219], "gpl": 94, "gpt": [48, 55, 56, 71, 78, 96, 100, 101, 112, 116, 120, 124, 218], "gpt2": [58, 117, 118, 120], "gpt2_checkpoint_size_estimated_in_byt": 118, "gpt2_checkpoint_size_estimated_in_gb": 118, "gpt2_checkpoint_size_measured_in_byt": 118, "gpt2_checkpoint_size_measured_in_gb": 118, "gpt2_config": 118, "gpt2_flops_using_own_flops_calcul": 118, "gpt2_flops_using_palm_flops_calcul": 118, "gpt2_larg": 118, "gpt2_medium": 118, "gpt2_params_no_bia": 118, "gpt2_params_no_bias_manu": 118, "gpt2_params_with_bia": 118, "gpt2_xl": 118, "gpt2forsequenceclassif": [120, 121], "gpt2lmheadmodel": [58, 117, 118], "gpt2lmheadmodel_methods_using_getmemb": 117, "gpt2model": 58, "gpt2modeltyp": 118, "gpt2pretrainedmodel": 117, "gpt2token": [120, 121], "gpt_config": 112, "gpt_larg": 58, "gpt_medium": 58, "gpt_small": 112, "gpt_small_config": [112, 114], "gpt_with_head": 58, "gpt_xl": 58, "gptbackbon": 120, "gptblock": [112, 114], "gptconfig": [112, 114, 118], "gptdecod": [58, 59, 119], "gptdecoderblock": [58, 59, 119, 120], "gptdecoderrevers": 119, "gptforsequenceclassif": 120, "gptpretrainedmodel": 120, "gpu": [57, 58, 71, 88, 89, 94, 95, 97, 104, 108, 110, 111, 112, 113, 114, 116, 117], "gpu_flop": 118, "gpu_memori": 118, "gpu_promised_flop": 118, "gpu_usag": 218, "gpumemori": 118, "grad": [102, 115, 124], "grad_accum": 118, "grad_fn": [58, 59, 124], "grad_loss": 211, "grade": 97, "gradient": [0, 1, 53, 56, 57, 59, 68, 69, 71, 74, 79, 84, 89, 96, 102, 104, 106, 115, 118, 123, 211, 218, 228], "gradient_accumul": 118, "gradient_accumulation_step": [59, 72, 119, 120], "gradient_boost": 228, "gradient_checkpointing_dis": 117, "gradient_checkpointing_en": 117, "gradientboost": 228, "gradientboostingstrategi": 228, "gradual": [3, 47, 59, 61, 66, 108, 123], "grafana": [94, 110], "grain": [9, 63, 115, 219], "gram": [55, 57, 76], "grammar": 58, "grand": 68, "grant": 113, "granular": [59, 94, 98, 99, 130], "grape": 17, "graph": [11, 76, 77, 96, 97, 100, 115, 171], "graph_object": 127, "graphic": [53, 68, 80, 127], "graphql": 97, "grappl": 57, "grasp": [29, 32, 63, 82, 83, 106], "grayscal": [77, 97], "great": [27, 104, 109], "greater": [3, 6, 16, 27, 29, 30, 43, 47, 61, 66, 68, 84, 98, 123, 124, 163, 170, 174, 211, 217, 219, 230], "greatli": [11, 191, 222], "greedi": [58, 59, 119], "greedili": [58, 61], "greedy_search": 117, "green": [30, 63, 66, 76, 80, 83, 84, 108, 146, 171, 174, 190], "greet": [58, 94, 229], "grep": 216, "grid": [53, 54, 62, 84, 94, 97, 104, 106, 127, 128, 140, 171], "grid_gaussian_pdf": 54, "grossli": 100, "ground": [48, 59, 61, 66, 68, 85, 119, 180], "groundwork": 29, "group": [5, 11, 18, 21, 44, 58, 59, 60, 61, 63, 68, 76, 78, 87, 90, 91, 94, 96, 100, 105, 106, 108, 109, 128, 155, 174, 211, 217, 223], "group_beam_search": 117, "groupanagram": 20, "groupbi": 76, "grouping_vari": 100, "groupkfold": 106, "grow": [11, 13, 17, 19, 27, 29, 30, 32, 36, 43, 58, 66, 99, 100, 123, 196, 206, 222, 226], "growth": [29, 30, 32, 58], "growth_factor": [59, 119], "growth_interv": [59, 119], "gt": [58, 59, 62, 117, 120, 124, 213, 226, 229, 235, 238], "guarante": [3, 5, 6, 27, 29, 30, 44, 57, 58, 61, 66, 68, 71, 79, 80, 91, 94, 98, 100, 124, 146, 173, 195, 204, 206, 231, 233, 238], "guard": [29, 66, 101], "guava": 98, "gucci": 75, "guess": [6, 50, 58, 59, 61, 66, 211], "gui": [59, 144], "guid": [7, 10, 28, 29, 30, 47, 63, 76, 84, 90, 94, 95, 96, 99, 101, 103, 107, 221, 235], "guidanc": [94, 221], "guidelin": [4, 66, 94, 109], "guido": [7, 10, 94], "guru": [222, 223, 228], "guru99": [11, 12], "gut": 76, "gz": [114, 115], "h": [0, 1, 7, 29, 50, 51, 55, 56, 57, 58, 59, 61, 63, 65, 68, 73, 74, 87, 96, 102, 106, 112, 114, 115, 118, 119, 120, 123, 124, 130, 141, 142, 144, 147, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 181, 182, 185, 187, 198, 200, 201, 203, 204, 206, 211, 217, 238], "h2": [80, 81, 86], "h_": [57, 58, 68, 87, 114, 115, 124], "h_0": [57, 68], "h_1": [66, 68, 96], "h_2": [66, 96], "h_3": 66, "h_i": 66, "h_j": 66, "h_k": 124, "h_m": 66, "ha": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 48, 50, 52, 54, 55, 56, 59, 61, 62, 63, 66, 68, 69, 72, 74, 76, 77, 80, 82, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 123, 124, 127, 128, 130, 132, 133, 136, 137, 140, 141, 143, 144, 146, 147, 148, 150, 158, 159, 160, 163, 164, 167, 168, 169, 170, 172, 174, 176, 180, 181, 192, 193, 195, 198, 200, 207, 210, 211, 213, 216, 218, 222, 227, 229, 230, 231, 235, 237, 238, 239], "habit": [97, 119], "hackerllama": [57, 58], "had": [43, 53, 77, 94, 115, 203], "hadamard": [53, 56, 74], "hadoop": [97, 99, 100], "haha": 59, "haitongli": 121, "haken": 16, "hal": [0, 51, 60, 61, 67, 68, 73, 74], "half": [13, 19, 20, 27, 29, 58, 59, 88, 117, 119, 123], "half_precision_backend": [72, 120], "hall": 76, "hallmark": 30, "hallucin": [0, 78, 117], "halt": [3, 9], "halv": [20, 27, 29], "hamadard": 53, "hame": 59, "hampton": [1, 10], "han": [0, 1, 55, 57, 123], "hand": [2, 3, 5, 6, 19, 29, 44, 53, 57, 58, 59, 61, 65, 66, 68, 76, 80, 84, 94, 96, 98, 102, 106, 109, 110, 123, 124, 133, 142, 148, 158, 180, 193, 211, 213, 221], "handbook": [11, 12, 17, 18, 32, 33], "handcraft": [101, 105], "handi": [68, 217], "handl": [2, 3, 7, 9, 11, 17, 19, 27, 29, 36, 48, 56, 57, 59, 62, 63, 66, 76, 94, 95, 97, 98, 99, 100, 101, 102, 104, 109, 117, 118, 121, 123, 213, 214, 216, 221, 222, 225, 230], "handler": [111, 112, 113, 114, 120, 121, 217, 238], "handout": 27, "handson": 53, "handwritten": [77, 96], "hang": 213, "hanin": [1, 124], "haom": 0, "happen": [2, 3, 6, 27, 32, 36, 48, 50, 58, 62, 66, 68, 76, 77, 87, 91, 96, 100, 110, 112, 115, 119, 124, 126, 131, 132, 133, 136, 155, 180, 181, 187, 211, 213, 231, 238], "happi": 8, "happili": [2, 3, 4, 76, 103], "har": [57, 216], "hard": [4, 6, 29, 60, 61, 68, 76, 77, 94, 117, 121, 146, 180, 217, 219, 236], "hard_loss": 121, "hardcod": [59, 94, 217], "hardcor": 116, "harder": [5, 76, 115, 126], "hardwar": [95, 97, 104, 108, 109, 110, 118], "harm": [101, 103], "harmless": 94, "harmon": 103, "harri": 98, "harsh": 66, "harvard": [57, 58], "has_coincid": 128, "has_dupl": [128, 239], "has_intercept": 69, "hasattr": [2, 58, 59, 75, 112, 114, 117, 120, 213, 227, 234], "hash": [13, 43, 44, 61, 78, 100, 104, 213, 239], "hash_map": 17, "hash_val": 222, "hashabl": 239, "hashlib": 222, "hashmap": [17, 19, 43], "hashtag": [93, 95], "hasn": [9, 44, 94, 106, 107, 117], "hassl": 226, "hasti": [0, 60, 61, 67, 68, 73, 74], "hat": [50, 51, 53, 56, 57, 58, 61, 63, 64, 65, 66, 68, 71, 74, 76, 77, 80, 87, 96, 124, 178, 180, 182, 195, 211], "hate": 94, "have": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 136, 137, 139, 140, 142, 143, 146, 147, 148, 150, 153, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 178, 180, 181, 183, 184, 185, 186, 188, 189, 190, 192, 193, 196, 198, 199, 200, 201, 203, 206, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 239], "haven": [76, 110], "hazard": 109, "hazi": [98, 158, 181], "hdf": [97, 99], "he": [0, 1, 26, 53, 55, 57, 58, 61, 68, 74, 93, 94, 98, 99, 118, 123, 143, 158, 169], "head": [57, 59, 66, 68, 72, 76, 82, 83, 89, 104, 112, 114, 118, 120, 124, 130, 131, 137, 144, 148, 211], "head_attent": 58, "head_bia": 120, "head_nod": 90, "head_node_ip": 90, "head_siz": 118, "header": [63, 99, 118, 158, 217], "headnod": 90, "headphon": 30, "health": [94, 97, 99, 100], "healthcar": [95, 96, 97, 103], "healthi": [103, 180], "heap": [29, 30], "heappush": 213, "heapq": 48, "hear": 58, "heart": [27, 76, 80, 96, 195], "heat": [94, 229], "heatmap": [68, 127], "heaven": 94, "heavi": [16, 66, 216], "heavili": [30, 58, 59, 68, 98, 118, 217, 229], "hei": 119, "height": [27, 32, 53, 63, 68, 77, 126, 143, 153, 158, 159, 172, 174, 176, 196], "held": [96, 106, 108, 213, 231], "hell": 58, "hello": [3, 5, 6, 58, 94, 229, 233, 238], "helmet": [94, 96], "help": [4, 7, 10, 11, 19, 29, 30, 35, 36, 43, 47, 48, 56, 57, 58, 59, 61, 63, 66, 68, 74, 76, 82, 87, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 115, 118, 123, 124, 127, 174, 207, 217, 231], "helper": [59, 62, 230], "helpsheet": 68, "hematoxylin": 63, "henc": [2, 11, 13, 19, 27, 29, 43, 44, 53, 57, 58, 59, 61, 62, 66, 68, 74, 76, 77, 83, 84, 87, 91, 94, 114, 118, 121, 123, 124, 130, 131, 133, 144, 174, 180, 193, 196, 213, 227, 237], "henceforth": [94, 174], "her": [29, 48, 102, 109], "here": [2, 3, 4, 5, 7, 8, 9, 11, 13, 16, 19, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 132, 133, 134, 136, 137, 139, 140, 141, 143, 144, 146, 147, 153, 158, 159, 162, 164, 167, 171, 174, 181, 183, 188, 200, 203, 206, 207, 211, 213, 216, 217, 218, 222, 227, 228, 234, 235, 237, 238], "herman": 203, "hestain": 63, "heterogen": 96, "heteroscedast": 68, "heurist": [57, 59, 61, 102, 123], "hexdigest": 222, "hh": [100, 137, 139, 217], "hhhthtthhhhht": 211, "hhttthh": 211, "hi": [3, 6, 58, 59, 73, 74, 118, 181, 203, 237], "hidden": [3, 46, 53, 56, 57, 58, 71, 74, 119, 120], "hidden_s": 58, "hide": 180, "hierarch": [6, 52, 217], "hierarchi": [4, 217], "high": [13, 17, 27, 29, 30, 43, 44, 48, 53, 57, 58, 59, 61, 62, 65, 66, 68, 69, 71, 76, 84, 87, 89, 90, 94, 95, 96, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 118, 123, 124, 127, 128, 155, 160, 171, 179, 188, 190, 196, 211, 213, 216, 222, 230], "higher": [11, 29, 30, 48, 57, 59, 63, 66, 68, 71, 76, 80, 87, 94, 95, 96, 97, 102, 103, 118, 121, 124, 163, 174, 177, 178, 180, 216, 239], "highest": [13, 19, 30, 43, 53, 58, 62, 76, 94, 123, 124, 156, 211], "highli": [17, 29, 57, 58, 61, 66, 68, 98, 99, 100, 101, 102, 106, 127, 181, 203, 213], "highlight": [5, 30, 53, 57, 58, 62, 79, 84, 103, 105, 106, 115, 117, 124, 217], "hilbert": [0, 84], "hill": [66, 73, 74, 76], "him": [22, 58, 180], "himself": 118, "hing": [57, 59, 68, 79, 158], "hint": [3, 4, 5, 6, 7, 8, 10, 32, 94, 112, 114, 117, 213, 217, 221], "hinton": [53, 121], "hipaa": 99, "hist": [53, 76, 143, 146, 148, 156, 159, 171, 174], "histogram": [0, 53, 68, 76, 110, 144, 147, 155, 156, 160, 172, 174, 207], "histor": [30, 66, 94, 109, 146], "histori": [32, 57, 58, 59, 69, 94, 95, 96, 98, 109, 115, 119, 218], "histplot": [76, 174], "hit": [27, 66, 72, 102, 180, 213], "hiv": 180, "hline": [56, 58, 110, 127, 181, 190, 200], "hn": 69, "hobbit": 98, "hoc": [59, 77, 100], "hodgkin": 48, "hoef": 66, "hoefd": 66, "hold": [2, 4, 5, 7, 11, 16, 26, 27, 29, 30, 36, 44, 53, 58, 65, 66, 68, 74, 76, 79, 80, 83, 84, 85, 89, 94, 98, 102, 124, 153, 155, 158, 159, 163, 164, 176, 181, 186, 188, 203, 207, 211, 213, 219, 221, 225, 227, 230, 235], "holdout": [57, 93, 102, 107], "holdout_perform": 218, "holm": 98, "home": [66, 68, 76, 90, 128, 144, 159, 169, 170, 174, 190, 207, 211], "home_dir": 100, "homebrew": [62, 117, 230, 231], "homogen": [84, 96, 103], "honestli": [91, 96], "hongnan": [57, 59, 69, 82, 83, 89, 91, 158], "hood": [112, 213, 217, 234, 238], "hook": 89, "hop": 98, "hope": [53, 102, 203, 211], "horizont": [82, 84, 99, 207], "horizontal_component_v": 84, "horribli": 77, "hors": 57, "horst": 76, "hospit": [95, 181], "hossein": [0, 141, 142, 168, 169, 170, 173, 174, 198, 200, 201, 203, 204, 206], "host": [27, 58, 94, 109, 217, 225, 227], "host_nam": [114, 115], "hostnam": [89, 90, 91], "hot": [53, 74, 99, 101, 109, 124], "hot_potato": 26, "hour": [29, 57, 58, 94, 96, 101, 109, 150, 155], "hous": [57, 68, 80, 87, 96], "hover": 127, "how": [3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 26, 27, 29, 30, 32, 36, 43, 46, 47, 48, 49, 53, 56, 57, 58, 59, 63, 66, 68, 71, 72, 74, 76, 77, 78, 80, 82, 83, 84, 85, 89, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 122, 123, 124, 125, 126, 128, 133, 137, 142, 143, 144, 146, 148, 158, 159, 165, 166, 167, 169, 174, 179, 180, 182, 195, 203, 207, 211, 212, 216, 217, 218, 219, 221, 223, 227, 231, 236, 238, 239], "how_many_l": [2, 3], "how_to": 121, "how_to_inspect_function_and_class_signatur": 117, "howev": [2, 3, 4, 5, 6, 7, 9, 11, 13, 17, 19, 27, 29, 30, 32, 36, 43, 44, 46, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 71, 74, 76, 77, 80, 83, 84, 85, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 111, 115, 117, 118, 119, 120, 123, 124, 127, 130, 137, 143, 158, 162, 170, 183, 190, 191, 192, 195, 207, 211, 213, 214, 216, 217, 218, 219, 221, 233, 235, 238, 239], "hpc": [90, 99], "hspace": 58, "hstack": 68, "ht": [137, 139], "htan": 89, "htm": 223, "html": [0, 7, 22, 23, 53, 62, 63, 66, 71, 72, 74, 76, 77, 92, 94, 97, 99, 114, 115, 121, 143, 158, 170, 211, 216, 226, 229, 234, 238], "htod": 113, "http": [0, 7, 22, 23, 36, 48, 53, 58, 59, 63, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 90, 92, 94, 97, 112, 114, 115, 118, 120, 121, 126, 128, 143, 146, 148, 158, 170, 185, 193, 194, 214, 216, 217, 222, 223, 226, 229, 231, 234, 235, 237, 238], "hu": [0, 58, 70, 71], "hub": [100, 117], "hudi": 99, "hue": 76, "hug": [57, 70], "huge": [58, 71, 102, 239], "huggingfac": [72, 96, 121, 123], "human": [48, 57, 77, 94, 96, 97, 100, 109], "humid": 97, "hundr": 211, "hurdl": [76, 130], "hurt": 66, "hutter": [0, 1, 55, 57, 59, 123], "huyen": [60, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110], "hybrid": [97, 99, 100], "hydra": [58, 78, 213, 220], "hydra_config": 217, "hydra_config_group": 217, "hydra_help": 217, "hydra_log": 217, "hydra_pydantic_config_manag": 217, "hydra_to_pydant": 217, "hydraconfig": 217, "hype": [98, 100], "hyper": 117, "hypermodern": 94, "hyperparamet": [54, 58, 71, 93, 96, 105, 107, 121, 123, 217, 219, 223], "hyperparameter_search": 117, "hyperplan": [66, 68, 74], "hypotenus": 84, "hypothes": [17, 50, 66, 68, 71, 87], "hypothesi": [27, 30, 50, 51, 57, 65, 71, 87, 94, 96, 101, 102, 106], "hypothet": [5, 7, 27, 53, 94, 95], "h\u00f6lder": 102, "i": [0, 1, 3, 6, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 39, 40, 44, 45, 46, 49, 51, 52, 54, 55, 59, 60, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 84, 87, 88, 89, 91, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 202, 204, 205, 206, 207, 210, 212, 214, 217, 218, 219, 221, 222, 223, 225, 226, 228, 230, 232, 235, 237, 239], "i1": [56, 80], "i2": [56, 80], "ian": 0, "ibm": 94, "ic": [1, 10], "iceberg": 98, "icl": 76, "id": [5, 17, 30, 58, 88, 89, 96, 98, 109, 112, 113, 114, 119, 120, 217, 227, 231, 237, 238], "id2label": [72, 120], "idea": [2, 9, 22, 23, 27, 29, 35, 36, 49, 50, 53, 56, 58, 59, 61, 68, 70, 71, 74, 76, 82, 89, 90, 94, 96, 98, 100, 101, 104, 106, 120, 123, 131, 132, 146, 155, 156, 158, 159, 174, 203, 216, 217, 227, 231, 239], "ideal": [5, 8, 29, 30, 32, 36, 50, 59, 68, 80, 87, 94, 97, 98, 99, 103, 109, 118, 130, 214, 216], "idempot": 7, "idenf": 90, "ident": [53, 57, 59, 68, 78, 79, 82, 84, 94, 96, 98, 117, 124, 126, 146, 148, 154, 158, 159, 167, 186, 191, 192, 201, 210, 233], "identif": [5, 95, 126], "identifi": [5, 17, 28, 29, 47, 48, 53, 57, 58, 61, 63, 82, 85, 88, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 118, 222], "idf": [96, 101], "idiomat": 80, "idl": [90, 216], "idx": [58, 121, 213, 222], "ieee": 78, "iff": [27, 61, 66, 68, 74, 84, 133, 193, 211], "ignor": [4, 5, 7, 8, 13, 19, 29, 43, 53, 58, 62, 68, 69, 74, 75, 76, 77, 89, 91, 94, 112, 114, 119, 120, 123, 140, 143, 146, 148, 156, 159, 168, 217, 238], "ignore_index": [58, 59, 119], "igw": 90, "igw_id": 90, "ii": [39, 40, 45, 68, 77, 78, 94], "iid": [50, 53, 58, 66, 76, 78, 87, 106, 124, 146, 154, 158, 184, 206], "iii": [0, 50, 51, 60, 61, 67, 68, 73, 74], "iinfo": 71, "ij": [56, 80, 85, 118, 124], "ik": [56, 118], "ill": [59, 85, 123], "illia": 0, "illumin": 29, "illustr": [2, 4, 5, 7, 9, 11, 17, 27, 29, 32, 46, 53, 57, 58, 66, 68, 71, 74, 76, 79, 80, 82, 83, 84, 85, 94, 95, 99, 103, 110, 123, 126, 127, 131, 132, 133, 159, 173, 183, 203, 211, 213, 231], "iloc": [76, 97], "ilya": 0, "imag": [16, 27, 29, 53, 57, 58, 59, 60, 66, 71, 74, 76, 77, 78, 80, 84, 85, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 106, 109, 110, 115, 119, 123, 126, 134, 174, 176, 188, 190, 193, 196, 203, 210, 213, 216, 217, 221], "image_classif": 96, "image_classification_transform": 221, "image_path": 63, "image_s": [217, 219], "image_segmentation_transform": 221, "image_shap": 63, "image_size_in_bit": 63, "image_url": 97, "imagecaptioningtransform": 221, "imageclassif": 221, "imageclassificationtransform": 221, "imagedatasetload": 94, "imagenet": 188, "imageri": [60, 62], "imagesegment": 221, "imagesegmentationtransform": 221, "imagin": [2, 29, 32, 44, 58, 61, 66, 68, 74, 76, 77, 80, 89, 94, 98, 100, 101, 109, 133, 144, 146, 158, 159, 180, 196, 198], "imbalanc": [101, 103, 106], "imdb": 99, "img": 77, "immedi": [6, 8, 11, 27, 30, 35, 57, 68, 80, 94, 100, 101, 103, 109, 117, 130, 131, 132, 133, 174, 176, 178, 193, 195, 201, 213], "immut": [9, 58, 59, 89, 100, 239], "immutablelist": 7, "impact": [48, 58, 59, 68, 71, 84, 95, 99, 100, 102, 103, 104, 106, 108, 109, 123, 124, 128, 144, 169, 170, 174, 190, 207, 211, 216, 222], "impend": 94, "imper": 30, "imperfect": 48, "implement": [1, 3, 4, 5, 6, 7, 9, 10, 11, 17, 33, 38, 47, 50, 52, 53, 55, 56, 61, 67, 70, 74, 77, 78, 93, 94, 95, 98, 99, 100, 102, 108, 109, 112, 114, 119, 149, 154, 157, 214, 216, 217, 218, 221, 226, 227, 228, 229, 230, 233, 234, 237, 239], "implementingadequeinpython": 23, "impli": [2, 3, 5, 6, 7, 11, 27, 29, 30, 35, 43, 53, 57, 58, 61, 66, 68, 71, 74, 76, 82, 83, 84, 85, 88, 101, 102, 118, 124, 130, 158, 174, 178, 180, 218, 230], "implic": [3, 57, 66, 83, 85, 94, 95, 97, 103, 126, 216], "implicit": [2, 6, 29, 56, 57, 58, 59, 71, 74, 115, 195, 211], "implicitli": [2, 29, 57, 61, 74, 89, 94, 119, 191, 213], "import": [2, 3, 4, 5, 6, 7, 9, 11, 13, 17, 19, 20, 22, 23, 29, 30, 34, 35, 36, 37, 43, 44, 46, 48, 50, 53, 54, 56, 57, 58, 59, 61, 63, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 87, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 125, 127, 128, 130, 136, 137, 140, 143, 144, 146, 147, 148, 150, 153, 154, 155, 156, 159, 168, 169, 170, 171, 172, 178, 181, 182, 188, 189, 190, 199, 204, 207, 210, 211, 212, 214, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239], "importantli": [105, 124], "importerror": [36, 54, 58, 59, 62, 63, 75, 128, 143, 211], "importlib": 213, "impos": [7, 29, 102], "imposs": [3, 29, 48, 66, 79, 211], "impract": 5, "impress": 27, "improp": 11, "improperli": [117, 223], "improv": [0, 1, 11, 13, 17, 27, 29, 30, 43, 48, 54, 55, 56, 57, 58, 59, 61, 64, 66, 68, 76, 93, 95, 96, 97, 98, 99, 101, 102, 104, 106, 108, 109, 117, 121, 123, 124, 146, 180, 202, 205, 213, 219, 222], "impuls": [76, 176], "imread": 63, "imshow": [58, 63, 77], "in_chan": [217, 219], "in_channel": [217, 219], "in_dim": 72, "in_featur": [58, 59, 71, 72, 112, 114, 119, 120, 217], "in_indic": [112, 114], "in_jupyt": 58, "in_out_error_diff": 66, "in_proj_weight": 59, "inabl": 217, "inaccur": [68, 101, 113, 124], "inact": 238, "inadmiss": 16, "inadvert": [57, 58, 94, 100, 236], "inappropri": 101, "inc": [60, 61, 68, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 115], "incid": 94, "inclin": 80, "includ": [2, 3, 4, 5, 6, 10, 13, 16, 19, 20, 27, 29, 30, 32, 36, 43, 46, 48, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 69, 72, 76, 79, 80, 84, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 124, 174, 175, 179, 203, 211, 213, 216, 218, 219, 221, 225], "include_bas": 117, "include_bia": 118, "include_extra": 117, "include_self": 117, "inclus": [27, 63, 68, 128, 174, 211], "incom": [36, 94, 96, 109, 110, 112, 114], "incompat": [3, 5, 7, 8, 32, 114, 120], "incomplet": [48, 59, 99, 124], "inconsist": [76, 80, 94, 98, 99, 100, 231], "incorpor": [30, 56, 57, 85, 96, 109, 116, 214, 225], "incorrect": [2, 5, 7, 48, 68, 77, 94, 101, 103, 231, 236], "incorrect_pair": 5, "incorrectli": [5, 66, 95, 103, 231], "increas": [7, 11, 13, 17, 29, 32, 43, 47, 53, 56, 57, 58, 59, 61, 64, 66, 68, 71, 77, 83, 94, 95, 96, 97, 101, 103, 104, 109, 115, 123, 124, 128, 141, 144, 146, 164, 169, 170, 173, 174, 180, 190, 202, 205, 206, 207, 218, 230, 231], "increasingli": [11, 48, 58, 59, 68, 104, 225], "incredibli": 11, "increment": [11, 29, 30, 43, 44, 46, 47, 62, 71, 99, 100, 126, 213, 214, 216, 218, 231], "incur": [50, 59, 95, 216], "ind": 76, "inde": [2, 4, 5, 7, 8, 27, 30, 32, 43, 50, 53, 57, 58, 59, 61, 66, 68, 74, 76, 80, 84, 90, 102, 103, 109, 118, 120, 124, 125, 127, 128, 136, 137, 143, 148, 180, 181, 190, 191, 193, 207, 211, 223, 231], "indefinit": [9, 213, 231], "indent": [89, 91, 94, 112], "indeped": [59, 74, 210], "independ": [6, 11, 17, 19, 50, 51, 57, 63, 67, 68, 71, 77, 78, 88, 91, 94, 103, 118, 124, 125, 126, 127, 135, 143, 144, 146, 147, 148, 149, 154, 158, 180, 184, 186, 190, 198, 200, 207, 216, 221, 223, 228], "indepened": 147, "index": [0, 7, 8, 11, 17, 19, 27, 30, 32, 41, 43, 44, 46, 47, 48, 53, 58, 61, 62, 63, 66, 71, 74, 75, 85, 87, 88, 89, 90, 98, 99, 103, 119, 120, 124, 128, 134, 136, 143, 146, 148, 153, 158, 207, 213, 214, 216, 217, 218, 221, 229, 231], "index1": [43, 47], "index2": [43, 47], "index_select": 114, "index_to_token": 59, "indexerror": [11, 36], "indic": [2, 3, 4, 5, 9, 11, 13, 19, 27, 29, 30, 36, 43, 44, 46, 47, 51, 53, 56, 58, 59, 61, 62, 63, 66, 68, 69, 71, 74, 76, 82, 83, 85, 87, 94, 95, 96, 101, 103, 104, 108, 109, 110, 113, 119, 121, 124, 126, 128, 150, 168, 169, 170, 180, 184, 190, 192, 207, 213, 217, 227], "indices_logit": 124, "indices_prob": 124, "indices_to_remov": 58, "indirect": [57, 94], "indiscern": 84, "indiscrimin": 5, "indispens": 84, "indistinguish": 213, "individu": [11, 19, 29, 32, 36, 53, 56, 58, 59, 66, 68, 74, 76, 80, 85, 87, 94, 96, 97, 98, 100, 102, 109, 110, 118, 123, 124, 126, 155, 176, 188, 191, 211], "individual_test": [27, 29, 30], "indonesian": 99, "induc": [57, 58, 61, 64, 66, 84, 124], "induct": [27, 44, 77], "industri": [94, 95, 97, 99, 100], "ineffect": 95, "ineffici": [5, 11, 19, 29, 36, 48, 58, 95, 97, 101, 118, 213, 216, 230, 231, 236], "inequ": [7, 29, 61, 64, 68, 78, 84, 209], "inertia": 62, "inertia_": 62, "inevit": [17, 71, 94], "inf": [9, 34, 46, 54, 56, 58, 59, 61, 62, 112, 114, 119], "infam": 68, "infeas": [66, 74, 127], "infer": [5, 8, 48, 58, 66, 72, 94, 95, 96, 98, 100, 102, 108, 118, 120, 121, 124, 159, 218, 238], "inferenc": [143, 148], "inferentialthink": 158, "infin": [2, 36, 56, 57, 124, 158, 207], "infinit": [61, 68, 69, 87, 90, 109, 126, 162, 174, 184], "infinite_sequ": 213, "infinitesim": [66, 76, 174], "inflat": 68, "influenc": [48, 56, 58, 66, 68, 84, 94, 95, 96, 97, 102, 133, 144, 147, 219], "influenci": 58, "influenti": [101, 104], "info": [5, 54, 58, 59, 62, 68, 69, 75, 76, 89, 90, 91, 100, 111, 112, 113, 114, 115, 119, 120, 121, 214, 216, 217, 231, 238], "inform": [0, 1, 3, 5, 8, 10, 19, 20, 27, 29, 30, 32, 36, 43, 44, 47, 48, 50, 53, 55, 56, 57, 58, 59, 61, 63, 66, 68, 70, 71, 76, 79, 88, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 115, 117, 118, 119, 120, 124, 126, 130, 131, 132, 174, 193, 203, 217, 219, 234, 238], "infrastructur": [48, 100, 101, 108, 109, 110], "infrequ": 32, "infti": [2, 29, 36, 56, 58, 66, 74, 87, 119, 124, 126, 130, 131, 140, 141, 151, 155, 164, 165, 166, 167, 170, 174, 176, 178, 180, 181, 183, 184, 186, 188, 198, 200, 201, 206], "ing": 58, "ingest": [68, 100, 110], "ingrain": [84, 94], "ingredi": [53, 80, 229], "inher": [2, 3, 4, 8, 29, 30, 36, 43, 44, 48, 56, 57, 58, 68, 71, 85, 94, 95, 97, 98], "inherit": [2, 3, 4, 5, 6, 32, 58, 72, 94, 100, 117, 120, 217, 228, 229], "ini_opt": 94, "init": [25, 26, 35, 37, 54, 58, 62, 63, 72, 78, 89, 90, 94, 112, 114, 119, 120, 232], "init_bodi": 117, "init_hf_repo": 117, "init_method": [59, 89, 91, 119], "init_param": 117, "init_process": [89, 91], "init_process_group": 89, "init_scal": [59, 119], "init_weight": 117, "initi": [11, 17, 19, 20, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 54, 56, 58, 61, 62, 64, 66, 69, 70, 71, 72, 80, 95, 96, 100, 101, 102, 104, 106, 108, 110, 115, 117, 119, 120, 121, 123, 124, 137, 148, 150, 207, 211, 213, 214, 217, 219, 227, 228, 231, 236], "initial_lr": [59, 123], "initialize_model": [112, 114], "inject": [5, 71, 89, 213, 217, 223], "injector": 94, "inlin": [7, 77, 127, 143, 146, 148, 156, 159, 190, 211], "inlinebackend": [143, 211], "inner": [13, 56, 57, 84, 117, 178, 213, 235, 238], "inner_dim": 58, "inner_typ": 238, "innov": [36, 57], "inord": 27, "inplac": [58, 59, 72, 76, 112, 114, 119, 120], "input": [4, 6, 7, 8, 9, 16, 26, 35, 36, 39, 40, 45, 46, 48, 50, 53, 54, 61, 63, 66, 67, 69, 71, 72, 74, 77, 78, 84, 87, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 127, 159, 173, 182, 191, 210, 211, 216, 222, 235, 238], "input_id": [72, 119, 120, 121], "input_larg": 124, "input_layernorm": 72, "input_sequ": 59, "input_smal": 124, "input_token": [58, 59, 120], "input_typ": 238, "input_valu": 238, "inputs_pad": 59, "insecur": 94, "insert": [7, 17, 22, 23, 26, 27, 32, 36, 69, 94, 230, 239], "insid": [13, 19, 26, 35, 43, 66, 76, 94, 100, 116, 123, 174, 176, 213, 217, 218, 221, 227, 228, 236], "insight": [9, 29, 30, 48, 57, 58, 80, 83, 85, 87, 89, 93, 96, 100, 101, 102, 104, 106, 107, 109, 110, 118, 124, 180, 218], "insignific": 68, "inspect": [13, 19, 30, 43, 59, 61, 68, 78, 80, 90, 94, 130, 213, 230], "inspector": 59, "inspir": [5, 9, 58, 59, 118, 123, 217, 218], "instabl": [56, 57, 71], "instagram": 96, "instal": [53, 72, 77, 90, 94, 100, 101, 104, 111, 112, 113, 114, 115, 119, 120, 121], "instanc": [2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 27, 30, 32, 36, 48, 50, 54, 56, 57, 58, 59, 61, 62, 68, 71, 72, 74, 75, 76, 77, 79, 80, 83, 84, 85, 88, 89, 94, 95, 96, 97, 98, 100, 101, 102, 103, 106, 108, 109, 113, 115, 124, 130, 155, 211, 216, 217, 218, 219, 221, 222, 225, 226, 227, 233, 234, 237, 238], "instance_attr": 117, "instance_child": 117, "instance_child_all_memb": 117, "instance_method": 117, "instance_not_in_constructor_attr": 117, "instance_par": 117, "instanceid": 90, "instancetyp": 90, "instanti": [5, 6, 7, 32, 35, 53, 58, 59, 63, 68, 94, 117, 219, 221, 222, 226, 227], "instantli": [29, 109], "instead": [2, 3, 5, 7, 11, 17, 27, 29, 32, 35, 36, 43, 49, 50, 53, 54, 56, 57, 58, 59, 61, 62, 66, 68, 69, 71, 72, 74, 76, 77, 80, 89, 94, 98, 99, 100, 101, 102, 106, 109, 117, 119, 120, 124, 127, 128, 133, 137, 140, 147, 163, 165, 180, 184, 199, 211, 213, 217, 219, 221, 228, 230, 231, 235, 236, 239], "instinct": 29, "institut": [1, 10, 58, 94], "instrospect": 229, "instruct": [94, 98, 213, 216, 229], "instructgpt": [57, 58], "instructor": 48, "insuffici": [29, 94], "int": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 22, 23, 26, 27, 29, 30, 32, 34, 36, 41, 43, 44, 46, 53, 54, 58, 59, 62, 63, 69, 71, 72, 75, 76, 77, 89, 91, 94, 98, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 127, 128, 148, 171, 174, 188, 207, 211, 213, 214, 216, 217, 218, 219, 221, 222, 225, 226, 229, 230, 231, 234, 235, 238, 239], "int32": [59, 62, 77, 94, 97], "int64": [27, 58, 59, 62, 76], "int_": [50, 74, 87, 126, 163, 164, 165, 166, 167, 170, 176, 178, 180, 181, 183, 186, 188, 198, 200], "int_0": [126, 167, 170], "int_a": [126, 162, 163, 170, 174, 176], "int_c": [167, 176], "int_pars": 238, "int_valu": 2, "int_x": 174, "integ": [3, 5, 7, 8, 11, 13, 17, 19, 27, 29, 30, 32, 36, 43, 44, 46, 47, 53, 54, 56, 58, 59, 62, 68, 77, 79, 82, 89, 94, 97, 98, 119, 128, 155, 172, 200, 207, 213, 217, 233, 238], "integr": [3, 4, 48, 50, 53, 56, 57, 58, 74, 76, 78, 79, 87, 93, 95, 96, 98, 99, 100, 104, 108, 117, 163, 164, 165, 166, 168, 169, 170, 174, 176, 180, 181, 186, 188, 216, 217], "integrand": 50, "intellig": [6, 71, 93, 94, 101], "intend": [5, 9, 30, 59, 68, 76, 94, 95, 100, 123, 236], "intens": [63, 93, 94, 95, 96, 97, 98, 100, 101, 102, 109, 216, 231], "intent": [9, 30, 57, 80, 213], "intention": [9, 96], "intenum": 118, "inter": [88, 216], "inter_param": 59, "interact": [0, 2, 27, 57, 58, 68, 83, 85, 94, 95, 98, 99, 100, 101, 109, 115, 117, 119, 156, 173, 213, 217, 222], "interactiveshel": 117, "interc": [188, 191, 193], "intercept": [66, 68, 69, 80], "intercept_": [68, 69], "interchang": [6, 27, 30, 58, 84, 87, 88, 97, 118, 126, 222], "interclass": 87, "interconnect": 98, "interdepend": 53, "interest": [6, 9, 13, 17, 19, 29, 43, 53, 57, 58, 61, 68, 74, 87, 95, 96, 98, 99, 106, 107, 109, 112, 114, 124, 130, 136, 143, 171, 172, 174, 181, 185, 204, 211], "interestingli": [66, 94, 181], "interf": 98, "interfac": [2, 3, 5, 6, 8, 90, 95, 100, 217, 221, 225, 228], "interface_id": 90, "interfer": [216, 218], "intermedi": [5, 27, 56, 58, 92, 99, 100, 118, 230], "intern": [2, 5, 17, 48, 56, 57, 58, 66, 72, 76, 94, 98, 99, 100, 115, 117, 121, 213, 233, 237, 238], "internet": [57, 77, 90, 109, 216], "internetgatewai": 90, "internetgatewayid": 90, "interoper": [3, 100], "interplai": 29, "interpol": 217, "interpret": [0, 4, 30, 48, 53, 57, 58, 59, 61, 67, 68, 76, 78, 82, 84, 87, 94, 96, 97, 103, 107, 110, 115, 116, 123, 126, 130, 158, 174, 181, 200, 211, 232], "interrel": 96, "interrupt": [94, 117, 213, 214, 216], "intersect": [53, 61, 80, 101, 132, 133], "intertia": 62, "intertwin": 126, "interv": [11, 27, 29, 53, 58, 59, 66, 94, 97, 100, 101, 109, 110, 115, 123, 124, 126, 138, 150, 155, 157, 168, 174, 198, 203, 207], "interva": 174, "interview": [12, 18, 32, 33, 60, 64, 68, 93, 96, 100], "intpair": 5, "intra": [61, 88], "intraclass": 87, "intract": [27, 29, 74, 77], "intric": [56, 58, 71], "intricaci": [17, 53], "intrins": [56, 57, 80, 82], "intro": [0, 158, 216], "introduc": [7, 9, 27, 29, 30, 48, 52, 53, 56, 57, 58, 59, 66, 74, 77, 85, 94, 100, 118, 120, 123, 124, 152, 175, 176, 178, 203, 208, 209, 210, 211, 213, 216, 221, 222, 223, 228], "introduct": [0, 33, 53, 60, 61, 63, 67, 68, 73, 74, 76, 78, 80, 84, 85, 93, 94, 126, 139, 141, 142, 144, 147, 150, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 187, 198, 200, 201, 203, 204, 206, 211, 215], "introductori": [85, 116], "introspect": 117, "intuit": [6, 7, 17, 57, 59, 64, 71, 74, 76, 79, 80, 83, 89, 98, 100, 102, 105, 112, 124, 130, 131, 136, 142, 143, 144, 150, 158, 163, 169, 172, 174, 180, 184, 191, 195, 202, 205, 229, 231], "intuitiveml": 67, "intuiton": 174, "intvalu": 5, "inv": [68, 69, 127], "invalid": [5, 6, 35, 48, 54, 61, 62, 83, 84, 85, 90, 112, 169, 170, 174, 190, 221, 228, 238], "invalid_d": 238, "invari": [10, 27, 29, 44, 78, 84, 126], "inventori": 109, "invers": [5, 17, 68, 69, 78, 79, 101, 124, 173, 195, 210, 217, 219, 224], "invert": [68, 173, 192, 195, 221], "invert_attention_mask": 117, "invest": [17, 146], "investig": [48, 66, 96], "invit": 94, "invoc": [6, 235], "invok": [5, 6, 8, 61, 66, 68, 74, 91, 113, 115, 117, 150, 180, 217, 222, 229, 235], "involv": [2, 11, 13, 17, 19, 29, 30, 36, 43, 44, 46, 47, 53, 56, 57, 58, 59, 68, 74, 75, 83, 84, 85, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 118, 119, 124, 130, 180, 195, 216, 219, 221, 222], "inward": 47, "inx": 76, "io": [0, 7, 67, 76, 95, 115, 121, 143, 170, 194, 216, 226, 229, 230, 238], "io_bound_task": 231, "ioloop": 213, "iostream": [213, 230], "iot": [95, 97, 99], "ip": [56, 89, 90, 94], "ipc": 216, "ipex_optimize_model": 117, "ipkernelapp": 58, "ipu": 117, "ipykernel": [117, 230], "ipykernel_2944": 61, "ipykernel_2992": 69, "ipykernel_3165": [83, 117], "ipykernel_3188": 84, "ipykernel_3208": 85, "ipykernel_3658": 169, "ipykernel_3681": 170, "ipykernel_3758": 174, "ipykernel_3811": 190, "ipykernel_3881": 213, "ipykernel_41702": 230, "ipynb": 117, "ipython": [36, 58, 117, 119, 143, 211], "ipywidget": [77, 156], "iq": 94, "ir": 70, "iri": [75, 76], "ironpython": 216, "irregardless": 4, "irrelev": [82, 94, 96, 99, 118, 130], "irrespect": [2, 43, 58, 80, 82], "irrespons": 102, "is_act": 238, "is_al": 216, "is_async": 113, "is_avail": [72, 89, 111, 112, 113, 114, 115, 120, 121], "is_bf16_support": 112, "is_empti": [22, 23, 32, 34, 35, 36, 37], "is_fast": 120, "is_fit": 75, "is_flyabl": 2, "is_free_port": [89, 91], "is_in_train": 117, "is_legaci": 113, "is_local_process_zero": 117, "is_model_parallel": 117, "is_police_dog_instance_of_anim": 4, "is_police_dog_instance_of_dog": 4, "is_prim": 216, "is_remot": 113, "is_stack_empti": 36, "is_stag": 100, "is_valid": 100, "is_valid_parenthes": 35, "is_world_process_zero": 117, "isalpha": 222, "isarithm": 127, "isbn": 0, "isbuiltin": 117, "isclos": 4, "iscoroutinefunct": 230, "isfunct": [117, 230], "isgener": 213, "isin": 112, "isinst": [2, 4, 8, 9, 58, 59, 72, 76, 112, 114, 119, 120, 123, 213, 218, 221, 227, 230, 234, 237, 238], "island": 76, "ismail": 66, "ismethod": [117, 230], "ismethoddescriptor": 117, "isn": [3, 7, 29, 48, 57, 58, 59, 68, 76, 94, 97, 98, 101, 102, 109, 110, 211, 228, 233], "isnul": 76, "isol": [48, 68, 88, 94, 163, 216, 228], "isolin": 127, "isopleth": 127, "isort": 94, "isoton": 103, "isotrop": 61, "isqrt": 216, "isroutin": 117, "issu": [2, 3, 5, 6, 7, 9, 19, 27, 29, 43, 48, 57, 58, 59, 61, 66, 68, 72, 75, 77, 95, 99, 100, 101, 102, 104, 106, 109, 114, 117, 118, 119, 120, 121, 124, 142, 213, 214, 216, 217, 221, 229, 234, 238], "issubclass": [59, 213, 226, 229, 234, 238], "issubset": 128, "item": [5, 7, 11, 13, 17, 19, 20, 22, 23, 30, 32, 50, 58, 59, 62, 77, 84, 94, 98, 109, 112, 117, 118, 119, 120, 121, 124, 213, 217, 218, 221, 229, 230, 234, 236, 238], "item_54": [214, 231], "item_sep": 217, "item_to_check": 17, "item_typ": 238, "iter": [3, 7, 13, 16, 19, 20, 22, 26, 32, 35, 43, 44, 46, 53, 54, 58, 59, 61, 62, 63, 64, 66, 68, 71, 78, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 123, 211, 230, 232, 235], "iter_": 54, "iter_cont": 58, "iterabledataset": 117, "iterativebinarysearchexactmatch": 27, "itertool": [53, 112], "ito": 56, "its": [2, 4, 5, 6, 7, 9, 10, 11, 16, 17, 19, 20, 27, 29, 30, 32, 35, 36, 43, 44, 47, 48, 49, 50, 56, 57, 58, 59, 61, 62, 63, 66, 68, 70, 71, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 117, 118, 119, 123, 124, 126, 131, 137, 139, 143, 147, 148, 155, 158, 160, 162, 163, 164, 166, 174, 175, 178, 190, 191, 193, 195, 199, 200, 203, 206, 211, 213, 214, 216, 217, 219, 221, 222, 228, 231, 235, 236, 237, 239], "itself": [2, 4, 5, 6, 9, 16, 17, 20, 27, 29, 30, 36, 43, 46, 48, 53, 56, 57, 58, 59, 61, 62, 66, 67, 68, 71, 77, 82, 84, 85, 94, 95, 96, 99, 109, 113, 118, 119, 124, 134, 136, 183, 186, 192, 206, 207, 211, 213, 219, 221, 222, 235, 237], "ivan": 10, "iwslt": [59, 123], "j": [0, 1, 10, 11, 13, 19, 29, 43, 44, 46, 47, 48, 53, 55, 56, 57, 58, 61, 62, 63, 64, 68, 70, 71, 73, 74, 76, 84, 87, 90, 96, 98, 113, 114, 116, 118, 121, 123, 153, 176, 188, 191, 192, 198, 200, 238], "j_": 124, "j_f": 102, "jackpot": 102, "jacobian": 102, "jai": [57, 58], "jakob": 0, "jam": 101, "jame": [0, 16, 60, 61, 67, 68, 73, 74], "jan": [1, 55, 57], "jane": 26, "januari": [51, 60, 61, 67, 68, 73, 74], "jar": 128, "jason": [0, 48, 78, 217, 232], "java": [2, 3, 5, 8, 10, 11], "javascript": [97, 99], "jax": 120, "jeff": [0, 68], "jenkin": 94, "jeremi": 3, "jerom": [60, 61, 68], "jianfeng": 0, "jiang": [0, 1, 55, 57, 123], "jiawei": 0, "jibberish": 59, "jim": 68, "jimmi": 0, "jing": [0, 48], "jira": 94, "jjqj299126j0gycr9kkkt9xm0000gn": [117, 230], "jmshea": [0, 143, 170], "job": [6, 44, 59, 61, 89, 90, 94, 109, 217, 228, 238], "job_log": 217, "jobless": 100, "joe": 57, "john": [0, 94, 97, 238], "john_do": 5, "johnson": [8, 76], "join": [20, 48, 59, 89, 91, 98, 99, 100, 117, 127, 214, 231], "join_data": 100, "joined_data": 100, "joint": [48, 50, 52, 54, 56, 58, 68, 71, 73, 75, 76, 78, 87, 102, 124, 180, 181, 182, 189, 191, 211], "jointgrid": 76, "jointli": [0, 53, 57, 58, 61, 74], "jointplot": 76, "joke": 101, "jolli": [68, 96], "jolowicz": 94, "jon": 16, "jone": [0, 1, 55, 57, 70, 71], "joseph": 0, "joshi": [17, 18], "journei": 29, "jpeg": 97, "jpg": 97, "jq": 100, "json": [89, 90, 94, 98, 99, 109, 113, 114, 115, 217, 225, 238], "json_config": 225, "json_schema_extra": 238, "json_str": 225, "judg": [3, 48], "judgeverdict": 48, "judgment": 48, "jul": 0, "jump": [30, 124], "jun": [1, 70, 71, 124], "junction": 27, "junctur": [58, 82, 124], "jung": [0, 49, 50, 52, 53, 60, 61, 67, 68, 87], "junior": 174, "jupyt": [62, 94, 114], "jupyterlab": 114, "jurafski": [1, 55, 57, 58, 73, 74], "just": [2, 3, 6, 7, 8, 10, 11, 17, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 48, 50, 51, 53, 54, 56, 58, 59, 61, 62, 64, 66, 67, 68, 71, 74, 76, 77, 79, 80, 84, 85, 87, 88, 89, 90, 91, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 111, 116, 117, 118, 119, 120, 126, 127, 128, 130, 132, 134, 136, 137, 146, 148, 150, 155, 158, 159, 163, 173, 174, 178, 180, 181, 183, 185, 193, 196, 207, 211, 213, 217, 221, 228, 229, 236, 238], "justif": [53, 66, 202, 205], "justifi": [68, 96, 99, 180, 211], "justin": [57, 58], "jython": 216, "jz": 198, "k": [1, 5, 11, 16, 20, 29, 30, 43, 44, 48, 51, 52, 54, 55, 56, 57, 58, 59, 66, 68, 71, 72, 74, 75, 76, 78, 80, 84, 87, 94, 95, 98, 102, 106, 107, 108, 112, 114, 118, 119, 121, 124, 126, 127, 128, 134, 136, 140, 142, 147, 148, 151, 155, 156, 165, 174, 186, 200, 201, 210, 211, 238], "k0": 58, "k1": [53, 74], "k11": 53, "k12": 53, "k1d": 53, "k2": [53, 74], "k21": 53, "k22": 53, "k2d": 53, "k_": [29, 58, 61], "k_1": [29, 58], "k_2": [29, 58], "k_3": 58, "k_nearest_neighbor": 228, "k_probabl": 128, "k_proj": 72, "k_smallest": 48, "k_t": 58, "kafka": [97, 99, 100], "kaggl": [68, 76, 97, 102, 106, 107, 111], "kaim": 72, "kaiming_uniform_": 72, "kaiser": [0, 1, 55, 57, 70, 71], "kanban": 94, "kappa": [0, 16, 141, 142, 168, 169, 170, 171, 173, 174, 198, 200, 201, 203, 204, 206], "karma": 57, "karpathi": [57, 59, 105, 106, 112, 114, 118], "karthik": 0, "karv": 8, "kb": [76, 118], "kd": [53, 61, 62, 74], "kd1": 53, "kd2": 53, "kdd": 53, "kde": [76, 171, 174], "kdeplot": 76, "keen": 85, "keep": [17, 19, 27, 32, 35, 36, 43, 44, 47, 53, 58, 71, 83, 88, 89, 94, 95, 97, 101, 104, 108, 110, 112, 115, 128, 174, 180, 213, 218, 226, 231], "keepdim": [56, 58, 75, 124], "kei": [2, 4, 5, 6, 7, 9, 11, 19, 20, 27, 29, 30, 35, 36, 46, 48, 53, 55, 59, 61, 66, 67, 76, 80, 82, 83, 84, 85, 93, 94, 95, 97, 99, 100, 101, 104, 107, 108, 112, 113, 114, 117, 118, 119, 120, 124, 159, 163, 181, 211, 213, 218, 227, 234, 238], "kenneth": 80, "kept": [7, 35, 44, 68, 94, 211], "kera": [62, 114, 118, 121], "keras_recip": 121, "kernel": [58, 76, 102, 113, 114, 115], "keskar": 0, "kevin": [0, 52, 53, 60, 61, 63, 67, 68, 73, 74], "key_averag": [113, 114], "key_typ": 238, "keyerror": [17, 222, 229], "keymateri": 90, "keynam": 90, "keyword": [54, 58, 98, 99, 109, 120, 213, 226], "kg": 174, "khan": 127, "khanacademi": 126, "kibana": 110, "kick": [48, 100, 115], "kill": 58, "kilobyt": 118, "kim": 174, "kind": [5, 7, 44, 53, 76, 94, 95, 97, 98, 99, 110, 117, 140, 190, 218], "kinesi": 99, "kingma": [0, 1, 55, 57, 59], "kiv": 159, "kj": [56, 118], "kl": 121, "kldivloss": 121, "kleppmann": [93, 95, 97, 98, 100], "kmean": [53, 54, 62, 63, 75], "kmeans_compress": 63, "kmeans_kwarg": [62, 63], "kmeans_silhouett": 53, "kmeans_sklearn": 62, "kmeansifittedkmean": 62, "kmeanslloyd": [54, 62, 63], "knn": [66, 228], "knnstrategi": 228, "know": [2, 5, 6, 7, 8, 11, 17, 19, 27, 29, 36, 43, 48, 49, 50, 51, 53, 57, 58, 59, 61, 66, 68, 71, 74, 76, 77, 80, 85, 87, 89, 91, 94, 95, 96, 97, 98, 100, 102, 106, 109, 113, 115, 116, 117, 119, 123, 124, 125, 130, 133, 136, 137, 143, 146, 148, 155, 156, 158, 159, 174, 179, 180, 184, 185, 195, 196, 203, 210, 211, 213, 217, 219, 222, 228, 231], "knowledg": [29, 30, 48, 53, 57, 58, 71, 76, 78, 80, 96, 97, 98, 102, 122, 127, 208, 212], "knowledge_distil": 121, "knowledge_distillation_tutori": 121, "known": [2, 4, 5, 10, 11, 17, 27, 29, 30, 36, 46, 49, 53, 56, 57, 58, 59, 61, 62, 66, 68, 74, 76, 79, 83, 84, 85, 94, 97, 98, 102, 103, 104, 106, 109, 124, 126, 130, 145, 170, 173, 203, 207, 211, 214, 216], "ko": 207, "koko": [28, 78], "koller": 77, "komeili": [0, 48], "kpi": 108, "kqv": 118, "kth": 47, "kubernet": [94, 100], "kudugunta": 118, "kumar": 70, "kurtosi": [78, 175], "kurtosis_data": 171, "kurtosis_label": 171, "kuttler": 80, "kv_sep": 217, "kwarg": [59, 62, 69, 72, 97, 117, 120, 121, 123, 127, 128, 226, 229, 238], "kxd": 62, "kyunghyun": 0, "l": [0, 1, 27, 29, 43, 48, 50, 51, 53, 55, 57, 58, 59, 61, 66, 68, 70, 71, 74, 76, 87, 88, 90, 96, 99, 102, 106, 110, 118, 119, 120, 121, 123, 169, 174, 186, 200, 211], "l1": 69, "l119": 72, "l2": [59, 69, 117, 230], "l2_loss": 69, "l2_norm": 84, "l_": [29, 59, 121], "l_1": [53, 59, 125], "l_2": [53, 125], "l_b": 59, "l_hard": 121, "l_k": 53, "l_n": 59, "l_soft": 121, "l_t": 29, "lab": [95, 96], "label": [30, 32, 48, 50, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 94, 102, 103, 106, 107, 115, 117, 119, 120, 121, 123, 124, 127, 130, 156, 168, 170, 171, 174, 180, 190, 210, 217], "label2id": [72, 120], "label2rgb": 63, "label_count": 120, "label_id": [72, 120], "label_propag": 96, "label_smooth": 119, "label_smoothing_factor": [72, 120], "labelfont": 127, "labelleft": 53, "labels": 58, "labels_": [62, 63], "labels_allagre": 120, "labor": [100, 101], "lack": [5, 48, 50, 58, 66, 79, 216, 230], "lag": 68, "lagrang": 53, "lagrangian": 53, "lai": [29, 66, 135], "laid": [74, 177], "lair": 66, "lake": [96, 101, 109], "lakehous": [99, 100], "lamar": [80, 126], "lambda": [53, 58, 59, 74, 77, 83, 84, 85, 98, 115, 119, 120, 126, 150, 155, 156, 169, 174, 184, 186, 193, 200, 201, 203, 213, 221, 235, 238], "lambda_": 156, "lambda_1": [85, 169, 174, 186, 192, 193], "lambda_2": [85, 169, 174, 186, 192, 193], "lambda_d": [192, 193, 195], "lambda_i": 155, "lambdalr": [59, 117, 121, 123, 226], "lambdalrconfig": 59, "lan": 118, "land": [6, 59, 61, 66, 123, 124, 131, 144, 148], "landscap": [58, 120, 124], "langl": 58, "languag": [0, 1, 3, 5, 7, 8, 10, 11, 17, 27, 32, 36, 55, 56, 58, 59, 63, 71, 72, 73, 74, 78, 84, 88, 89, 94, 96, 97, 99, 100, 109, 118, 123, 124, 218], "language_vers": 94, "languagemodel": 94, "lapack": 97, "laplac": [77, 200], "laptop": 30, "larg": [0, 11, 16, 17, 27, 29, 32, 46, 50, 55, 56, 58, 59, 61, 62, 68, 71, 72, 78, 84, 85, 87, 88, 89, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 109, 110, 117, 118, 120, 121, 123, 124, 126, 143, 155, 156, 159, 174, 178, 207, 209, 211, 216, 217, 230, 233, 239], "large_data": 230, "larger": [4, 6, 11, 27, 29, 32, 46, 47, 48, 53, 56, 57, 58, 59, 61, 63, 65, 66, 68, 87, 94, 95, 96, 115, 121, 123, 124, 174, 213, 221, 233], "largest": [5, 19, 27, 29, 46, 47, 48, 58, 59, 66, 68, 87, 123, 124, 193, 207], "lasso": 84, "last": [0, 1, 8, 27, 32, 34, 36, 44, 46, 53, 55, 56, 57, 59, 66, 68, 74, 75, 77, 78, 90, 96, 102, 106, 117, 118, 119, 122, 123, 124, 136, 174, 176, 180, 186, 188, 213, 226, 231], "last_decoder_block": [59, 119], "last_epoch": [59, 119, 123, 226], "last_hidden_st": 120, "lastli": [6, 27, 58, 59, 61, 68, 71, 76, 90, 96, 120, 128], "lasttokenpool": 120, "late": [10, 78, 94, 232], "latenc": [48, 90, 95, 98, 99, 101, 102, 108, 109, 110, 216], "latent": [52, 54, 57, 61, 102, 196], "later": [2, 5, 9, 20, 27, 29, 30, 53, 57, 58, 59, 61, 63, 66, 68, 71, 72, 74, 76, 80, 82, 84, 85, 94, 96, 97, 100, 104, 109, 113, 119, 124, 130, 140, 158, 170, 172, 174, 178, 180, 195, 211, 216, 217], "latest": [0, 90, 94, 104], "latex": 7, "latter": [7, 56, 58, 61, 63, 66, 74, 98, 103, 123, 147, 148, 238], "launch": [88, 89, 90], "launcher": [89, 217], "law": [50, 53, 68, 71, 74, 76, 78, 79, 94, 97, 98, 124, 126, 131, 135, 137, 146, 150, 159, 173, 180, 184, 200, 207, 209], "layer": [29, 30, 53, 57, 59, 71, 72, 96, 98, 104, 106, 110, 112, 114, 117, 118, 119, 120, 121, 123, 124], "layer_norm": [58, 59, 119, 120], "layernorm": [56, 59, 118, 119, 120], "laymen": [66, 76, 180, 206], "layout": 84, "lazi": [59, 90, 230], "lazili": [213, 230], "lceil": [29, 63], "lcurl": 170, "lda": 74, "ldot": [4, 6, 16, 27, 29, 30, 43, 46, 50, 51, 52, 53, 56, 57, 58, 59, 61, 63, 64, 66, 68, 71, 74, 76, 77, 80, 82, 83, 84, 87, 102, 118, 121, 124, 125, 133, 134, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 151, 153, 155, 158, 160, 172, 176, 178, 180, 183, 188, 191, 195, 196, 198, 201, 203, 206, 207, 210, 211], "le": [126, 174], "lead": [2, 3, 5, 6, 8, 11, 16, 17, 19, 20, 26, 29, 30, 32, 36, 46, 48, 53, 56, 57, 59, 61, 63, 66, 68, 71, 74, 75, 77, 80, 94, 95, 96, 97, 100, 101, 102, 103, 106, 110, 115, 120, 123, 124, 180, 211, 213, 214, 216, 219, 221, 230, 231, 233, 236], "leaf": 16, "leak": [58, 101, 104, 115, 231], "leakag": [57, 58, 104], "lear": 58, "learn": [0, 3, 8, 10, 30, 48, 49, 51, 52, 53, 55, 58, 60, 61, 62, 63, 67, 68, 69, 73, 74, 75, 77, 78, 80, 85, 88, 90, 93, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 116, 119, 120, 121, 124, 130, 136, 144, 153, 158, 178, 179, 180, 181, 191, 193, 194, 203, 204, 210, 213, 217, 218, 219, 223, 226], "learnabl": [56, 112, 114, 118], "learner": [0, 1, 47, 55, 57, 61, 71, 74, 87, 100, 191, 210, 211], "learning_r": [69, 72, 120], "learnt": [61, 68, 87, 189], "least": [4, 7, 19, 29, 43, 50, 57, 63, 65, 66, 76, 80, 90, 94, 100, 124, 128, 131, 180, 203, 213], "leav": [16, 23, 44, 56, 66, 67, 101, 116, 119, 120, 121, 133, 180, 222], "lectur": [27, 52, 53, 61, 66, 68, 74, 112, 113, 114, 116, 127, 158, 174], "lecturenote05": 74, "lecun": 77, "led": [77, 106], "lee": [0, 57, 58], "leetcod": [20, 27, 29, 34, 35, 36, 43, 44, 47], "left": [4, 5, 6, 11, 13, 16, 17, 19, 29, 30, 32, 35, 36, 43, 46, 47, 48, 50, 52, 53, 56, 57, 58, 59, 61, 63, 64, 65, 66, 68, 71, 72, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 102, 112, 114, 118, 120, 121, 123, 124, 125, 126, 127, 131, 133, 146, 167, 170, 171, 173, 174, 176, 178, 180, 181, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 203, 206, 207, 210, 211, 213], "left_index": 27, "leftarrow": [27, 53, 56, 71], "leftmost": [27, 46, 63], "leftward": 57, "legaci": [95, 119], "legal": [94, 97], "legend": [53, 59, 62, 68, 76, 100, 123, 124, 127, 156, 170, 171, 190], "legisl": 97, "legitim": [9, 76, 95, 181, 185], "legitimaci": 4, "lei": [56, 57, 58], "leimao": 194, "leiserson": [0, 16], "len": [2, 6, 8, 13, 20, 22, 23, 27, 29, 30, 32, 41, 43, 44, 46, 48, 53, 54, 58, 59, 61, 62, 68, 72, 75, 76, 77, 80, 98, 117, 120, 121, 124, 128, 143, 146, 148, 156, 159, 174, 213, 216, 230, 238], "len_": [13, 41], "lend": [17, 29, 53], "lenght": 126, "length": [5, 11, 13, 19, 20, 26, 27, 29, 30, 32, 34, 35, 37, 43, 44, 46, 47, 48, 56, 59, 61, 71, 74, 76, 77, 82, 83, 84, 85, 87, 94, 109, 112, 114, 117, 118, 119, 120, 126, 150, 155, 174, 198, 238], "leptokurt": 171, "leq": [3, 7, 16, 19, 20, 27, 29, 30, 35, 36, 43, 44, 46, 47, 52, 56, 57, 58, 59, 61, 64, 65, 66, 68, 71, 84, 85, 87, 102, 123, 127, 131, 140, 144, 147, 151, 160, 162, 163, 164, 166, 168, 170, 173, 174, 176, 178, 181, 188, 198, 200, 203], "leqslant": 53, "less": [7, 11, 16, 17, 27, 29, 32, 43, 47, 48, 53, 54, 56, 58, 61, 62, 63, 66, 68, 71, 76, 77, 80, 84, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 111, 123, 148, 162, 176, 180, 183, 206, 211, 214, 216, 217, 219, 221], "lessen": 68, "lesser": [16, 30, 66, 115, 174], "lesson": [60, 103, 110, 140, 173, 177, 179, 182, 185, 194], "let": [2, 4, 5, 6, 7, 11, 17, 19, 27, 29, 30, 32, 36, 43, 44, 46, 47, 48, 50, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 83, 84, 85, 87, 88, 89, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 109, 110, 118, 119, 123, 125, 126, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 155, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 178, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 198, 200, 201, 203, 206, 207, 210, 211, 213, 214, 216, 217, 219, 221, 225, 227, 231, 233], "letter": [20, 58, 128, 238], "lettuc": 229, "level": [5, 16, 17, 20, 27, 29, 47, 53, 54, 57, 58, 59, 66, 68, 69, 75, 76, 87, 89, 90, 91, 94, 96, 98, 100, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 181, 190, 193, 213, 214, 216, 217, 219, 222, 231], "level_set_of_multivariate_gaussian_simplifi": 193, "levelnam": [54, 69, 75, 111, 112, 113, 114, 115, 120, 121, 214, 217, 231], "leverag": [11, 27, 30, 57, 58, 89, 93, 96, 97, 99, 100, 118, 124, 213, 216, 217, 230, 235], "levin": 0, "levkivskyi": 10, "lfloor": [27, 29], "lh": 66, "li": [0, 1, 27, 29, 30, 48, 55, 57, 58, 66, 70, 71, 73, 74, 76, 80, 83, 85, 94, 123, 124, 213], "lib": [62, 72, 94, 100, 115, 117, 120, 121, 230, 231], "librari": [9, 53, 59, 63, 68, 89, 94, 97, 99, 113, 116, 117, 128, 216, 217, 218, 225, 234], "libretext": 80, "licens": [98, 99], "lie": [27, 29, 53, 58, 68, 80, 83, 103], "life": [29, 95, 169], "lifecycl": [78, 99, 100, 106, 108], "lifo": [32, 36], "lift": 66, "light": [101, 112, 114], "lightblu": [62, 76], "lightgreen": 62, "lightn": [217, 219], "lightweight": [95, 97, 216], "like": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 19, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 53, 54, 56, 57, 58, 59, 61, 62, 64, 66, 68, 71, 72, 76, 77, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 123, 124, 126, 128, 130, 133, 136, 146, 148, 150, 155, 156, 158, 159, 160, 163, 172, 174, 180, 181, 183, 198, 207, 211, 212, 214, 216, 217, 219, 222, 226, 227, 229, 231, 233, 234, 236, 238, 239], "likelihood": [30, 54, 56, 57, 59, 71, 73, 75, 76, 78, 94, 96, 124, 130, 210], "liken": 94, "likewis": 58, "lilian": [56, 57, 58], "lim": 181, "lim_": [36, 66, 102, 126, 166, 174, 206], "lim_n": 126, "limit": [3, 5, 6, 7, 9, 19, 29, 36, 57, 58, 61, 63, 66, 68, 76, 90, 94, 95, 99, 100, 102, 109, 120, 126, 127, 133, 172, 174, 199, 203, 204, 216, 217, 222, 231], "limitless": 109, "lin": 66, "linalg": [53, 68, 69, 84, 127], "line": [5, 6, 7, 13, 19, 32, 36, 43, 53, 56, 57, 58, 59, 61, 66, 68, 72, 74, 76, 82, 83, 84, 90, 94, 103, 117, 119, 123, 126, 128, 163, 173, 174, 176, 188, 190, 191, 203, 207, 210, 213, 214, 217, 226, 231], "lineag": [2, 10, 100, 108], "linear": [11, 17, 20, 27, 29, 32, 43, 46, 47, 50, 53, 57, 59, 62, 66, 69, 70, 71, 72, 74, 77, 79, 81, 82, 83, 85, 87, 97, 107, 112, 114, 118, 119, 120, 123, 124, 150, 155, 173, 180, 192, 206, 211, 216, 217, 226, 228], "linear_model": 69, "linear_regress": 228, "linearli": [11, 19, 29, 30, 43, 48, 53, 56, 57, 58, 59, 68, 71, 80, 85, 102, 123, 178], "linearregress": [68, 69, 228], "linearregressionstrategi": 228, "linefmt": [143, 159], "lineno": [213, 230], "lineplot": 128, "linestyl": [53, 68, 76, 83, 127, 190], "linewidth": [53, 68, 69, 76, 83, 127, 143, 146, 148, 159, 174, 190, 207], "linger": [90, 115], "lingo": [178, 180], "linguist": [73, 74], "link": [8, 27, 36, 47, 53, 56, 57, 58, 63, 66, 71, 99, 115, 124, 174, 188, 203, 223, 228], "linspac": [53, 76, 127, 128, 143, 156, 159, 168, 169, 170, 171], "lint": 100, "linter": 94, "linux": [90, 216], "lipp": [0, 58, 59, 123], "lipschitz": 102, "lipton": [0, 1, 55, 57, 58, 73, 74, 123, 124], "liskov": [2, 7], "list": [3, 5, 6, 8, 13, 17, 19, 20, 23, 26, 27, 29, 30, 34, 35, 37, 41, 43, 44, 46, 47, 48, 53, 58, 59, 61, 62, 68, 69, 72, 77, 78, 83, 87, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 109, 112, 117, 119, 120, 121, 123, 124, 128, 143, 146, 148, 171, 172, 200, 203, 207, 214, 216, 217, 218, 219, 221, 222, 228, 229, 231, 232, 233, 234, 235, 236, 238], "list1": 233, "list2": 233, "list_": [5, 8], "list_1": 94, "list_2": 94, "list_access": 11, "list_append": 11, "list_encoding_nam": 58, "list_insert": 11, "list_iter": 234, "list_of_dynamic_typ": 5, "list_of_employe": 5, "list_of_int": 5, "list_of_str": 5, "list_pop": 11, "list_search": 11, "list_sort": 11, "listcomp": [230, 235], "listen": [96, 109], "listproxi": 7, "liter": [5, 6, 8, 9, 27, 48, 54, 58, 59, 61, 62, 94, 112, 114, 117, 118, 213, 221, 226, 233, 238], "literatur": [56, 58, 80, 101], "litmu": 234, "littl": [6, 65, 74, 85, 96, 126, 130, 144, 190], "liu": [0, 1, 55, 57, 59, 78, 118, 123, 217, 232], "live": [2, 3, 66, 94, 101, 108, 109, 117, 158], "liyuan": 0, "ll": [9, 17, 36, 56, 58, 59, 66, 68, 71, 76, 80, 85, 88, 93, 94, 97, 98, 99, 102, 104, 109, 110, 124, 130, 181, 213], "llama": 70, "llc": 0, "llion": 0, "lll": [188, 210], "lllll": 200, "llm": [48, 57, 70, 116, 217, 218], "lloyd": [53, 78], "lm": [57, 58], "lm_profiler_stack": 114, "ln": [53, 118], "ln1": 58, "ln1_pytorch": 58, "ln_1": [56, 58], "ln_2": 58, "ln_before_head": 58, "ln_f": 118, "ln_final": [112, 114], "load": [17, 62, 68, 78, 88, 90, 93, 94, 96, 97, 101, 105, 108, 109, 217, 218, 225, 231], "load_adapt": 117, "load_best_model_at_end": [72, 120], "load_data": 62, "load_dataset": [72, 76, 120, 121], "load_diabet": 69, "load_digit": [54, 62, 75], "load_feature_and_label": 94, "load_iri": [54, 62, 75], "load_snapshot": 218, "load_state_dict": [117, 218], "load_tf_weight": 117, "load_tf_weights_in_gpt2": 117, "load_to_product": 100, "load_to_stag": 100, "load_yaml_config": 59, "loader": [32, 97, 213], "loader_config": 59, "loadtolak": 100, "loadtowarehous": 100, "loaf": 80, "loav": 80, "loc": [53, 76], "local": [5, 11, 27, 30, 53, 59, 60, 62, 77, 89, 91, 96, 97, 98, 99, 102, 115, 123, 195, 213, 229, 235], "local_rank": [89, 91], "local_world_s": [89, 91], "local_xla": 72, "localhost": [59, 89, 91, 119, 225], "localn": 117, "locat": [11, 17, 27, 30, 44, 59, 61, 66, 68, 80, 94, 96, 97, 98, 100, 223], "lock": [78, 213, 218, 227, 232], "log": [5, 11, 16, 19, 20, 27, 29, 43, 48, 54, 56, 57, 58, 59, 61, 62, 66, 69, 71, 72, 75, 76, 77, 89, 94, 97, 98, 99, 100, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 124, 193, 203, 207, 214, 217, 219, 227, 229, 231, 238], "log2": 63, "log_2": [27, 29, 63, 211], "log_artifact": 104, "log_b": [16, 27], "log_dir": [59, 89, 119], "log_every_n_step": [59, 119], "log_fil": [59, 119], "log_gnb": 75, "log_joint_likelihood": 75, "log_k": 58, "log_level": [59, 89, 119], "log_likelihood": 75, "log_loss": [72, 120, 121], "log_metr": 117, "log_on_master_or_al": [59, 89, 119], "log_p_i": 77, "log_p_xi": 77, "log_p_xy_neg": 77, "log_param": 104, "log_posterior": 75, "log_prior": 75, "log_prob": [75, 76], "log_root_dir": [59, 119], "log_softmax": 121, "log_time_format": [59, 119], "log_user_info": 5, "logarithm": [11, 27, 57, 66, 74, 77, 121, 211], "logger": [59, 89, 91, 100, 111, 112, 113, 114, 115, 119, 120, 121, 217, 227], "logger1": 227, "logger2": 227, "loggerconfig": [59, 119], "logging_exampl": 217, "logging_step": [72, 120], "logic": [2, 4, 6, 7, 8, 19, 27, 29, 30, 36, 48, 53, 66, 68, 72, 79, 89, 94, 97, 99, 100, 105, 120, 131, 132, 136, 172, 173, 211, 213, 217, 222, 225, 234, 238], "logical_and": [58, 59], "login": [17, 90, 94, 99], "logist": [50, 66, 73, 76, 102, 103, 211], "logit": [56, 57, 58, 59, 72, 96, 112, 114, 117, 119, 120, 121, 217], "logits_flatten": 59, "logits_larg": 58, "logits_permut": 59, "loglevel": 90, "lognorm": 53, "logs_dir": [217, 219], "logs_distribut": [59, 119], "logspac": [53, 207], "logsumexp": 75, "lol": 59, "long": [2, 3, 6, 23, 27, 36, 48, 57, 58, 59, 61, 66, 68, 77, 80, 94, 95, 99, 100, 112, 114, 117, 120, 121, 123, 130, 146, 170, 174, 219], "longer": [6, 11, 53, 57, 58, 59, 61, 66, 68, 76, 83, 84, 89, 94, 98, 123, 158, 170, 183, 193, 211, 213, 221, 229, 231, 237], "longest": [58, 59, 72, 120, 121], "longleftrightarrow": [53, 74, 181], "longrightarrow": [66, 68, 133, 196], "longtensor": [58, 59, 112, 114, 120], "look": [5, 7, 8, 11, 17, 19, 27, 29, 36, 43, 44, 48, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 76, 77, 78, 79, 83, 84, 86, 94, 96, 98, 100, 103, 104, 106, 108, 109, 110, 113, 115, 116, 118, 123, 124, 126, 128, 130, 143, 146, 156, 180, 181, 197, 213, 217, 218, 219, 221, 226, 228, 235], "lookup": [11, 17, 19, 63, 98], "loop": [3, 11, 17, 19, 26, 27, 29, 32, 35, 43, 44, 46, 48, 56, 57, 58, 59, 61, 62, 68, 69, 72, 74, 75, 89, 106, 113, 117, 128, 146, 207, 213, 214, 216, 231, 234, 235], "loop_employe": 7, "loop_employees_using_list": 7, "loop_through_memb": 117, "loos": [2, 4, 6, 36, 57, 66, 68, 71, 76, 94, 124, 134, 136, 183, 203, 221], "loosen": 218, "lora": [0, 70], "lora_": 72, "lora_a": 72, "lora_alpha": 72, "lora_b": 72, "lora_config": 72, "lora_dropout": 72, "lora_finetun": 72, "lora_out": 72, "lora_paramet": 71, "lora_weight": 72, "loraconfig": 72, "loralib": 72, "loralinear": 72, "lose": [53, 68, 126, 146], "loshchilov": [0, 1, 55, 57, 59, 123], "loss": [3, 4, 43, 49, 51, 58, 62, 63, 69, 71, 72, 84, 87, 94, 101, 104, 105, 107, 112, 114, 120, 121, 123, 124, 146, 211, 217, 218], "loss_fn": 115, "loss_funct": 69, "loss_histori": 69, "lossfunct": 69, "lossi": [63, 120], "lossless": [58, 63], "lost": [58, 95, 96, 98, 211, 214, 231], "lot": [61, 63, 68, 71, 76, 89, 94, 97, 98, 144, 217, 221, 223, 225, 228], "lotteri": 66, "love": [29, 119], "low": [0, 13, 17, 27, 29, 43, 44, 53, 58, 59, 66, 72, 76, 78, 87, 89, 94, 98, 109, 124, 127, 128, 155, 160, 171, 190, 213, 216, 222, 238], "lower": [6, 13, 16, 27, 29, 36, 56, 57, 58, 59, 63, 66, 68, 71, 94, 97, 103, 112, 118, 119, 120, 123, 124, 160, 181, 193, 196, 207, 211, 216, 221, 225], "lowercas": 20, "lowest": [76, 94, 123], "lpar": [142, 150, 165, 166, 170], "lr": [59, 68, 114, 115, 119, 120, 121, 123, 211, 217, 226], "lr_custom": 69, "lr_lambda": [59, 123], "lr_schedul": [59, 117, 119, 120, 121, 123, 218, 226], "lr_scheduler_kwarg": 117, "lr_scheduler_typ": [72, 120], "lr_sklearn": 69, "lrs1": 123, "lrs2": 123, "lrs_cyclic": [59, 123], "lrs_non_cycl": [59, 123], "lrschedul": [59, 218, 226], "lru_cach": 128, "lsdkjfskf": 25, "lset": [130, 137, 139, 140, 141, 142, 146, 148, 150, 155, 163, 172, 176], "lsp": [2, 4, 7, 114], "lsq": [130, 137, 139, 140, 141, 142, 144, 146, 147, 148, 150, 151, 153, 155, 159, 163, 164, 165, 166, 168, 169, 170, 173, 174, 176, 188], "lst": [7, 239], "lstm": [57, 58, 59], "lstrip": 120, "lt": [58, 59, 71, 113, 117, 120, 124, 226, 229, 235, 238], "lu": 0, "lua": 11, "luan": [0, 1, 55, 57], "lucki": [58, 231], "lukasz": 0, "lunch": [71, 125], "lung": 181, "luo": [1, 10], "lustr": 99, "luxuri": [61, 94], "lvert": [58, 127, 141, 150, 160, 164, 170, 173, 176, 191, 193], "lw": [53, 76, 146, 148, 156, 168], "lxd": 58, "lxml": 99, "ly": 80, "m": [0, 1, 27, 29, 32, 43, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 71, 73, 74, 79, 80, 83, 84, 85, 87, 90, 94, 95, 97, 99, 100, 115, 118, 119, 123, 124, 146, 148, 156, 170, 186, 188, 190, 191, 193, 194, 200, 207, 211, 217], "m1": [56, 75, 80, 118], "m2": [75, 80, 118], "m3": 75, "m_": [56, 66, 114, 115, 200, 201, 203], "m_1": 74, "m_2": 74, "m_3": 74, "m_d": 192, "m_i": 32, "m_t": 29, "m_x": [198, 200], "ma": 57, "ma4270": [52, 53, 60, 61, 68], "mac": [89, 91, 118], "macaluso": 68, "machin": [0, 1, 49, 50, 51, 52, 53, 57, 58, 60, 61, 63, 65, 66, 67, 68, 71, 73, 74, 78, 79, 80, 85, 88, 89, 93, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 124, 136, 158, 179, 180, 182, 191, 193, 194, 203, 204, 210, 217, 218, 219, 223], "machine_learn": [54, 62, 63, 75], "machine_transl": 96, "mackai": 53, "maco": [94, 216], "macro": [72, 75, 120], "made": [2, 8, 9, 16, 27, 30, 36, 50, 58, 61, 64, 66, 67, 68, 76, 77, 93, 94, 97, 100, 107, 109, 117, 134, 146, 210, 217, 219, 236], "madewithml": [100, 101, 106, 107, 109, 110], "mae": [68, 94, 96, 103, 106, 107, 110], "magdon": 66, "magic": [2, 53, 99], "magnifi": 124, "magnitud": [59, 68, 80, 82, 83, 84, 85, 95, 103, 123, 124, 193], "mai": [2, 3, 4, 5, 6, 7, 9, 11, 13, 17, 19, 29, 30, 32, 43, 44, 46, 47, 50, 53, 56, 57, 58, 59, 61, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 80, 82, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 109, 110, 114, 115, 117, 118, 123, 128, 130, 134, 144, 146, 155, 163, 169, 170, 174, 183, 185, 188, 190, 207, 210, 211, 213, 214, 216, 217, 218, 221, 226, 228, 238, 239], "mail": 238, "main": [3, 5, 29, 36, 50, 53, 57, 59, 68, 71, 74, 75, 90, 96, 97, 98, 99, 100, 104, 107, 111, 117, 123, 137, 144, 171, 201, 207, 213, 216, 217, 222, 225, 229, 233, 238], "main_process": 216, "main_structur": 217, "main_thread": 216, "mainli": [55, 59, 66, 203, 211], "mainlin": 94, "mainstream": 96, "maintain": [3, 4, 5, 17, 26, 27, 29, 30, 32, 34, 35, 36, 37, 44, 46, 47, 48, 56, 57, 58, 59, 63, 71, 79, 83, 93, 95, 98, 100, 106, 108, 109, 110, 118, 119, 123, 124, 213, 217, 219, 221, 223, 226, 228, 230, 239], "mainten": [29, 30, 90, 94, 109, 222], "major": [8, 19, 43, 53, 58, 69, 87, 94, 100, 101, 103, 106, 109, 110, 130, 193, 213], "make": [2, 3, 5, 7, 9, 11, 17, 27, 29, 30, 32, 43, 44, 48, 51, 53, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 74, 76, 77, 79, 80, 84, 85, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 115, 117, 118, 119, 120, 123, 124, 126, 127, 130, 134, 142, 146, 147, 155, 158, 159, 165, 174, 180, 181, 190, 211, 212, 213, 214, 216, 217, 218, 226, 227, 231, 239], "make_blob": [53, 54, 62, 75], "make_dataclass": 117, "make_meshgrid": [53, 127, 190], "make_plot": 53, "make_regress": 69, "make_sound": [2, 3, 4], "malai": 99, "male": [76, 185], "man": 90, "manag": [5, 7, 11, 27, 29, 32, 58, 61, 78, 93, 97, 98, 99, 100, 101, 104, 108, 109, 124, 213, 214, 216, 217, 221, 222, 223, 225, 226, 227, 231], "mandatori": 89, "manhattan": [61, 62], "manhattan_dist": 62, "mani": [2, 5, 7, 9, 10, 16, 17, 26, 27, 29, 30, 32, 36, 47, 56, 57, 59, 61, 63, 66, 68, 71, 74, 75, 76, 80, 83, 84, 85, 87, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 109, 115, 117, 118, 120, 121, 125, 128, 136, 143, 155, 169, 182, 188, 199, 203, 207, 211, 216, 217, 218, 223, 226, 231, 238], "manifest": [3, 95], "manipul": [17, 47, 53, 74, 80, 83, 98, 217], "manner": [3, 4, 29, 30, 47, 53, 56, 57, 58, 59, 61, 84, 94, 95, 99, 100, 124], "mantissa": 118, "mantra": 94, "manual": [2, 8, 11, 17, 57, 58, 72, 89, 94, 96, 99, 100, 101, 104, 117, 118, 120, 123, 125, 136, 137, 217, 221, 237], "manual_se": [58, 59, 71, 104, 217], "manual_seed_al": [58, 71, 104], "manufactur": [109, 222], "mao": [56, 57, 58], "map": [2, 6, 9, 11, 13, 29, 35, 48, 50, 51, 53, 57, 59, 61, 63, 66, 68, 72, 74, 76, 77, 78, 84, 87, 88, 102, 113, 119, 120, 124, 126, 129, 130, 137, 139, 143, 146, 148, 156, 158, 159, 163, 172, 217, 222, 234, 238], "map_loc": 218, "mape": 96, "mapsto": [6, 57, 58, 68, 84, 87, 124, 126, 130, 137, 139, 163, 188, 211], "marc": [0, 49, 52, 53], "marcel": [114, 116], "marcelro": [112, 114], "march": 66, "marciu": 58, "margin": [52, 54, 57, 68, 75, 76, 102, 180, 181, 211], "marginil": 211, "mari": 48, "mark": [8, 47, 57, 58, 59, 62, 66, 95], "markdown": 8, "markedli": 27, "marker": [9, 36, 44, 53, 54, 58, 59, 62, 63, 75, 94, 123, 127, 128, 143, 156, 190, 211], "markeredgecolor": 58, "markerfmt": [143, 159], "markers": [53, 58], "market": [94, 95, 96, 97, 109], "markup": [59, 119], "martin": [1, 55, 57, 58, 73, 74, 93, 94, 95, 97, 98, 100, 221], "marvel": 94, "mask": [55, 63, 94, 96, 112, 114, 120, 121], "masked_attention_scor": 58, "masked_attention_weight": 58, "masked_fil": [56, 58, 112, 114, 119], "masked_self_attention_mha": [58, 59, 119, 120], "masked_self_attention_mha_config": [58, 59, 119], "maskedfillbackward0": 114, "maskedmultihead": 56, "mass": [53, 57, 58, 66, 76, 78, 140, 143, 144, 147, 148, 151, 154, 155, 159, 160, 163, 176, 181, 182, 200], "massachusett": [73, 74], "massiv": 57, "master": [15, 47, 78, 94, 112, 114, 214, 219, 231], "master_addr": [59, 89, 91, 119], "master_info": 89, "master_port": [59, 89, 91, 119], "mat": [57, 58], "match": [4, 8, 30, 35, 41, 46, 48, 53, 56, 57, 59, 62, 63, 72, 74, 76, 94, 98, 103, 118, 119, 121, 124, 136, 137, 211], "materi": [5, 80, 96], "math": [4, 27, 29, 34, 36, 57, 58, 59, 63, 70, 71, 72, 75, 77, 80, 84, 85, 120, 123, 126, 130, 143, 185, 211, 213, 216], "math11112451": 0, "mathbb": [4, 7, 27, 29, 46, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 71, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 102, 121, 124, 126, 138, 159, 162, 167, 171, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 198, 200, 201, 203, 206, 207, 210, 211], "mathbf": [50, 51, 53, 57, 59, 61, 63, 64, 66, 71, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 102, 118, 119, 126, 176, 178, 182, 188, 191, 192, 193, 195, 200, 210, 211], "mathcal": [2, 4, 6, 11, 13, 16, 17, 19, 20, 27, 29, 32, 36, 43, 44, 46, 47, 48, 50, 51, 52, 56, 57, 58, 59, 61, 63, 64, 65, 68, 71, 74, 76, 77, 83, 84, 87, 94, 96, 102, 105, 106, 117, 118, 119, 120, 123, 126, 137, 173, 176, 178, 180, 188, 191, 200, 210, 230, 239], "mathemat": [0, 2, 4, 5, 7, 10, 11, 43, 44, 46, 47, 49, 52, 53, 56, 58, 59, 61, 62, 68, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 95, 102, 113, 118, 124, 130, 172, 199, 212], "mathematicalmonk": [60, 73], "mathfrak": [48, 53], "mathrm": [50, 51, 53, 58, 61, 66, 68, 74, 76, 77, 87, 102, 106, 124, 170, 181, 186, 188, 198, 200, 210, 211], "mathscr": [48, 66], "mathsf": [48, 85], "mathstackexchang": [66, 130], "mathstat": 158, "mathwork": 63, "matlab": [11, 97], "matlib": 207, "matmul": [56, 111, 112, 114, 118, 119, 124], "matplotlib": [53, 54, 58, 59, 62, 63, 69, 75, 76, 77, 83, 94, 114, 119, 123, 124, 127, 128, 140, 143, 146, 148, 156, 159, 168, 170, 171, 174, 178, 190, 207, 211, 213], "matric": [11, 53, 54, 58, 61, 70, 71, 80, 82, 85, 97, 118, 124, 188, 190], "matrix": [11, 16, 54, 57, 59, 61, 63, 69, 70, 72, 74, 75, 76, 77, 82, 83, 87, 94, 97, 102, 107, 119, 120, 127, 180, 190, 191, 193, 194, 210, 211, 238], "matter": [9, 19, 27, 48, 58, 66, 68, 82, 94, 96, 99, 101, 104, 106, 124], "matur": [93, 94, 95], "max": [29, 46, 53, 54, 58, 59, 61, 62, 66, 71, 74, 76, 87, 94, 112, 114, 115, 120, 121, 123, 124, 143, 146, 148, 156, 159, 171, 203, 213, 217, 219, 230], "max_": [29, 71, 74, 76], "max_batch_s": 217, "max_clust": 62, "max_entri": [114, 115], "max_epoch": [59, 119], "max_grad_norm": [72, 120], "max_i": 124, "max_int": 63, "max_it": [54, 61, 62, 63], "max_len": [59, 120], "max_length": [48, 72, 120, 121, 238], "max_norm": [59, 119], "max_num": 59, "max_num_of_mem_events_per_snapshot": 115, "max_num_peopl": 128, "max_seed_valu": 71, "max_seq_len": [58, 59], "max_sum": 46, "max_tim": 112, "max_token": [58, 59, 119], "max_val": 5, "max_z": 124, "maxbackward0": 114, "maxcount": 90, "maxim": [54, 56, 57, 59, 61, 66, 68, 71, 76, 80, 85, 87, 94, 96, 124, 211, 212], "maxima": [124, 211], "maximum": [5, 9, 19, 20, 27, 29, 36, 53, 54, 56, 57, 59, 62, 63, 66, 71, 73, 75, 76, 78, 90, 94, 100, 106, 112, 117, 118, 123, 124, 140, 166, 167, 210, 213], "maxitem": 238, "maxlen": 238, "maxlength": 238, "maxsiz": [5, 7], "maxwell_sgemm_128x64_nn": 114, "maxwell_sgemm_128x64_tn": 114, "mayb": [50, 58, 66, 68, 71, 89, 95, 96, 120, 143, 155, 159], "maybeconst": [59, 119], "maybeglob": [59, 119], "mb": [114, 115, 118, 230], "mbox": 66, "mccann": [0, 57], "mcgraw": [66, 73, 74], "mcnemar": 108, "md": 94, "mdpi": 0, "me": [10, 35, 58, 59, 66, 90, 94, 100, 117, 130, 133, 174, 218, 229, 231, 238], "mean": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 23, 26, 27, 29, 30, 32, 35, 36, 43, 50, 51, 54, 56, 57, 58, 59, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 130, 132, 133, 134, 136, 137, 141, 142, 143, 144, 146, 148, 150, 153, 158, 159, 160, 163, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 200, 201, 203, 206, 207, 210, 211, 212, 213, 216, 217, 219, 221, 222, 227, 230, 231, 233, 234, 235, 236, 237], "mean1": 110, "mean2": 110, "mean_1": 170, "mean_2": 170, "mean_3": 170, "mean_4": 170, "mean_5": 170, "mean_body_mass_g": 76, "mean_margin": 54, "mean_squared_error": 69, "mean_tim": 112, "mean_vector": [127, 190], "meaning": [9, 29, 63, 66, 96, 97], "meaningfulli": 74, "meaningless": [66, 101], "means_": [53, 54], "meant": [50, 53, 63, 100, 137, 158, 212], "meantion": 29, "measur": [4, 6, 11, 17, 30, 48, 49, 50, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 76, 84, 85, 87, 94, 96, 97, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 118, 121, 124, 126, 141, 142, 146, 164, 165, 176, 179, 183, 211, 212], "measured_byt": 118, "measured_throughput": 118, "measured_tim": 118, "mechan": [2, 3, 5, 8, 27, 30, 36, 55, 59, 62, 79, 88, 94, 95, 97, 100, 104, 108, 116, 118, 123, 213, 216, 218, 219, 221, 222, 231], "media": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110], "median": [78, 112, 175], "median_tim": 112, "mediat": 216, "medic": [80, 97, 98, 103, 106], "medicin": 48, "medium": [2, 58, 94, 112, 118, 237], "medium_backward_warmup_0_mixed_fals": 112, "medium_backward_warmup_0_mixed_tru": 112, "medium_backward_warmup_1_mixed_fals": 112, "medium_backward_warmup_1_mixed_tru": 112, "medium_forward_backward_warmup_0_mixed_fals": 112, "medium_forward_backward_warmup_0_mixed_tru": 112, "medium_forward_backward_warmup_1_mixed_fals": 112, "medium_forward_backward_warmup_1_mixed_tru": 112, "medium_forward_warmup_0_mixed_fals": 112, "medium_forward_warmup_0_mixed_tru": 112, "medium_forward_warmup_1_mixed_fals": 112, "medium_forward_warmup_1_mixed_tru": 112, "meet": [4, 29, 43, 44, 46, 90, 94, 95, 99, 100, 108], "megabyt": 118, "mehdi": 70, "mehryar": [0, 66, 68, 87], "mem": 114, "mem_effici": 230, "mem_ineffici": 230, "member": [2, 52, 57, 94, 96, 104, 146], "membership": [17, 78, 232], "memcpi": 113, "memmap": 58, "memor": [66, 74, 77, 106], "memori": [17, 19, 27, 30, 36, 44, 48, 57, 59, 63, 71, 76, 78, 88, 89, 91, 94, 97, 102, 104, 109, 110, 112, 116, 128, 144, 169, 170, 174, 190, 207, 211, 227, 231, 232, 233, 234, 239], "memory_leak": 115, "memory_mask": 58, "memory_profil": 230, "memory_ratio": 118, "memory_snapshot": 114, "memory_usag": [218, 230], "memory_viz": 114, "memoryerror": 213, "mental": [7, 29, 53, 61, 91, 173], "mention": [5, 27, 29, 43, 44, 53, 57, 58, 59, 61, 63, 66, 68, 71, 74, 76, 77, 80, 84, 85, 87, 94, 98, 100, 102, 104, 109, 124, 130, 133, 146, 158, 163, 173, 174, 176, 180, 181, 184, 190, 195, 231], "menu": [125, 179], "meow": [2, 3], "mere": [2, 5, 51, 57, 59, 61, 64, 68, 76, 79, 80, 120, 124, 180, 181, 191, 193, 211, 217], "merg": [11, 16, 20, 27, 48, 53, 56, 58, 99, 100, 112, 114, 217], "merge_and_unload": 72, "merge_and_unload_model": 72, "merge_config": 59, "merge_gaussian_pdf": 53, "merged_linear": 72, "mergesort": 11, "meshgrid": [53, 54, 76, 127, 128, 190], "mesokurt": 171, "mess": 59, "messag": [7, 36, 48, 54, 69, 75, 90, 91, 94, 97, 100, 111, 112, 113, 114, 115, 120, 121, 213, 214, 216, 217, 227, 231], "met": [4, 29, 30, 43, 46, 59, 76, 98], "meta": [0, 30, 32, 57, 115], "metaclass": [2, 226], "metacognit": 48, "metadata": [78, 96, 97, 98, 100, 108, 217, 223, 229, 238, 239], "metaphor": 94, "meteorolog": 97, "meter": 142, "method": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 16, 17, 19, 20, 22, 23, 27, 29, 36, 43, 44, 47, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 75, 76, 78, 80, 83, 87, 89, 94, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 119, 140, 143, 146, 182, 211, 212, 217, 219, 221, 224, 225, 226, 228, 230, 234, 237], "methodologi": [30, 94, 99, 221], "meticul": 106, "metric": [0, 43, 48, 61, 63, 69, 76, 78, 84, 93, 94, 99, 100, 101, 106, 107, 108, 110, 116, 117, 118, 120, 121, 218], "metric_for_best_model": [72, 120], "metric_key_prefix": 72, "metrics_format": 117, "mf": 118, "mf_per_sequ": 118, "mf_per_token": 118, "mfu": 96, "mfu_estim": 118, "mfu_result": 118, "mfuestimationresult": 118, "mgf": [198, 200], "mgrid": 190, "mha": [56, 59], "michael": [73, 74], "michel": 118, "michigan": [0, 73, 74, 141, 142, 144, 147, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 198, 200, 201, 203, 204, 206, 211], "micro": [72, 120], "microsecond": 113, "microservic": 93, "microsoft": [68, 72, 94, 99, 100, 102, 121], "mid": [27, 29, 50, 51, 52, 53, 56, 57, 58, 61, 66, 67, 68, 71, 74, 76, 77, 82, 87, 102, 110, 124, 180, 181, 182, 183, 184, 191, 211], "mid_index": 27, "mid_strategi": 27, "middl": [27, 30, 43, 53, 61, 66, 74, 174, 214, 216], "midpoint": [27, 29, 168], "might": [2, 3, 4, 5, 6, 7, 9, 11, 17, 19, 27, 29, 32, 36, 43, 48, 53, 56, 57, 58, 59, 63, 66, 68, 71, 75, 76, 77, 80, 82, 84, 87, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 118, 119, 123, 124, 126, 130, 132, 174, 180, 181, 193, 207, 213, 214, 218, 219, 227, 231, 233, 235, 236], "migrat": 99, "mill": [113, 114, 116], "miller": [57, 58], "million": [17, 57, 58, 101, 158, 230], "mimic": [36, 56, 94, 108, 218, 237], "mimick": [59, 121], "min": [29, 33, 38, 53, 54, 59, 71, 74, 76, 78, 112, 119, 121, 123, 125, 156, 158, 171, 213], "min_": [29, 61, 63, 195], "min_clust": 62, "min_dist": 62, "min_eating_spe": 29, "min_index": 62, "min_length": [48, 238], "min_num_peopl": 128, "min_seed_valu": 71, "min_tim": 112, "min_val": 5, "minbp": [57, 58], "mincount": 90, "mind": [11, 53, 59, 94, 103, 110, 144, 211], "mine": [62, 119, 128], "mingpt": [59, 90], "minhyeok": 0, "mini": [55, 58, 78, 89, 91], "minibatch": 56, "miniconda": [62, 117, 230, 231], "miniconda3": 90, "miniforg": 62, "minim": [17, 29, 51, 56, 57, 58, 60, 64, 65, 68, 69, 71, 78, 80, 84, 87, 94, 95, 96, 98, 100, 106, 124, 211, 216], "minima": [59, 60, 123, 124, 195, 211], "minimum": [5, 19, 27, 29, 30, 32, 36, 43, 53, 57, 58, 59, 60, 62, 68, 71, 72, 90, 100, 102, 106, 112, 123, 140, 166], "minimum_spe": 29, "minitem": 238, "minlen": 238, "minlength": [124, 238], "minor": [57, 58, 94, 95, 101, 193], "minstack": 34, "minu": [74, 124], "minut": [58, 94, 150, 155, 158], "minvers": 94, "miracl": 95, "mirror": [5, 57, 58, 72], "misc": [7, 62, 238], "miscalibr": [48, 103], "misclassif": 51, "misclassifi": [66, 95, 108], "miscommun": 94, "misconcept": [74, 174], "misinform": 96, "mislabel": 75, "mislead": [94, 96, 98, 101, 103], "misleadingli": 68, "mismatch": [5, 94], "misnom": 124, "miss": [5, 17, 59, 66, 68, 76, 95, 96, 97, 99, 100, 101, 103, 119], "missing_value_t": 76, "missing_value_table_renam": 76, "missing_values_per_column": 76, "missing_values_per_column_perc": 76, "missing_values_t": 76, "mistak": [51, 72, 79, 94, 104, 106, 115, 217, 226], "mistakenli": 5, "mistral": 70, "misunderstand": 94, "mit": [0, 1, 52, 53, 60, 61, 63, 66, 67, 68, 73, 74, 87, 94, 124, 174], "mitchel": [66, 73, 74], "mitig": [48, 58, 101, 110, 117, 124], "mix": [5, 6, 54, 94, 96, 97, 112, 126, 128, 140, 229], "mixed_": 112, "mixed_context": 112, "mixed_precis": [112, 114], "mixed_precision_opt": 112, "mixgausssurfac": 53, "mixmat": 53, "mixtur": [61, 63, 74, 78, 102, 167], "mixture_pdf": 53, "mj": 56, "mkdir": [58, 94], "mkdoc": 94, "ml": [60, 64, 66, 68, 73, 87, 93, 94, 96, 97, 99, 100, 106, 108, 110, 136, 158, 211, 212], "ml2": 53, "mlalgorithm": 73, "mle": [73, 74, 76], "mlflow": [104, 108], "mlop": [78, 93, 100], "mlp": [58, 72, 118, 120, 121], "mlr": 68, "mlxtend": 107, "mm": [76, 100, 114, 217], "mmbackward0": 114, "mml": 0, "mn": [56, 68, 80, 118], "mnist": [70, 73, 78, 96], "mnist_test": 77, "mnist_train": 77, "mnli": 121, "mn\u00b2": 68, "mobil": [93, 95, 97], "mock": 105, "mod": [56, 58], "modal": [48, 57], "mode": [9, 53, 58, 59, 61, 71, 78, 89, 94, 99, 100, 104, 107, 108, 109, 112, 113, 114, 116, 117, 119, 120, 121, 128, 144, 169, 170, 174, 175, 190, 207, 211, 217, 225, 238], "model": [0, 1, 7, 8, 11, 29, 32, 55, 56, 60, 62, 63, 67, 69, 71, 73, 76, 78, 80, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 112, 114, 115, 116, 117, 121, 122, 123, 124, 126, 128, 130, 136, 143, 146, 148, 150, 152, 155, 157, 159, 172, 173, 176, 179, 182, 184, 187, 202, 203, 204, 205, 210, 211, 212, 213, 216, 217, 218, 219, 226, 228], "model_a": 218, "model_artifact": 218, "model_artifacts_dir": [217, 219], "model_b": 218, "model_config": [58, 59, 119, 120], "model_config_dict": 217, "model_dump": [58, 59, 112, 120, 217, 238], "model_dump_json": [89, 91, 112], "model_field": [117, 238], "model_flop": 118, "model_init": 117, "model_json_schema": 238, "model_max_length": 120, "model_multi": 68, "model_nam": [217, 219, 238], "model_s": 59, "model_select": [54, 62, 69, 75, 76], "model_total_paramet": 118, "model_typ": [118, 228], "model_util": [120, 121], "model_valid": 58, "model_vers": 218, "model_wrap": 117, "modelconfig": [217, 219], "modeling_gpt2": 117, "modeling_output": 121, "modeling_util": 117, "models_equ": 218, "modeltyp": 228, "moder": [94, 101, 103], "modern": [55, 56, 57, 58, 59, 63, 77, 94, 96, 98, 99, 100, 109, 171, 203, 225], "modest": 77, "modif": [27, 66, 68, 117, 219, 222, 236], "modifi": [7, 11, 16, 17, 27, 30, 32, 44, 56, 57, 58, 61, 68, 90, 94, 98, 99, 115, 124, 143, 156, 170, 174, 213, 216, 221, 222, 228, 231, 236, 238], "modul": [2, 6, 56, 58, 59, 68, 69, 72, 77, 89, 90, 94, 102, 106, 112, 114, 117, 118, 119, 120, 121, 123, 190, 213, 214, 216, 218, 222, 226, 231], "modular": [118, 217, 219, 221, 234], "module1": 90, "module_nam": [59, 72, 119], "moduledict": [58, 59, 112, 114, 119, 120], "modulefil": 90, "modulelist": [58, 59, 72, 112, 114, 120], "modulenotfounderror": [53, 58, 59, 117], "modules_to_sav": 72, "moduleshelp": 90, "moduleutilsmixin": 117, "modulo": 126, "mohanda": 99, "mohri": [0, 66, 68, 87], "mojtaba": [0, 48], "momenet": [142, 165], "moment": [3, 59, 71, 78, 115, 118, 123, 144, 146, 154, 164, 174, 175, 198, 203, 209, 214], "momentum": [59, 115, 118, 123], "mondai": 150, "monei": [57, 63, 94, 98], "monetari": 95, "mongodb": [96, 97, 99], "monitor": [59, 78, 93, 96, 101, 104, 108, 109, 118, 119, 124, 216], "monitor_process": 216, "monkei": 29, "monolith": 48, "monoton": [7, 28, 58, 59, 68, 94, 123, 131, 173, 213], "monster": [28, 29], "mont": 53, "month": 174, "monthli": 101, "moon": 66, "more": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 27, 29, 30, 32, 36, 43, 44, 46, 47, 48, 50, 52, 53, 56, 57, 59, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 80, 82, 84, 85, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 133, 134, 137, 142, 143, 144, 146, 147, 155, 158, 159, 160, 163, 165, 167, 169, 172, 174, 176, 180, 183, 184, 185, 187, 190, 192, 195, 196, 198, 202, 203, 205, 206, 207, 208, 210, 211, 213, 216, 217, 219, 221, 222, 227, 228, 230, 231, 234, 239], "moreov": [11, 29, 53, 57, 66, 68, 77, 94, 101, 180, 191, 200, 213, 238], "mortar": 94, "mosaicml": [59, 118, 123, 218], "most": [8, 10, 11, 17, 19, 20, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 47, 48, 50, 53, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 76, 77, 79, 80, 82, 84, 87, 89, 94, 96, 97, 98, 101, 102, 103, 104, 106, 107, 109, 110, 116, 117, 118, 119, 123, 125, 126, 128, 130, 131, 136, 145, 148, 158, 170, 191, 208, 210, 211, 212, 217, 226, 231, 234, 237], "mostafa": 66, "mostli": [57, 58, 189, 231], "motiv": [29, 50, 53, 56, 58, 77, 95, 110, 126, 203, 211], "mount": [90, 99], "mountdir": 90, "mous": [56, 58, 87, 115], "mouth": 53, "move": [7, 11, 29, 30, 36, 47, 48, 53, 57, 58, 59, 66, 68, 76, 80, 82, 83, 89, 94, 99, 100, 101, 104, 106, 120, 123, 126, 170, 174, 213], "movement": [47, 82, 100], "movi": [57, 96, 98, 99, 109, 110, 119, 238], "mp": [56, 58, 89, 91], "mp4": 97, "mpare": 53, "mpatch": 76, "mpl": 53, "mpl_toolkit": [76, 127], "mplot3d": [76, 127], "mqan": 57, "mrc": 71, "mri": [96, 97], "mro": [2, 117], "mse": [69, 96, 103, 107], "msg": [58, 89, 124, 229], "mu": [0, 52, 54, 58, 61, 63, 64, 66, 73, 74, 76, 126, 127, 142, 156, 165, 170, 171, 178, 180, 188, 190, 191, 193, 195, 200, 201, 203, 206, 207, 210, 211], "mu_": [53, 58, 61, 74, 76, 201, 207], "mu_1": [53, 62, 74, 186, 188, 191, 211], "mu_2": [53, 62, 74, 186, 188, 191], "mu_3": 53, "mu_a": 76, "mu_c": 76, "mu_d": [127, 191, 211], "mu_g": 76, "mu_i": [127, 176, 178, 190], "mu_k": [53, 54, 62], "mu_n": 188, "mu_nk": 54, "mu_t": [56, 58], "mu_x": [127, 176, 178, 190], "much": [2, 9, 11, 27, 29, 30, 36, 53, 57, 58, 59, 65, 66, 68, 71, 72, 74, 76, 77, 80, 85, 87, 94, 95, 98, 99, 100, 102, 103, 104, 106, 110, 112, 115, 118, 119, 121, 123, 130, 144, 146, 155, 174, 176, 179, 180, 211, 213, 222, 228, 239], "mul": [113, 114, 235], "mulbackward0": 114, "multi": [11, 29, 48, 53, 59, 68, 71, 74, 76, 80, 84, 87, 90, 94, 97, 98, 109, 121, 123, 216, 217, 231], "multi_class": [72, 120], "multi_gpu_train": 90, "multi_instance_learn": 96, "multi_process_cpu": 231, "multi_thread_cpu": 231, "multi_thread_io": 231, "multiclass": [96, 124], "multicollinear": 101, "multidimension": 97, "multihead": [56, 58], "multiheadattent": 58, "multiheadedattent": [58, 59, 119, 120, 121], "multiheadedattentionconfig": [58, 59, 119, 120, 121], "multiheadselfattent": [112, 114], "multilabel": 96, "multilay": [56, 58], "multimedia": [96, 97, 98, 99], "multimod": [53, 54], "multinod": 90, "multinomi": [58, 76, 124], "multinoulli": 124, "multipl": [4, 8, 11, 17, 19, 29, 32, 43, 53, 54, 57, 58, 59, 61, 62, 63, 68, 69, 71, 74, 76, 77, 79, 80, 82, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 117, 119, 123, 136, 137, 146, 148, 192, 200, 211, 213, 214, 216, 217, 218, 219, 222, 225, 227, 231, 234, 236], "multipli": [13, 19, 29, 30, 43, 48, 50, 53, 56, 57, 58, 59, 68, 71, 74, 77, 79, 83, 85, 118, 124, 126, 128, 174, 193, 211, 217, 230, 235], "multiplicand": 74, "multiprocess": [7, 89, 91, 120, 231], "multirun": 217, "multitask": [0, 1, 55, 57, 100, 214], "multithread": [120, 214, 227], "multitud": [96, 219], "multivari": [53, 61, 74, 76, 78, 124, 127, 195, 197], "multivariate_norm": [53, 54, 76, 127, 178, 190], "multivariate_normal_pdf": 127, "multivariatenorm": 76, "murphi": [0, 52, 60, 61, 63, 67, 68, 73, 74, 94], "mus_new": 53, "muscat": [0, 84], "music": 96, "must": [2, 4, 5, 6, 7, 16, 25, 27, 29, 30, 32, 35, 36, 43, 47, 48, 50, 53, 56, 57, 58, 59, 61, 62, 68, 69, 71, 74, 77, 79, 80, 84, 87, 89, 91, 95, 96, 97, 98, 99, 104, 106, 109, 117, 118, 120, 123, 124, 126, 130, 131, 134, 136, 148, 169, 174, 180, 195, 200, 211, 217, 219, 221, 222, 226, 228, 229, 231, 238], "mustang": 97, "mutabl": [35, 78, 218, 232, 239], "mutablemap": 217, "mutablesequ": 7, "mutat": [7, 62, 72, 94, 227], "mutex": [214, 216, 231], "mutual": [96, 103, 109, 130, 158, 214], "mu\u00f1oz": [1, 10], "mv": 146, "mx": 68, "my": [6, 13, 35, 53, 58, 59, 66, 74, 75, 76, 90, 94, 100, 105, 118, 119, 120, 123, 126, 128, 130, 133, 143, 146, 156, 158, 174, 211, 218, 221, 225, 228], "my_covari": 75, "my_dict": 17, "my_estim": 75, "my_good_employe": 7, "my_jacobian": 124, "my_list": [7, 17, 236], "my_log_prob": 75, "my_manag": 7, "my_mean": 75, "my_pi": 75, "my_prob": 75, "my_softmax": 124, "my_softmax_output": 124, "my_softmax_prob": 124, "my_str": 34, "my_theta": 75, "myapp": 225, "myclass": 117, "mydataset": 213, "mydb": 225, "myestim": 8, "mylinearregress": 69, "mylist": 35, "mypi": [2, 3, 5, 6, 7, 8, 32, 58, 59, 229, 238], "myqueu": 36, "myself": 130, "myspecificvalid": 100, "mysql": [97, 98, 99], "mysteri": 102, "n": [0, 1, 4, 7, 11, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 32, 34, 35, 36, 37, 43, 44, 46, 47, 48, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 70, 71, 74, 75, 76, 77, 79, 80, 82, 83, 85, 87, 88, 89, 90, 96, 102, 103, 112, 117, 118, 119, 124, 126, 127, 130, 131, 132, 133, 134, 138, 141, 144, 146, 147, 148, 149, 155, 156, 158, 159, 162, 164, 170, 171, 173, 174, 178, 180, 183, 184, 186, 188, 189, 190, 191, 196, 198, 200, 203, 206, 207, 210, 213, 216, 217, 222, 229, 230, 231, 238, 239], "n1": [56, 80, 110, 118], "n2": [80, 90, 110, 118], "n3": 80, "n_": [53, 57, 58, 63, 77, 87], "n_0": [27, 29, 30], "n_1": [53, 74, 80], "n_2": [53, 74, 80], "n_3": [53, 74, 80], "n_8": 77, "n_class": 76, "n_cluster": [61, 62, 63], "n_col": 97, "n_compon": 53, "n_covid": 148, "n_digit": 62, "n_embd": 118, "n_featur": [54, 62, 69, 75, 76], "n_h": 211, "n_head": 118, "n_init": [53, 62, 63], "n_inner": 58, "n_j": 80, "n_k": [53, 61, 64, 74], "n_layer": [58, 118], "n_list": 207, "n_n": 80, "n_rang": 207, "n_ranges_grid": 207, "n_repeat": 148, "n_row": 97, "n_sampl": [53, 54, 61, 62, 69, 75], "n_size": [11, 17], "n_success": 148, "n_t": 211, "n_test": 107, "n_vocab": 58, "n_x": 77, "n_y": 77, "na": [48, 76], "nabla": [71, 74], "nabla_": [53, 57, 68, 124], "naiv": [6, 7, 30, 53, 78, 80, 84, 95, 96, 101, 102, 106, 113, 121, 130, 176, 211, 218], "naive_bay": 75, "naivebayesgaussian": 75, "naivebayesgaussianloglikelihood": 75, "nall": 216, "name": [2, 5, 7, 8, 11, 16, 17, 23, 26, 27, 30, 32, 36, 53, 54, 56, 57, 58, 59, 62, 63, 66, 68, 72, 75, 76, 78, 84, 89, 90, 94, 97, 98, 100, 102, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 128, 130, 137, 143, 203, 207, 211, 213, 216, 217, 222, 224, 226, 229, 238], "name_or_path": 120, "named_buff": 117, "named_children": [72, 117], "named_modul": [59, 72, 117], "named_paramet": [58, 59, 72, 112, 114, 117, 118, 119, 120], "namedtemporaryfil": [115, 225], "nameerror": 112, "namespac": [89, 91, 117], "nan": [62, 69, 76, 124], "nano": 90, "nanogpt": [59, 118], "narasimhan": [0, 1, 55, 57], "narr": [29, 133], "narrow": [5, 7, 8, 27, 29, 68, 94, 170], "narrowli": 57, "nasti": 66, "nat": [20, 90], "nat_id": 90, "natgatewai": 90, "natgatewayid": 90, "nathaniel": [52, 60, 61, 62, 66, 73, 203, 204], "nathanieldak": 67, "nation": [1, 5, 10], "nativ": [11, 22, 23, 36, 94, 98, 99, 111, 113, 116, 216, 231], "nativelayernormbackward0": 58, "natur": [0, 5, 7, 11, 29, 30, 32, 43, 44, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 71, 73, 74, 77, 79, 80, 82, 83, 84, 87, 91, 94, 96, 97, 99, 102, 106, 109, 110, 121, 123, 124, 138, 162, 213, 217, 238], "naughti": 238, "navi": [53, 174], "navig": [29, 32, 90, 94], "nbsp": 62, "nbviewer": 62, "ncall": [213, 230], "nccl": 89, "ncentroid": 63, "nclass": 117, "nclass_child": 117, "nclass_par": 117, "ncol": [53, 54, 58, 63, 83, 85], "ncompress": 63, "nd": [30, 61, 80, 118], "ndarrai": [6, 53, 54, 58, 62, 63, 69, 75, 76, 94, 97, 124, 127, 128, 143, 146, 148, 156, 159, 171, 174, 207], "ndcg": 95, "ndef": 117, "ndim": [58, 69], "ndraft": 48, "ne": 66, "neal": 53, "nearest": [29, 53, 61, 63, 64, 68, 84, 102, 109, 156], "nearli": [94, 98, 203, 213], "neat": [27, 58, 126, 225], "neatli": [32, 56, 98], "necess": [59, 79, 94, 123], "necessari": [2, 4, 11, 17, 29, 32, 56, 57, 59, 63, 68, 69, 71, 90, 94, 95, 96, 97, 99, 100, 101, 102, 106, 109, 110, 115, 127, 216, 219, 239], "necessarili": [5, 7, 16, 29, 59, 61, 66, 68, 80, 83, 87, 94, 96, 97, 99, 109, 119, 123, 130, 134, 137, 163, 173, 192, 195], "necessit": [9, 57, 58, 216], "neclueu": 58, "need": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 19, 20, 27, 29, 30, 32, 36, 43, 44, 46, 47, 50, 53, 55, 56, 57, 58, 59, 61, 64, 66, 70, 71, 72, 73, 74, 76, 77, 78, 80, 85, 87, 89, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 127, 130, 134, 136, 137, 146, 152, 155, 158, 159, 174, 180, 181, 183, 184, 188, 203, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 230, 231, 232, 237], "neerajkumarvaid": 128, "neg": [2, 4, 19, 29, 30, 43, 46, 48, 56, 57, 58, 63, 68, 71, 72, 74, 84, 85, 87, 95, 96, 103, 104, 114, 120, 128, 143, 144, 155, 163, 169, 170, 171, 174, 178, 180, 181, 190, 195, 203, 207], "negat": [7, 56, 57, 71], "negative_skew": 171, "negatively_scaled_vector": 83, "neglig": [36, 58, 239], "negoti": 48, "neighbor": [11, 61, 63, 64, 84, 101, 102, 109], "neighborhood": [58, 76], "neighbour": 61, "neighbourhood": 174, "neither": [7, 57, 58, 128, 203], "neo4j": 98, "neq": [7, 27, 30, 43, 44, 47, 51, 58, 59, 61, 66, 68, 74, 84, 110, 153, 176, 188, 191, 192], "ness": 66, "nest": [19, 58, 94, 97, 117, 219, 235], "nested_schema": 238, "net": [59, 89, 94], "netflix": [96, 109], "network": [0, 29, 55, 57, 59, 66, 71, 77, 84, 85, 94, 95, 96, 98, 102, 105, 106, 107, 118, 121, 123, 124, 216, 228], "networkinterfac": 90, "networkinterfaceid": 90, "neural": [0, 1, 55, 56, 57, 58, 59, 66, 70, 71, 84, 85, 95, 96, 98, 102, 105, 106, 107, 118, 121, 123, 124, 228], "neural_network": 228, "neuralnetwork": 228, "neuralnetworkstrategi": 228, "neuron": [71, 106, 217], "neutral": [72, 96, 120], "never": [3, 5, 29, 43, 58, 59, 61, 66, 68, 76, 77, 80, 84, 107, 109, 119, 131, 180], "nevertheless": [5, 57, 89, 198, 225], "new": [1, 2, 3, 5, 6, 7, 11, 17, 27, 29, 30, 34, 36, 43, 44, 46, 48, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 82, 83, 87, 90, 95, 96, 97, 98, 99, 100, 101, 104, 106, 108, 109, 110, 113, 117, 123, 124, 142, 146, 148, 159, 180, 182, 193, 194, 204, 207, 213, 214, 216, 217, 218, 222, 226, 227, 228, 229, 230, 231, 232, 236, 238], "new_empti": 114, "new_equ": 59, "new_list_of_int": 5, "new_list_of_str": 5, "new_stat": 218, "new_valu": 214, "new_zero": 114, "newaxi": [53, 54, 69], "newbin": 159, "newer": 94, "newli": [36, 72, 74, 108, 115, 117, 120, 121, 236, 237], "newton": [57, 124], "nexampl": 58, "next": [3, 6, 11, 16, 17, 22, 27, 30, 32, 35, 36, 43, 44, 46, 47, 53, 56, 57, 58, 59, 61, 63, 64, 68, 71, 72, 74, 76, 90, 91, 94, 96, 98, 99, 100, 101, 102, 104, 106, 109, 111, 112, 113, 118, 119, 120, 124, 125, 127, 130, 136, 162, 174, 180, 203, 211, 217, 218, 230, 231, 234], "next_token": 58, "nexti": 30, "nexu": 94, "nfrom": 117, "nfutur": 119, "ng": 87, "nh": 118, "ni": [139, 163], "ni_i": 66, "nice": [53, 66, 74, 109, 133, 136, 211], "nik": [0, 140, 141, 142, 168, 169, 170, 173, 174, 198, 200, 201, 203, 204, 206], "niki": 0, "nimport": 117, "ninstance_par": 117, "ninstruct": 229, "ninth": 59, "nitish": 0, "nj": 56, "nk": [53, 54, 62, 74], "nkd": [61, 74], "nl2sql": 71, "nlabel": 119, "nlargest": 48, "nleq": 7, "nllloss2dbackward0": 59, "nlllossbackward0": 59, "nloop_through_memb": 117, "nlp": [55, 57, 58, 63, 96], "nlu": 57, "nn": [56, 58, 59, 71, 72, 102, 112, 114, 115, 117, 118, 119, 120, 121, 123, 124, 217, 218, 226], "nnode": [59, 89, 90, 91, 119], "no_decai": 59, "no_grad": [58, 59, 72, 119, 120, 121], "no_type_hint": 117, "noam": [0, 59], "noam_lr_decai": 59, "nobel": 48, "node": [16, 27, 30, 32, 97, 98, 104, 115, 118, 217], "node_id": 113, "node_rank": [59, 89, 91, 119], "nodelist": 90, "nodes_arrai": 90, "noida": [73, 74], "nois": [66, 109, 176, 180], "noisi": [66, 176, 180], "nomin": [3, 4, 97], "non": [4, 7, 16, 27, 29, 43, 44, 46, 47, 48, 53, 56, 57, 58, 59, 60, 61, 62, 66, 71, 72, 76, 80, 84, 85, 87, 94, 95, 99, 102, 103, 104, 112, 113, 115, 117, 118, 119, 123, 130, 134, 136, 137, 140, 155, 158, 159, 160, 163, 166, 173, 192, 195, 203], "non_block": [58, 59], "non_default_trace_": 113, "non_ignore_count": 59, "nonc": 94, "none": [2, 3, 4, 5, 7, 8, 9, 11, 17, 22, 23, 27, 32, 34, 36, 37, 53, 54, 56, 58, 59, 62, 63, 66, 68, 69, 71, 72, 75, 76, 77, 85, 89, 90, 91, 94, 97, 100, 104, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 128, 143, 148, 171, 174, 211, 213, 214, 216, 217, 218, 219, 221, 222, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238], "nonempti": 61, "nonetheless": 57, "nonetyp": [117, 238], "nonlinear": 68, "nonnegativeint": 27, "nonzero": [192, 198], "noon": 155, "noqa": [9, 54, 58, 59, 69, 94, 112, 114, 117, 227, 234], "nor": [7, 57, 58, 59, 203], "noredirect": [69, 158], "norm": [53, 61, 68, 71, 72, 76, 78, 85, 86, 87, 102, 104, 106, 170, 178, 207], "norm_typ": [59, 119], "normal": [5, 36, 53, 57, 59, 61, 72, 75, 76, 77, 83, 84, 90, 94, 99, 101, 112, 114, 117, 120, 123, 127, 156, 171, 175, 180, 195, 207, 216, 217], "normal_": [58, 112, 113, 114, 119, 120], "normal_init_modul": [58, 112, 114, 120], "normalized_embed": 58, "normalized_shap": 58, "north": [30, 32], "nosql": [97, 99, 109], "nosuchprocess": 216, "not_an_email": 238, "not_fit": 69, "not_given": [9, 58, 59], "notabl": [5, 84, 102, 117], "notat": [4, 13, 16, 19, 29, 43, 50, 55, 57, 71, 76, 80, 82, 85, 92, 97, 118, 120, 123, 124, 126, 130, 137, 153, 158, 170, 180, 181, 188, 196, 211, 217], "note": [2, 3, 5, 6, 7, 8, 11, 17, 19, 22, 23, 26, 27, 29, 30, 32, 36, 46, 50, 51, 53, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 71, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 104, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 134, 136, 137, 140, 143, 144, 146, 148, 150, 156, 158, 159, 160, 167, 170, 173, 178, 180, 183, 184, 188, 190, 192, 195, 198, 206, 207, 211, 213, 216, 217, 218, 228, 231, 237, 238], "notebook": [0, 62, 80, 102, 117, 118, 119, 120, 121, 206], "noteworthi": 83, "notfittederror": 69, "notgiven": [58, 59], "noth": [57, 63, 68, 74, 76, 77, 125, 126, 159, 176, 180, 181, 211, 234], "notic": [5, 29, 30, 53, 56, 58, 61, 66, 68, 74, 76, 80, 84, 85, 94, 110, 117, 119, 124, 126, 130, 156, 163, 170, 174, 178, 180, 190, 195, 211, 216, 229], "notif": [94, 96, 100], "notifi": 100, "notimpl": [2, 227], "notimplementederror": [4, 58, 62], "notion": [2, 3, 57, 58, 66, 84, 88, 193], "notori": 57, "notwithstand": [57, 94, 130], "noun": 58, "nov": [0, 1, 55, 57], "novel": 2, "now": [2, 3, 4, 5, 6, 7, 8, 11, 17, 22, 23, 26, 27, 29, 30, 32, 36, 37, 44, 46, 48, 50, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 104, 106, 107, 109, 111, 112, 114, 115, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 136, 143, 146, 147, 148, 150, 158, 159, 166, 172, 174, 176, 180, 181, 186, 188, 190, 192, 195, 203, 207, 211, 212, 213, 217, 218, 221, 228, 229, 234, 236, 238, 239], "nowadai": 98, "nowher": 68, "np": [6, 53, 54, 56, 58, 61, 62, 63, 68, 69, 71, 72, 74, 75, 76, 82, 84, 94, 97, 104, 112, 118, 119, 120, 121, 124, 127, 128, 140, 143, 146, 147, 148, 155, 156, 159, 168, 169, 170, 171, 174, 178, 184, 190, 207, 211], "nparent": 216, "npoint": 53, "nproc": [89, 91], "nproc_per_nod": [59, 89, 90, 91, 119], "nprofil": 230, "npt": 97, "npy002": [54, 69], "nr": 130, "nrow": [53, 54, 58, 63, 83, 85], "nsfw": 96, "nspeed": 231, "nsubseteq": 58, "nswap": 228, "ntarget": 119, "ntask": 90, "ntry": 231, "nuanc": [2, 4, 29, 71, 83, 103], "null": [17, 68, 76, 94, 112, 217, 238], "nullcontext": [112, 114], "num": [5, 13, 19, 26, 27, 44, 46, 48, 59, 119, 128, 213, 216, 217, 234], "num_aloc": 128, "num_banana": 29, "num_batches_to_ev": [59, 119], "num_birthdai": 128, "num_bit": 63, "num_block": [112, 114], "num_class": [58, 62, 72, 75, 119, 120, 217, 219], "num_clust": [62, 63], "num_col": 77, "num_compon": [53, 54], "num_decoder_block": [58, 59, 118, 119, 120], "num_digit": 59, "num_embed": [58, 112, 114], "num_employe": 146, "num_epoch": [69, 120, 121, 217, 219], "num_exampl": 117, "num_experi": 124, "num_featur": [53, 54, 62, 75, 217], "num_gaussian": 53, "num_gpu": 118, "num_head": [58, 59, 112, 114, 118, 119], "num_it": 115, "num_iter": 231, "num_kei": 59, "num_label": [72, 119, 120, 121], "num_nod": 90, "num_paramet": 117, "num_peopl": 128, "num_point": 76, "num_possible_birthdai": 128, "num_proc": [72, 120], "num_process": 231, "num_queri": 59, "num_round": 107, "num_row": [77, 97, 120], "num_sampl": [53, 54, 58, 62, 75, 119, 124, 127, 190], "num_sim": 143, "num_simul": 128, "num_target_modul": 72, "num_task": 231, "num_thread": [214, 216, 231], "num_token": 117, "num_train_epoch": [72, 120], "num_training_step": [59, 121, 123], "num_trial": [128, 207], "num_unique_birthdai": 128, "num_warmup_step": [59, 121, 123], "num_work": [58, 59, 119, 213, 217, 219], "numalign": 118, "number": [2, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 22, 23, 29, 30, 32, 36, 43, 44, 46, 47, 48, 50, 53, 54, 56, 57, 58, 59, 60, 62, 64, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 90, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 109, 110, 112, 119, 120, 122, 123, 124, 126, 127, 128, 130, 132, 133, 137, 138, 143, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 162, 174, 176, 179, 180, 183, 184, 192, 196, 198, 202, 203, 205, 207, 209, 211, 213, 217, 218, 229, 230, 231, 233, 234, 236, 238], "numbersequ": 234, "numel": [58, 72, 118, 119], "numer": [2, 4, 11, 17, 27, 29, 30, 36, 47, 53, 54, 56, 57, 59, 66, 68, 71, 74, 75, 76, 77, 87, 94, 96, 97, 101, 102, 104, 113, 118, 125, 131, 136, 158, 159, 180, 181, 216, 222], "numeric_onli": 76, "numexpr": 30, "numpi": [6, 53, 54, 58, 59, 62, 63, 69, 71, 72, 75, 76, 77, 84, 85, 94, 97, 99, 104, 112, 114, 119, 120, 121, 124, 127, 128, 140, 143, 146, 148, 156, 159, 168, 169, 170, 171, 178, 190, 207, 211, 213], "numref": [36, 77], "nums_squared_gener": 213, "nums_squared_list_comprehens": 213, "nvdash": 48, "nverif": 48, "nvidia": [56, 57, 71, 89, 118], "ny": [60, 61, 68], "n\u00b2": 68, "n\u00b3": 68, "n\u00e9e": 16, "o": [11, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 32, 34, 35, 36, 37, 43, 44, 46, 47, 48, 53, 56, 58, 59, 61, 62, 63, 66, 68, 71, 74, 77, 80, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 118, 120, 121, 123, 128, 214, 225, 230, 239], "o200k_bas": 58, "o200k_harmoni": 58, "o_": [56, 58], "o_proj": 72, "o_t": 103, "oad": 99, "obei": [4, 56, 58, 59, 85, 104, 130, 174], "obj": [2, 3, 117], "object": [3, 4, 5, 6, 7, 8, 9, 17, 27, 35, 46, 47, 48, 50, 53, 56, 58, 59, 60, 63, 64, 66, 71, 76, 78, 80, 84, 85, 89, 94, 97, 98, 99, 100, 103, 106, 110, 117, 121, 130, 143, 148, 211, 213, 217, 218, 219, 221, 224, 225, 227, 228, 230, 231, 234, 236, 237, 238], "object_detect": 96, "object_new": 237, "objectdetectiontransform": 221, "oblivi": 94, "obscur": 94, "observ": [29, 51, 52, 53, 54, 56, 57, 59, 61, 63, 66, 68, 71, 74, 76, 77, 80, 87, 97, 100, 102, 115, 118, 123, 124, 130, 134, 136, 150, 155, 159, 163, 170, 174, 176, 180, 193, 207, 210, 211, 212, 216], "observe_tensor_cycl": 115, "obstacl": 48, "obtain": [16, 32, 53, 56, 57, 58, 61, 63, 66, 68, 71, 74, 80, 84, 85, 94, 96, 97, 99, 103, 117, 118, 140, 180, 191, 208, 211, 213, 222], "obtus": 85, "obviat": 57, "obviou": [7, 22, 23, 58, 59, 61, 76, 94, 99, 100, 130, 134, 158, 159, 193, 221], "obvious": [5, 58, 94, 130], "occasion": [29, 32], "occup": 94, "occupi": [11, 17, 27, 29, 30, 118], "occur": [2, 3, 5, 6, 16, 27, 29, 30, 32, 36, 57, 62, 68, 77, 85, 94, 100, 101, 103, 104, 106, 110, 115, 128, 130, 131, 132, 133, 150, 155, 156, 157, 174, 181, 191, 211, 231, 233], "occurr": [6, 17, 20, 44, 53, 77, 133, 155], "ocr": 96, "oct": [0, 1, 55, 57, 70, 71, 123], "ocw": 0, "od": 58, "odd": [58, 66], "odot": [53, 56, 58], "off": [2, 6, 11, 17, 18, 22, 29, 30, 32, 35, 36, 43, 48, 53, 54, 58, 59, 61, 62, 63, 66, 71, 72, 76, 84, 94, 95, 96, 98, 100, 102, 104, 112, 113, 114, 115, 118, 119, 124, 125, 174, 213, 219, 231], "offens": 96, "offer": [2, 4, 5, 6, 11, 29, 30, 57, 58, 66, 71, 80, 85, 94, 95, 97, 98, 100, 102, 106, 109, 120, 125, 211, 214, 216, 217], "offic": 155, "offici": 94, "offlin": [95, 102, 103, 104, 106, 107], "offset": [214, 231], "often": [3, 5, 9, 11, 16, 27, 29, 30, 32, 36, 43, 44, 46, 47, 48, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 76, 80, 82, 83, 84, 87, 88, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 109, 115, 117, 118, 123, 124, 126, 130, 136, 137, 143, 144, 147, 148, 159, 170, 181, 182, 188, 195, 202, 203, 204, 205, 211, 216, 219, 221, 226, 233, 236, 237], "oh": [56, 58, 120, 213], "ok": [143, 155, 158, 174, 211], "okai": [6, 58, 59, 126, 143], "ol": 68, "olap": 98, "old": [3, 11, 17, 53, 62, 80, 94, 104, 109, 174, 218], "old_centroid": 62, "older": [58, 108], "ols_paramet": 68, "oltp": 98, "om": 59, "omega": [16, 76, 124, 126, 143, 148, 159, 167, 176, 188, 198, 200], "omega_": [127, 181], "omega_i": [76, 178, 183], "omega_x": [178, 181], "omegaconf": [59, 217], "omit": [13, 19, 43, 58, 59, 76, 96, 120], "omnivault": [32, 36, 54, 59, 62, 63, 72, 75, 76, 77, 89, 91, 112, 114, 115, 119, 120, 121, 128, 143, 144, 146, 147, 148, 155, 156, 159, 168, 169, 170, 172, 174, 178, 190, 207, 211], "omnivers": [5, 59, 62, 72, 76, 111, 112, 113, 114, 115, 117, 119, 120, 121, 128, 144, 159, 169, 170, 174, 190, 207, 211, 216, 217, 230, 231], "omnixampl": [89, 91, 217, 222, 227], "on_trace_readi": [113, 114, 115], "on_valid_epoch_end": [59, 119], "onc": [2, 11, 13, 19, 26, 27, 29, 30, 36, 43, 44, 53, 56, 58, 61, 64, 68, 71, 74, 76, 91, 94, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 115, 117, 123, 137, 146, 158, 159, 213, 217, 226, 227, 230, 234, 236], "one": [2, 3, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 22, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 48, 50, 51, 53, 56, 57, 58, 59, 61, 63, 64, 66, 68, 69, 71, 72, 74, 75, 77, 80, 82, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 117, 118, 119, 120, 121, 123, 124, 125, 128, 130, 131, 132, 133, 136, 137, 138, 140, 143, 145, 148, 150, 155, 158, 159, 174, 176, 177, 178, 180, 181, 188, 191, 196, 203, 207, 211, 213, 214, 216, 217, 219, 221, 222, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238], "one_hot": 58, "ones": [36, 56, 58, 59, 61, 66, 68, 75, 94, 95, 96, 101, 106, 112, 114, 118, 119, 120, 121, 123, 146, 211, 228], "ones_": 58, "ones_lik": 174, "oneself": 174, "ong": [0, 49, 52, 53, 79, 80, 84], "ongo": [100, 106], "oniani": 73, "onli": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 43, 44, 46, 47, 48, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 112, 114, 117, 118, 122, 123, 124, 125, 126, 130, 132, 133, 136, 137, 141, 143, 144, 146, 147, 155, 158, 159, 164, 174, 176, 180, 181, 183, 188, 190, 192, 193, 195, 203, 210, 211, 213, 214, 216, 217, 218, 219, 222, 227, 228, 230, 231, 233, 234, 236], "onlin": [68, 70, 71, 80, 93, 95, 98, 121, 126, 194], "onto": [27, 32, 35, 36, 85, 188, 193], "onward": [47, 119, 158], "oom": 115, "op": [59, 89], "open": [7, 17, 35, 58, 59, 63, 71, 94, 96, 97, 98, 109, 110, 116, 117, 120, 126, 213, 225, 228, 238], "openai": [9, 29, 48, 56, 57, 58, 94, 213], "opencv": [97, 99], "opengl": 97, "oper": [2, 3, 4, 5, 6, 7, 8, 12, 13, 19, 20, 22, 23, 27, 29, 30, 34, 35, 37, 43, 46, 47, 48, 57, 59, 63, 66, 68, 69, 71, 72, 74, 79, 82, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 109, 112, 115, 116, 117, 123, 124, 192, 193, 211, 230, 231, 235, 236, 239], "operand": [5, 6, 8, 59], "operation": 101, "operatornam": [52, 53, 56, 57, 58, 61, 64, 66, 68, 71, 74, 85, 118, 167, 178, 180, 181, 186, 188, 190, 191, 192, 195, 200, 201, 203, 206, 207, 211], "oplu": [56, 58, 71, 79], "opportun": [48, 94, 95, 211], "oppos": [56, 94], "opposit": [7, 79, 83, 85, 97], "opt": [62, 72, 97, 100, 115, 117, 120, 121, 230, 231], "optic": 96, "optim": [0, 1, 16, 27, 29, 47, 49, 53, 55, 56, 58, 62, 63, 66, 68, 69, 71, 72, 74, 78, 80, 84, 89, 93, 94, 95, 96, 97, 98, 100, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 195, 216, 217, 218, 219, 226, 233], "optim_group": 59, "optima": [53, 61, 68], "optimal_beta": 69, "optimist": [101, 103, 106], "optimizer_config": 59, "optimizer_config_cl": [59, 119], "optimizer_nam": [217, 219], "optimizer_param": [217, 219], "optimizer_pydantic_config": [59, 119], "optimizer_registri": [59, 119], "optimizerconfig": [59, 217, 219], "optimum": [53, 61], "option": [9, 16, 54, 56, 58, 59, 62, 63, 68, 69, 71, 72, 75, 83, 89, 94, 95, 99, 115, 117, 118, 120, 121, 124, 128, 133, 143, 211, 213, 214, 217, 238], "optional_field": 117, "optuna": 117, "oracl": 99, "orang": [17, 53, 62, 76, 80, 143], "orchestr": [100, 110, 222], "ord": [20, 222], "order": [4, 5, 6, 7, 11, 13, 19, 20, 27, 29, 32, 35, 36, 43, 44, 47, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 75, 77, 78, 79, 82, 83, 84, 89, 91, 95, 96, 98, 99, 100, 110, 118, 128, 130, 142, 146, 160, 171, 174, 178, 198, 207, 213, 214, 230, 231, 238, 239], "ordered_label_count": 120, "ordereddict": [118, 120, 121], "ordin": [89, 97], "ordinari": [68, 85, 198], "org": [0, 22, 23, 48, 53, 62, 70, 71, 72, 92, 94, 114, 115, 118, 120, 121, 126, 193, 216, 234, 235], "organ": [17, 94, 95, 96, 97, 98, 99, 100, 108, 110, 219], "organiz": 97, "orient": [3, 4, 8, 80, 83, 85, 99, 193, 221], "origin": [3, 7, 9, 16, 20, 27, 29, 44, 48, 53, 54, 56, 57, 58, 59, 62, 63, 68, 71, 72, 74, 75, 76, 80, 82, 83, 84, 85, 94, 96, 100, 107, 110, 117, 118, 124, 155, 172, 180, 221, 228, 229, 230, 231, 238], "original_linear": 72, "original_s": 63, "original_shap": 63, "original_vector": 83, "orloff": [0, 174], "orthogon": [71, 80, 84, 85, 178, 192, 193], "orthonorm": 192, "oss": 94, "other": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 16, 20, 27, 29, 30, 32, 35, 36, 43, 44, 47, 48, 50, 51, 53, 56, 57, 58, 59, 62, 63, 64, 66, 68, 71, 74, 76, 77, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 123, 124, 126, 128, 130, 131, 132, 133, 143, 146, 153, 155, 158, 159, 170, 173, 174, 176, 178, 179, 180, 181, 184, 188, 190, 192, 200, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 225, 227, 228, 231, 234, 238, 239], "otherwis": [22, 23, 27, 29, 32, 35, 36, 47, 51, 53, 54, 56, 58, 59, 61, 62, 66, 74, 76, 82, 94, 100, 117, 123, 124, 142, 144, 166, 168, 169, 179, 181, 203, 211], "otim": [79, 85], "our": [2, 4, 5, 6, 7, 9, 11, 19, 27, 29, 30, 32, 36, 43, 44, 46, 50, 53, 56, 57, 58, 61, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 89, 91, 94, 95, 96, 97, 99, 100, 103, 106, 109, 110, 111, 113, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 130, 136, 137, 139, 140, 143, 146, 148, 150, 158, 159, 161, 170, 174, 180, 181, 184, 190, 203, 211, 213, 217, 218, 221, 222, 228, 231, 238], "ourself": 58, "ourselv": [53, 61, 66, 68, 74, 76, 84, 121, 124, 125, 126, 144, 174], "out": [2, 3, 5, 10, 11, 22, 32, 36, 52, 56, 57, 58, 59, 61, 63, 68, 72, 74, 76, 77, 87, 89, 94, 95, 96, 98, 99, 100, 101, 103, 106, 107, 108, 109, 112, 114, 115, 117, 118, 123, 124, 126, 133, 142, 143, 146, 148, 158, 159, 165, 172, 173, 174, 177, 180, 181, 184, 188, 190, 211, 213, 214, 217, 221, 234], "out_dim": 72, "out_featur": [58, 59, 71, 72, 112, 114, 119, 120], "outag": 98, "outbound": 57, "outcom": [4, 29, 44, 57, 58, 59, 66, 71, 74, 80, 83, 94, 95, 102, 103, 104, 124, 125, 126, 130, 131, 132, 133, 136, 137, 143, 144, 146, 147, 158, 159, 176, 180, 211, 231], "outcome_count": 124, "outdat": 109, "outer": [13, 30, 56, 57, 124, 188], "outer_": 124, "outlier": [68, 100, 101], "outliers_influ": 68, "outlin": [56, 80, 94, 95, 96, 100], "output": [4, 5, 19, 20, 27, 29, 30, 35, 36, 41, 46, 52, 53, 57, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 77, 87, 89, 90, 93, 94, 97, 98, 99, 100, 102, 103, 105, 108, 109, 113, 116, 118, 119, 120, 121, 173, 200, 210, 211, 213, 214, 216, 217, 231, 238, 239], "output_dir": [72, 117, 120, 217], "output_path": 59, "output_subdir": 217, "outset": 95, "outsid": [5, 27, 58, 72, 74, 94, 99, 101, 118, 213, 221], "over": [3, 11, 19, 22, 29, 30, 32, 35, 36, 47, 50, 51, 53, 56, 58, 59, 61, 62, 65, 66, 68, 71, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 118, 121, 123, 124, 126, 128, 131, 132, 133, 134, 141, 142, 144, 155, 158, 160, 163, 164, 165, 166, 168, 170, 174, 176, 180, 183, 192, 194, 207, 210, 211, 213, 216, 217, 228, 232, 234, 235, 238], "overal": [13, 19, 20, 30, 32, 36, 43, 46, 53, 58, 59, 61, 66, 74, 77, 84, 94, 95, 96, 97, 100, 103, 106, 119, 180, 192, 199, 203, 211, 216, 239], "overall_accuraci": 119, "overarch": [57, 96], "overbrac": [36, 53, 74, 76, 211], "overcom": [57, 59, 123, 213], "overdraft": 98, "overemphasi": 68, "overestim": [66, 68], "overfit": [56, 58, 68, 71, 74, 84, 96, 101, 105, 106, 107, 108, 203], "overflow": [19, 30, 31, 43, 57, 75, 94, 124], "overhead": [71, 89, 118, 216, 219, 230, 239], "overkil": [100, 117], "overlai": 190, "overlap": [8, 53, 57, 58, 66, 76, 97, 132, 134, 136, 203, 213], "overli": [36, 59, 77, 101, 106], "overlin": [56, 58], "overload": [7, 10, 58, 66, 68, 78, 94, 117, 120, 121, 234], "overlook": 30, "overnight": [95, 109], "overrid": [2, 9, 58, 59, 66, 94, 114, 118, 217], "overridden": 117, "override_dirnam": 217, "overset": [50, 51, 56, 58, 61, 66, 68, 71, 74, 87, 102, 106, 124, 127, 140, 141, 164, 178, 181, 188, 191, 211], "overshadow": 58, "oversight": 100, "overview": [53, 70, 78, 79, 94, 96, 97, 99, 100, 215], "overweight": 76, "overwhelm": [82, 94, 96, 130], "overwrit": [27, 35, 47], "overwrite_output_dir": [72, 120], "overwritten": [27, 44], "overwrot": 214, "ovr": [72, 120], "ow": [56, 57, 71], "own": [4, 6, 9, 11, 27, 32, 48, 53, 56, 58, 59, 63, 68, 71, 74, 76, 88, 94, 96, 98, 99, 100, 102, 105, 116, 117, 118, 120, 126, 213, 216, 217, 221, 228, 231, 235, 236], "owner": [90, 98], "ownership": 98, "ozan": [30, 31], "p": [0, 1, 4, 16, 29, 30, 41, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 87, 88, 102, 103, 110, 112, 113, 114, 118, 119, 120, 121, 123, 124, 126, 128, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 180, 181, 182, 183, 184, 186, 188, 191, 200, 203, 206, 207, 210, 211, 216, 229, 230, 231, 233, 238], "p1": [22, 32], "p100": [111, 118, 121], "p100_16gb": 118, "p2": [22, 32], "p50k_base": 58, "p50k_edit": 58, "p_": [53, 71, 77, 88, 110, 121, 176, 178, 181, 183, 200, 210], "p_0": 80, "p_1": [29, 61, 148], "p_2": [29, 61, 148], "p_3": 61, "p_aloc": 128, "p_hashmap": 41, "p_i": [121, 174, 211], "p_j": 61, "p_k": [52, 61], "p_n": [29, 148], "p_t": 121, "p_valu": 68, "p_visual": 58, "p_x": [176, 200], "p_xy": 77, "p_y": [77, 176, 183, 184, 186], "pac": [74, 204], "pace": 203, "pack": 174, "packag": [62, 72, 90, 94, 97, 100, 101, 106, 114, 115, 120, 121, 188, 207, 229, 230], "packet": [29, 94], "pad": [56, 58, 72, 117, 119, 120, 121], "pad_": 59, "pad_length": 121, "pad_numb": 59, "pad_sequ": 121, "pad_tensor": 121, "pad_token": [120, 121], "pad_token_id": [59, 72, 119, 120, 121], "padded_a": 59, "padded_b": 59, "padded_c": 59, "padding_mask": 119, "padding_masks_padded_and_expand": 59, "padding_sid": [72, 120, 121], "page": [5, 16, 27, 32, 57, 58, 62, 63, 66, 68, 74, 80, 94, 96, 97, 99, 101, 118, 124, 144, 178, 200, 211], "pageabl": 113, "pagin": 99, "pai": [53, 58, 66, 72, 94, 119, 219], "paid": 146, "pain": 98, "pair": [11, 13, 19, 35, 43, 47, 48, 50, 51, 58, 62, 66, 68, 71, 74, 79, 80, 84, 87, 97, 98, 118, 127, 176, 196, 211], "pairwis": [56, 58, 62], "palindrom": 47, "palm_flop": 118, "pan": [214, 229], "panda": [62, 76, 94, 97, 99, 112, 113, 115, 120, 121, 213], "paper": [55, 56, 58, 59, 71, 96, 97, 100, 103, 106, 112, 114, 119, 120, 123], "paperback": 98, "par": 71, "paradigm": [48, 97, 100, 119], "paradox": [10, 133], "paragraph": [66, 87, 94], "parallel": [30, 48, 56, 57, 59, 78, 80, 88, 92, 94, 99, 100, 108, 109, 117, 213, 217], "parallelclust": [78, 92], "paralleliz": 48, "param": [59, 72, 117, 118, 119, 170, 217], "param_a": 218, "param_b": 218, "param_dict": 59, "param_group": [59, 123], "param_str": 117, "paramet": [3, 6, 8, 9, 13, 19, 27, 29, 36, 50, 52, 54, 56, 58, 59, 62, 63, 66, 69, 72, 73, 75, 76, 77, 80, 84, 87, 89, 90, 94, 104, 106, 108, 112, 114, 115, 117, 119, 120, 121, 123, 124, 127, 128, 143, 144, 146, 147, 148, 150, 151, 155, 159, 160, 169, 170, 174, 178, 184, 190, 200, 201, 207, 211, 212, 217, 219, 221, 223, 226, 229], "parameter": [5, 6, 7, 27, 53, 57, 68, 124, 191, 211], "parameter_nam": [58, 59, 72, 112, 114, 119, 120], "parameters_a": 71, "parameters_b": 71, "parametr": [7, 53, 68, 71, 130, 159, 160, 211], "paramount": [57, 58, 94], "params_and_buffers_byt": 118, "params_byt": 118, "params_count": 118, "params_dict": 118, "paramspec": [69, 229, 238], "parent": [2, 4, 36, 53, 54, 58, 59, 62, 63, 75, 76, 77, 128, 143, 146, 148, 156, 159, 168, 169, 170, 178, 190, 207, 211, 216], "parent_class_attr": 117, "parent_dir": [76, 77, 146, 148, 156, 159, 168, 169, 170, 178, 190, 207, 211], "parent_instance_attr": 117, "parent_method": 117, "parent_pid": 216, "parent_sentinel": 231, "parentclass": 117, "parenthes": [33, 38, 78, 123], "pareto": 96, "parmar": [0, 1, 55, 57, 70, 71, 118], "parquet": [97, 98], "pars": [97, 99, 104, 225, 238], "parse_arg": [89, 91, 115], "parser": [89, 91, 115, 238], "part": [4, 5, 20, 27, 30, 36, 43, 46, 47, 53, 57, 58, 59, 61, 63, 66, 67, 68, 72, 76, 80, 85, 93, 94, 95, 98, 101, 106, 114, 115, 116, 118, 123, 125, 128, 136, 158, 159, 184, 210, 213, 218, 219, 221, 222, 238], "parti": [94, 97, 99], "partial": [53, 54, 57, 59, 61, 62, 68, 71, 74, 75, 94, 119, 123, 124, 211, 235], "particip": [88, 94], "particular": [5, 6, 27, 29, 30, 32, 46, 47, 57, 59, 61, 64, 66, 68, 71, 76, 77, 79, 82, 88, 94, 97, 99, 106, 118, 123, 124, 128, 130, 132, 136, 137, 139, 140, 146, 150, 166, 173, 174, 180, 181, 183, 185, 191, 211, 213, 221], "particulari": 7, "particularli": [2, 9, 11, 27, 30, 32, 47, 57, 58, 59, 68, 80, 83, 84, 85, 94, 98, 101, 103, 109, 118, 124, 200, 212, 213, 214, 216, 225, 227], "partit": [16, 48, 63, 66, 87, 90, 99, 100, 101, 134, 183], "parulpandei": 76, "pass": [2, 3, 5, 6, 7, 8, 9, 16, 27, 29, 30, 41, 44, 46, 47, 53, 54, 56, 57, 58, 59, 63, 68, 71, 72, 89, 94, 96, 97, 100, 109, 112, 114, 115, 117, 119, 120, 213, 217, 219, 221, 225, 226, 227, 228, 229, 234, 238], "passiv": [9, 57, 94], "password": [94, 225], "past": [30, 43, 57, 58, 68, 96, 98, 101, 109, 118], "past_key_valu": 72, "pasta": 229, "pastarecip": 229, "pastri": 80, "patch": [53, 76, 229], "path": [2, 27, 36, 54, 57, 59, 62, 63, 66, 75, 76, 77, 82, 83, 84, 90, 94, 96, 97, 98, 100, 128, 143, 146, 148, 156, 159, 168, 169, 170, 178, 190, 207, 211, 217, 219], "pathcollect": [54, 62, 75], "pathlib": [36, 54, 58, 59, 62, 63, 75, 76, 77, 128, 143, 146, 148, 156, 159, 168, 169, 170, 178, 190, 207, 211, 217, 219], "pathologist": 63, "pathwai": [44, 118], "patient": [80, 95, 96, 97, 98, 103, 106, 180, 211], "pattern": [0, 1, 2, 5, 8, 9, 28, 29, 30, 32, 44, 48, 52, 53, 56, 58, 59, 60, 61, 63, 67, 68, 71, 73, 74, 77, 78, 94, 95, 96, 98, 101, 109, 110, 115, 123, 124, 193, 194, 211, 213, 217, 218, 219, 221, 225, 226, 237], "paul": [68, 80, 126], "paus": [59, 76, 213], "payoff": 126, "pca": [61, 71, 101], "pcluster": 90, "pcm": 58, "pd": [62, 68, 76, 97, 112, 113, 115, 118, 120, 121], "pdb": 229, "pdf": [0, 53, 54, 68, 74, 75, 76, 78, 97, 112, 114, 120, 127, 162, 163, 164, 165, 167, 180, 183, 185, 186, 190, 196, 197, 200, 210], "pdf_1": 53, "pdf_2": 53, "pdf_merg": 53, "pdf_proba": 53, "pdf_reshap": 54, "pdf_valu": 127, "pdfjoint": 196, "pdfjointxi": 176, "pdfs_new": 53, "pdfs_new2": 53, "pdfs_origin": 53, "pdfs_updated_mean": 53, "pdfs_updated_pi": 53, "pdfs_updated_sigma": 53, "pdrop": [112, 114], "pe": 58, "peac": 103, "peak": [101, 108, 115, 118, 167], "peaki": 58, "pearson": [1, 55, 57, 73, 74], "pearsonr": 178, "peculiar": 29, "pedagog": [2, 53], "pedant": [27, 62, 84, 87, 96, 111, 119, 120, 162], "pedestrian": 96, "peek": 32, "peel": 29, "peft": 117, "peftadaptermixin": 117, "pem": 90, "penal": [59, 68, 84], "pengcheng": 0, "penguin": [73, 78], "penguins_bay": 76, "peopl": [2, 23, 26, 58, 59, 62, 66, 68, 85, 94, 98, 101, 109, 117, 118, 120, 124, 126, 128, 143, 146, 147, 148, 153, 158, 159, 185, 211, 219, 221, 223], "pep": [2, 3, 4, 5, 7, 8, 9, 10, 94, 213], "pep484": 6, "per": [27, 29, 32, 36, 48, 56, 59, 61, 62, 64, 76, 77, 88, 89, 90, 94, 97, 104, 106, 110, 112, 114, 119, 120, 137, 139, 150, 155, 159, 174], "per_clust": 62, "per_device_eval_batch_s": [72, 120], "per_device_train_batch_s": [72, 120], "percal": [213, 230], "percent": [103, 119, 136], "percentag": [68, 76, 95, 103, 108, 113, 118, 124], "percentil": 94, "percepton": 66, "perceptron": [56, 58, 70, 71], "percetpron": 66, "perf203": 234, "perf401": 117, "perfect": [62, 68, 69, 76, 94, 103], "perfectli": [59, 82, 87, 94, 178, 211], "perform": [2, 3, 4, 7, 11, 16, 17, 27, 29, 30, 32, 36, 48, 49, 50, 53, 54, 56, 57, 58, 59, 61, 63, 66, 69, 71, 72, 76, 77, 79, 83, 84, 85, 87, 88, 89, 90, 93, 94, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 116, 118, 128, 144, 146, 148, 169, 170, 174, 190, 193, 202, 203, 204, 205, 207, 208, 211, 216, 219, 221, 222, 228, 230, 231, 236, 239], "perform_bernoulli_tri": 148, "perform_kmeans_on_iri": 62, "perform_kmeans_on_mnist": 62, "perform_matrix_multipl": 111, "performancemod": 90, "perhap": [58, 94, 98, 106, 110, 113, 170, 218], "perimet": 4, "period": [29, 59, 91, 95, 101, 108, 109, 123, 150, 155, 156], "perk": 117, "permalink": 94, "perman": 98, "permiss": [4, 90, 97], "permit": [6, 8], "permut": [6, 56, 59, 62, 69, 78, 129, 211], "perp": 181, "perpendicular": 80, "perplex": 59, "persist": [58, 94, 102, 217, 236], "person": [22, 26, 68, 71, 74, 94, 95, 98, 99, 108, 109, 128, 143, 146, 147, 148, 158, 159, 181, 185, 216, 229, 238], "perspect": [2, 7, 58, 61, 63, 66, 68, 71, 82, 94, 158, 200], "pertain": [83, 102, 130], "pertub": 71, "perturb": [57, 66, 124], "pessimist": [36, 66], "pet": 238, "peter": [0, 49, 52, 53], "phase": [10, 57, 58, 59, 66, 96, 100, 101, 104], "phenomena": 77, "phenomenon": [48, 106, 207], "phew": 100, "phi": [48, 53, 56, 58, 66, 68, 71, 87, 170, 180], "phi_": 198, "phi_1": 68, "phi_2": 68, "phi_d": 68, "phi_i": 198, "phi_j": 87, "phi_k": [66, 68], "phi_m": 66, "phi_x": 198, "phillip": 0, "philosoph": 94, "phone": [97, 155, 238], "phone_numb": 238, "php": [143, 185], "phrase": [58, 61, 109, 146], "physic": [48, 76, 80, 88, 109], "physician": 180, "physicist": 68, "physiologi": 48, "pi": [4, 7, 52, 54, 56, 58, 59, 68, 74, 75, 76, 123, 124, 127, 128, 170, 176, 178, 180, 186, 191, 193, 198, 200, 210, 211], "pi_": [48, 74], "pi_1": [52, 53, 74], "pi_2": [53, 74], "pi_3": [53, 74], "pi_a": 76, "pi_c": 76, "pi_g": 76, "pi_i": 76, "pi_k": [52, 53, 74], "pick": [8, 56, 58, 66, 77, 119, 130, 158, 203, 213], "pickl": [114, 115, 231], "pictori": [176, 210], "pictur": [5, 66, 85, 94, 97, 98, 107, 211], "pid": [120, 216], "piec": [3, 6, 7, 17, 57, 66, 94, 109], "piecewis": 103, "pieter": 0, "pil": 63, "pile": 29, "pin": [58, 59, 123], "pin_memori": [58, 59, 119, 120], "pineappl": 98, "pink": 63, "pinpoint": 17, "pinv": 69, "pioneer": 55, "pip": [53, 72, 77, 90, 100, 104, 111, 112, 113, 114, 115, 119, 120, 121], "pipe": 216, "pipelin": [48, 78, 93, 97, 98, 99, 101, 105, 106, 108, 109, 217, 218, 219], "pipeline_dataop": 100, "pipeline_train": 100, "pis_new": 53, "pishro": [0, 140, 141, 142, 168, 169, 170, 173, 174, 198, 200, 201, 203, 204, 206], "pitfal": [94, 106, 233, 236], "pivot": [27, 48, 80, 83, 85], "pivot_index": 48, "pixel": [59, 63, 71, 77, 96, 97], "piyush01123": 73, "pkg": [94, 217], "place": [3, 5, 6, 7, 8, 11, 22, 27, 30, 32, 44, 47, 57, 61, 68, 74, 76, 83, 84, 89, 94, 95, 96, 104, 108, 117, 118, 174, 211, 213, 217, 221, 226, 228, 231, 238], "place_model_on_devic": 117, "placehold": [5, 25, 26, 37, 94, 158, 222], "placement": 90, "placementgroup": 90, "plagu": 57, "plai": [2, 7, 27, 30, 48, 53, 59, 83, 84, 85, 94, 95, 96, 98, 99, 104, 106, 109, 117, 123, 124, 126, 136, 158, 211], "plain": [99, 180], "plan": [2, 80, 96, 99, 101, 109], "plane": [4, 61, 66, 127, 176], "plant": 109, "plate": 98, "platform": [30, 94, 95, 96, 97, 98, 99, 100, 101, 115, 227], "platt": 103, "platykurt": 171, "plausibl": [48, 53], "playbook": [94, 117], "player": [29, 136], "pleas": [11, 29, 30, 58, 59, 62, 72, 89, 115, 119, 120, 146, 231], "plot": [11, 17, 54, 58, 59, 61, 62, 66, 68, 69, 75, 76, 77, 80, 82, 83, 84, 85, 103, 106, 110, 123, 126, 140, 143, 146, 148, 156, 158, 159, 168, 169, 170, 171, 172, 173, 174, 178, 180, 207, 211], "plot_acf": 68, "plot_assign": 53, "plot_bar": 76, "plot_bernoulli_pmf": 144, "plot_binomial_pmf": 147, "plot_centroid": 53, "plot_classifier_decision_boundari": 75, "plot_continuous_pdf_and_cdf": [168, 169, 170, 174], "plot_contour": [76, 127, 190], "plot_data": [53, 76], "plot_discrete_uniform_pmf": 160, "plot_distribut": 171, "plot_empirical_bernoulli": 144, "plot_empirical_binomi": 147, "plot_empirical_discrete_uniform": 160, "plot_empirical_pmf": 159, "plot_empirical_poisson": 155, "plot_gaussian_ellips": 53, "plot_gaussian_mixtur": 53, "plot_gmm": 53, "plot_gmm_approxim": 54, "plot_hist": 207, "plot_histogram": 174, "plot_joint": 76, "plot_kmean": 62, "plot_kmeans_clusters_and_elbow": 62, "plot_kwarg": 58, "plot_learning_r": [59, 123], "plot_margin": 76, "plot_naive_bayes_decision_boundari": 75, "plot_poisson_pmf": [155, 156], "plot_positional_encod": 58, "plot_scatt": [62, 76, 190], "plot_sigma_level": 53, "plot_sigma_vector": 53, "plot_sum_of_uniform_distribut": 172, "plot_surfac": [53, 76, 127, 190], "plot_true_pmf": [143, 159], "plotli": 127, "plotter": [82, 83, 84], "plotter3d": 83, "plotter_add": 83, "plotter_case1": 85, "plotter_case2": 85, "plotter_case3": 85, "plotter_case4": 85, "plotter_neg": 83, "plotter_po": 83, "plotter_sub": 83, "plt": [53, 54, 58, 59, 61, 62, 63, 68, 69, 75, 76, 77, 82, 83, 84, 85, 119, 123, 124, 127, 128, 140, 143, 144, 146, 147, 148, 155, 156, 159, 160, 168, 170, 171, 174, 178, 190, 207, 211], "plu": [3, 44, 58, 59, 66, 118], "plug": [2, 27, 66, 68, 74, 76, 114, 180, 191], "plugin": 72, "plumb": 94, "plus_idx": 59, "plvxoubpazmsnihp5cz37oopzx0jkynszn": [143, 146, 148], "pm": [66, 68, 83, 207], "pmatrix": 56, "pmf": [0, 53, 57, 58, 74, 76, 78, 146, 151, 153, 154, 158, 163, 196, 197, 200, 210], "pmfjointxi": 176, "pml": 53, "pn": 58, "png": [63, 97, 174], "po": [53, 58, 190], "poc": 219, "point": [2, 4, 5, 6, 27, 29, 30, 32, 43, 44, 46, 47, 50, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 74, 75, 76, 77, 82, 83, 84, 85, 87, 89, 91, 95, 96, 98, 99, 100, 102, 104, 106, 111, 117, 123, 124, 126, 127, 130, 142, 143, 155, 159, 163, 165, 167, 168, 180, 193, 203, 204, 207, 210, 211, 213, 216, 217, 222, 227, 228, 231, 233], "pointer": [11, 27, 40, 46, 58, 78, 213, 231], "pointpat": 114, "poison": 48, "poisson": [0, 78, 150, 154, 169, 184, 200], "poisson_distribut": 0, "police_dog": 4, "policedog": 4, "polici": [90, 94, 96, 97, 99, 109, 221], "policy_gradi": 96, "poll": 213, "pollut": 75, "polonium": 48, "polosukhin": [0, 1, 55, 57, 70, 71], "poly1d": 68, "poly3dcollect": 127, "polyfit": 68, "polygon": 61, "polymorph": [2, 3, 4, 5, 8, 217], "polynomi": [16, 66, 68, 101], "polytop": 61, "pool": [58, 78, 96, 119, 122, 217], "pooled_hidden_st": 120, "pooled_logit": 120, "pooler": [120, 121], "poor": [17, 57, 61, 62, 77, 90, 94, 97], "poorli": [57, 58, 94, 99], "pop": [7, 11, 22, 23, 26, 32, 34, 35, 37, 230], "pop1": 32, "pop_callback": 117, "popen_fork": 120, "popleft": 213, "popul": [58, 66, 68, 76, 94, 107, 141, 142, 143, 146, 147, 148, 153, 156, 158, 159, 164, 165, 174, 178, 182, 185, 203, 206, 207], "popular": [16, 30, 53, 61, 68, 77, 94, 96, 97, 98, 99, 103, 109, 110, 124, 213, 225], "port": 225, "portabl": 30, "portalock": 213, "portion": [30, 58, 59, 68, 97, 118, 124, 132, 207, 213], "pos_emb": [58, 59, 120], "pos_embed_visu": 58, "pos_label": [72, 120], "pose": [66, 90, 95, 126], "posit": [2, 3, 11, 16, 19, 27, 29, 30, 32, 43, 44, 46, 47, 53, 57, 59, 61, 62, 66, 68, 69, 72, 74, 76, 82, 84, 85, 95, 96, 103, 106, 109, 112, 114, 118, 119, 120, 123, 124, 126, 142, 143, 146, 148, 165, 171, 178, 180, 190, 198, 200, 211], "position": 56, "position_embed": [112, 114], "positional_embed": [58, 112, 114], "positionalembed": 58, "positionalencod": 58, "positionwisefeedforward": [58, 59, 112, 114, 119, 120, 121], "positionwisefeedforwardconfig": [58, 59, 119, 120, 121], "positionwiseffn": 58, "positive_skew": 171, "posix": [213, 230], "posixpath": [58, 117, 217], "possess": [2, 82, 85, 88], "possibl": [2, 4, 5, 6, 7, 11, 13, 17, 19, 23, 29, 30, 36, 43, 44, 46, 48, 53, 56, 57, 58, 59, 61, 62, 66, 68, 74, 76, 77, 79, 80, 87, 94, 96, 99, 103, 104, 106, 110, 111, 115, 123, 124, 126, 127, 128, 130, 131, 137, 139, 144, 146, 147, 158, 159, 176, 184, 204, 207, 208, 213, 221], "possibli": [2, 3, 5, 30, 66, 94], "post": [2, 4, 10, 30, 56, 57, 58, 59, 66, 68, 70, 89, 94, 96, 100, 108, 110, 112, 113, 114, 115, 116, 117, 118, 123, 126, 143, 156, 159, 217, 231, 237, 238], "post0": 77, "post1": 114, "post_attention_layernorm": 72, "post_init": 117, "postal": 238, "postal_cod": 238, "postcondit": 4, "poster": 96, "posterior": [54, 75, 76, 124], "posteriori": 53, "postgresql": [96, 97, 98, 99], "postprocess": 96, "potenti": [2, 3, 5, 6, 8, 11, 13, 17, 27, 29, 30, 36, 43, 57, 58, 59, 66, 68, 71, 76, 87, 94, 95, 96, 97, 98, 101, 102, 108, 109, 118, 123, 146, 213, 216, 230, 236], "potter": 98, "pour": 36, "pow": [58, 75, 113, 114], "powbackward0": 114, "power": [9, 11, 16, 29, 30, 32, 48, 57, 58, 59, 66, 68, 93, 94, 96, 98, 102, 106, 113, 118, 123, 199, 200, 203, 213, 216, 217, 223, 229], "powerset": 126, "pp": [1, 10, 55, 57, 70, 71, 74, 79, 124], "pprint": [5, 7, 11, 32, 36, 53, 54, 58, 59, 62, 63, 69, 72, 75, 89, 91, 112, 115, 117, 118, 119, 120, 121, 124, 213, 217, 218, 221, 225, 226, 229, 235, 237, 238], "pr": [58, 72, 94, 120, 181, 230], "pr_auc": [72, 120], "practic": [2, 4, 5, 7, 11, 13, 19, 30, 36, 49, 50, 53, 56, 57, 58, 59, 61, 66, 68, 70, 71, 76, 77, 79, 80, 85, 87, 88, 89, 96, 97, 98, 99, 101, 102, 103, 104, 106, 108, 115, 116, 123, 126, 136, 142, 165, 170, 202, 204, 205, 207, 211, 221, 233], "praction": 119, "practition": 116, "prai": 95, "praw": 99, "pre": [0, 1, 29, 59, 61, 71, 72, 78, 95, 96, 99, 101, 109, 119, 120, 123, 124, 214, 217, 238], "pre_head": 120, "pre_head_pool": 120, "precalcul": 58, "precalculu": 85, "preced": [57, 58, 59, 111], "precid": [56, 57, 71], "preciou": 100, "precis": [4, 8, 27, 29, 50, 53, 61, 63, 68, 72, 74, 75, 79, 85, 94, 95, 96, 103, 106, 107, 110, 113, 118, 120, 124, 146, 211, 213], "precision_recall_curv": [72, 120, 121], "precision_scor": [72, 120, 121], "precomput": 109, "precondit": 4, "precursor": 4, "pred": [62, 72, 77, 115, 120, 121], "pred_custom": 69, "pred_sklearn": 69, "predecessor": 35, "predefin": [56, 58, 94, 98, 106, 108], "predetermin": [58, 59, 94, 123], "predic": [4, 117], "predict": [3, 11, 30, 50, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 72, 75, 76, 77, 80, 87, 93, 94, 95, 101, 103, 104, 105, 106, 107, 108, 117, 119, 120, 121, 124, 179, 180, 210, 216, 222, 236], "predict_log_proba": 75, "predict_one_sampl": [74, 75], "predict_pdf": 75, "predict_proba": [53, 54, 75], "prediction_loop": 117, "prediction_step": 117, "predictor": [50, 74, 77, 143], "preemptiv": 94, "prefer": [94, 95, 96, 98, 102, 103, 110, 117, 130, 211, 216], "prefetch": 213, "prefix": [59, 113, 114, 115, 218, 238], "prefixitem": 238, "preimag": 126, "preliminari": [78, 94, 100, 101], "prematur": [29, 178], "premis": [29, 94, 97, 99], "prepar": [77, 78, 93, 94, 95, 96, 99, 105, 106, 221], "preparatori": 59, "prepare_inputs_for_gener": 117, "prepend": [90, 117], "preprint": [0, 1, 55, 57, 70, 71, 118, 121, 123, 124], "preprocess": [57, 99, 100, 101, 106, 109, 117, 238], "preprocess_funct": [72, 120, 121], "preprocess_id": 238, "preprocess_logits_for_metr": 117, "prescrib": 29, "presenc": [2, 7, 8, 17, 30, 58, 95, 96, 100, 109, 211], "present": [2, 9, 10, 11, 16, 17, 27, 29, 30, 44, 56, 57, 58, 59, 61, 62, 68, 76, 80, 94, 95, 96, 130, 237], "preserv": [5, 7, 27, 56, 58, 59, 78, 83, 109, 213, 239], "press": [0, 1, 49, 52, 53, 55, 57, 60, 61, 63, 66, 67, 68, 73, 74, 79, 80, 84, 87, 98, 123, 124, 146, 211], "pressur": [96, 97, 115], "presum": 3, "pretend": [56, 58, 68, 211], "pretrain": [57, 71, 96, 100, 217, 218, 219], "pretrainedmodel": [117, 120, 121], "pretrainedtoken": [120, 121], "pretrainedtokenizerbas": [117, 120, 121], "pretrainedtokenizerfast": [120, 121], "pretti": [5, 6, 36, 54, 58, 59, 62, 63, 68, 69, 71, 72, 75, 77, 89, 91, 102, 112, 115, 117, 118, 119, 120, 121, 124, 137, 217, 218, 221, 225, 226, 229, 235, 237, 238], "pretty_print": [59, 89, 119, 218], "prev_marginals_": 54, "preval": [48, 57, 95], "prevent": [4, 5, 6, 27, 48, 56, 58, 68, 75, 84, 94, 97, 101, 106, 109, 118, 120, 124, 214, 221, 222, 227, 231, 236], "previou": [2, 11, 23, 27, 29, 30, 46, 48, 53, 54, 56, 57, 58, 59, 61, 62, 64, 66, 68, 74, 76, 77, 80, 85, 90, 94, 96, 108, 109, 111, 119, 120, 126, 130, 133, 144, 146, 147, 148, 177, 189, 196, 201, 206, 210, 211, 213, 217], "previous": [4, 5, 13, 27, 46, 56, 57, 68, 76, 80, 84, 85, 94, 110, 126, 143, 170, 178, 211, 213], "price": [59, 66, 68, 87, 94, 96, 97, 98, 99], "priest": 58, "primal": 216, "primari": [2, 9, 20, 30, 32, 47, 48, 57, 61, 94, 98, 100, 101, 118, 216, 217], "primarili": [9, 13, 19, 29, 43, 56, 59, 74, 94, 106, 174, 216, 221], "prime": [56, 57, 58, 85, 94, 173, 176, 181], "primer": [57, 58], "primit": 213, "princeton": 90, "princip": [32, 61, 71, 101, 193, 211], "principl": [1, 2, 3, 7, 10, 27, 30, 32, 36, 49, 50, 61, 66, 74, 78, 85, 90, 94, 99, 100, 101, 106, 107, 110, 124, 136, 186, 203, 224, 228], "print": [2, 3, 4, 5, 7, 8, 9, 17, 20, 22, 23, 26, 32, 35, 36, 48, 53, 58, 59, 62, 63, 68, 69, 71, 72, 75, 76, 77, 82, 84, 89, 91, 94, 97, 111, 113, 114, 117, 118, 119, 121, 124, 127, 143, 146, 148, 159, 190, 207, 211, 213, 216, 218, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239], "print_iterable_using_for": 234, "print_iterable_using_next": 234, "print_recip": 229, "print_stat": 230, "println": [3, 5], "prior": [30, 52, 54, 57, 59, 66, 75, 94, 98, 124, 136, 146, 180, 211, 212], "prior_matrix": 54, "prior_vector": 54, "priori": [58, 61], "priorit": [30, 57, 95, 96, 102], "prioriti": [30, 94, 95], "privaci": [95, 97, 99, 109], "privat": [94, 99, 100, 117], "privateuse1_memory_usag": 113, "privateuse1_time_tot": 113, "privileg": 90, "prize": 48, "pro": [30, 94, 109], "prob": [58, 72, 75, 76, 112, 114, 120, 121, 124, 159, 180], "prob_fn": 76, "proba": 75, "probabilist": [0, 52, 53, 56, 58, 60, 61, 63, 67, 68, 73, 74, 110, 206], "probability_theori": [76, 144, 147, 155, 168, 169, 170, 172, 190, 207], "probabilitycours": [0, 143, 185], "probabilsit": [57, 58], "probabl": [0, 13, 19, 50, 51, 52, 53, 54, 56, 58, 59, 61, 63, 65, 66, 68, 71, 72, 73, 75, 76, 77, 87, 94, 96, 102, 103, 106, 109, 113, 117, 120, 121, 127, 128, 129, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 154, 155, 156, 158, 159, 160, 162, 164, 165, 167, 168, 169, 171, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 237], "probablist": [68, 74], "probe": [48, 181], "probit": 187, "problem": [0, 3, 7, 8, 13, 16, 27, 46, 47, 50, 51, 56, 57, 58, 59, 71, 74, 77, 78, 80, 89, 93, 98, 100, 101, 102, 103, 106, 107, 108, 110, 119, 123, 125, 126, 128, 130, 136, 143, 148, 159, 170, 172, 174, 180, 182, 195, 208, 210, 211, 213, 217], "problem_typ": [72, 120], "problemat": [6, 62, 68, 94, 230], "probml": [0, 53], "probml_util": 53, "proc": [90, 216], "proce": [2, 6, 27, 29, 36, 44, 57, 58, 59, 61, 63, 68, 74, 94, 95, 96, 143, 212, 213], "procedur": [16, 27, 29, 30, 53, 56, 66, 79, 100, 108, 110, 124, 203], "proceed": [66, 89, 90, 91, 102, 216], "process": [0, 1, 2, 4, 5, 6, 7, 9, 11, 17, 20, 27, 29, 30, 32, 35, 43, 44, 46, 47, 48, 55, 57, 59, 63, 66, 68, 70, 71, 73, 74, 76, 83, 84, 90, 91, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 117, 118, 123, 141, 142, 148, 150, 159, 168, 169, 170, 173, 174, 198, 200, 201, 203, 204, 206, 210, 213, 217, 218, 219, 222, 227, 230, 231, 238], "process_0": 89, "process_1": 89, "process_ceo": 7, "process_employe": 7, "process_id": [89, 91], "process_it": 216, "process_large_dataset_effici": 230, "process_large_dataset_ineffici": 230, "process_list": 216, "process_manag": 7, "process_misleading_pair": 5, "process_queri": 222, "process_schema": 238, "process_silent_error_pair": 5, "processcontext": 89, "processed_schema": 238, "processor": [29, 118, 216, 231], "procur": [57, 95], "prod": [74, 75, 77, 191], "prod_": [53, 56, 57, 68, 71, 74, 75, 76, 77, 127, 176, 188, 201, 211], "prod_i": 77, "produc": [7, 17, 48, 56, 57, 58, 59, 66, 68, 74, 80, 87, 104, 105, 108, 118, 121, 124, 213, 222, 235], "product": [3, 11, 20, 29, 48, 57, 59, 68, 71, 74, 78, 79, 83, 84, 86, 90, 93, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 118, 119, 124, 125, 136, 146, 176, 180, 188, 191, 199, 201, 211, 219], "product_id": 97, "production_lak": 100, "production_warehous": 100, "prof": [66, 113, 114, 115, 158], "profession": 94, "professor": [126, 137, 159, 169, 181, 211], "profil": [78, 90, 94, 111, 115, 230], "profile_funct": 230, "profile_kwarg": 114, "profile_memori": [114, 115], "profile_model": 112, "profile_one_step": 114, "profile_step": [112, 114], "profile_with_ev": 113, "profiler_config": 112, "profileract": [113, 114, 115], "profilerconfig": 112, "profilerstep": 113, "profilingresult": 112, "profit": [96, 146], "program": [2, 3, 4, 5, 6, 7, 9, 10, 11, 17, 19, 27, 32, 36, 58, 62, 78, 88, 94, 97, 98, 115, 117, 214, 221, 222, 231], "programm": [5, 11, 29, 213, 231, 233], "programmat": 58, "progress": [27, 30, 59, 90, 94, 95, 123, 231], "progress_bar": [54, 119], "prohibit": [29, 53, 71], "proj": [56, 85, 118], "project": [48, 53, 59, 71, 72, 78, 83, 84, 93, 95, 100, 101, 102, 103, 112, 114, 117, 118, 119, 120, 124, 127, 188, 190, 193, 218, 226], "project_nam": [217, 219], "projected_context_vector": [56, 112, 114], "prometheu": 94, "promin": 79, "promis": [53, 57, 68, 118], "promot": [59, 84, 94, 219, 225], "prompt": [29, 53, 57, 71, 170], "prone": [11, 100, 102, 217, 226], "pronounc": 124, "proof": [27, 30, 53, 58, 59, 60, 61, 64, 66, 68, 74, 80, 96, 124, 134, 139, 141, 144, 170, 174, 178, 183, 186, 191, 195, 200, 201, 203, 211], "proofsketch": 126, "proofwiki": 85, "prop": 170, "prop_cycl": 53, "propag": [27, 48, 58, 59, 94, 96, 119, 213], "propagate_args_to_deepspe": 117, "proper": [8, 58, 77, 97, 99, 120, 126], "properit": 79, "properli": [17, 94, 119, 223, 238], "properti": [2, 6, 9, 11, 17, 22, 23, 29, 30, 32, 43, 44, 53, 56, 57, 58, 59, 62, 63, 66, 67, 68, 71, 79, 83, 84, 87, 112, 114, 117, 124, 126, 150, 163, 165, 173, 175, 178, 184, 188, 191, 198, 199, 219, 228], "proport": [13, 19, 20, 30, 43, 61, 66, 68, 74, 76, 95, 103, 124, 127, 150, 155, 211], "proportion": [71, 84], "propos": [53, 56, 58, 66, 71, 98, 159, 210, 213], "proposit": [57, 131], "proprietari": 99, "propto": 74, "prose": 48, "protect": [94, 109, 117, 214], "protected_namespac": [217, 219], "proteom": 97, "protocol": [2, 3, 6, 78, 94, 109, 213, 228, 232], "prototyp": [63, 96, 109], "provdi": 58, "prove": [5, 27, 29, 30, 36, 43, 44, 53, 61, 66, 68, 76, 79, 95, 123, 124, 126, 143, 174, 183, 184, 201, 203, 208, 211], "proven": [26, 30, 44, 56, 57, 71, 76, 170], "provid": [2, 4, 5, 6, 8, 9, 10, 11, 16, 19, 27, 29, 30, 32, 36, 48, 53, 56, 57, 58, 59, 61, 63, 66, 68, 69, 70, 71, 77, 79, 80, 82, 84, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 115, 117, 118, 120, 123, 124, 180, 199, 200, 203, 204, 207, 211, 213, 216, 217, 219, 221, 222, 225, 226, 227, 230, 234, 235, 239], "provok": 130, "prowess": 58, "prudent": 17, "prune": [96, 102], "prune_head": 117, "pry": 116, "pseudo": [57, 58, 69, 71, 77, 96, 101, 104, 219], "pseudocod": 117, "psf": 94, "pspace": [131, 132, 133, 134, 141, 142, 143, 144, 148, 159, 164, 165, 166, 176, 183], "pstat": 230, "psu": [68, 173, 174, 177, 179, 182, 185, 194], "psutil": [72, 120, 121, 216], "psycopg2": 99, "pt": [72, 118, 120, 121], "pth": 217, "ptxcompil": 114, "pub": [99, 100], "public": [3, 5, 48, 90, 94, 97, 99], "publicdn": 90, "publicdnsnam": 90, "publish": [0, 22, 23, 58, 73, 74, 141, 142, 144, 147, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 198, 200, 201, 203, 204, 206, 211], "pull": [53, 94, 101, 104, 219], "pull_request": 94, "pun": [68, 76], "punctuat": [57, 58], "purchas": [96, 146, 184], "pure": [80, 100, 118], "purg": 112, "purge_global_scop": 112, "puriti": 60, "purity_per_clust": 62, "purity_scor": 62, "purpl": [56, 63], "purpos": [2, 6, 11, 17, 29, 32, 53, 56, 59, 61, 62, 63, 66, 68, 71, 80, 82, 89, 90, 94, 100, 106, 117, 118, 123, 130, 213, 227, 230], "push": [5, 22, 23, 27, 32, 34, 35, 37, 56, 66, 76, 78, 87, 93, 94, 100, 104, 219], "push1": 32, "push2": 32, "push3": 32, "push_to_hub": 117, "pushtohubmixin": 117, "put": [27, 50, 53, 59, 62, 63, 66, 68, 72, 74, 77, 90, 94, 99, 100, 113, 124, 127, 138, 158, 184, 216, 217, 234], "pval": 156, "pwd": 89, "px2_given_adeli": 76, "px2_given_chinstrap": 76, "px2_given_gentoo": 76, "px3_given_adeli": 76, "px3_given_chinstrap": 76, "px3_given_gentoo": 76, "py": [3, 6, 59, 61, 62, 69, 72, 77, 83, 84, 85, 89, 90, 91, 94, 100, 104, 115, 117, 120, 121, 128, 144, 169, 170, 174, 190, 207, 211, 213, 214, 216, 217, 218, 227, 228, 230, 231], "py38": 94, "pyarrow": 114, "pycqa": 94, "pydant": [6, 48, 58, 72, 78, 89, 100, 112, 114, 117, 118, 213, 218, 219, 220, 222, 225, 226, 232], "pydanticserializationerror": 238, "pyi": 8, "pyi034": [9, 58, 227], "pylint": [62, 75], "pymongo": 99, "pymysql": 99, "pyplot": [53, 54, 58, 59, 62, 63, 69, 75, 76, 77, 83, 119, 123, 124, 127, 128, 140, 143, 146, 148, 156, 159, 168, 170, 171, 178, 190, 207, 211], "pyproxim": 70, "pytest": 94, "pythagora": 84, "python": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 19, 20, 27, 30, 32, 36, 56, 58, 59, 61, 68, 71, 76, 78, 80, 89, 91, 98, 99, 100, 104, 114, 115, 120, 127, 128, 143, 170, 214, 215, 217, 222, 225, 226, 227, 228, 230, 233, 234, 235, 237, 238, 239], "python3": [62, 72, 90, 94, 100, 115, 117, 120, 121, 216, 230, 231], "python_fil": 94, "python_vers": 100, "pythonds3": [0, 22, 23], "pythonhashse": [58, 71, 104], "pythonmorsel": 234, "pythonpath": 89, "pytorch": [7, 56, 60, 61, 68, 70, 71, 72, 78, 88, 89, 90, 92, 94, 97, 104, 114, 115, 116, 117, 118, 120, 121, 124, 213, 216, 217, 219], "pytorch_jacobian": 124, "pytorch_softmax": 124, "pytorch_softmax_output": 124, "pytorch_softmax_prob": 124, "pyupgrad": 94, "pyvenv": 94, "q": [22, 23, 26, 53, 56, 58, 59, 61, 66, 68, 72, 74, 79, 94, 96, 111, 112, 113, 114, 115, 118, 119, 121, 126, 138, 192, 193, 233], "q0": 58, "q1": 48, "q2": 48, "q3": 48, "q4": 48, "q5": 48, "q_1": 58, "q_2": 58, "q_i": [58, 121], "q_learn": 96, "q_or_k_or_v": 58, "q_proj": 72, "q_t": 58, "qa": [94, 100], "qa_log": 48, "qa_pair": 48, "qizc1": [146, 148], "qkv": 72, "qkv_lora_weight_param": 72, "qq": 53, "qqplot": 68, "qquad": [74, 126, 147, 151, 155, 160, 168, 169, 170], "quad": [29, 30, 50, 51, 52, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 80, 82, 83, 85, 96, 118, 124, 127, 133, 137, 143, 144, 146, 148, 158, 171, 176, 181, 186, 188, 190, 191, 193, 195, 198, 200, 203, 206, 207, 211], "quadcontourset": 127, "quadrat": [13, 58, 68, 211], "qualifi": 2, "qualiti": [17, 48, 53, 57, 61, 63, 66, 93, 95, 96, 99, 100, 103, 108], "quality_loss": 96, "quality_predict": 96, "quantifi": [19, 29, 53, 58, 66, 68, 84, 85, 95, 96, 107, 118, 121, 179, 203, 204], "quantit": [85, 103], "quantiti": [53, 57, 61, 66, 68, 80, 87, 95, 100, 107, 118, 171], "quantiz": [29, 77, 96, 102], "queri": [17, 30, 48, 59, 71, 90, 96, 97, 98, 99, 100, 109, 112, 114, 117, 118, 119, 120, 216, 222], "query_embed": 222, "question": [0, 5, 12, 18, 25, 26, 29, 33, 39, 43, 44, 53, 57, 58, 59, 60, 61, 65, 68, 69, 70, 74, 76, 77, 78, 94, 95, 96, 97, 130, 136, 137, 143, 147, 148, 150, 159, 180, 181, 184, 188, 200, 203, 211, 217, 223, 230, 231, 234, 236], "question_answ": 96, "question_token": 59, "questionnair": 97, "queu": [22, 23, 111], "queue": [26, 33, 38, 78, 89, 90, 111, 213, 216], "queue_item": [22, 23], "queuelist": [22, 26], "quick": [11, 17, 20, 32, 66, 71, 94, 100, 101, 106], "quicker": 29, "quickli": [30, 62, 66, 72, 94, 96, 100, 102, 108, 109], "quicksort": 11, "quirk": [9, 56, 58, 71], "quit": [3, 8, 11, 13, 30, 35, 58, 59, 61, 63, 64, 66, 68, 76, 87, 89, 96, 107, 109, 117, 124, 143, 174, 213], "quiver_kwarg": 83, "quora": [30, 85], "quot": [3, 57, 58, 61, 68, 74, 89, 94, 98, 115, 132, 190, 228, 234], "quota": 90, "quotient": 124, "qwen": 72, "qwen1": 72, "qwen2decoderlay": 72, "qwen2forsequenceclassif": 72, "qwen2mlp": 72, "qwen2model": 72, "qwen2rmsnorm": 72, "qwen2rotaryembed": 72, "qwen2sdpaattent": 72, "qwen2token": 72, "r": [0, 1, 4, 7, 27, 29, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 90, 94, 96, 98, 100, 102, 103, 104, 106, 110, 121, 124, 126, 130, 137, 138, 140, 143, 146, 148, 150, 156, 159, 163, 164, 166, 167, 168, 178, 181, 182, 188, 190, 191, 192, 193, 195, 196, 198, 200, 203, 207, 211, 213, 222, 225, 229, 238], "r2_score": 69, "r50k_base": 58, "r_": [29, 53, 68, 87, 88], "r_0": 48, "r_1": [61, 80], "r_2": [61, 80], "r_3": [61, 80], "r_4": 80, "r_g": 88, "r_i": 80, "r_k": [53, 61, 87], "r_l": 88, "r_m": 80, "r_t": 29, "r_y": 87, "ra": 94, "rabbitmq": 97, "race": [44, 91, 214, 227], "rachel": 58, "rack": 94, "radam": [59, 123], "radar": 25, "radford": [0, 1, 55, 56, 57, 58, 71], "radiat": 48, "radic": 96, "radiu": 4, "radium": 48, "rag_system": 222, "ragsystem": 222, "rai": [96, 97, 117], "raileanu": [0, 48], "rain": [103, 130], "rais": [3, 4, 5, 6, 7, 8, 9, 22, 23, 32, 36, 48, 54, 58, 59, 62, 63, 69, 71, 72, 75, 89, 94, 96, 100, 111, 112, 113, 114, 115, 117, 128, 143, 199, 200, 211, 213, 217, 219, 221, 222, 226, 228, 229, 234, 238], "raise_error_if_seed_is_negative_or_outside_32_bit_unsigned_integ": 71, "raise_for_statu": 58, "rand": [58, 62, 68, 97, 103], "rand_lik": 115, "randint": [58, 59, 89, 112, 114, 119, 128, 211], "randn": [56, 58, 59, 68, 71, 111, 113, 115, 124, 213], "random": [0, 32, 50, 54, 57, 58, 59, 61, 62, 63, 69, 71, 74, 75, 76, 77, 78, 87, 90, 96, 97, 101, 102, 104, 106, 112, 114, 117, 124, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 177, 178, 179, 180, 181, 183, 184, 185, 190, 193, 194, 195, 196, 197, 198, 199, 204, 206, 207, 210, 211, 213, 228, 238], "random_attribut": 238, "random_forest": 228, "random_index": 58, "random_numb": 148, "random_sequ": 58, "random_sequence_decod": 58, "random_split": 59, "random_st": [53, 54, 62, 63, 69, 75, 76], "randomforest": 228, "randomforeststrategi": 228, "randomli": [53, 54, 56, 61, 64, 94, 106, 143, 146, 147, 148, 158, 159, 174], "rang": [2, 5, 11, 13, 17, 19, 27, 29, 30, 36, 41, 43, 44, 46, 47, 48, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 69, 71, 72, 75, 76, 77, 80, 85, 89, 90, 94, 96, 97, 98, 99, 100, 103, 106, 109, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 128, 137, 138, 146, 148, 150, 158, 159, 162, 199, 207, 211, 213, 214, 216, 217, 222, 230, 231, 234, 235, 239], "rangebound": 16, "rangeindex": 76, "rangl": 58, "rank": [0, 68, 72, 78, 97, 124, 127], "rapid": [17, 58], "rapidli": [57, 59, 102, 109, 123], "rare": [94, 95, 102, 106, 109, 126], "rarer": 196, "rarest": 76, "rariti": 95, "rasbt": 70, "raschka": [57, 58, 60, 61, 68, 70, 71], "rate": [0, 1, 29, 30, 48, 55, 57, 58, 69, 71, 77, 94, 95, 96, 99, 102, 103, 105, 106, 110, 118, 124, 146, 148, 155, 169, 174, 217], "rather": [2, 5, 6, 7, 8, 29, 30, 36, 48, 56, 57, 58, 59, 61, 66, 76, 77, 94, 95, 97, 98, 100, 103, 106, 109, 110, 123, 124, 174, 185, 213, 216, 219, 228], "ratic": 63, "ratio": [16, 17, 53, 58, 59, 62, 63, 68, 101, 123, 124, 130], "ration": [79, 126], "rational": [56, 57, 58, 96, 97, 100], "ravel": [53, 54, 76, 127, 190], "raw": [53, 58, 59, 76, 89, 96, 97, 98, 100, 101, 112, 121, 216, 238], "raw_": 100, "raw_dvc_metadata": 218, "raw_file_format": 218, "raw_file_s": 218, "raw_filepath": 218, "raw_table_nam": 100, "rceil": [29, 63], "rcount": 62, "rcparam": 53, "rcurl": 170, "rdgy": [58, 128], "rdzv": 89, "rdzv_backend": 90, "rdzv_endpoint": 90, "rdzv_id": 90, "re": [5, 6, 11, 13, 19, 27, 29, 36, 43, 44, 46, 52, 53, 58, 59, 62, 66, 68, 72, 74, 85, 94, 99, 101, 103, 106, 109, 118, 211, 213, 216, 218, 219, 222, 227, 234], "reach": [5, 26, 27, 29, 30, 43, 44, 46, 58, 59, 62, 85, 91, 94, 111, 123, 231], "react": [96, 105], "read": [0, 74, 90, 111, 119, 181], "read_csv": 68, "read_only_attr": 117, "readabl": [11, 54, 66, 75, 94, 97, 126, 217, 219, 230], "reader": [9, 10, 29, 53, 58, 71, 74, 85, 101, 124, 134, 136, 170, 180], "readi": [48, 53, 56, 61, 74, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110], "readili": [66, 96, 124], "readthedoc": [0, 7, 229, 238], "real": [8, 27, 29, 30, 58, 61, 63, 66, 67, 68, 71, 76, 78, 80, 82, 83, 84, 85, 87, 94, 95, 96, 97, 98, 99, 100, 103, 106, 108, 110, 113, 115, 117, 118, 123, 124, 126, 130, 137, 138, 143, 148, 149, 154, 158, 159, 163, 169, 174, 176, 192, 198, 213, 221, 238], "realis": [57, 101, 106, 146, 225], "realist": [95, 101, 106], "realiti": [27, 36, 53, 74, 76, 100, 130, 210], "realiz": [5, 30, 50, 53, 57, 61, 66, 68, 74, 83, 87, 94, 128, 143, 146, 148, 158, 168, 188, 211, 228], "realli": [2, 3, 5, 6, 7, 23, 27, 46, 53, 58, 62, 66, 68, 74, 76, 77, 94, 99, 101, 104, 106, 113, 146, 206, 207, 217, 227, 228], "realm": [74, 83, 84, 124, 211], "realpython": 216, "realvalu": 198, "rear": [23, 25, 36], "rearch": 102, "rearrang": [20, 50, 53, 66, 68, 80, 174, 193, 211], "reason": [3, 9, 27, 29, 30, 36, 48, 53, 57, 58, 59, 61, 66, 68, 71, 74, 76, 80, 83, 94, 95, 98, 100, 101, 102, 103, 110, 117, 118, 126, 146, 159, 193, 207, 211, 213, 217, 218, 230, 238, 239], "reassign": 94, "rebuilt": 97, "recal": [27, 29, 53, 56, 58, 59, 61, 63, 66, 68, 71, 72, 74, 75, 76, 94, 96, 98, 100, 103, 106, 107, 110, 113, 118, 119, 120, 124, 125, 126, 131, 133, 136, 137, 139, 144, 155, 158, 159, 174, 180, 181, 192, 203, 211], "recalcul": [61, 64], "recall_scor": [72, 120, 121], "recap": [5, 53, 66, 213], "receiv": [8, 27, 48, 57, 59, 68, 87, 94, 95, 96, 103, 109, 110, 117, 126, 150, 155, 180, 210, 211, 213, 238], "recenc": 96, "recent": [32, 57, 58, 59, 94, 104, 110, 117, 123, 226, 231], "recheck": 227, "recip": [105, 106, 113, 114, 116, 229], "recipe_cl": 229, "recipebook": 229, "reciproc": [16, 79, 124, 193], "reclaim": 115, "recogn": [2, 27, 29, 32, 50, 57, 61, 76, 77, 79, 82, 83, 94, 95, 96, 97, 99, 101, 109, 124, 134, 176, 182, 203], "recognit": [0, 1, 52, 53, 57, 60, 61, 63, 67, 68, 73, 74, 84, 95, 96, 109, 124, 193, 194], "recogniz": 29, "recombin": 16, "recommen": 109, "recommend": [29, 61, 66, 68, 71, 90, 94, 97, 98, 99, 100, 101, 109, 110, 112], "reconcil": [58, 68, 76], "reconstruct": 84, "reconstruct_imag": 63, "reconstructed_imag": 63, "recontruct": 61, "record": [27, 30, 95, 96, 97, 98, 99, 100, 104, 106, 113, 115], "record_funct": [114, 115], "record_memory_histori": 115, "record_shap": [114, 115], "recov": [52, 53, 57, 58, 61, 64, 68, 74, 76, 77, 84, 134, 174, 176, 180, 210, 217], "recoveri": 99, "recreat": 58, "rectangl": [30, 32, 66, 126, 174], "rectangular": [66, 76, 176], "rectifi": [56, 58], "recur": 27, "recurr": [16, 27, 55, 57, 58], "recurs": [16, 20, 29, 31, 72, 117, 229], "recursivebinarysearchexactmatch": 27, "recv_multipart": 213, "red": [53, 56, 62, 63, 66, 68, 74, 76, 80, 83, 84, 85, 127, 130, 137, 146, 171, 174, 190, 207], "reddit": [57, 70, 97, 99], "redef": 58, "redefin": [27, 29, 126, 188, 211], "redi": [97, 99, 225], "redirect": 94, "redo": 236, "redshift": [98, 99], "reduc": [0, 11, 13, 16, 17, 19, 27, 30, 47, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 76, 78, 89, 90, 93, 95, 96, 97, 98, 99, 101, 102, 109, 118, 123, 124, 132, 133, 136, 178, 181, 211, 216, 221, 230, 239], "reduceop": 89, "reduct": [48, 63, 68, 76, 84, 96, 101, 102, 118, 119, 121, 123, 231], "redund": [59, 71, 97, 98, 190], "reestim": 53, "ref": [110, 214, 231, 238], "refactor": [35, 221, 222, 223, 228, 230, 239], "refcount": 115, "refer": [10, 23, 35, 47, 50, 64, 66, 72, 76, 77, 87, 103, 125, 128, 146, 158, 191, 207], "referenc": [32, 58, 77, 170, 213], "refin": [27, 59, 93, 96, 100, 103, 123], "reflect": [7, 10, 30, 48, 53, 56, 59, 66, 76, 85, 95, 96, 99, 117, 118, 123, 124], "reformul": 124, "refrain": 19, "refram": [29, 80, 125, 136], "refresh": [63, 66, 74, 80, 100, 129, 158, 234], "refus": 94, "regard": [6, 59, 62, 94, 171, 200, 216], "regardless": [2, 7, 11, 13, 19, 27, 30, 36, 43, 48, 56, 57, 58, 59, 66, 76, 80, 83, 84, 104, 173, 227], "regex": 72, "regim": [16, 53, 57, 59, 123], "region": [63, 74, 87, 90, 108, 126], "regist": [72, 89, 108, 112, 114, 222, 226, 228, 229], "register_backward_hook": 117, "register_buff": [58, 112, 114, 117], "register_for_auto_class": 117, "register_forward_hook": 117, "register_forward_pre_hook": 117, "register_full_backward_hook": 117, "register_full_backward_pre_hook": 117, "register_load_state_dict_post_hook": 117, "register_modul": 117, "register_paramet": [58, 117], "register_scheduler_cl": 226, "register_state_dict_pre_hook": 117, "registeredschedul": 226, "registr": [98, 222], "registri": [5, 78, 93, 94, 100, 106, 217, 222, 224, 229], "regress": [50, 53, 55, 56, 59, 61, 66, 69, 73, 76, 78, 79, 87, 94, 96, 102, 106, 107, 108, 110, 124, 211, 228], "regression_diabet": 69, "regression_test": 69, "regul": [94, 97], "regular": [0, 1, 5, 16, 30, 55, 56, 57, 58, 59, 69, 84, 100, 101, 102, 107, 108, 109, 110, 112, 114], "regularli": [94, 99, 106, 110], "regulatori": [94, 99], "regurgit": 124, "rehash": 17, "reighn": 63, "reilli": [93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110], "reinforc": 96, "reiniti": [62, 94], "reinvent": 238, "reiter": [58, 74, 101], "reject": [3, 68, 94], "rel": [9, 11, 16, 27, 44, 50, 53, 57, 58, 59, 61, 62, 68, 74, 76, 77, 80, 85, 94, 95, 118, 121, 123, 124, 126, 143, 144, 174, 178, 181, 192, 211, 231], "relat": [2, 3, 4, 6, 7, 16, 19, 27, 29, 30, 47, 56, 57, 58, 59, 66, 68, 85, 94, 95, 97, 99, 100, 104, 109, 113, 120, 125, 126, 136, 176, 179, 211, 213, 221, 222, 223, 236], "relationship": [2, 3, 6, 7, 10, 16, 27, 29, 30, 32, 47, 56, 57, 58, 66, 68, 74, 80, 85, 87, 97, 98, 101, 102, 106, 110, 118, 123, 180, 191, 211, 216, 221], "relax": 30, "releas": [91, 214], "relev": [7, 27, 29, 30, 56, 58, 59, 71, 79, 90, 95, 96, 97, 100, 101, 103, 106, 108, 109, 110, 124, 221, 222], "reli": [2, 5, 7, 30, 54, 57, 58, 59, 79, 94, 98, 102, 106, 109, 118, 123, 216, 221, 229], "reliabl": [17, 59, 68, 79, 93, 94, 95, 98, 100, 103, 106, 108, 109, 110, 117], "religi": 58, "reload": 238, "relu": [56, 58, 119], "remain": [11, 13, 20, 27, 29, 30, 32, 36, 44, 46, 48, 53, 56, 58, 61, 66, 68, 80, 82, 83, 84, 88, 94, 98, 99, 100, 103, 106, 110, 123, 124, 133, 136, 180, 181, 211, 213, 216, 217, 221, 222], "remark": [48, 66, 77, 183, 203, 210], "remeb": 68, "remedi": 61, "rememb": [6, 46, 50, 59, 66, 68, 71, 74, 76, 84, 89, 90, 96, 101, 102, 103, 104, 106, 158, 203, 237], "remind": [61, 66, 68, 71, 74, 100, 143, 148, 200], "reminisc": 53, "remot": [90, 100, 104], "remov": [7, 11, 17, 22, 23, 29, 32, 36, 39, 40, 45, 58, 59, 68, 72, 74, 77, 78, 94, 99, 100, 101, 106, 117, 119, 120, 130, 222, 230, 236], "remove_callback": [59, 117], "remove_column": [72, 120], "remove_front": [23, 25], "remove_rear": [23, 25], "remove_special_token": 59, "removed_item": 32, "removedupl": 44, "renam": 76, "rename_column": [72, 120, 121], "renda": 70, "render": [48, 62, 68, 90, 221], "rendezv": 89, "rent": 98, "rental": 95, "reorder": 30, "reorgan": [20, 36], "rep": [1, 10], "repeat": [5, 11, 17, 26, 43, 44, 46, 53, 54, 56, 58, 59, 61, 66, 94, 106, 113, 114, 115, 123, 124, 128, 148, 159, 172, 190, 207, 211], "repeatedli": [11, 27, 29, 71, 104, 217], "repetit": 58, "rephras": [5, 61, 64, 66, 146, 150], "replac": [2, 4, 5, 6, 7, 16, 44, 56, 57, 58, 59, 61, 63, 64, 66, 68, 72, 74, 76, 79, 80, 90, 94, 106, 107, 108, 117, 119, 123, 124, 128, 140, 143, 148, 153, 159, 163, 192, 211, 222, 228, 230, 238], "repli": [130, 146], "replic": [58, 59, 89, 94, 97, 99, 207], "replica": [97, 100, 219], "repmat": 207, "repo": [58, 90, 94], "report": [66, 75, 90, 94, 96, 98, 99, 100, 103, 106, 118, 180, 211], "report_to": [72, 120], "reposit": [57, 58], "repositori": [9, 59, 80, 97, 98, 99, 100, 104, 114, 116, 228], "repr": 117, "repres": [2, 4, 5, 6, 7, 9, 13, 17, 19, 20, 27, 29, 30, 32, 36, 44, 46, 47, 48, 53, 56, 57, 58, 59, 62, 63, 66, 68, 71, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 89, 94, 96, 97, 98, 99, 100, 101, 103, 106, 109, 113, 118, 119, 123, 126, 127, 132, 134, 136, 143, 146, 158, 174, 176, 180, 183, 188, 193, 203, 207, 218], "represent": [2, 7, 11, 32, 36, 53, 61, 62, 63, 71, 74, 79, 80, 83, 96, 97, 98, 101, 102, 117, 118, 119, 120, 124, 126, 127, 133, 159, 211, 217], "reproduc": [53, 54, 62, 72, 75, 76, 89, 94, 100, 106, 110, 112, 114, 115, 120, 121, 128, 143, 144, 146, 148, 156, 159, 168, 169, 170, 171, 174, 190, 207, 211], "request": [48, 58, 63, 77, 94, 98, 99, 109, 110, 213, 216, 221, 231, 238], "requir": [2, 3, 4, 6, 7, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 32, 36, 43, 44, 46, 47, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 75, 77, 80, 84, 89, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 111, 114, 115, 117, 118, 123, 124, 127, 136, 195, 208, 211, 213, 216, 219, 221, 222, 230, 234, 238, 239], "required_field": 117, "requirements_dev": 100, "requires_grad": [58, 71, 72, 118, 124], "requires_grad_": 117, "rerout": 94, "rerun": [62, 117], "resampl": [57, 101, 102], "research": [0, 29, 57, 59, 94, 97, 102, 118, 141, 142, 168, 169, 170, 173, 174, 198, 200, 201, 203, 204, 206], "resembl": [66, 126], "reserv": [17, 27, 90], "reservoir": 101, "reset": [26, 62, 213, 218], "reset_index": 76, "reset_memory_hooks_st": 117, "reset_orig": 58, "reset_paramet": 58, "reshap": [53, 54, 58, 59, 62, 63, 68, 69, 76, 77, 100, 114, 127, 190], "resid": [27, 58, 61, 63, 68, 71, 74, 80, 82, 85, 94, 118], "resid_dropout": [56, 112, 114], "resid_pdrop": [112, 114], "residu": [57, 68, 69, 112, 114, 119, 120], "residualblock": 58, "resiz": [11, 17, 32, 217], "resize_": 114, "resize_position_embed": 117, "resize_token_embed": 117, "resnet": [57, 58, 59, 123], "resnet18": 217, "resnet50": [115, 217], "resnext": 58, "resolut": [53, 96], "resolv": [5, 6, 17, 36, 54, 57, 58, 59, 62, 63, 66, 75, 76, 77, 91, 94, 99, 114, 128, 143, 146, 148, 156, 159, 168, 169, 170, 178, 190, 207, 211, 217, 231], "resolve_field_typ": 238, "resolved_arg": 238, "reson": [95, 109], "resort": 29, "resourc": [11, 29, 66, 71, 80, 88, 91, 94, 95, 96, 98, 100, 101, 104, 106, 109, 110, 118, 127, 216, 221, 231], "respect": [4, 5, 20, 22, 23, 27, 29, 43, 47, 53, 56, 58, 59, 61, 66, 68, 71, 74, 76, 77, 79, 80, 84, 85, 87, 94, 99, 100, 117, 118, 119, 125, 127, 130, 136, 140, 144, 147, 158, 166, 170, 173, 174, 176, 178, 179, 180, 181, 183, 186, 188, 200, 201, 203, 211, 222], "respond": [9, 48, 94, 109, 124, 216], "respons": [9, 48, 54, 58, 59, 68, 74, 80, 89, 94, 96, 98, 99, 100, 109, 123, 124, 143, 191, 213, 216, 218, 221, 227, 228, 231, 238], "response_model": 48, "responsibilities_": 54, "rest": [29, 30, 56, 58, 61, 66, 69, 76, 90, 93, 94, 96, 97, 100, 118, 124, 130, 174, 217, 222], "restart": [0, 1, 59, 61, 114, 115, 123, 126], "restat": [66, 68, 188, 189], "restaur": [22, 32, 184], "restrict": [2, 5, 6, 32, 57, 58, 59, 68, 87, 96, 97, 99, 119, 126, 174, 181, 221], "restructur": 100, "result": [2, 3, 4, 5, 7, 8, 9, 11, 13, 16, 17, 20, 22, 23, 26, 27, 29, 30, 32, 36, 46, 48, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 75, 76, 77, 79, 80, 83, 84, 85, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 124, 126, 127, 128, 130, 131, 133, 141, 164, 184, 186, 189, 190, 191, 201, 203, 207, 208, 211, 213, 216, 221, 229, 230, 231, 233, 234, 235, 236, 238, 239], "result1": 6, "result2": 6, "result3": 6, "result4": 6, "result_typ": 113, "results_to_datafram": 112, "resum": [58, 59, 104, 213, 218], "resumpt": 104, "resurfac": 98, "ret": [62, 115], "retain": [56, 58, 71, 80, 95, 96, 235, 236], "retain_graph": 124, "retent": 109, "rethink": 6, "retrain": [71, 94, 96, 104, 106, 110], "retri": 100, "retriev": [11, 17, 27, 32, 48, 56, 58, 77, 94, 97, 98, 99, 104, 109, 214, 216, 219, 222, 226], "retrieve_modules_from_nam": 117, "retrieved_doc": 222, "retrieved_docu": 222, "retriever_typ": 222, "retrospecit": 98, "retrospect": 61, "return": [2, 3, 4, 5, 6, 8, 9, 11, 13, 17, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 41, 43, 44, 46, 47, 48, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 69, 71, 72, 75, 76, 77, 82, 84, 89, 90, 94, 96, 97, 98, 100, 104, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 127, 128, 143, 146, 148, 156, 159, 171, 188, 207, 211, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239], "return_annot": 117, "return_cent": 75, "return_count": 76, "return_invers": 62, "return_tensor": [72, 120, 121], "return_x_i": [62, 69, 75], "returntyp": 213, "reus": [3, 74, 100, 115, 117, 221, 225, 231, 233], "reusabl": 219, "rev": [94, 104], "rev_str": 34, "reveal": [5, 8, 29, 72, 85, 94], "reveal_loc": 5, "reveal_typ": [5, 8], "revenu": [95, 96], "revenue_per_successful_cal": 146, "revers": [3, 7, 11, 32, 33, 36, 38, 58, 59, 78, 83, 84, 98, 117, 221], "reverse_bettertransform": 117, "reverse_string_using_stack": 37, "reverse_transpose_qkv": 58, "reversed_str": 37, "reversedataset": 119, "revert": [94, 96, 100, 108, 217], "review": [55, 57, 94, 96, 98, 99, 109], "revis": [0, 1, 20, 48, 55, 57, 70, 71, 110, 123, 124], "revision_mad": 48, "revisit": [58, 72, 73, 82, 84, 85, 94, 101, 104, 139, 158, 219], "revolution": [30, 57], "revolv": 95, "rewon": 0, "rewrit": [53, 61, 66, 68, 71, 77], "rf": 100, "rfloor": [27, 29], "rgb": [63, 97], "rh": [66, 180], "rho": [178, 203, 207], "rho_1": 178, "rho_2": 178, "rho_3": 178, "rich": [5, 36, 54, 58, 59, 62, 63, 69, 72, 75, 76, 82, 84, 89, 91, 97, 100, 112, 115, 117, 119, 120, 121, 124, 143, 211, 213, 217, 218, 221, 225, 226, 229, 235, 237, 238], "rich_handler_config": [59, 119], "rich_traceback": [59, 119], "richard": 0, "richer": [58, 96], "richlogg": 59, "ride": [97, 98], "ridg": 84, "riemann": 126, "right": [4, 6, 11, 13, 16, 17, 19, 29, 30, 32, 36, 43, 46, 47, 48, 50, 52, 53, 56, 57, 58, 59, 61, 63, 64, 65, 66, 68, 71, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 95, 99, 100, 102, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 140, 167, 170, 171, 173, 174, 176, 178, 180, 181, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 203, 206, 207, 210, 211, 213], "right_index": 27, "rightarrow": [2, 4, 27, 29, 53, 56, 57, 58, 61, 63, 66, 68, 71, 74, 76, 84, 87, 102, 110, 120, 124, 159, 178, 181, 190, 192, 203, 206], "rightfulli": [6, 8, 119], "rightmost": [27, 63], "rigor": [27, 29, 30, 48, 57, 58, 68, 71, 80, 84, 85, 91, 99, 108, 124, 167, 203, 204, 211], "rigour": [59, 68, 106, 183], "ring": 98, "rippl": 222, "rise": [53, 55, 61, 68, 115, 124, 217], "risk": [7, 48, 51, 58, 65, 68, 78, 87, 90, 94, 95, 100, 106, 109, 117, 124, 216], "riski": 94, "riskier": 94, "river": [57, 58], "rivest": [0, 16], "rlock": 230, "rm": [85, 100], "rmns_1": [112, 114], "rmns_2": [112, 114], "rmse": [68, 94, 96, 103, 106, 107, 108, 110], "rmsnorm": [112, 114], "rng": [59, 71, 104, 117, 128, 148], "rng_seed": 59, "rnn": [57, 58, 59], "ro": [53, 114, 116, 156], "road": 58, "rob": 2, "robert": [0, 1, 60, 61, 67, 68, 73, 74, 118, 124], "roberta": [0, 48, 70], "robit": 2, "robot": [2, 3, 99], "robot_sound": 3, "robust": [3, 48, 94, 100, 105, 106, 107, 108, 219], "roc": [72, 103, 107, 108, 120], "roc_auc": [72, 120], "roc_auc_scor": [72, 120, 121], "roc_curv": [72, 120, 121], "rohrer": [57, 58], "roi": 146, "role": [30, 47, 48, 53, 66, 79, 83, 84, 85, 94, 95, 96, 99, 124, 222], "roll": [74, 94, 98, 108, 125, 126, 130, 133, 136, 158, 160, 172], "rollback": [94, 100, 108], "ronald": 0, "room": [11, 29, 61, 64, 68, 76, 80, 118], "root": [2, 10, 16, 27, 36, 54, 56, 58, 59, 62, 63, 68, 75, 77, 84, 90, 94, 103, 106, 107, 110, 118, 128, 142, 143, 211, 217, 227], "root_dir": [36, 54, 59, 62, 63, 75, 128, 143, 211], "rossum": [7, 10, 94], "rostamizadeh": [0, 66, 68, 87], "rotary_emb": 72, "rotat": [53, 82, 101, 190, 193], "rote": 130, "rotten": 99, "rough": [29, 66, 68, 71, 90, 124, 231, 237], "roughli": [4, 61, 62, 74, 77, 118], "round": [29, 53, 63, 68, 76, 77, 100, 107, 130, 207], "roundabout": 101, "rout": [66, 90, 94], "routet": 90, "routetableid": 90, "row": [11, 53, 54, 56, 58, 59, 62, 63, 68, 71, 74, 75, 76, 82, 87, 106, 107, 112, 113, 119, 124, 127, 148, 180, 207, 213], "row_ax": 58, "row_count": 213, "row_idx": 97, "row_limit": [113, 114], "row_v": 82, "rowl": 98, "rpar": [142, 150, 165, 166, 170], "rse": 68, "rset": [130, 137, 139, 140, 141, 142, 146, 148, 150, 155, 163, 172, 176], "rsq": [130, 137, 139, 140, 141, 142, 144, 146, 147, 148, 150, 151, 153, 155, 159, 163, 164, 165, 166, 168, 169, 170, 173, 174, 176, 188], "rss": 68, "rstride": 53, "rstrip": [120, 213], "rtol": [58, 62, 75, 124], "rubin": 203, "rude": 94, "rudimentari": [78, 80, 215], "ruff": [94, 235], "rule": [2, 5, 6, 29, 51, 56, 59, 61, 64, 68, 71, 73, 74, 76, 77, 79, 82, 85, 94, 95, 98, 99, 104, 109, 110, 124, 181, 182, 211, 221, 223], "run": [5, 6, 7, 9, 11, 13, 16, 17, 19, 29, 32, 35, 43, 48, 56, 58, 59, 61, 62, 63, 66, 68, 75, 88, 89, 91, 94, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 110, 111, 112, 115, 117, 118, 123, 124, 128, 146, 180, 207, 213, 217, 218, 219, 223, 230, 231, 234, 238], "run_classifi": 75, "run_cove_pipelin": 48, "run_effici": 230, "run_id": [217, 218], "run_ineffici": 230, "run_naive_bayes_sanity_check": 75, "run_profil": [112, 114], "run_resnet50": 115, "run_tasks_multi_process": 231, "run_tasks_multi_thread": 231, "run_tasks_single_thread": 231, "run_train": 219, "run_warmup": 114, "run_with_barri": 91, "run_with_no_barri": 91, "runeston": [0, 17, 18, 22, 23, 27, 30, 31, 32, 33], "runnabl": 62, "runner": [44, 76, 94, 100, 128, 144, 159, 169, 170, 174, 190, 207, 211], "runtim": [2, 3, 5, 6, 13, 16, 19, 43, 88, 115, 217, 221, 228, 238], "runtime_check": [2, 3], "runtimeerror": 111, "runtimewarn": [62, 120], "rush": 95, "rushter": 73, "russel": 10, "rust": 94, "rv": [50, 53, 54, 127, 143, 146, 156, 158, 170, 171, 178, 190, 207], "rv1": [156, 190], "rv2": 190, "rv3": 190, "rv_adeli": 76, "rv_bernoulli": 207, "rv_binomi": 207, "rv_chinstrap": 76, "rv_gentoo": 76, "rvert": [58, 127, 141, 160, 164, 170, 173, 191, 193], "s1": [36, 237], "s2": [36, 237], "s3": [90, 96, 97, 98, 99], "s_": 74, "s_1": [46, 47, 124, 130], "s_2": [46, 47, 124, 130], "s_i": [46, 47, 124], "s_j": [46, 47, 124], "s_k": 124, "s_n": [46, 47, 130], "s_x": [68, 176], "s_y": [68, 176], "saa": 99, "sacrif": [43, 126], "sacrific": 5, "saddl": 124, "safe": [5, 6, 7, 8, 30, 32, 66, 68, 96, 98, 216], "safe_incr": 216, "safe_load": [225, 238], "safe_transf": 231, "safeguard": [72, 214], "safer": 27, "safeti": [4, 5, 7, 10, 32, 58, 78, 89, 96, 109, 215], "sagemak": 109, "sai": [3, 4, 5, 6, 7, 11, 17, 22, 27, 29, 30, 36, 44, 50, 51, 53, 57, 58, 59, 61, 63, 64, 66, 68, 71, 72, 74, 76, 79, 82, 83, 84, 85, 88, 89, 91, 94, 96, 97, 99, 101, 103, 106, 109, 113, 118, 119, 120, 124, 126, 128, 130, 133, 136, 137, 144, 146, 147, 148, 151, 153, 155, 158, 159, 162, 168, 172, 173, 174, 176, 180, 181, 183, 184, 191, 203, 206, 207, 211, 213, 216, 223, 227, 229, 234, 235, 238], "said": [2, 20, 66, 68, 71, 102, 118, 124, 125, 128, 130, 133, 159, 166, 170, 188, 211], "sake": [6, 27, 30, 53, 57, 58, 59, 61, 80, 83, 85, 94, 100, 101, 123, 158], "salad": 229, "saladrecip": 229, "salari": 7, "salary_per_employe": 146, "sale": [68, 96, 179], "saliman": [0, 1, 55, 57], "same": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 35, 36, 43, 46, 50, 51, 53, 54, 56, 58, 59, 61, 62, 63, 66, 68, 71, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 91, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 113, 115, 117, 119, 124, 125, 126, 127, 128, 130, 131, 137, 143, 146, 148, 153, 155, 158, 159, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 186, 188, 190, 191, 193, 200, 206, 207, 208, 211, 214, 216, 217, 218, 219, 221, 227, 228, 231, 233, 234, 235, 236], "samir": 66, "sampel": 130, "sampl": [50, 52, 54, 56, 57, 61, 62, 64, 65, 68, 69, 71, 74, 75, 76, 78, 80, 87, 97, 100, 102, 103, 105, 106, 107, 117, 118, 119, 120, 125, 127, 128, 131, 132, 133, 134, 136, 137, 139, 141, 142, 144, 146, 147, 148, 150, 156, 158, 159, 164, 165, 166, 172, 174, 176, 181, 183, 188, 191, 196, 202, 203, 204, 205, 210, 211, 213, 216, 218], "sample_100": [148, 159], "sample_1000": 143, "sample_2_letters_without_replac": 128, "sample_500": [148, 159], "sample_5000": 143, "sample_900": [148, 159], "sample_9000": 143, "sample_averag": 207, "sample_data_schema": 97, "sample_index": [59, 62, 75], "sample_s": 53, "sampler": 97, "samples_1000": 156, "samples_10000": 156, "samples_5000": 156, "sampling_result": 124, "sandbox": [3, 89, 216], "saniti": [72, 76, 105, 217], "santoshk": 237, "satellit": 97, "satifi": 66, "satisfact": [94, 95, 101], "satisfactori": [94, 106], "satisfi": [16, 29, 30, 46, 47, 52, 53, 57, 59, 61, 66, 79, 80, 84, 94, 95, 98, 124, 130, 131, 137, 139, 140, 143, 155, 163, 166, 176, 230], "saturdai": 150, "sauc": 229, "save": [11, 17, 29, 54, 58, 63, 72, 77, 82, 83, 94, 95, 96, 97, 99, 100, 104, 109, 115, 117, 174, 213, 217, 218, 230], "save_best_onli": [59, 119], "save_dir": [59, 119], "save_every_epoch": [59, 119], "save_metr": 117, "save_model": 117, "save_path": [82, 83], "save_pretrain": 117, "save_snapshot": 218, "save_st": [59, 117], "save_step": [72, 120], "save_strategi": [72, 120], "save_total_limit": [72, 120], "savefig": [53, 63, 174], "saw": [66, 68, 71, 76, 119, 231], "sax": 16, "sbatch": 90, "sbatch_run": 90, "scalabl": [6, 57, 89, 93, 95, 97, 98, 100, 106, 108, 109], "scalar": [56, 58, 59, 61, 62, 66, 68, 69, 74, 77, 79, 82, 84, 124, 188, 191, 192], "scale": [13, 19, 20, 29, 30, 36, 43, 48, 53, 57, 59, 61, 66, 71, 72, 76, 77, 78, 79, 84, 85, 94, 96, 97, 98, 99, 100, 101, 102, 103, 109, 112, 114, 118, 119, 120, 121, 123, 169, 170, 178, 192, 207], "scale_1": 169, "scale_2": 169, "scaled_dot_product": 58, "scaled_logit": [58, 124], "scaled_prob": 124, "scaled_vari": 58, "scaled_vector": 83, "scaleddotproductattent": [58, 59, 112, 114, 119, 120, 121], "scaler_config": [59, 119], "scaling_factor": 58, "scan": [44, 47, 95, 96, 97, 98], "scarciti": 57, "scatter": [8, 53, 54, 58, 62, 68, 69, 76, 112, 127, 178, 190], "scatter_1": [62, 190], "scatter_2": [62, 190], "scatter_3": [62, 190], "scedast": 68, "scenario": [2, 3, 5, 6, 7, 9, 11, 13, 17, 19, 27, 29, 32, 36, 53, 56, 57, 59, 66, 68, 71, 76, 83, 88, 94, 96, 101, 102, 107, 108, 109, 121, 124, 130, 133, 146, 213, 214, 216, 221, 225, 231, 238], "scene": [32, 100], "schedul": [71, 90, 99, 100, 101, 113, 114, 115, 117, 119, 120, 121, 123, 216, 218, 219], "scheduler_cl": 226, "scheduler_config": 226, "scheduler_config_cl": [59, 119], "scheduler_cycl": [59, 123], "scheduler_non_cycl": [59, 123], "scheduler_pydantic_config": [59, 119], "scheduler_registri": [59, 119, 226], "schedulerconfig": 226, "schedulerregistri": 226, "schema": [2, 94, 97, 98, 99, 100, 109], "schemat": 126, "scheme": [2, 3, 53, 58, 59, 68, 100], "school": 181, "schwartz": 57, "sci": 238, "scienc": [0, 7, 10, 11, 17, 27, 29, 30, 32, 47, 57, 58, 68, 73, 74, 79, 93, 128, 139, 141, 142, 143, 144, 147, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 198, 199, 200, 201, 203, 204, 206, 211], "scientif": [48, 68, 97], "scientist": [48, 93, 94, 102, 104, 108, 146], "scikit": [53, 60, 61, 62, 66, 68, 73, 75, 102, 103, 106], "scipi": [53, 54, 72, 76, 120, 121, 127, 143, 146, 148, 156, 159, 168, 169, 170, 171, 178, 190, 207], "scontrol": 90, "scope": [19, 29, 36, 57, 58, 77, 78, 90, 93, 94, 95, 100, 102, 106, 112, 115, 117, 213, 229, 235], "score": [56, 59, 60, 69, 72, 75, 94, 95, 96, 102, 103, 106, 107, 108, 109, 110, 118, 119, 120, 121, 124], "score_sampl": 53, "scrape": [57, 97, 99], "scrapi": 99, "scratch": [55, 57, 58, 59, 62, 67, 69, 70, 73, 74, 88, 89, 112, 114, 119, 128], "script": [8, 75, 89, 94, 99, 100, 217, 221, 230], "script1": 216, "script2": 216, "scroll": 101, "scrum": 94, "scrutini": 66, "sdk": 99, "se": 68, "seaborn": [58, 59, 62, 76, 114, 119, 128, 174, 213], "seach": 27, "seamlessli": [2, 222], "search": [2, 4, 5, 11, 13, 16, 17, 19, 36, 43, 46, 47, 54, 59, 62, 63, 68, 75, 78, 84, 98, 104, 106, 109, 128, 143, 211, 216, 217, 222], "searchcontext": 27, "searchpath": 217, "season": 29, "sebastian": [57, 58, 60, 61, 68, 70, 71], "sec_maximum_likelihood": 77, "sec_softmax": 77, "sec_util": 77, "second": [5, 7, 8, 9, 11, 16, 19, 26, 27, 29, 32, 36, 43, 46, 53, 56, 57, 58, 59, 63, 66, 68, 71, 72, 75, 76, 79, 83, 89, 94, 95, 97, 102, 111, 113, 115, 117, 119, 120, 123, 124, 125, 126, 133, 136, 144, 180, 190, 200, 211, 213, 214, 216, 221, 230, 231, 234, 236], "second_el": 5, "second_row": 213, "secondari": [57, 94], "secondli": [59, 123, 124, 130, 137, 213], "secret": [90, 94], "secretli": 158, "section": [2, 3, 5, 7, 23, 27, 29, 52, 53, 56, 58, 59, 61, 63, 65, 66, 68, 69, 71, 73, 74, 76, 77, 80, 84, 85, 87, 94, 96, 97, 98, 99, 100, 104, 119, 123, 124, 127, 129, 130, 133, 135, 139, 145, 148, 149, 152, 155, 157, 158, 162, 174, 176, 178, 179, 180, 181, 183, 186, 187, 188, 189, 190, 194, 198, 201, 202, 203, 205, 206, 208, 210, 211, 217], "secur": [90, 94, 95, 97, 216], "see": [2, 5, 6, 7, 8, 13, 16, 27, 29, 30, 36, 43, 44, 46, 47, 48, 50, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 76, 77, 80, 82, 83, 84, 85, 87, 89, 90, 91, 95, 99, 100, 101, 102, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 153, 155, 158, 159, 162, 170, 171, 173, 174, 176, 178, 180, 181, 183, 188, 190, 191, 192, 193, 198, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 217, 219, 223, 227, 228, 229, 231, 234, 237, 238], "seed": [53, 54, 58, 59, 61, 62, 68, 69, 71, 72, 75, 89, 112, 114, 115, 117, 119, 120, 121, 128, 143, 144, 146, 148, 156, 159, 168, 169, 170, 171, 174, 190, 207, 211, 217, 219], "seed_al": [54, 58, 59, 62, 71, 72, 75, 89, 104, 112, 114, 115, 119, 120, 121, 128, 143, 146, 148, 156, 159, 168, 169, 170, 190, 207, 211], "seed_torch": [54, 58, 59, 62, 71, 72, 89, 104, 119, 120, 121], "seed_work": 71, "seek": [6, 27, 29, 43, 44, 48, 58, 61, 63, 64, 66, 68, 74, 87, 124, 143, 148, 211, 212], "seem": [5, 7, 46, 56, 57, 58, 59, 61, 66, 68, 74, 76, 77, 94, 96, 101, 106, 130, 137, 159, 174, 180, 190, 206, 214], "seemingli": [29, 36, 53], "seen": [11, 13, 19, 20, 27, 53, 56, 57, 58, 59, 61, 66, 68, 74, 76, 77, 80, 83, 96, 97, 106, 107, 118, 123, 164, 166, 170, 172, 174, 176, 183, 201, 210, 211, 219, 228, 229], "segment": [11, 48, 58, 60, 78, 82, 94, 95, 96, 108, 109, 203, 221], "segmented_imag": 63, "seldom": 57, "select": [53, 56, 58, 59, 66, 71, 75, 76, 77, 78, 84, 93, 95, 96, 97, 98, 99, 101, 104, 106, 107, 109, 110, 124, 126, 128, 130, 143, 146, 148, 150, 159, 213, 228], "selectbackward0": 58, "selected_gaussian": 53, "selector": 213, "selector_ev": 213, "selenium": 99, "self": [0, 2, 3, 4, 5, 6, 7, 8, 9, 13, 19, 20, 22, 23, 25, 26, 27, 29, 32, 34, 35, 36, 37, 41, 43, 44, 48, 53, 54, 55, 59, 62, 68, 69, 72, 74, 75, 89, 94, 96, 100, 102, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 213, 214, 218, 219, 221, 222, 226, 227, 228, 229, 231, 234, 236, 237, 238], "self_attn": 72, "self_cpu_memory_usag": 113, "self_cpu_time_tot": 113, "self_cuda_memory_usag": 113, "self_cuda_time_tot": [113, 114], "self_privateuse1_memory_usag": 113, "sell": 30, "semant": [2, 4, 5, 7, 9, 10, 57, 59, 79, 98, 222, 234], "semaphor": 216, "semest": 68, "semi": [56, 57, 96, 97, 98, 99, 101], "semilogx": 207, "semin": 3, "semisupervis": 53, "send": [66, 100, 109, 113], "send_multipart": 213, "sender": 94, "sendtyp": 213, "sens": [7, 8, 9, 13, 19, 29, 30, 32, 36, 53, 58, 59, 61, 62, 66, 68, 76, 83, 87, 89, 94, 109, 118, 119, 123, 124, 126, 130, 134, 146, 147, 158, 159, 174, 181, 196, 211, 217, 221, 234], "sensibl": [68, 74], "sensit": [58, 59, 61, 68, 84, 99, 102, 106, 123, 124], "sensor": [97, 109], "sent": [59, 100, 109, 176, 213], "sentenc": [48, 56, 57, 58, 59, 68, 71, 72, 84, 96, 119, 120, 121], "sentences_allagre": [72, 120, 121], "sentiment": [57, 73, 74, 95, 96, 99, 119], "sentiment_analysi": 96, "sentinel": [10, 78, 234], "seonc": 59, "seonyong": [57, 58], "sep": 30, "separ": [5, 48, 53, 56, 57, 58, 61, 63, 66, 68, 71, 74, 76, 94, 96, 98, 100, 102, 106, 107, 115, 119, 188, 211, 216, 218, 219, 221, 222, 228, 233], "seq": [59, 89, 234], "seq_len": [58, 59, 119, 120], "sequenc": [2, 6, 7, 8, 11, 20, 22, 23, 27, 29, 30, 32, 36, 46, 47, 57, 59, 61, 62, 63, 66, 70, 71, 78, 79, 83, 84, 85, 94, 95, 96, 97, 109, 112, 114, 118, 121, 122, 124, 126, 131, 143, 146, 148, 153, 169, 170, 174, 176, 190, 201, 211, 213, 216, 231, 234], "sequenceclassifieroutput": 121, "sequenti": [11, 27, 31, 32, 56, 57, 59, 119, 216], "sergei": 0, "seri": [10, 36, 48, 56, 58, 63, 68, 70, 80, 84, 85, 94, 97, 98, 99, 100, 101, 102, 105, 106, 116, 118, 119, 120, 126, 213, 223], "serial": [48, 58, 109, 217, 218, 238], "seriou": [66, 68, 94], "serp": 70, "serv": [4, 5, 10, 22, 29, 30, 32, 36, 54, 56, 57, 58, 59, 62, 63, 66, 75, 78, 84, 85, 93, 94, 95, 96, 100, 101, 102, 106, 108, 123, 128, 143, 211, 213, 219, 222, 228], "server": [9, 29, 94, 97, 98, 99, 109, 216], "servic": [29, 58, 73, 74, 94, 95, 99, 100, 108, 109, 110, 141, 142, 144, 147, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 198, 200, 201, 203, 204, 206, 211, 221, 223], "servicecount": 5, "session": [94, 99, 109, 216], "set": [5, 6, 7, 9, 10, 11, 22, 23, 26, 27, 29, 30, 32, 36, 46, 48, 49, 50, 53, 56, 57, 58, 59, 61, 62, 63, 68, 69, 71, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 93, 95, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 117, 123, 124, 126, 127, 128, 133, 137, 139, 140, 146, 150, 158, 160, 163, 172, 174, 176, 184, 190, 191, 192, 193, 200, 203, 204, 211, 213, 216, 217, 218, 219, 221, 225, 227, 232, 235, 236, 237, 238], "set_adapt": 117, "set_alpha": 53, "set_clip_box": 53, "set_debug_field": 58, "set_devic": [58, 89], "set_epoch": 117, "set_extra_st": 117, "set_facecolor": 128, "set_input_embed": 117, "set_output_embed": 117, "set_postfix": 217, "set_styl": 76, "set_table_attribut": 76, "set_them": [58, 62], "set_tick_param": 128, "set_titl": [53, 54, 58, 59, 62, 63, 76, 77, 82, 83, 84, 85, 123, 124, 140, 143, 159, 168, 174, 178, 207], "set_to_non": [114, 115], "set_torch_determinist": [54, 58, 59, 62, 71, 72, 89, 104, 119, 120, 121, 143, 146, 148, 156, 159], "set_train_valid_path": 58, "set_vis": 77, "set_xlabel": [53, 58, 59, 62, 76, 82, 83, 84, 85, 123, 124, 140, 143, 159, 168, 174, 190, 207, 211], "set_xlim": [82, 83, 84, 85, 168, 178, 190], "set_xtick": [58, 143, 159], "set_xticklabel": 143, "set_ylabel": [53, 58, 59, 62, 76, 82, 83, 84, 85, 123, 124, 140, 143, 159, 168, 174, 207, 211], "set_ylim": [58, 82, 83, 84, 85, 140, 168, 178, 190], "set_ytick": 58, "set_zlabel": 53, "set_zlim": 83, "setattr": 72, "setfit": 121, "setformatt": [120, 121], "setlevel": [115, 120, 121], "setosa": 75, "setter": [7, 94, 228], "settrac": 230, "setuo": 124, "setup": [50, 53, 58, 59, 78, 92, 94, 99, 100, 109, 118, 123, 210], "seven": 53, "sever": [6, 53, 57, 58, 66, 68, 83, 84, 87, 94, 96, 97, 98, 100, 103, 104, 106, 109, 211, 222], "sex": 76, "sgd": [57, 59, 69, 115, 123, 124, 226], "sgdr": [0, 1, 59, 123], "sgemm_128x128x8_nt_vec": 114, "sgemm_128x128x8_tn_vec": 114, "sh": [89, 90, 100], "sha256": 222, "shade": [132, 174], "shadow": [58, 108], "shai": 66, "shakespearedataset": 58, "shalev": 66, "shall": [4, 6, 53, 58, 63, 66, 84, 100, 124, 217, 234], "shap": 108, "shape": [29, 32, 53, 54, 56, 58, 59, 61, 62, 63, 66, 68, 69, 71, 72, 74, 75, 76, 77, 80, 82, 94, 97, 112, 114, 118, 119, 120, 123, 127, 130, 143, 146, 148, 171, 172, 190, 207], "shapiro": 68, "shapiro_test": 68, "shaplei": 108, "share": [2, 3, 8, 53, 58, 66, 89, 94, 96, 97, 98, 99, 101, 104, 108, 118, 223, 227, 231, 235, 237], "share_memori": 117, "sharedstorag": 90, "sharei": [53, 58, 63, 140, 144, 190], "sharex": [53, 58, 63, 140, 190], "sharp": [48, 124], "sharpen": 58, "sharper": 124, "sharpli": 115, "shatter": [48, 87], "shazeer": [0, 1, 55, 57, 70, 71, 118], "she": [29, 48, 98, 102, 109, 143, 174], "shea": [0, 143, 155, 156, 170], "shean": 0, "shebang": 94, "shehzaad": [0, 48], "shelf": [17, 18], "shen": [0, 70, 71], "sherlock": 98, "shift": [11, 27, 30, 32, 46, 48, 53, 56, 57, 58, 59, 68, 71, 98, 110, 119, 123, 124, 158, 170, 180, 211], "ship": 94, "shirish": 0, "shitft": 94, "shock": [94, 104], "shoe": 181, "shop": [30, 61, 109], "short": [3, 30, 57, 58, 61, 66, 123, 128, 142, 211], "shortcom": 110, "shorter": [58, 59], "shortest": [84, 98], "shorthand": [29, 53, 58, 68, 87, 137, 214], "shortli": [6, 58, 61, 66, 71, 89, 98, 100], "shot": 95, "should": [2, 3, 4, 5, 7, 8, 9, 11, 16, 17, 19, 27, 29, 30, 32, 35, 36, 43, 44, 47, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 75, 76, 77, 80, 87, 89, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 118, 119, 120, 121, 123, 126, 127, 128, 130, 132, 133, 134, 136, 137, 139, 143, 146, 148, 150, 155, 158, 159, 168, 172, 174, 179, 180, 181, 184, 200, 203, 208, 211, 213, 214, 219, 221, 222, 231, 238, 239], "shouldn": 221, "show": [4, 5, 8, 27, 29, 30, 36, 44, 53, 54, 56, 57, 58, 59, 61, 62, 64, 66, 68, 69, 71, 72, 74, 76, 79, 83, 85, 89, 90, 94, 96, 98, 101, 113, 115, 117, 119, 123, 124, 127, 128, 140, 144, 146, 147, 155, 156, 160, 166, 167, 168, 169, 170, 171, 174, 178, 180, 186, 190, 195, 198, 207, 210, 211, 213, 217, 228, 229, 231, 238], "show_attention_heatmap": [58, 59], "show_histogram": 171, "show_imag": 77, "show_label": 174, "show_level": [59, 119], "show_path": [59, 119], "show_result": 230, "show_special_token": 59, "show_tick": 83, "show_tim": [59, 119], "show_titl": [58, 59], "show_valu": 59, "show_ylabel": 53, "showcas": [57, 124, 238], "showindex": 118, "showlabel": 127, "shown": [4, 51, 53, 57, 59, 61, 66, 68, 76, 83, 88, 94, 95, 96, 98, 109, 124, 144, 168, 169, 170, 172, 174, 186, 193, 201, 211, 213, 217, 218], "shrink": [11, 17, 32, 46, 53, 58, 68, 76, 101, 150, 174], "shuf": 89, "shuffl": [59, 72, 98, 104, 119, 120, 121, 213, 217, 219], "shun": [11, 12, 17, 18], "shwartz": 66, "side": [4, 7, 53, 57, 61, 66, 68, 74, 76, 83, 84, 89, 96, 99, 118, 121, 133, 193, 211, 236], "sidestep": 32, "siek": 3, "siev": 94, "sig": 117, "sight": 180, "sigma": [52, 54, 56, 58, 61, 66, 68, 71, 74, 76, 112, 114, 124, 126, 127, 130, 142, 170, 171, 176, 178, 180, 186, 188, 190, 191, 193, 195, 200, 201, 203, 206, 207, 210, 211], "sigma1": 53, "sigma2": 53, "sigma3": 53, "sigma_": [53, 58, 74, 76, 191, 201, 207, 211], "sigma_1": [53, 74, 170, 178, 186, 191, 211], "sigma_2": [53, 74, 170, 178, 186], "sigma_3": [53, 170, 178], "sigma_4": 170, "sigma_5": 170, "sigma_a": 76, "sigma_c": 76, "sigma_d": [127, 191, 211], "sigma_g": 76, "sigma_k": [53, 54], "sigma_nk": 54, "sigma_square_hat": 68, "sigma_t": [56, 58], "sigma_z": [56, 58], "sigmaellipse2d": 53, "sigmas_new": 53, "sigmoid": [66, 124], "sign": [27, 29, 59, 63, 66, 68, 69, 74, 83, 84, 103, 118, 203], "signal": [8, 9, 44, 57, 58, 89, 96, 113, 180], "signatur": [2, 4, 5, 6, 7, 8, 78, 213, 234, 237], "signifi": [9, 13, 19, 27, 30, 36, 43, 54, 56, 57, 58, 59, 62, 63, 68, 75, 77, 82, 83, 84, 98, 100, 118, 128, 143, 174, 211, 222], "signific": [11, 17, 29, 30, 32, 48, 57, 59, 63, 68, 79, 83, 94, 95, 96, 97, 100, 101, 104, 106, 108, 109, 110, 118, 123, 213, 216, 230], "significand": 118, "significantli": [11, 17, 27, 30, 53, 57, 58, 62, 63, 66, 68, 95, 96, 97, 102, 103, 106, 117, 118, 180, 203, 213, 216], "sigopt": 117, "silent": [3, 5, 6, 94], "silhouett": 103, "silu": 72, "silver": [28, 29, 94], "sim": [4, 50, 51, 53, 56, 57, 58, 66, 68, 71, 74, 76, 87, 102, 106, 124, 144, 146, 147, 148, 150, 151, 153, 155, 159, 168, 169, 170, 172, 173, 180, 184, 186, 191, 206, 207, 211], "simiarli": 61, "similar": [2, 5, 7, 8, 11, 27, 30, 32, 53, 56, 57, 58, 59, 60, 62, 63, 66, 68, 71, 74, 76, 77, 80, 84, 85, 87, 94, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 118, 120, 123, 146, 163, 164, 165, 176, 178, 180, 183, 192, 198, 199, 211, 213, 216, 238, 239], "similarli": [5, 7, 29, 32, 43, 59, 68, 74, 76, 79, 82, 84, 85, 89, 94, 95, 97, 98, 124, 126, 150, 170, 173, 176, 180, 183, 188, 211], "simpl": [5, 8, 9, 17, 27, 30, 52, 56, 58, 61, 63, 66, 68, 71, 80, 85, 87, 89, 95, 96, 97, 98, 100, 101, 102, 104, 106, 108, 115, 117, 119, 123, 124, 125, 127, 128, 130, 143, 148, 159, 173, 174, 179, 185, 199, 203, 211, 213, 216, 217, 221, 222, 225, 226, 228, 229, 234], "simple_data_load": 213, "simple_leak": 115, "simplechunk": 222, "simpleembedd": 222, "simplelist": 8, "simplequeu": 89, "simpler": [4, 71, 94, 96, 97, 102, 107, 109, 126, 211, 216], "simpleretriev": 222, "simplest": [11, 29, 30, 96, 101, 196], "simpli": [4, 5, 8, 17, 20, 27, 29, 35, 36, 48, 50, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 76, 90, 94, 100, 103, 118, 119, 120, 123, 124, 126, 130, 137, 146, 148, 158, 159, 172, 174, 180, 182, 191, 207, 213, 221, 222], "simplic": [5, 6, 11, 30, 32, 47, 56, 57, 58, 59, 61, 66, 68, 71, 72, 74, 76, 89, 94, 97, 100, 118, 123, 124, 130, 173, 210, 211, 222], "simplif": [74, 94, 102, 188], "simplifi": [3, 11, 13, 19, 27, 29, 36, 43, 55, 56, 57, 58, 59, 66, 71, 74, 76, 77, 83, 88, 93, 94, 96, 100, 101, 102, 109, 124, 158, 167, 186, 187, 191, 193, 201, 203, 211, 213, 222], "simul": [36, 94, 100, 107, 128, 158, 213, 216, 231], "simulationrv": 158, "simultan": [53, 57, 58, 80, 91, 94, 103, 188, 191, 213, 227, 231], "sin": [53, 56, 58], "sinc": [3, 4, 6, 7, 11, 13, 19, 20, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 50, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 75, 76, 77, 80, 85, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 137, 140, 143, 146, 148, 150, 158, 159, 168, 169, 170, 172, 173, 174, 180, 181, 183, 184, 188, 190, 191, 192, 198, 203, 206, 207, 210, 211, 213, 214, 216, 217, 221, 227, 231, 234, 236, 238], "sine": 58, "sinfo": 90, "singapor": [0, 5, 49, 52, 53, 60, 61, 67, 68, 87, 174], "singl": [6, 11, 13, 16, 17, 19, 20, 27, 29, 32, 36, 43, 46, 47, 48, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 71, 74, 75, 77, 78, 80, 82, 84, 85, 87, 88, 89, 94, 96, 97, 98, 100, 102, 103, 104, 106, 108, 109, 117, 119, 120, 123, 124, 130, 131, 143, 144, 146, 147, 158, 159, 176, 184, 188, 197, 211, 213, 214, 217, 221, 223, 227, 228, 231], "single_item_test": 221, "single_item_train": 221, "single_label_classif": [72, 120], "single_thread_cpu": 231, "single_thread_io": 231, "single_word": 120, "singleton": [9, 78, 137, 224], "singular": [57, 69, 71], "sinusoid": [56, 58], "siri": 109, "sit": 94, "site": [57, 61, 62, 72, 94, 95, 96, 99, 109, 115, 120, 121, 230], "situat": [9, 11, 17, 27, 29, 30, 53, 59, 66, 80, 85, 94, 109, 110, 123, 124, 155, 180, 211], "six": [32, 43, 66, 74, 174], "sizabl": [2, 17], "size": [2, 13, 16, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 36, 43, 44, 53, 56, 57, 59, 61, 62, 66, 68, 71, 72, 74, 76, 77, 80, 83, 84, 85, 87, 95, 96, 97, 99, 102, 104, 106, 107, 110, 112, 114, 115, 117, 119, 120, 121, 124, 126, 127, 128, 130, 141, 143, 144, 146, 147, 148, 156, 158, 159, 164, 170, 171, 174, 176, 181, 190, 206, 207, 211, 213], "size_averag": 119, "sk_contingency_matrix_": 62, "sk_covari": 75, "sk_estim": 75, "sk_gnb": 75, "sk_kmean": 62, "sk_log_prob": 75, "sk_pi": 75, "sk_prob": 75, "sk_theta": 75, "sk_y_pr": 62, "skeptic": 48, "skeptic_quest": 48, "skepticquest": 48, "sketch": 76, "skew": [29, 48, 68, 78, 94, 97, 101, 115, 175], "skew_data": 171, "skew_label": 171, "skim": 10, "skimag": 63, "skip": [47, 56, 58, 69, 80, 94, 113, 117, 201], "skip_special_token": 120, "sklearn": [54, 62, 63, 68, 69, 72, 75, 76, 120, 121], "sklearn_estim": 75, "sla": [29, 108], "slack": [66, 216], "slant": 190, "sleep": [90, 96, 216, 231], "sleep_tim": 216, "slice": [7, 8, 11, 53, 56, 58, 59, 62, 76, 120, 127, 221], "slice_items_test": 221, "slice_items_train": 221, "slid": 46, "slide": [40, 47, 78], "slighli": 53, "slight": [27, 56, 57, 68, 123], "slightli": [53, 58, 66, 68, 71, 75, 76, 77, 94, 104, 123, 155, 159, 207, 239], "slim": 100, "slip": 5, "slope": [59, 66, 68, 80, 123, 190], "slot": [11, 17, 22, 117], "slow": [11, 29, 44, 47, 57, 61, 63, 94, 97, 98, 124], "slower": [11, 17, 29, 57, 95, 111], "slowest": [29, 48], "slowli": [29, 61, 90], "slr": 68, "slu": 158, "slurm": [78, 89, 92, 99], "slurm_job_nodelist": 90, "slurmctld": 90, "slurmqueu": 90, "sm": 68, "small": [5, 29, 36, 46, 50, 51, 56, 57, 58, 59, 61, 65, 66, 68, 71, 74, 76, 77, 78, 85, 90, 94, 96, 98, 102, 106, 108, 112, 116, 118, 123, 124, 155, 170, 181, 203, 206, 211, 213, 233], "small_backward_warmup_0_mixed_fals": 112, "small_backward_warmup_0_mixed_tru": 112, "small_backward_warmup_1_mixed_fals": 112, "small_backward_warmup_1_mixed_tru": 112, "small_forward_backward_warmup_0_mixed_fals": 112, "small_forward_backward_warmup_0_mixed_tru": 112, "small_forward_backward_warmup_1_mixed_fals": 112, "small_forward_backward_warmup_1_mixed_tru": 112, "small_forward_warmup_0_mixed_fals": 112, "small_forward_warmup_0_mixed_tru": 112, "small_forward_warmup_1_mixed_fals": 112, "small_forward_warmup_1_mixed_tru": 112, "smaller": [4, 16, 27, 30, 47, 54, 63, 66, 68, 71, 72, 77, 95, 102, 104, 109, 115, 118, 124, 174, 203, 207, 213, 230], "smallest": [5, 16, 29, 47, 59, 63, 76, 94, 118, 123, 124, 207, 211, 216], "smart": 97, "smarter": 61, "smartphon": [30, 95, 96, 109], "smartwatch": 30, "smell": [94, 223], "smoke": [74, 94], "smola": [0, 1, 55, 57, 58, 73, 74, 123, 124], "smooth": [56, 58, 59, 76, 77, 121, 123, 174], "smoother": [57, 58, 84, 127], "smoothli": [2, 100, 123], "smote": 101, "sn": [58, 59, 62, 68, 76, 119, 128, 174], "snapshot": [57, 94, 115], "sne": [96, 101], "snippet": [5, 20, 53, 56, 89, 94, 97, 104, 115, 118, 143, 156, 218], "snowflak": [98, 99], "sns_plot": 174, "so": [2, 3, 5, 6, 7, 9, 11, 16, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 80, 82, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 140, 143, 144, 146, 147, 148, 158, 159, 162, 174, 180, 189, 190, 192, 193, 195, 196, 202, 205, 206, 207, 211, 213, 214, 216, 217, 219, 223, 226, 227, 228, 229, 231, 233, 234, 236, 237, 238], "soap": 97, "socg2006": 61, "socher": 0, "social": [96, 97, 98, 99, 101], "socket": [114, 115, 213, 216], "soft": [52, 121], "soft_loss": 121, "soft_prob": 121, "soft_target": 121, "softargmax": 124, "soften": 124, "softer": 121, "softmax": [57, 59, 66, 72, 78, 87, 112, 114, 118, 119, 120, 121], "softmax_larg": [58, 124], "softmax_result": 124, "softmax_sc": 58, "softmax_smal": 124, "softmax_unsc": 58, "softmaxbackward0": [58, 124], "softmaxst": [112, 114], "softwar": [9, 27, 68, 94, 99, 100, 105, 108, 110, 221, 222], "software_engin": [217, 222, 227], "sold": [101, 179], "solda": 98, "sole": [2, 5, 27, 53, 58, 59, 63, 83, 85], "solid": [53, 83, 85, 94, 102], "solidifi": [63, 66], "soloviev": [1, 10], "solut": [5, 11, 13, 16, 25, 26, 27, 30, 34, 35, 37, 41, 47, 50, 59, 61, 68, 69, 84, 93, 94, 95, 96, 97, 99, 100, 109, 110, 123, 137, 146, 170, 173, 180, 181, 200, 211, 216], "solv": [0, 5, 11, 16, 17, 19, 27, 29, 30, 36, 43, 44, 46, 47, 53, 56, 57, 58, 59, 61, 62, 67, 74, 76, 80, 95, 96, 99, 102, 123, 137, 142, 150, 170, 174, 180, 195, 210, 211, 217, 226, 231], "solvabl": [68, 78], "solver": 69, "some": [2, 3, 4, 5, 8, 11, 16, 27, 29, 30, 43, 44, 47, 50, 55, 56, 57, 58, 59, 61, 62, 63, 68, 71, 72, 76, 77, 79, 85, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 112, 113, 114, 117, 119, 120, 121, 123, 126, 129, 130, 134, 136, 143, 144, 146, 147, 154, 155, 156, 158, 168, 169, 170, 175, 176, 178, 189, 190, 192, 195, 200, 203, 208, 210, 216, 217, 218, 219, 221, 223, 227, 231, 234, 238], "some_list": 94, "some_obj": 8, "somehow": [6, 57, 58, 61, 216], "someon": [58, 94, 98], "someth": [3, 4, 6, 9, 26, 27, 29, 32, 57, 59, 66, 68, 74, 76, 77, 90, 94, 96, 100, 110, 113, 130, 136, 146, 148, 210, 211, 213, 216, 218, 228, 238], "sometim": [2, 3, 11, 17, 50, 57, 58, 61, 62, 66, 74, 85, 87, 90, 91, 96, 97, 101, 102, 109, 110, 117, 118, 124, 130, 153, 170, 171, 191, 214, 225], "somewhat": 57, "somewher": [66, 100, 109, 133, 211, 217], "song": 96, "soon": [0, 35, 49, 52, 53, 58, 66, 68, 109, 130, 180, 208, 211, 221], "sophist": [30, 48, 59, 94, 100, 102, 106], "sort": [7, 11, 16, 27, 39, 40, 45, 48, 58, 59, 76, 78, 89, 94, 98, 99, 117, 120, 124, 159], "sort_bi": [113, 114], "sort_stat": 230, "sort_valu": [76, 112, 113], "sortabl": 29, "sorted_indic": 58, "sorted_indices_to_remov": 58, "sorted_item": 11, "sorted_logit": 58, "sorted_str": 20, "sorted_us": 98, "sota": [102, 106], "sought": 57, "soul": 195, "sound": [2, 3, 4, 44, 48, 53, 66, 97, 101], "soup": 99, "sourc": [3, 6, 48, 56, 57, 58, 59, 66, 68, 71, 78, 87, 89, 90, 93, 94, 95, 96, 98, 100, 108, 113, 114, 117, 119, 120, 183, 211, 216, 225, 227, 234], "south": [30, 32, 99], "southeast": 90, "space": [0, 4, 44, 47, 48, 50, 51, 53, 57, 59, 63, 71, 73, 76, 78, 82, 83, 87, 88, 94, 96, 97, 101, 102, 104, 106, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 148, 150, 155, 158, 159, 163, 164, 165, 166, 172, 174, 176, 178, 180, 181, 183, 188, 191, 192, 193, 200, 207, 210, 216], "spaghetti": 114, "spam": [77, 95, 96, 109], "span": [29, 57, 58, 59, 68, 80, 84, 88, 96, 106, 123, 131, 192], "sparingli": 11, "spark": [98, 99, 100], "sparsiti": 84, "spatial": [30, 59, 63, 71, 80, 82], "spawn": [48, 89, 91, 216, 231], "spawn_main": 231, "spawn_process": 216, "speak": [46, 48, 58, 59, 216], "spece": 76, "speci": [76, 238], "special": [2, 8, 56, 57, 58, 59, 61, 68, 72, 79, 82, 97, 112, 114, 119, 120, 121, 126, 161, 227], "special_token": 120, "special_tokens_map": 120, "specif": [2, 4, 5, 6, 7, 9, 10, 11, 17, 19, 27, 29, 30, 32, 36, 43, 46, 47, 48, 52, 53, 56, 57, 58, 59, 61, 63, 68, 72, 77, 79, 80, 82, 83, 84, 85, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 118, 123, 124, 126, 130, 147, 160, 183, 198, 200, 211, 216, 217, 219, 221, 222, 225, 228, 236], "specifi": [2, 5, 6, 9, 19, 29, 32, 36, 52, 54, 56, 59, 60, 61, 62, 66, 68, 69, 72, 77, 89, 90, 94, 95, 96, 98, 99, 100, 104, 106, 117, 118, 128, 130, 143, 217, 222, 227], "spectacularli": 102, "spectral": 61, "spectrogram": 96, "spectrum": 57, "specul": 57, "speech": [1, 55, 57, 58, 73, 74, 95, 96, 97], "speed": [3, 27, 29, 44, 59, 74, 94, 95, 96, 97, 109, 118, 216, 231], "speedup": 231, "speegl": 158, "spell": [57, 58, 98], "spend": [29, 96, 216], "spent": [11, 59, 71, 113], "sphere": 61, "spheric": [53, 61], "sphinx": 94, "spike": [57, 58, 115], "split": [16, 27, 30, 56, 57, 58, 61, 66, 68, 76, 85, 94, 101, 106, 107, 117, 119, 213, 222, 238], "split_dataset": 59, "splot": 53, "spoken": 96, "spopt": 114, "spot": [5, 6, 53], "spotifi": 109, "spread": [32, 59, 61, 95, 96, 124, 142, 165, 190], "spring": 0, "spring2024": [112, 114, 116], "springer": [0, 1, 49, 52, 53, 60, 61, 63, 67, 68, 73, 74, 82, 83, 84, 87, 124, 193, 194], "sprinkl": [217, 229], "sprint": 94, "spur": 94, "spuriou": 48, "sqcup": [53, 61, 150], "sqft": 68, "sql": [71, 97, 98, 99, 100, 109], "sqlalchemi": 99, "sqrt": [53, 56, 57, 58, 66, 68, 71, 72, 74, 75, 76, 84, 85, 110, 112, 114, 118, 119, 120, 127, 128, 142, 170, 171, 176, 178, 180, 186, 191, 198, 200, 203, 207, 210, 211], "sqrtm": 53, "squar": [7, 53, 56, 58, 59, 61, 62, 69, 80, 84, 87, 94, 96, 103, 106, 107, 110, 118, 123, 124, 130, 142, 165, 186, 192, 213, 234, 236], "square_by_exponenti": 113, "square_by_multipl": 113, "squared_gen": 230, "squeez": [58, 59, 77, 119, 121, 124], "squeezebackward0": 124, "squeezebackward1": 58, "squeue": 90, "sr": 96, "src": [58, 94], "sre": 94, "srun": 90, "ss": [89, 100, 217], "ss_": 68, "ss_re": 69, "ss_total": 69, "sse": [60, 61, 62], "ssh": 90, "st": [6, 89, 90, 96, 137, 139, 238], "stabalis": 112, "stabil": [54, 56, 59, 74, 75, 78, 102, 115, 122, 124, 216], "stabl": [7, 53, 57, 58, 71, 72, 75, 77, 94, 98, 99, 109, 124, 229, 238], "stable_softmax": 124, "stable_softmax_prob": 124, "stabliz": [59, 123], "stack": [5, 22, 23, 27, 29, 30, 31, 37, 38, 56, 57, 58, 64, 77, 78, 80, 85, 94, 99, 100, 102, 106, 108, 114, 115, 119, 121, 124, 213], "stack_int": 32, "stack_item": 32, "stack_of_str": 5, "stack_str": 32, "stackexchang": [0, 74, 84, 126, 158], "stacklevel": [58, 71, 104], "stacklist": [32, 35, 36, 37], "stackoverflow": [58, 69, 223, 231, 234], "stackrel": [29, 53, 58, 66, 68, 171, 181, 188, 201, 203, 211], "stage": [4, 29, 56, 57, 58, 59, 71, 78, 90, 93, 113, 114, 115, 123, 218, 221], "staging_dir": 100, "staging_lak": 100, "staging_warehous": 100, "stai": [58, 66, 68, 76, 94, 106, 110, 130], "stain": 63, "staircas": 140, "stakehold": [94, 95, 108, 143, 159], "stale": 109, "stand": [53, 57, 97, 115, 118, 130, 214], "standalon": [30, 32], "standard": [3, 8, 9, 16, 17, 30, 36, 48, 53, 56, 57, 58, 59, 66, 74, 76, 77, 83, 97, 98, 99, 100, 101, 103, 106, 110, 112, 121, 123, 124, 159, 171, 180, 207, 213, 216], "standard_error": 68, "standpoint": 2, "stanford": [57, 58, 68, 112, 114, 174], "stanlei": [0, 73, 74, 137, 141, 142, 144, 147, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 198, 200, 201, 203, 204, 206, 211], "star": [53, 68, 231], "start": [6, 11, 22, 23, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 53, 54, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 75, 76, 80, 82, 83, 84, 89, 91, 95, 96, 97, 98, 100, 104, 109, 110, 111, 112, 113, 115, 117, 118, 119, 123, 124, 125, 128, 140, 143, 146, 154, 174, 189, 207, 211, 213, 214, 216, 218, 222, 227, 231, 234, 238], "start_method": [89, 91], "start_process": 89, "start_record_memory_histori": 115, "start_tim": [97, 111, 216, 218, 231], "starting_token": [58, 59], "starting_tokens_crop": 58, "startswith": [230, 238], "stat": [0, 53, 54, 68, 74, 76, 127, 143, 146, 148, 156, 158, 159, 168, 169, 170, 171, 173, 174, 177, 178, 179, 182, 185, 190, 194, 207, 230], "stat155not": 143, "stat425": 66, "stat462": 68, "stat505": 194, "stat508": 60, "state": [3, 4, 7, 9, 29, 30, 36, 50, 53, 56, 57, 58, 61, 64, 66, 68, 71, 74, 76, 78, 79, 80, 82, 84, 90, 94, 97, 98, 102, 104, 109, 115, 118, 119, 120, 124, 126, 130, 133, 134, 137, 140, 142, 143, 144, 146, 148, 150, 156, 159, 162, 172, 180, 181, 183, 184, 191, 195, 196, 200, 203, 208, 211, 213, 219, 221, 223, 236], "state_dict": [117, 217, 218], "statement": [3, 8, 9, 20, 30, 48, 58, 61, 80, 94, 96, 119, 126, 150, 178, 206, 214, 216, 229, 231], "static": [2, 5, 6, 7, 8, 10, 30, 32, 57, 58, 90, 97, 109, 117, 221], "static_method": 117, "staticmethod": [54, 69, 75, 117, 222], "station": 97, "stationari": 71, "statisc": 133, "statist": [0, 17, 49, 53, 57, 58, 60, 61, 66, 67, 73, 74, 76, 77, 78, 87, 94, 95, 96, 99, 100, 101, 102, 104, 108, 110, 124, 141, 142, 150, 153, 159, 168, 169, 170, 173, 174, 198, 199, 200, 201, 203, 204, 206, 211, 212], "statistician": [77, 173, 200], "statisticshowto": 143, "statproofbook": 76, "statquest": 60, "stats203": 68, "stats462": 68, "statsmodel": 68, "statu": [4, 48, 74, 100, 108, 143, 146, 148, 238], "status_cod": 231, "std": [53, 56, 58, 76, 112, 114, 119, 120, 142, 170, 217, 219], "std1": 110, "std2": 110, "std_dev": [58, 112, 114, 119, 120], "stderr": 90, "stdout": [111, 112, 113, 114, 217], "stdtype": 234, "stealth": [30, 32], "steer": 9, "stein": [0, 16], "stem": [57, 58, 59, 61, 140, 143, 156, 159, 181, 182, 235], "step": [11, 19, 20, 27, 29, 30, 36, 43, 44, 46, 47, 48, 54, 57, 58, 59, 60, 62, 64, 66, 68, 71, 72, 84, 85, 90, 93, 95, 96, 98, 101, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 120, 121, 123, 127, 140, 143, 156, 159, 173, 181, 186, 207, 211, 213, 217, 218, 229, 234, 235], "step_index": [59, 218], "step_lr": 226, "step_num": 113, "step_scheduler_on_batch_or_epoch": [59, 119], "step_siz": 226, "steplr": 226, "steplrconfig": 226, "stick": [36, 58, 76, 99, 211], "still": [13, 27, 29, 32, 35, 36, 43, 44, 46, 48, 53, 56, 57, 58, 59, 61, 63, 66, 68, 72, 74, 76, 77, 82, 89, 94, 95, 98, 101, 102, 104, 109, 110, 115, 116, 117, 123, 124, 127, 133, 134, 136, 146, 159, 170, 173, 180, 190, 206, 211, 217, 231, 238, 239], "stipul": [29, 36], "stochast": [0, 1, 55, 57, 59, 68, 69, 101, 123, 126], "stock": [94, 97], "stoi": [56, 58], "stone": 85, "stop": [5, 27, 29, 43, 46, 54, 59, 61, 66, 94, 100, 106, 115, 119, 123, 124, 126, 213, 238], "stop_record_memory_histori": 115, "stopiter": [22, 213, 234], "storag": [3, 11, 17, 32, 36, 63, 78, 90, 93, 94, 100, 101, 109, 118, 230], "storagetyp": 90, "store": [11, 13, 17, 19, 20, 22, 23, 27, 29, 32, 36, 43, 44, 46, 53, 58, 61, 62, 63, 71, 74, 77, 89, 94, 97, 98, 100, 101, 106, 108, 109, 115, 118, 207, 213, 214, 216, 217, 218, 219, 223, 225, 228, 230, 234, 235, 236, 239], "store_flo": 117, "store_tru": [89, 91, 115], "storesconfig": [217, 219], "stori": [29, 52], "str": [2, 3, 4, 5, 6, 8, 9, 11, 20, 25, 26, 32, 35, 36, 37, 41, 48, 54, 58, 59, 62, 63, 69, 71, 72, 75, 76, 77, 89, 91, 94, 98, 100, 104, 112, 113, 114, 115, 117, 118, 120, 121, 123, 128, 143, 146, 148, 156, 159, 168, 169, 170, 171, 178, 190, 207, 211, 213, 216, 217, 218, 219, 221, 222, 225, 226, 227, 229, 230, 231, 238], "str1": 233, "str2": 233, "str_": 20, "str_1": 25, "str_2": 25, "str_or_int": 94, "str_to_typ": 238, "straight": [44, 61, 66, 68, 84, 130, 203], "straightforward": [7, 11, 29, 30, 53, 59, 61, 83, 94, 96, 97, 126, 150, 178, 213, 214, 221, 222, 230], "strang": 61, "strat": 96, "strateg": 29, "strategi": [2, 17, 27, 29, 32, 44, 46, 47, 48, 57, 62, 71, 78, 94, 95, 101, 106, 108, 216, 224], "strategy_class": 228, "strategyregistri": 228, "stratif": 96, "stratifi": [101, 105, 106], "stratifiedgroupkfold": 106, "stratify_by_column": [72, 120, 121], "stream": [58, 72, 94, 95, 96, 97, 98, 110, 111, 120, 121, 217, 230, 234], "stream_executor": 72, "streamhandl": [111, 112, 113, 114, 120, 121, 217], "streamlin": [2, 57, 59, 100], "street": [84, 238], "strength": [53, 69, 94, 96, 98], "stress": 94, "stretch": [83, 190], "strftime": [114, 115], "strict": [3, 57, 98, 109, 217, 218, 219], "stricter": 5, "strictli": [30, 46, 58, 109, 124, 173], "strike": [57, 58, 107], "string": [3, 5, 8, 11, 17, 25, 32, 33, 35, 38, 39, 40, 42, 47, 57, 58, 59, 72, 78, 89, 94, 97, 98, 99, 109, 117, 128, 213, 219, 231, 233, 234, 238], "string_typ": 238, "stringent": 94, "stringio": 230, "stringvalu": 5, "strip": [57, 58, 59, 104, 238], "strive": 57, "strncat": 27, "strong": [27, 66, 68, 71, 76, 85, 208, 228], "stronger": [6, 53, 68, 117, 178], "strongli": 5, "structur": [0, 4, 5, 7, 8, 9, 11, 12, 13, 16, 17, 20, 22, 23, 27, 29, 30, 33, 36, 43, 47, 48, 56, 57, 58, 59, 61, 66, 77, 79, 82, 84, 94, 96, 97, 99, 100, 101, 109, 117, 124, 182, 213, 214, 216, 219, 221, 225, 230, 234], "structure_data": 100, "structured_data": 100, "struggl": [57, 58, 96, 216], "stuck": [58, 59, 61, 123, 130, 174], "student": [78, 97, 122, 146, 155, 171, 181, 231], "student_logit": 121, "student_model": 121, "student_optim": 121, "student_output": 121, "student_schedul": 121, "studi": [57, 66, 79, 80, 83, 87, 94, 96, 100, 156, 195, 196, 199, 211], "studio": 94, "stuff": [98, 158], "sturdi": 94, "style": [30, 32, 53, 54, 58, 62, 63, 75, 76, 77, 78, 99, 120, 128, 143, 178, 211], "styliz": 126, "sub": [16, 56, 57, 58, 59, 61, 94, 96, 99, 100, 114, 182, 219, 223], "subarrai": [11, 30, 44], "subarray_sum_fix": 46, "subbackward0": 114, "subcategori": 95, "subclass": [2, 3, 4, 6, 7, 8, 58, 59, 117, 222], "subdir": 217, "subdirectori": 100, "subdivid": 126, "subfigur": 210, "subject": [29, 52, 58, 61, 74, 93, 94, 100, 101, 110, 130, 211], "sublay": 58, "submit": [0, 1, 55, 57, 66, 70, 71, 90, 94, 123, 124], "subnet": 90, "subnet_id": 90, "subnetid": 90, "suboptim": [48, 95], "subplot": [53, 54, 58, 59, 62, 63, 76, 77, 82, 83, 84, 85, 123, 124, 128, 140, 143, 144, 147, 155, 159, 160, 168, 174, 178, 190, 207, 211], "subplots_adjust": 58, "subproblem": [16, 27, 30], "subprocess": 104, "subroutin": [2, 27, 113], "subscrib": 95, "subscript": [56, 58, 74, 82, 87, 95, 234], "subsequ": [6, 11, 17, 26, 30, 36, 46, 53, 57, 58, 59, 61, 64, 68, 71, 74, 77, 94, 96, 100, 115, 130, 144, 147, 148, 150, 177, 213, 236, 237, 239], "subset": [4, 27, 29, 30, 53, 56, 57, 58, 59, 61, 66, 68, 71, 75, 76, 89, 94, 97, 101, 106, 109, 124, 126, 127, 128, 130, 131, 137, 159, 211], "subseteq": [3, 58, 66, 82, 87, 124, 126, 131, 134, 163, 176], "subsitut": 5, "subspac": [27, 66, 71, 79, 80, 193], "substack": 94, "substanti": [48, 57, 58, 68, 100], "substitut": [2, 3, 7, 16, 53, 56, 58, 66, 74, 80, 85, 118, 124, 170, 186, 191, 193], "substr": 41, "substring_hashmap": 41, "subsumpt": [2, 7, 10, 78], "subsystem": 216, "subtl": [30, 48, 68, 74, 94, 115], "subtli": 68, "subtract": [4, 13, 46, 58, 74, 79, 80, 84, 118, 124], "subtre": 27, "subtyp": [1, 6, 7, 8, 10, 78, 97, 222], "subword": 58, "succe": [71, 213], "succeed": 57, "success": [16, 27, 30, 57, 74, 77, 94, 96, 97, 100, 101, 106, 108, 143, 144, 146, 147, 148, 152, 155], "successfulli": [30, 48, 77, 90, 94, 95, 98, 99, 104], "sudden": 110, "suddenli": 77, "sudo": 90, "suffer": [48, 58, 66, 102], "suffic": [29, 95, 96, 119, 128], "suffici": [2, 16, 29, 54, 56, 57, 65, 66, 68, 71, 80, 89, 95, 99, 103, 104, 116, 119, 143, 155, 211], "suffix": [115, 225], "sugar": [80, 229], "suggest": [6, 7, 13, 19, 53, 57, 58, 59, 66, 68, 71, 74, 76, 94, 95, 96, 101, 102, 105, 109, 110, 118, 123, 128, 130, 219, 221, 228, 238], "suit": [29, 32, 36, 61, 94, 96, 97, 98, 214, 216], "suitabl": [27, 29, 46, 53, 58, 59, 68, 71, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 216, 227], "sum": [11, 12, 14, 16, 18, 20, 21, 27, 29, 30, 32, 36, 39, 40, 45, 53, 54, 57, 58, 59, 61, 62, 66, 68, 69, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 99, 100, 103, 112, 113, 114, 118, 119, 120, 121, 124, 130, 131, 133, 134, 143, 146, 148, 149, 156, 159, 165, 174, 175, 176, 180, 184, 197, 200, 207, 211, 213, 230, 231], "sum_": [29, 30, 32, 46, 50, 52, 53, 56, 57, 58, 59, 61, 63, 64, 66, 68, 71, 74, 75, 76, 77, 84, 85, 87, 103, 118, 124, 126, 130, 131, 134, 139, 140, 141, 142, 144, 147, 151, 155, 159, 164, 174, 176, 178, 181, 183, 184, 186, 191, 192, 200, 201, 203, 206, 207, 211], "sum_i": [77, 121, 211], "sum_j": 121, "sum_x": [126, 183], "summabl": [126, 141], "summand": 57, "summar": [2, 27, 43, 53, 56, 57, 71, 76, 96, 99, 109, 118, 196], "summari": [13, 19, 29, 57, 58, 59, 63, 68, 71, 78, 80, 97, 98, 99, 101, 125, 135, 211, 221], "summat": [46, 53, 56, 57, 59, 68, 85, 126, 131, 230], "sundai": 150, "sunil": 70, "sup": [65, 66], "super": [6, 9, 53, 54, 58, 72, 94, 96, 101, 112, 114, 117, 118, 119, 120, 226, 228, 237], "super_large_logit": 124, "superclass": [2, 4, 7, 222], "superfici": 6, "superscript": [56, 61, 74, 87], "superset": 4, "supertyp": [2, 3, 4, 6, 7], "supervis": [0, 8, 58, 61, 66, 68, 74, 96, 101, 102, 121, 191], "supplement": 94, "supplementari": 57, "suppli": [5, 94, 96, 234], "support": [2, 6, 32, 36, 48, 54, 59, 62, 66, 69, 72, 75, 85, 89, 94, 95, 97, 98, 99, 102, 109, 117, 123, 213, 217, 225, 238], "supportsindex": 7, "supportsit": 234, "supportsrichcomparison": 7, "supportsrichcomparisont": 7, "suppos": [7, 9, 27, 47, 57, 59, 63, 66, 68, 71, 74, 77, 83, 94, 95, 96, 103, 106, 110, 126, 136, 143, 146, 148, 159, 176, 180, 184, 190, 191, 206, 211, 213], "suppress": [124, 216], "supremum": [65, 66], "suptitl": [144, 190], "supylabel": 144, "sure": [3, 7, 29, 30, 58, 59, 63, 68, 71, 72, 76, 89, 90, 97, 98, 104, 106, 113, 118, 124, 159, 195, 208, 217, 218], "surfac": [48, 68, 127, 176, 190], "surject": 61, "surpass": 57, "surpris": [3, 53, 58, 59, 61, 68, 76, 103, 113, 156, 168, 172, 181, 211], "surprisingli": 143, "surround": 96, "survei": [57, 97, 98], "surveil": 101, "surviv": 103, "susan": 26, "suscept": 58, "sushi": 32, "suspect": [115, 238], "suspici": 98, "sutskev": [0, 1, 55, 57], "svd": 71, "svg": [27, 82, 83, 143, 211], "svg_imag": 27, "svm": [66, 96, 102], "swap": [5, 56, 58, 59, 85, 120, 123, 228], "sweep": [203, 217], "sweeper": 217, "swipe": 97, "switch": [58, 77, 104, 117, 214, 216, 221], "sy": [5, 7, 36, 54, 59, 62, 63, 75, 76, 77, 111, 112, 113, 114, 115, 128, 143, 146, 148, 156, 159, 168, 169, 170, 178, 190, 207, 211, 213, 217, 230, 231, 239], "symbol": [7, 53, 56, 57, 58, 59, 61, 63, 68, 74, 126, 140, 188, 192], "symlink": 94, "symmetr": [53, 66, 84, 159, 170, 171, 180], "symmetri": [4, 71, 84, 195], "symptom": [96, 106], "sync": [89, 94, 217], "synchron": [46, 47, 58, 59, 78, 89, 91, 112, 113, 114, 116, 214, 218, 231], "syndrom": 94, "synonym": [141, 142, 164, 165], "syntact": 58, "syntat": 229, "syntax": [5, 6, 8, 11, 17, 44, 94, 216], "syntaxerror": [72, 117], "syntaxwarn": [61, 83, 84, 85, 169, 170, 174, 190], "synthes": [48, 58], "synthesi": [146, 159], "synthet": [53, 95], "system": [1, 2, 3, 4, 5, 6, 10, 27, 29, 32, 48, 53, 55, 57, 58, 63, 68, 70, 71, 74, 78, 79, 81, 82, 88, 89, 91, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 116, 118, 203, 213, 216, 219, 221, 223, 225, 227, 231], "systemat": [4, 48, 53, 68, 94, 96, 104, 108, 110, 210], "t": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 23, 27, 29, 32, 35, 36, 43, 44, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 71, 72, 74, 75, 76, 77, 80, 82, 85, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 134, 136, 143, 148, 150, 155, 158, 159, 166, 167, 170, 171, 174, 178, 180, 186, 188, 190, 191, 192, 193, 195, 196, 200, 211, 213, 216, 217, 218, 219, 221, 222, 228, 229, 230, 231, 233, 234, 235, 236, 238], "t1": 6, "t2": [6, 90], "t4": 118, "t4_16gb": 118, "t_": [59, 68, 123], "t_0": 226, "t_1": [6, 77], "t_2": [6, 77], "t_co": 213, "t_d": 77, "t_i": [6, 77], "t_max": [59, 119, 120, 123, 226], "t_mult": 226, "t_n": [6, 56, 57, 71], "t_valu": 68, "t_x": 6, "t_y": 6, "tab": [27, 89, 90, 94, 228], "tab_titl": 27, "tabbi": [6, 57], "tabl": [16, 17, 19, 43, 44, 53, 57, 58, 63, 76, 84, 90, 94, 95, 96, 98, 99, 101, 103, 109, 110, 113, 114, 118, 121, 180, 181, 200, 239], "table_nam": 100, "tablefmt": [63, 118], "tabul": [63, 118], "tabular": 97, "tackl": [7, 29, 96], "tag": [90, 96, 97, 98, 104, 108, 112, 114, 146, 238], "tag1": 238, "tag2": 238, "tag3": 238, "tag4": 238, "taglin": [94, 223], "tagss": 238, "tagsss": 238, "tail": [30, 68, 80, 82, 83, 130, 131, 137, 144, 148, 211], "tailor": [5, 30, 56, 57, 96, 221], "take": [2, 3, 4, 5, 6, 8, 9, 11, 13, 16, 17, 18, 19, 20, 22, 26, 27, 29, 30, 32, 36, 43, 44, 46, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 68, 71, 74, 76, 77, 79, 80, 83, 84, 85, 87, 89, 90, 94, 95, 96, 97, 100, 102, 103, 106, 108, 109, 110, 111, 113, 114, 117, 118, 123, 124, 126, 128, 130, 137, 139, 140, 143, 146, 147, 158, 159, 163, 166, 170, 173, 174, 180, 181, 183, 207, 210, 211, 213, 216, 217, 221, 228, 229, 238], "takeawai": [68, 82], "taken": [3, 11, 16, 27, 29, 30, 36, 53, 77, 84, 87, 96, 100, 110, 111, 118, 128, 144, 146, 156, 176, 180, 181, 183, 231, 238], "talk": [5, 7, 29, 36, 49, 52, 53, 56, 61, 68, 73, 74, 76, 80, 100, 101, 102, 124, 143, 145, 149, 156, 157, 174, 194, 208, 211, 217], "tall": [127, 190], "taller": [143, 159], "talwalkar": [0, 66, 68, 87], "tan": [20, 52, 53, 60, 61, 68], "tandem": 94, "tangibl": [85, 230], "tanh": [56, 58, 59, 112, 114, 119, 120], "target": [8, 13, 19, 27, 30, 43, 47, 51, 57, 61, 67, 69, 71, 72, 76, 80, 89, 93, 94, 96, 98, 99, 100, 101, 102, 106, 107, 108, 112, 114, 119, 120, 121, 123, 178, 182, 211, 214, 216, 231], "target_batch": 59, "target_fn": 91, "target_length": 121, "target_list": 236, "target_mask": [58, 59], "target_masks_shap": [58, 59], "target_modul": 72, "target_padding_mask": [58, 59, 119], "targets_flatten": 59, "targets_pad": 59, "task": [4, 11, 17, 27, 29, 30, 32, 44, 47, 48, 50, 53, 56, 58, 59, 66, 68, 72, 74, 77, 80, 84, 85, 90, 94, 95, 98, 99, 100, 101, 102, 103, 106, 108, 109, 117, 118, 119, 120, 121, 124, 146, 180, 182, 216, 217, 219, 221, 228], "tau": [27, 30, 56, 57], "tau_w": [59, 123], "taught": 5, "taxicab": 84, "tb": 213, "td": [58, 96], "tea": 20, "teach": 94, "teacher": [59, 78, 122], "teacher_logit": 121, "teacher_model": 121, "teacher_optim": 121, "teacher_output": 121, "teacher_schedul": 121, "team": [90, 93, 94, 96, 101, 104, 115, 116, 218], "tear": 103, "tech": [1, 10, 11, 12, 17, 18, 32, 33, 94, 97, 100], "techgear": 30, "technic": [9, 19, 43, 48, 59, 66, 71, 75, 76, 95, 118, 126, 127, 227, 234], "techniqu": [9, 11, 17, 27, 29, 43, 44, 53, 56, 57, 58, 59, 63, 68, 71, 84, 89, 95, 96, 98, 100, 101, 102, 106, 107, 110, 123, 127, 130, 146, 231], "technologi": [58, 97, 100], "tediou": [188, 211], "telecom": 96, "tell": [3, 5, 6, 8, 29, 53, 59, 61, 62, 66, 68, 71, 76, 85, 94, 98, 100, 119, 123, 127, 130, 159, 174, 176, 203, 217], "temp": [77, 124], "temp_fil": 225, "temp_file_path": 225, "temperatur": [58, 59, 96, 97, 109, 119, 121], "tempfil": [115, 225], "templat": [5, 27, 29, 90, 94, 100, 217], "tempor": [96, 101], "temporari": [13, 17, 19, 27, 30, 43, 94, 99], "temporarili": [99, 115, 130, 231], "tempt": 11, "ten": [57, 58], "tend": [57, 58, 61, 63, 76, 96, 109, 130, 143, 155, 158, 208, 217], "tendenc": [99, 107], "tenni": 136, "tensor": [53, 56, 58, 59, 72, 74, 76, 77, 88, 89, 97, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124], "tensor_await": 115, "tensor_s": [111, 115], "tensorboard": [104, 113], "tensorboard_trace_handl": 113, "tensorflow": [62, 114], "tensorflow_prob": 76, "tenth": 59, "tepoch": 217, "terabyt": [100, 101], "teraflop": [96, 118], "term": [3, 5, 7, 11, 13, 16, 17, 19, 27, 29, 30, 36, 43, 50, 53, 56, 57, 58, 59, 61, 66, 69, 71, 74, 76, 77, 80, 82, 83, 84, 85, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 113, 118, 121, 123, 124, 136, 143, 171, 174, 178, 180, 181, 183, 184, 185, 186, 187, 189, 191, 193, 195, 206, 211, 212, 222, 234], "termin": [27, 29, 30, 44, 213, 216, 234], "terminologi": [59, 68, 74, 88], "terraform": 94, "terrifi": 180, "territori": 94, "test": [17, 47, 54, 56, 57, 58, 62, 69, 72, 74, 75, 76, 77, 78, 87, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 111, 120, 121, 124, 143, 146, 180, 181, 203, 219, 221, 223, 232, 233, 234], "test_": 94, "test_binary_search": 27, "test_dataset": 59, "test_eval_accuraci": 72, "test_eval_brier_scor": 72, "test_eval_confusion_matrix": 72, "test_eval_f1_score_macro": 72, "test_eval_f1_score_micro": 72, "test_eval_log_loss": 72, "test_eval_pr_auc": 72, "test_eval_pr_auc_class_0": 72, "test_eval_pr_auc_class_1": 72, "test_eval_pr_auc_class_2": 72, "test_eval_precision_macro": 72, "test_eval_precision_micro": 72, "test_eval_recall_macro": 72, "test_eval_recall_micro": 72, "test_eval_roc_auc": 72, "test_eval_roc_auc_class_0": 72, "test_eval_roc_auc_class_1": 72, "test_eval_roc_auc_class_2": 72, "test_load": [59, 119], "test_loss": 72, "test_minimum_spe": 29, "test_one_epoch": 59, "test_queri": 48, "test_runtim": 72, "test_samples_per_second": 72, "test_siz": [59, 62, 69, 72, 75, 76, 120, 121], "test_steps_per_second": 72, "test_train_model_using_image_dataset_load": 94, "test_train_model_using_text_dataset_load": 94, "test_unordered_linear_search_iterative_for_loop": 30, "test_unordered_linear_search_iterative_while_loop": 30, "test_unordered_sequential_search_recurs": 30, "testabl": [48, 94], "tester": 94, "testframework": [27, 29, 30], "testing_made_with_ml": 94, "testpath": 94, "tests_": 94, "text": [2, 6, 7, 16, 19, 20, 27, 29, 30, 35, 36, 43, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 66, 68, 71, 74, 76, 77, 82, 84, 85, 87, 90, 94, 96, 98, 101, 109, 110, 118, 120, 121, 123, 124, 126, 127, 130, 140, 141, 143, 144, 146, 147, 148, 150, 151, 155, 158, 159, 160, 164, 166, 168, 169, 170, 171, 173, 174, 176, 180, 181, 183, 184, 186, 188, 190, 191, 195, 196, 198, 200, 201, 203, 206, 207, 210, 211, 213, 222, 234], "text_gen": 213, "text_gen_comprehens": 213, "text_summar": 96, "textbf": [66, 74, 87, 102, 110, 130, 133, 137], "textbook": [16, 61, 66, 80, 81, 86, 130, 174], "textcolor": [53, 66], "textcoord": 53, "textdatasetload": 94, "textrm": [124, 211], "textsf": 85, "textual": [57, 96, 97], "tf": [27, 29, 30, 62, 96, 101, 118], "tgk": 185, "tgt": 58, "tgt_mask": 58, "th": [11, 29, 30, 32, 47, 48, 50, 52, 53, 56, 57, 58, 59, 61, 64, 66, 68, 74, 80, 82, 83, 87, 124, 137, 139, 142, 165, 178, 188, 193, 195, 200, 211, 229], "thai": 99, "than": [2, 4, 5, 6, 7, 8, 10, 11, 13, 16, 17, 27, 29, 30, 43, 46, 47, 48, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 68, 71, 72, 74, 76, 77, 80, 84, 87, 88, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 106, 108, 109, 111, 115, 117, 118, 121, 123, 124, 126, 130, 142, 143, 148, 155, 158, 159, 163, 169, 170, 172, 173, 174, 176, 178, 179, 180, 185, 190, 193, 196, 206, 210, 211, 213, 216, 217, 219, 227, 230, 231], "thank": [100, 231], "thee": 2, "thei": [2, 3, 4, 5, 6, 7, 8, 11, 13, 16, 17, 19, 20, 29, 30, 32, 36, 43, 44, 47, 48, 50, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 76, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 109, 110, 115, 116, 117, 118, 119, 123, 124, 126, 128, 130, 131, 133, 134, 136, 137, 143, 146, 155, 165, 180, 181, 191, 199, 200, 204, 206, 207, 211, 213, 214, 216, 217, 218, 219, 221, 222, 227, 228, 229, 231, 233, 234, 235, 236], "them": [0, 5, 6, 7, 9, 11, 17, 20, 22, 23, 27, 29, 32, 36, 47, 53, 54, 56, 57, 58, 59, 61, 63, 66, 68, 71, 74, 76, 77, 79, 80, 83, 84, 85, 87, 89, 90, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 112, 114, 115, 117, 118, 125, 126, 127, 131, 133, 134, 136, 143, 146, 148, 188, 196, 203, 207, 211, 213, 216, 219, 221, 222, 223, 230, 231, 233, 234, 237], "theme": [11, 62], "themselv": [2, 32, 53, 58, 101, 130, 211, 222], "theorem": [15, 29, 50, 53, 66, 76, 77, 78, 124, 130, 135, 150, 166, 170, 172, 176, 180, 181, 183, 193, 195, 199, 201, 203, 208, 211], "theoret": [4, 10, 49, 57, 58, 59, 66, 77, 108, 123, 124, 126, 128, 146, 202, 203, 205, 211], "theori": [1, 2, 3, 4, 5, 7, 29, 30, 49, 58, 61, 65, 68, 70, 74, 76, 77, 87, 96, 106, 124, 126, 129, 131, 135, 143, 146, 159, 175, 177, 183, 192, 199, 200, 203, 207, 208], "theoriz": 5, "thequeueabstractdatatyp": 22, "therebi": [5, 27, 29, 59, 63, 74, 96, 109, 117, 124, 219, 230], "therefor": [2, 3, 4, 6, 8, 9, 13, 16, 19, 20, 22, 27, 29, 30, 36, 43, 44, 46, 50, 53, 56, 57, 58, 59, 61, 63, 66, 67, 68, 71, 74, 75, 76, 80, 84, 94, 95, 96, 101, 102, 103, 106, 110, 113, 118, 123, 124, 125, 126, 130, 132, 133, 134, 136, 143, 146, 148, 158, 159, 163, 170, 174, 178, 180, 183, 186, 188, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 206, 207, 211, 213, 222], "thereof": 96, "thesi": 97, "theta": [16, 27, 29, 48, 50, 51, 52, 53, 56, 57, 58, 59, 68, 71, 74, 75, 76, 85, 87, 118, 123, 176, 178, 191, 195, 210, 211], "theta_": [71, 74, 75, 80, 121, 124, 211], "theta_t": 121, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239], "thick": [30, 32], "thing": [2, 5, 7, 36, 44, 50, 53, 58, 59, 61, 63, 68, 71, 74, 76, 77, 80, 89, 90, 94, 95, 96, 100, 104, 106, 109, 115, 120, 126, 207, 211, 213, 217, 221, 223, 231, 233, 237, 238], "thingi": 231, "think": [2, 3, 6, 7, 8, 19, 26, 36, 43, 48, 50, 53, 56, 57, 58, 59, 61, 63, 66, 68, 71, 74, 82, 85, 89, 90, 91, 94, 96, 109, 119, 120, 124, 126, 133, 142, 146, 158, 165, 174, 180, 207, 211, 216, 217, 221, 223, 237], "third": [16, 27, 32, 46, 53, 56, 58, 59, 63, 66, 76, 84, 94, 97, 99, 113, 119, 171, 181, 190, 211, 236], "thoma": 0, "thorough": [68, 94, 96], "thoroughli": [94, 108, 110], "those": [4, 6, 7, 8, 11, 27, 29, 48, 53, 56, 58, 59, 61, 62, 66, 68, 80, 87, 94, 95, 96, 97, 98, 100, 102, 103, 104, 112, 117, 118, 126, 213, 217, 219, 236, 238], "though": [2, 3, 5, 7, 20, 27, 50, 53, 56, 57, 58, 59, 61, 66, 68, 71, 74, 76, 80, 82, 83, 94, 100, 101, 103, 109, 110, 115, 118, 119, 123, 124, 144, 174, 180, 181, 214, 228, 231], "thought": [2, 5, 9, 29, 57, 58, 59, 68, 79, 124, 130, 211], "thousand": [57, 58, 109], "thread": [71, 78, 215, 218], "thread1": 231, "thread2": 231, "thread_1_current_valu": 214, "thread_1_new_valu": 214, "thread_2_current_valu": 214, "thread_2_new_valu": 214, "thread_index": [214, 231], "thread_saf": [214, 231], "thread_unsaf": [214, 231], "threaten": 95, "three": [4, 13, 16, 17, 19, 27, 29, 30, 53, 56, 57, 58, 66, 68, 71, 80, 82, 83, 89, 94, 96, 98, 99, 102, 107, 127, 130, 133, 136, 144, 147, 171, 200, 207, 211, 216, 231], "threshold": [17, 29, 54, 58, 84, 105, 108, 110], "thrice": 125, "through": [2, 3, 4, 5, 6, 7, 10, 11, 13, 17, 19, 20, 27, 29, 30, 32, 43, 44, 46, 47, 48, 53, 55, 57, 58, 59, 62, 63, 66, 68, 74, 80, 85, 88, 94, 95, 96, 97, 98, 99, 100, 101, 104, 107, 109, 110, 118, 123, 124, 126, 128, 130, 146, 150, 176, 207, 211, 213, 216, 217, 219, 222, 228, 230], "throughout": [27, 30, 46, 48, 56, 57, 58, 76, 77, 94, 100, 101, 109, 217, 219], "throughput": [29, 99, 108, 110, 118], "throughputmod": 90, "throw": [3, 8, 36, 57, 59, 94, 130, 131, 133, 137, 172], "thrown": 213, "thu": [3, 4, 5, 6, 16, 17, 27, 29, 30, 32, 36, 44, 53, 56, 57, 58, 59, 61, 63, 66, 68, 71, 80, 83, 84, 94, 95, 96, 98, 103, 124, 126, 130, 133, 139, 140, 143, 146, 150, 159, 176, 181, 193, 198, 206, 211, 213, 216, 217, 219, 221, 231], "ti": [53, 57, 58, 95, 118, 221], "tibshirani": [0, 60, 61, 67, 68, 73, 74], "tick_param": [53, 58], "tid": 216, "tidi": 61, "tie": 137, "tie_weight": 117, "tight": [16, 29, 66, 85, 94], "tight_layout": [53, 59, 62, 85, 123, 124, 171], "tighten": 29, "tightli": [87, 94, 182, 221, 222], "tiktok": [95, 101], "tiktoken": [57, 58, 213], "tikzpictur": [30, 32], "tild": [53, 58, 124], "tile": 53, "till": [46, 56, 59, 63], "tilt": 80, "tim": [0, 146], "time": [3, 5, 8, 9, 10, 16, 44, 47, 48, 51, 53, 56, 57, 58, 59, 60, 62, 63, 66, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 120, 123, 124, 125, 127, 128, 131, 136, 144, 146, 148, 150, 155, 156, 157, 158, 172, 174, 176, 178, 180, 188, 190, 191, 192, 195, 196, 207, 208, 210, 211, 214, 216, 217, 218, 219, 227, 231, 234, 235, 236, 237, 238], "time_complexity_analyz": [11, 17], "time_effici": 230, "time_format_str": [114, 115], "time_ineffici": 230, "time_needed_over_all_tokens_in_second": 118, "time_sp": 113, "time_taken": [111, 218], "time_taken_per_it": 118, "timeit": [78, 111, 113, 116, 230], "timelimit": 90, "timelin": [94, 114, 115], "timeout": 58, "timeouterror": 9, "timer": [97, 111], "timestamp": [98, 100, 109, 114, 115], "timestep": 59, "tini": [94, 115], "tinyshakespear": 58, "tip": [29, 70, 99, 106, 117], "tissu": 63, "titl": [3, 53, 54, 57, 59, 62, 68, 76, 77, 80, 98, 119, 123, 124, 156, 168, 169, 170, 171, 174, 207, 238], "tmp": [6, 61, 69, 83, 84, 85, 169, 170, 174, 190, 213], "tmp_trainer": 117, "tn": [95, 103], "to_account": 231, "to_bettertransform": 117, "to_contain": 217, "to_empti": 117, "to_find": 5, "to_numpi": [68, 97], "to_object": 217, "to_panda": 120, "to_yaml": 217, "tobyt": 63, "todai": 57, "todo": [43, 44, 54, 58, 59, 62, 117, 120, 139, 147, 159], "tofil": 58, "togeth": [5, 6, 11, 16, 20, 27, 29, 44, 46, 53, 56, 57, 59, 61, 63, 66, 68, 71, 76, 84, 85, 87, 88, 94, 97, 98, 103, 109, 112, 114, 124, 127, 184, 217], "toggl": 115, "toi": [2, 62, 66, 88, 124], "tok_emb": [58, 59, 120], "token": [48, 71, 72, 78, 94, 96, 99, 117, 118, 119, 121, 122, 124, 218], "token_embed": [58, 112, 114], "token_id": 58, "token_position_pdrop": [112, 114], "token_to_index": 59, "tokenembed": 58, "tokenis": 58, "tokenization_utils_bas": [120, 121], "tokenized_train_dataset": [72, 120], "tokenized_valid_dataset": [72, 120], "tokenizedbatch": [72, 120, 121], "tokenizer_kwarg": [120, 121], "tokens_per_it": 59, "tol": [54, 62], "told": [59, 76, 124, 202, 205], "toler": [54, 62, 66, 95, 204], "tolist": [59, 72, 112, 120], "tolkien": 98, "tom": [66, 73, 74], "tomato": [99, 229], "tomorrow": 103, "tone": 76, "toni": 0, "too": [5, 11, 17, 23, 27, 29, 58, 59, 66, 68, 71, 74, 75, 76, 77, 83, 88, 94, 96, 97, 101, 102, 104, 106, 113, 117, 119, 123, 130, 174, 179, 180, 208, 218, 219, 223], "took": [27, 97, 111, 112, 114], "tool": [30, 48, 53, 66, 84, 95, 97, 100, 102, 104, 106, 108, 111, 115, 116, 199, 214], "toolbox": 94, "toolkit": [30, 84, 94], "top": [16, 22, 23, 27, 32, 34, 35, 36, 53, 56, 57, 58, 59, 61, 66, 67, 68, 74, 76, 82, 83, 84, 85, 87, 96, 102, 113, 118, 124, 127, 190, 216, 229], "top_bar": 76, "top_el": 35, "top_item": 32, "top_k": [58, 59, 119], "top_k_valu": 58, "top_p": [58, 59, 119], "top_p_logit": 58, "topic": [66, 67, 68, 80, 96, 100, 102, 109], "topk": 58, "topmost": [32, 117], "torch": [54, 56, 58, 59, 62, 71, 72, 75, 76, 77, 89, 91, 94, 104, 111, 112, 114, 115, 117, 118, 119, 120, 121, 123, 124, 213, 216, 217, 218, 226], "torch_jit_model_ev": 117, "torch_stabl": 94, "torch_util": [112, 120, 121], "torchaudio": 94, "torchinfo": [58, 94, 213], "torchmetr": [59, 103, 213], "torchrun": [89, 90], "torchtext": 213, "torchtun": [72, 114, 116], "torchvis": [77, 94, 115, 213, 217], "torgersen": 76, "toronto": [57, 58], "toss": [130, 131, 146, 148, 229], "tot": 68, "total": [16, 17, 36, 46, 53, 56, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 76, 77, 78, 80, 88, 89, 95, 99, 103, 112, 113, 114, 123, 124, 125, 128, 130, 135, 137, 143, 146, 147, 148, 150, 159, 174, 180, 181, 184, 213, 214, 216, 230, 239], "total_batch_loss": 59, "total_bit": 63, "total_correct": 119, "total_flo": [72, 120], "total_flops_need": 118, "total_hour": 29, "total_iter": [214, 231], "total_loss": [59, 120, 121], "total_num": 46, "total_paramet": [58, 72], "total_predict": 121, "total_process": 216, "total_sampl": 119, "total_tim": 112, "total_tokens_in_corpu": 118, "total_trainable_paramet": [58, 59, 71, 72, 118, 120, 121], "total_training_time_dai": 118, "total_training_time_second": 118, "totensor": [77, 217], "tottim": [213, 230], "touch": [27, 30, 67, 80, 94, 116, 124, 134, 136], "tournament": 136, "toward": [0, 29, 30, 47, 53, 56, 57, 59, 61, 66, 74, 85, 94, 96, 106, 110, 123, 124, 158, 159], "towardsdatasci": [0, 128, 146, 148], "toxic": 109, "toyota": 196, "tp": [95, 103, 238], "tpr": [72, 120], "tpu": 108, "tqdm": [54, 59, 94, 112, 115, 119, 120, 121, 217], "trace": [5, 10, 94, 114, 115, 211, 229, 236, 238], "trace_handl": [113, 114, 115], "traceback": [58, 59, 117, 123, 226, 231], "tracing_garbage_collect": 115, "track": [5, 19, 32, 35, 43, 46, 47, 78, 88, 93, 94, 95, 98, 99, 100, 101, 106, 108, 109, 110, 226, 231], "tractabl": [29, 56, 57, 71, 76], "trade": [11, 17, 43, 66, 95, 96, 97, 98, 102, 231], "tradeoff": [87, 106, 107], "tradit": [30, 36, 55, 56, 57, 58, 59, 94, 96, 98, 99, 105, 109, 110, 119, 221], "tradition": [56, 57, 59, 71, 89, 110], "traffic": [101, 108], "trail": [48, 94], "trailer": 95, "train": [0, 1, 8, 48, 49, 50, 53, 54, 61, 62, 65, 68, 69, 71, 74, 75, 76, 78, 84, 87, 88, 89, 90, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 159, 191, 203, 204, 213, 217, 218, 219, 221, 228], "train_accuraci": [120, 121], "train_batch": 58, "train_batch_index": [59, 218], "train_data": 58, "train_data_dtyp": 58, "train_data_shap": 58, "train_dataload": [58, 120, 121], "train_dataset": [58, 59, 72, 117, 120, 121], "train_df": 120, "train_gpt_": 90, "train_id": 58, "train_load": [59, 119], "train_loss": [72, 120, 121], "train_model": [120, 121], "train_one_epoch": [120, 121], "train_path": 58, "train_runtim": [72, 120], "train_sampl": 119, "train_samples_per_second": [72, 120], "train_set_s": 59, "train_siz": 59, "train_steps_per_second": [72, 120], "train_student_model": 121, "train_student_one_epoch": 121, "train_test_split": [54, 62, 69, 72, 75, 76, 120, 121], "train_valid_split": [72, 120, 121], "trainabl": [58, 59, 71, 72], "trainconfig": [217, 219], "trained_model": 59, "trainer": [72, 89, 94, 97, 117, 118, 119, 120, 121, 219, 228], "trainer_all_memb": 117, "trainer_config": [59, 119], "trainer_util": [72, 120, 121], "trainercallback": 117, "trainerconfig": [59, 119], "trainerev": [59, 119], "trainerwithoutdependencyinject": 94, "training_arg": [72, 117, 120], "training_dai": 118, "training_loss": [72, 120], "training_step": 117, "trainingargu": [72, 117, 120, 121], "trainingstrategi": 228, "trainoutput": [72, 120], "transact": [94, 96, 97, 99, 109], "transcend": 57, "transfer": [36, 58, 94, 98, 99, 216, 231], "transform": [0, 2, 29, 36, 48, 56, 59, 68, 71, 72, 77, 78, 79, 83, 85, 93, 95, 96, 97, 98, 101, 102, 108, 112, 114, 117, 119, 120, 121, 122, 123, 124, 126, 180, 192, 193, 200, 213, 217, 219, 221, 222], "transformconfig": [217, 219], "transformfunc": 221, "transit": [4, 29, 32, 57, 59, 84, 100, 102, 109, 123, 124], "translat": [0, 5, 17, 30, 57, 58, 66, 68, 76, 78, 80, 83, 95, 96, 98, 126, 144, 174, 180, 190], "translated_logit": 124, "translated_prob": 124, "transmit": 180, "transpar": [48, 96], "transport": 94, "transpos": [53, 57, 58, 68, 71, 97, 112, 114, 118, 119], "transpose_qkv": 58, "transposit": [56, 58, 82, 97], "trap": 94, "travel": [58, 84], "travers": [11, 13, 16, 19, 26, 27, 29, 30, 34, 35, 37, 43, 46, 47, 58, 97, 98], "traverse_dataframe_by_column": 97, "traverse_dataframe_by_row": 97, "traverse_numpy_by_column": 97, "traverse_numpy_by_row": 97, "travi": 94, "treat": [2, 3, 4, 5, 7, 22, 23, 26, 29, 30, 32, 36, 50, 53, 56, 57, 58, 59, 60, 61, 63, 66, 68, 71, 76, 84, 85, 96, 97, 98, 101, 106, 118, 119, 124, 126, 127, 143, 146, 158, 174, 178, 180, 181, 183, 188], "treatment": [53, 68, 80, 87, 94, 95, 101, 103, 124, 167, 172, 183, 203, 204], "tree": [11, 16, 17, 27, 66, 96, 101, 102, 106, 107, 217, 228], "trend": [93, 95, 97, 99, 110, 190], "trepid": 29, "trevor": [0, 60, 61, 67, 68, 73, 74], "tri": [8, 36, 59, 61, 66, 123], "trial": [106, 117, 124, 130, 143, 148, 152, 155, 180, 207, 208], "triangl": [59, 66, 68, 84, 172], "triangular": [56, 58, 59, 119, 120, 172], "trick": [58, 75, 78, 106, 213], "tricki": [46, 59, 68, 76, 111, 184], "trigger": [9, 36, 94, 96, 98, 99, 106, 109, 110, 228], "tril": [58, 119, 120], "tril_mask": 58, "trillion": 118, "trip": 76, "tripl": 118, "triplet": [79, 96, 124, 130, 143, 148, 159, 196], "triu": [59, 112, 114], "trivial": [26, 27, 29, 30, 36, 58, 61, 66, 94, 96, 99, 141, 180], "trm": 50, "troubl": [66, 68, 77, 98, 181], "truck": 101, "true": [2, 3, 4, 5, 7, 8, 11, 17, 22, 23, 25, 26, 27, 30, 32, 35, 36, 37, 44, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 68, 69, 71, 72, 74, 75, 76, 77, 80, 83, 87, 89, 90, 91, 94, 95, 97, 98, 100, 102, 103, 104, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 131, 141, 142, 143, 144, 146, 147, 148, 156, 158, 159, 164, 165, 171, 174, 178, 180, 190, 193, 195, 203, 204, 207, 213, 216, 217, 218, 219, 222, 223, 225, 227, 230, 233, 234, 237, 238, 239], "true_pmf": [143, 146, 148, 156, 159], "true_popul": [143, 148, 159], "truli": [68, 133, 136, 143, 213], "truncat": [3, 72, 120, 121], "truncation_sid": 120, "trust": [62, 94, 95], "trust_remote_cod": [72, 120, 121], "trustworthi": 48, "trut": 59, "truth": [30, 48, 58, 59, 61, 68, 94, 108, 119, 180, 227], "try": [2, 3, 5, 6, 7, 8, 11, 29, 32, 50, 53, 58, 59, 62, 66, 68, 74, 75, 87, 94, 96, 98, 102, 106, 110, 112, 115, 117, 126, 158, 174, 180, 191, 207, 213, 222, 223, 225, 228, 231, 234, 238], "tsaplot": 68, "tsv": [97, 99], "tt": [137, 139], "ttl": 53, "tu": 57, "tuition": 80, "tumor": 96, "tune": [59, 70, 72, 78, 93, 94, 95, 96, 105, 107, 108, 117, 122, 123, 219], "tupl": [5, 6, 20, 30, 48, 54, 58, 59, 61, 62, 63, 66, 68, 69, 72, 74, 75, 76, 80, 82, 83, 89, 94, 98, 111, 112, 114, 117, 119, 120, 121, 124, 130, 133, 139, 171, 191, 211, 238], "turk": 97, "turn": [3, 29, 30, 50, 53, 61, 64, 66, 68, 74, 76, 77, 94, 96, 97, 113, 117, 126, 130, 154, 158, 159, 161, 174, 180, 181, 184, 193, 211, 216], "tutor": [27, 30], "tutori": [0, 27, 57, 58, 70, 72, 89, 92, 94, 104, 114, 116, 121, 126, 127], "tweak": [96, 104, 117, 130], "tweepi": 99, "twice": [13, 19, 43, 47, 58, 94, 102, 125, 127, 128, 133, 136, 137, 155, 180, 190, 234], "twitter": [93, 95, 97, 99], "two": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 17, 18, 20, 21, 27, 29, 30, 32, 40, 46, 48, 50, 53, 55, 56, 57, 58, 61, 62, 63, 64, 67, 68, 71, 74, 75, 77, 78, 79, 80, 82, 83, 84, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 107, 113, 117, 118, 121, 123, 124, 127, 128, 133, 134, 137, 143, 144, 146, 147, 148, 153, 155, 158, 163, 167, 168, 169, 171, 172, 174, 176, 177, 178, 179, 180, 186, 187, 188, 189, 196, 198, 200, 203, 208, 211, 217, 218, 219, 221, 227, 231, 233], "two_sum": 43, "twosum": [13, 19, 43], "txt": [58, 59, 89, 97, 99, 100, 104, 114, 213], "type": [1, 4, 8, 11, 13, 16, 17, 19, 20, 27, 29, 33, 34, 35, 36, 43, 44, 46, 47, 48, 54, 58, 59, 62, 63, 66, 69, 72, 74, 75, 77, 78, 80, 83, 88, 89, 90, 91, 95, 98, 100, 102, 103, 104, 106, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 127, 128, 130, 136, 143, 171, 180, 211, 213, 214, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239], "type1": 6, "type2": 6, "type_cal": 237, "type_check": 5, "type_func": 238, "type_hint": 117, "type_hint_str": 117, "type_hint_to_str": 117, "type_init": 237, "type_nam": 238, "type_new": 237, "type_str": 238, "typealia": 58, "typecheck": 94, "typeddict": [72, 120, 121], "typeerror": [8, 94, 123, 221, 226, 229, 234], "typeobject": 237, "typescript": 10, "typevar": [2, 5, 7, 8, 22, 23, 30, 32, 54, 62, 69, 75, 94, 213, 222, 229, 234, 236, 238], "typic": [2, 6, 7, 8, 9, 11, 13, 17, 19, 29, 30, 32, 36, 43, 44, 47, 53, 56, 58, 59, 61, 63, 66, 68, 71, 74, 77, 80, 82, 84, 87, 88, 90, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 114, 119, 121, 123, 124, 130, 146, 147, 179, 210, 211, 216, 217, 239], "typing_extens": [58, 69, 217, 219, 229, 237, 238], "typo": 66, "u": [4, 5, 6, 7, 8, 13, 16, 19, 29, 32, 36, 43, 44, 46, 47, 53, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 89, 90, 94, 97, 98, 100, 102, 106, 107, 116, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 133, 139, 143, 147, 159, 167, 168, 170, 172, 174, 176, 180, 181, 184, 186, 192, 193, 199, 200, 203, 210, 211, 212, 213, 231], "u1": 168, "u2": 168, "u_1": [83, 85], "u_1v_1": 85, "u_1v_2": 85, "u_1v_n": 85, "u_2": [83, 85], "u_2v_1": 85, "u_2v_2": 85, "u_2v_n": 85, "u_3": 85, "u_4": 85, "u_d": 83, "u_i": 85, "u_m": 85, "u_mv_1": 85, "u_mv_2": 85, "u_mv_n": 85, "uat": 100, "uber": 98, "ubiquit": [27, 32, 66, 211], "ubuntu": [90, 94], "ubuntu2004": 90, "uci": 97, "ugli": 221, "ui": [120, 121], "uint16": 58, "uint32": 71, "uint8": 63, "uk": 98, "ultim": [7, 29, 53, 57, 66, 68, 74, 94, 96, 104, 109, 118, 124], "uml": 221, "unabl": [61, 62, 72, 238], "unaffect": 66, "unalt": 100, "unambigu": 146, "unassign": 9, "unavail": 115, "unavoid": 66, "unbalanc": [62, 75], "unbatch": 59, "unbias": [56, 58, 76, 107], "unbiased": 68, "unbound": [32, 66, 124], "uncal": 216, "uncertainti": [66, 206], "unchang": [56, 80, 82, 83, 88, 124, 133, 136, 180], "unclean": 35, "uncohesion_list": 11, "uncom": [59, 127], "uncommon": [5, 74, 94, 96, 103], "uncondit": 68, "unconsci": [173, 200], "unconstrain": 74, "uncorrel": [178, 190], "uncount": [130, 162], "uncov": [94, 101], "undefin": 3, "under": [2, 4, 27, 29, 30, 53, 56, 58, 59, 66, 68, 71, 76, 78, 85, 87, 94, 96, 100, 101, 103, 108, 112, 114, 117, 118, 126, 170, 174, 180, 203, 211, 213, 217, 234, 238], "underbrac": [36, 53, 56, 66, 68, 71, 74, 76, 123, 124, 148, 186, 188, 192, 196, 203, 207, 210, 211], "underdetermin": 80, "underestim": 68, "underfit": [68, 71, 107], "underflow": [68, 75, 77, 124], "undergo": [56, 100], "undergradu": 68, "underli": [6, 22, 23, 29, 50, 51, 53, 57, 58, 61, 63, 65, 66, 68, 71, 79, 87, 89, 91, 98, 100, 102, 106, 110, 120, 124, 126, 159, 207, 210, 211, 219, 239], "underlook": 94, "underneath": 174, "underperform": 57, "underpin": [27, 30, 32, 47], "underscor": [57, 85, 94], "underset": [50, 51, 53, 56, 57, 58, 61, 64, 66, 68, 71, 74, 76, 87, 167, 206, 211], "underst": 57, "understand": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 13, 17, 19, 27, 29, 30, 32, 36, 43, 46, 47, 48, 50, 55, 56, 57, 58, 59, 61, 63, 66, 68, 71, 76, 79, 80, 82, 83, 84, 85, 87, 95, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 114, 116, 117, 118, 119, 120, 123, 124, 126, 128, 130, 133, 134, 136, 174, 181, 191, 204, 211, 212, 213, 231, 237], "understood": [29, 30, 44, 59, 68, 71, 89, 99, 109, 123, 125, 128, 133, 136, 150, 159, 213, 218], "underutil": 96, "underweight": 76, "undesir": 6, "undo": 58, "unembed": [56, 58], "unexpect": [3, 93, 94, 226, 233, 236], "unexplain": 68, "unfilt": 99, "unfold": 30, "unfortun": [53, 66, 77, 180], "unhandl": 117, "unhash": 239, "uni": 58, "unidirect": 57, "unif": 94, "unifi": [16, 57, 94, 97, 98, 99, 100, 109], "uniform": [17, 19, 56, 59, 66, 68, 72, 78, 94, 124, 128, 143, 150, 153, 154, 159, 169, 171, 172, 174, 175, 200], "uniformli": [13, 19, 30, 61, 66, 124, 126, 128, 159], "unintend": [2, 110, 236], "unintention": 2, "union": [8, 11, 27, 32, 36, 53, 54, 57, 58, 59, 61, 62, 72, 75, 98, 117, 126, 150, 155, 218, 221, 228, 238], "union_class_and_instance_attribut": 117, "union_param": 59, "uniqu": [9, 11, 17, 27, 44, 47, 50, 56, 57, 58, 61, 62, 68, 76, 84, 85, 88, 94, 95, 96, 97, 98, 101, 104, 109, 130, 158, 167, 213, 217, 222, 235, 238], "unique_birthdai": 128, "unique_id": [5, 217, 219], "unit": [3, 4, 5, 8, 11, 17, 29, 36, 48, 54, 57, 59, 62, 63, 68, 71, 80, 82, 83, 88, 95, 97, 98, 100, 105, 108, 110, 118, 124, 142, 174, 216, 217], "uniti": [163, 176], "unitless": 68, "univari": [73, 75, 76, 191, 194], "univers": [0, 1, 4, 5, 29, 30, 48, 49, 52, 53, 55, 57, 58, 66, 79, 80, 84, 90, 123, 124, 132, 133, 159], "unix": [94, 118], "unk": [56, 59], "unk_token": 120, "unknowingli": 3, "unknown": [50, 51, 53, 56, 57, 65, 66, 68, 71, 72, 74, 80, 87, 98, 102, 115, 124, 126, 210, 211, 212, 222, 238], "unlabel": [57, 96], "unless": [3, 7, 27, 56, 59, 63, 82, 85, 94, 117, 120, 123, 142, 211, 236], "unlik": [5, 6, 11, 17, 29, 30, 43, 53, 58, 59, 66, 68, 83, 85, 94, 98, 119, 155, 163, 213], "unlink": 225, "unload": [71, 97], "unlucki": [36, 159], "unnecessari": [7, 11, 35, 68, 94, 103, 121, 230], "unnorm": [56, 59, 121], "unnot": 3, "uno": 17, "unobserv": 53, "unoccupi": 11, "unord": 98, "unordered_linear_search_it": 30, "unordered_linear_search_iterative_for_loop": 30, "unordered_linear_search_iterative_while_loop": 30, "unordered_linear_search_recurs": 30, "unordered_linear_search_tail_recurs": 30, "unordered_list": 30, "unpack": [62, 74, 75, 76, 181], "unpredict": [109, 214, 216], "unprocess": [47, 99, 100], "unproduct": 29, "unqiu": 43, "unqualifi": 213, "unreason": 94, "unrel": [181, 222], "unreli": [48, 94], "unresolv": 94, "unsaf": [2, 3, 6, 231], "unsafe_func": 8, "unsafe_transf": 231, "unsafeviewbackward0": 114, "unscal": 58, "unscaled_dot_product": 58, "unscaled_vari": 58, "unscript": 94, "unsearch": 30, "unseen": [57, 58, 75, 87, 106, 107, 204], "unsign": 77, "unsort": [11, 27, 30, 43, 48], "unspecifi": [5, 94], "unsqueez": [58, 59, 77, 112, 114, 119, 120, 124], "unstabl": [58, 72, 94], "unstable_softmax": 124, "unstructur": [96, 97, 99, 101], "unsuccess": 27, "unsupervis": [0, 1, 8, 55, 56, 61, 71, 96, 100, 121], "unsupport": [5, 6, 8, 48, 62, 112, 114], "unsur": [66, 94, 113, 143], "until": [3, 9, 27, 29, 30, 35, 36, 43, 44, 46, 47, 53, 58, 59, 61, 62, 66, 77, 89, 91, 94, 106, 111, 123, 213, 231, 234], "untouch": 222, "untyp": [58, 89, 91, 217], "unus": [62, 68, 75, 231], "unusu": [101, 109], "unwant": [2, 96, 99], "unwind": 27, "up": [5, 8, 13, 17, 19, 22, 23, 27, 29, 36, 43, 44, 46, 47, 48, 53, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 74, 76, 80, 83, 96, 97, 99, 100, 103, 106, 108, 110, 112, 113, 114, 115, 118, 123, 124, 126, 127, 128, 130, 134, 136, 143, 158, 174, 190, 208, 211, 213, 216, 217, 223, 226, 235, 238], "up008": [9, 58], "up_proj": 72, "updat": [20, 27, 29, 30, 32, 36, 46, 47, 58, 59, 61, 62, 69, 74, 84, 90, 94, 95, 97, 99, 100, 101, 104, 108, 109, 112, 114, 115, 117, 118, 123, 211, 214, 218, 219, 230, 231, 238], "updated_at": 100, "updated_centroid": 62, "upfront": 29, "upgrad": [90, 100], "upheld": 101, "upload": [59, 96, 101, 109, 218], "upon": [5, 7, 8, 29, 30, 47, 56, 57, 68, 94, 101, 108, 124, 158, 180, 181, 213], "upper": [16, 27, 29, 30, 56, 57, 58, 59, 65, 66, 85, 94, 123, 160, 203, 207, 213, 238], "upstream": 94, "urgent": 109, "url": [0, 48, 58, 59, 63, 94, 97, 216, 231], "urllib": 63, "urlopen": 63, "us": [0, 2, 3, 4, 7, 8, 10, 11, 16, 17, 20, 23, 26, 27, 29, 33, 37, 38, 44, 46, 47, 48, 52, 53, 54, 56, 57, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 136, 140, 142, 143, 144, 146, 148, 150, 155, 156, 159, 165, 169, 170, 171, 173, 174, 179, 180, 181, 183, 184, 185, 190, 193, 196, 198, 199, 201, 203, 207, 210, 211, 212, 214, 217, 218, 219, 221, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238], "usa": [60, 61, 68, 98], "usabl": [94, 99, 100, 102], "usaco": [28, 29], "usag": [5, 6, 32, 36, 43, 46, 58, 71, 76, 87, 94, 96, 99, 100, 102, 104, 110, 115, 118, 134, 136, 174, 213, 216, 217, 218, 222, 230], "use_amp": [59, 119], "use_deterministic_algorithm": [58, 71, 104], "use_devic": 113, "use_svg_displai": [54, 62, 63, 75, 77, 128, 143, 178, 211], "useless": [59, 95], "usepackag": [30, 32], "user": [5, 9, 27, 30, 32, 48, 63, 71, 72, 90, 94, 95, 96, 98, 99, 100, 101, 102, 106, 108, 109, 110, 113, 116, 117, 126, 130, 216, 217, 225, 228, 230, 236, 239], "user_all_input_types_correct": 238, "user_id": 5, "user_info": 5, "user_schema": 238, "userid": 5, "userlist": 7, "usernam": [5, 90, 94, 225], "userwarn": [58, 71, 75, 104, 115, 128, 144, 169, 170, 174, 190, 207, 211], "usetikzlibrari": [30, 32], "usr": [62, 89, 90, 216], "usual": [2, 4, 5, 6, 8, 16, 27, 30, 36, 44, 46, 47, 50, 53, 56, 57, 58, 59, 61, 64, 66, 68, 71, 74, 76, 87, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 105, 106, 107, 109, 118, 121, 123, 124, 130, 158, 180, 188, 210, 211, 213, 217, 218], "uszkoreit": [0, 1, 55, 57, 70, 71], "utf": [57, 58, 104, 213, 222], "util": [2, 3, 5, 11, 30, 32, 36, 47, 53, 54, 56, 57, 59, 61, 62, 63, 72, 75, 76, 77, 80, 84, 89, 94, 95, 96, 97, 98, 99, 100, 106, 108, 109, 110, 112, 114, 115, 117, 119, 120, 121, 126, 128, 144, 147, 155, 168, 169, 170, 172, 174, 178, 190, 207, 211, 213, 214, 216, 217, 222, 231], "uva": [0, 57, 58], "uvadlc": 0, "uvals2": 159, "v": [4, 5, 32, 35, 48, 53, 56, 57, 58, 59, 61, 62, 64, 66, 68, 71, 72, 76, 78, 82, 83, 84, 85, 112, 114, 118, 136, 143, 144, 146, 147, 148, 182, 192, 195, 231, 232, 238], "v0": [58, 94], "v1": [0, 1, 55, 57, 82, 123, 124], "v100": 118, "v100_16gb": 118, "v100_32gb": 118, "v2": [1, 56, 82, 94, 121, 124], "v3": [1, 55, 57, 82, 121, 213], "v4": [0, 1, 55, 57, 72, 94, 120, 121, 123], "v9": [1, 55, 57], "v_": 82, "v_1": [4, 82, 83, 84, 85], "v_2": [4, 82, 83, 84, 85], "v_3": 85, "v_d": [82, 83, 84], "v_j": 85, "v_n": 85, "v_proj": 72, "va": [1, 10, 124], "vacat": 95, "vacuou": 30, "vagu": [89, 96], "vaibhav": 8, "vaidehi": [17, 18], "val": [34, 58], "val_accuraci": [120, 121], "val_correct_predict": 120, "val_loss": [120, 121], "valid": [2, 3, 4, 5, 6, 9, 13, 19, 27, 29, 32, 33, 36, 38, 43, 44, 47, 48, 53, 56, 57, 58, 66, 68, 69, 72, 77, 78, 80, 87, 89, 93, 96, 97, 98, 99, 101, 102, 103, 107, 110, 120, 121, 124, 143, 195, 201, 217, 219], "valid_accuraci": 119, "valid_data": 58, "valid_dataload": [58, 120, 121], "valid_dataset": [58, 59, 72, 120, 121], "valid_df": 120, "valid_id": 58, "valid_load": [59, 119], "valid_metr": 72, "valid_one_epoch": 121, "valid_path": 58, "valid_s": 59, "valid_sampl": 119, "valid_solv": 69, "valid_this_epoch_average_loss": [59, 119], "validate_cod": 238, "validate_global_pool": [217, 219], "validate_one_epoch": 120, "validate_statu": 238, "validationerror": 238, "validationinfo": 238, "valu": [2, 3, 5, 6, 7, 8, 9, 11, 16, 19, 20, 27, 29, 32, 36, 43, 46, 47, 48, 50, 52, 53, 54, 59, 61, 62, 63, 65, 66, 67, 69, 71, 74, 75, 76, 77, 80, 84, 85, 87, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 114, 117, 118, 119, 120, 123, 124, 126, 127, 128, 137, 139, 141, 143, 147, 148, 150, 154, 155, 156, 159, 163, 164, 171, 174, 176, 180, 181, 184, 191, 198, 199, 200, 208, 211, 212, 213, 214, 216, 217, 219, 222, 227, 231, 233, 235, 236, 237, 238], "valuabl": [57, 58, 94, 95, 99, 103, 109], "value_count": 76, "value_dp": 59, "value_error": 238, "value_selecting_reduction_backward": 114, "value_typ": 238, "valueerror": [5, 48, 54, 59, 62, 69, 71, 112, 114, 117, 213, 217, 219, 222, 226, 228, 229, 238], "van": [7, 10, 94], "vanilla": 121, "vanish": [53, 57, 58, 71, 104, 106], "vanishingli": 126, "vapnik": [66, 87], "var": [58, 68, 71, 74, 75, 76, 90, 100, 104, 113, 142, 144, 146, 147, 151, 155, 158, 165, 168, 169, 170, 178, 183, 188, 191, 200, 203, 206, 207, 230], "var_": 75, "var_beta_hat": 68, "var_smooth": 75, "varepsilon": [68, 203], "vari": [27, 32, 43, 46, 58, 59, 68, 80, 82, 94, 107, 109, 123, 147, 155, 170, 183, 216, 233], "variabl": [0, 3, 4, 7, 8, 10, 13, 16, 19, 27, 29, 32, 36, 43, 44, 50, 52, 54, 57, 58, 59, 61, 62, 63, 67, 74, 76, 77, 78, 80, 87, 89, 90, 94, 96, 100, 101, 102, 103, 104, 109, 110, 112, 120, 121, 123, 124, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 193, 194, 197, 198, 199, 206, 207, 210, 213, 216, 219, 225, 231, 233, 235, 237], "variable_name_or_nam": 112, "varianc": [0, 1, 53, 55, 56, 57, 59, 61, 66, 71, 74, 75, 76, 78, 87, 106, 111, 118, 123, 127, 146, 154, 164, 171, 173, 175, 176, 178, 180, 182, 186, 190, 193, 197, 201, 203, 207, 210, 211], "variance_i": [127, 190], "variance_inflation_factor": 68, "variance_x": [127, 190], "variant": [46, 61, 99, 106, 119, 121, 124], "variat": [30, 47, 53, 59, 68, 76, 101, 102, 103, 109, 213], "varieti": [30, 46, 53, 68, 96, 97], "variou": [5, 8, 17, 30, 32, 47, 56, 57, 58, 68, 71, 76, 79, 80, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 118, 126, 159, 193, 199, 203, 219, 225], "varphi": [68, 203], "vassilvitskii": 61, "vast": [57, 95, 96, 100, 101], "vastli": [96, 211], "vaswani": [0, 1, 55, 56, 57, 58, 70, 71], "vc": [87, 94, 106, 203], "vcdim": 66, "vcpu": 90, "vcpulimitexceed": 90, "vdash": 48, "vdot": [27, 51, 53, 56, 58, 68, 74, 80, 82, 83, 84, 85, 118, 124, 139, 146, 148, 158, 159, 188, 190, 191, 192, 193, 211], "ve": [5, 11, 19, 29, 46, 47, 59, 68, 85, 94, 103, 106, 110], "vec": 82, "vector": [5, 11, 50, 54, 56, 57, 59, 61, 62, 66, 67, 68, 69, 71, 75, 76, 77, 78, 87, 96, 97, 100, 101, 102, 104, 112, 114, 118, 119, 127, 178, 190, 192, 193, 194, 195, 196, 197, 210, 211], "vector1": 82, "vector2": 82, "vector2d": [82, 83, 84, 85], "vector3": 82, "vector3d": 83, "vectorized_elementwise_kernel": 113, "vectorplotter2d": [82, 83, 84, 85], "vectorplotter3d": 83, "vectors_add": 83, "vectors_case1": 85, "vectors_case2": 85, "vectors_case3": 85, "vectors_case4": 85, "vectors_sub": 83, "veget": 229, "vehicl": [95, 96, 98, 101, 109], "vein": [68, 74, 211, 238], "veloc": [101, 118], "venn": 131, "venv": [90, 94, 100], "venv_dir": 100, "venv_nam": 100, "verb": 58, "verbal": 211, "verbatim": [3, 203, 228], "verbatin": 16, "verbos": [6, 7, 8, 58, 59, 74, 82, 114, 119, 123, 211, 213, 217, 226], "verbose_it": 234, "verboseiter": 234, "veri": [2, 4, 5, 13, 27, 35, 36, 43, 47, 53, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 71, 74, 76, 78, 80, 87, 89, 90, 94, 96, 97, 98, 100, 103, 105, 106, 107, 109, 110, 111, 116, 117, 118, 123, 124, 146, 155, 158, 159, 174, 180, 181, 182, 207, 210, 211, 213, 217, 218, 221, 223, 228, 230, 238], "verif": [0, 3, 78], "verifi": [2, 4, 6, 17, 29, 32, 48, 53, 58, 59, 63, 84, 90, 94, 100, 106, 108, 123, 125, 136, 137, 148, 181], "verlag": [52, 53, 60, 61, 63, 67, 68, 73, 74, 193, 194], "vers": 111, "versa": [5, 7, 61, 82, 102, 234], "versatil": [5, 11, 80, 97, 101], "versicolor": 75, "version": [0, 1, 8, 11, 16, 27, 30, 54, 55, 56, 57, 58, 62, 71, 72, 75, 77, 78, 83, 85, 90, 93, 96, 99, 100, 106, 108, 120, 121, 123, 124, 208, 216, 217, 218, 230, 231], "version_bas": 217, "version_info": 7, "versu": [53, 57, 58, 66, 68, 71, 84, 94, 203, 213], "vert": [53, 61, 66, 74, 85, 121], "vertic": [61, 76, 82, 84, 98], "vertical_component_v": 84, "vest": [94, 96], "vet": 94, "via": [2, 4, 5, 6, 7, 11, 27, 29, 53, 56, 61, 66, 72, 77, 89, 90, 94, 98, 100, 104, 106, 117, 118, 119, 127, 162, 178, 179, 211, 213, 217, 219, 222, 226], "vibrat": 109, "vice": [5, 7, 61, 82, 102, 234], "victori": 29, "video": [66, 95, 96, 97, 98, 99, 101, 109, 158, 216], "vietnames": 99, "view": [29, 30, 32, 53, 56, 58, 59, 63, 67, 68, 76, 77, 82, 85, 90, 94, 95, 96, 109, 112, 114, 115, 126, 134, 174, 176, 178, 181, 207, 211, 217], "view_dim": 115, "viewbackward0": 114, "viewer": [27, 95], "viewership": [95, 96], "viewpoint": 82, "vif": 68, "vincent": [52, 53, 60, 61, 68], "vinyal": 121, "violat": [2, 4, 5, 6, 7, 16, 68, 76, 77, 109, 124, 130, 238], "violated_schema": 238, "virginica": 75, "viridi": [58, 59, 62, 119, 127, 190], "virtual": [58, 109, 216], "visibl": [59, 94], "vision": [48, 77, 80, 96, 101, 121], "visit": [11, 17, 32, 44, 106, 119, 130, 184, 238], "visitor": 96, "visual": [30, 35, 36, 43, 44, 46, 53, 54, 56, 57, 59, 61, 62, 63, 66, 68, 71, 75, 76, 77, 80, 82, 83, 94, 95, 96, 97, 98, 100, 101, 103, 110, 113, 124, 127, 128, 133, 143, 158, 159, 178, 190, 227], "visualis": 174, "vit": 96, "vital": [17, 84, 94, 95], "vivid": 32, "viz": 115, "vline": [127, 146, 148, 156, 190], "vmax": 53, "vmin": 53, "vocab": [59, 119], "vocab_s": [58, 59, 112, 114, 118, 119, 120], "vocabulari": [57, 71, 72, 119, 120, 218], "voic": 109, "void": [3, 5, 57, 113], "vol": [1, 10, 66, 123], "volum": [57, 90, 95, 97, 98, 100, 101, 109, 110], "voluntarili": 216, "voraci": 29, "voronoi": 60, "vowel": 128, "vpc": 90, "vpc_id": 90, "vpcid": 90, "vscode": 90, "vstack": [53, 54], "vulner": 94, "w": [1, 53, 55, 57, 58, 59, 66, 67, 69, 70, 71, 74, 80, 82, 84, 85, 87, 88, 90, 115, 123, 136, 150, 174, 184, 225], "w1": [53, 112, 114], "w2": [53, 112, 114], "w_": [56, 58, 59, 82], "w_1": [53, 56, 150], "w_2": [53, 56, 150], "w_3": 56, "w_4": 56, "w_5": 56, "w_6": 56, "w_c": 59, "w_e": 58, "w_i": 176, "w_j": 56, "w_k": [53, 56, 58, 59, 112, 114, 119, 120], "w_o": [58, 59, 112, 114, 119, 120], "w_q": [56, 58, 59, 112, 114, 119, 120], "w_v": [56, 58, 59, 112, 114, 119, 120], "wa": [6, 7, 9, 16, 29, 30, 36, 43, 46, 48, 53, 57, 58, 59, 63, 66, 68, 76, 77, 90, 94, 98, 104, 108, 109, 110, 115, 119, 120, 121, 124, 126, 130, 158, 176, 180, 203, 211, 213, 218, 227], "wai": [2, 3, 4, 6, 7, 9, 11, 17, 26, 27, 29, 30, 32, 36, 44, 50, 52, 53, 56, 57, 59, 61, 63, 66, 68, 71, 76, 77, 80, 84, 85, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 111, 113, 117, 119, 120, 123, 126, 130, 133, 134, 140, 143, 148, 158, 172, 174, 180, 181, 188, 195, 196, 199, 203, 204, 210, 211, 213, 217, 219, 221, 222, 226, 228, 234, 238], "wait": [9, 58, 90, 91, 94, 109, 111, 113, 114, 115, 119, 214, 216, 231], "waiter": 32, "walk": [5, 10, 44, 48, 57, 58, 211], "walker": 44, "walkthrough": [57, 58, 203, 204], "wall": [94, 180, 230, 239], "walli": [0, 70, 71], "wandb": 94, "wang": [0, 70, 71], "want": [2, 5, 6, 7, 9, 17, 22, 29, 30, 44, 46, 53, 56, 57, 58, 59, 61, 62, 66, 68, 71, 72, 74, 76, 77, 80, 84, 87, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 112, 114, 116, 117, 118, 119, 120, 123, 126, 128, 130, 133, 143, 146, 148, 150, 159, 174, 179, 181, 188, 203, 207, 211, 213, 216, 217, 218, 221, 226, 227, 233, 238], "warc": 99, "warcio": 99, "warehous": [96, 101], "warm": [59, 61, 112, 113, 114, 115, 123], "warmth": 94, "warmup": [78, 112, 113, 114, 115, 122], "warmup_": 112, "warmup_ratio": [72, 120], "warmup_step": [59, 112, 113], "warn": [53, 58, 59, 69, 71, 72, 75, 89, 90, 94, 104, 112, 114, 115, 117, 120, 121, 140, 143, 146, 148, 156, 159, 168, 217], "warn_if_padding_and_no_attention_mask": 117, "warn_onli": [58, 71, 104], "warn_tensor_cycl": 115, "warrant": [96, 217], "wash": 229, "wasn": 48, "wast": [11, 57, 58, 80, 94, 231], "watch": [95, 101, 110, 143, 146, 148, 217], "water": 94, "watson": 68, "wave": [59, 123], "wavelength": 58, "wavi": 66, "wb": 58, "wc": 118, "we": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 23, 26, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 225, 226, 227, 228, 229, 231, 234, 236, 237], "weak": [48, 58, 101, 208], "weaker": 68, "weakest": 58, "wealth": 106, "wear": [94, 109], "wearabl": [96, 97], "weather": [97, 130], "web": [32, 57, 94, 95, 96, 97, 99, 100, 216, 225], "webpag": 32, "websit": [57, 66, 96, 97, 99, 101, 109], "wedg": 176, "week": [94, 109, 110, 150], "weekdai": 150, "weekend": 150, "weekli": [101, 110], "wei": 66, "weigh": [53, 76, 95], "weight": [0, 1, 50, 52, 54, 55, 57, 59, 68, 69, 70, 72, 74, 75, 76, 80, 84, 87, 98, 101, 103, 104, 112, 114, 118, 119, 120, 121, 123, 126, 143, 174, 179, 185], "weight_decai": [59, 72, 119, 120, 217], "weight_ti": [112, 114], "weighted_diff": [53, 54], "weighted_likelihood": 54, "weighten": 126, "weights_": [53, 54], "weights_1": 53, "weights_2": 53, "weiji": 80, "weird": [56, 233], "weizhu": 0, "welcom": 94, "well": [2, 5, 6, 13, 19, 27, 29, 30, 32, 35, 44, 48, 49, 53, 56, 57, 58, 59, 61, 62, 63, 66, 68, 71, 74, 76, 77, 79, 80, 84, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 120, 121, 123, 124, 125, 126, 130, 131, 136, 145, 158, 173, 174, 178, 180, 186, 190, 193, 195, 198, 200, 201, 203, 207, 210, 211, 212, 213, 217, 219, 223, 229, 230, 231, 238], "weng": [56, 57, 58], "went": [32, 48, 56, 57, 58, 59, 76, 77, 120, 213], "wer": 58, "were": [3, 7, 19, 27, 29, 36, 43, 44, 50, 53, 57, 58, 59, 66, 68, 72, 74, 76, 89, 94, 96, 98, 104, 110, 120, 121, 123, 124, 125, 130, 155, 210, 213, 221, 231], "weren": 130, "weston": [0, 48], "wget": 90, "what": [3, 5, 6, 7, 8, 9, 10, 11, 12, 17, 20, 29, 30, 48, 50, 51, 53, 57, 58, 59, 61, 62, 63, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 84, 85, 89, 90, 95, 96, 98, 100, 101, 102, 104, 105, 106, 109, 110, 113, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 132, 133, 136, 137, 143, 144, 146, 147, 148, 150, 159, 162, 170, 174, 179, 180, 181, 184, 187, 188, 189, 191, 195, 203, 206, 210, 211, 212, 213, 217, 218, 219, 221, 223, 226, 229, 230, 231, 233], "what_i": 59, "whatev": [66, 94, 132, 136], "whati": 90, "wheat": 80, "wheel": [90, 238], "when": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 53, 54, 56, 57, 58, 59, 64, 66, 68, 69, 71, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 89, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 117, 118, 119, 120, 123, 124, 128, 130, 132, 133, 136, 137, 144, 146, 147, 150, 153, 156, 158, 163, 169, 172, 180, 181, 183, 187, 188, 191, 192, 200, 201, 203, 211, 212, 213, 217, 218, 219, 221, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238], "whenev": [44, 57, 59, 94, 106, 109, 119, 128, 134, 136], "where": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 130, 131, 137, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 156, 159, 160, 163, 165, 168, 169, 170, 173, 174, 176, 178, 180, 181, 183, 184, 186, 187, 188, 191, 192, 193, 195, 196, 198, 201, 203, 204, 207, 210, 213, 214, 216, 217, 219, 222, 225, 227, 228, 230, 231, 235, 237, 238], "where_equal_index": 59, "wherea": [2, 6, 9, 53, 57, 58, 66, 94, 97, 102, 103, 106, 119, 171, 200, 216, 239], "wherebi": 68, "wherein": 159, "wherev": 7, "whether": [2, 3, 4, 7, 9, 17, 19, 27, 29, 32, 36, 47, 48, 59, 63, 66, 68, 69, 74, 76, 77, 80, 84, 89, 94, 95, 96, 97, 103, 106, 109, 115, 117, 124, 128, 148, 150, 180, 184, 211, 213, 227], "which": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 22, 26, 27, 29, 30, 32, 36, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 142, 144, 146, 148, 149, 150, 152, 157, 158, 159, 162, 163, 165, 168, 170, 172, 173, 174, 176, 178, 179, 180, 184, 188, 190, 191, 192, 193, 194, 195, 200, 203, 204, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238], "whichev": [66, 94], "while": [2, 3, 5, 7, 8, 9, 11, 13, 25, 26, 27, 29, 30, 32, 36, 37, 43, 44, 46, 47, 48, 53, 56, 57, 58, 59, 61, 63, 68, 71, 74, 76, 77, 80, 83, 84, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 102, 103, 106, 109, 116, 117, 124, 126, 137, 138, 158, 170, 180, 211, 213, 216, 217, 218, 221, 230, 231, 234], "whimsic": 29, "whistl": 117, "white": [76, 77, 127], "whitelist": 59, "whitelist_weight_modul": 59, "whitespac": [57, 58, 94], "whl": 94, "who": [48, 61, 95, 98, 100, 108, 109, 124, 148, 155, 184], "whole": [2, 4, 27, 47, 56, 58, 59, 66, 68, 76, 80, 94, 100, 106, 119, 132, 134, 136, 158, 174, 210, 213, 218], "wholesom": [68, 96], "whoop": 124, "whose": [32, 57, 61, 64, 71, 138, 158, 162, 192], "why": [7, 8, 9, 11, 17, 30, 35, 36, 43, 46, 50, 57, 58, 60, 61, 63, 64, 69, 71, 72, 76, 77, 78, 79, 80, 84, 85, 87, 96, 99, 101, 102, 104, 106, 110, 111, 112, 115, 117, 118, 122, 124, 126, 128, 133, 159, 174, 178, 180, 181, 202, 205, 211, 213, 218, 229, 231, 233, 238], "wide": [16, 17, 29, 30, 50, 53, 57, 61, 62, 67, 68, 77, 79, 90, 94, 97, 109, 118, 127, 190, 199, 217], "widehat": [53, 61, 64, 68, 87, 211], "wider": [71, 96, 170], "widespread": [97, 222], "widget": [77, 156], "width": [32, 53, 63, 77, 126, 128, 174, 180, 196], "wiki": [0, 68, 115, 155, 193], "wikiextractor": 99, "wikipedia": [0, 2, 4, 7, 11, 16, 17, 27, 30, 31, 49, 51, 57, 60, 61, 63, 66, 68, 70, 71, 73, 74, 80, 84, 85, 99, 115, 124, 126, 127, 153, 193, 221], "wild": [76, 221], "wildcard": 94, "wilk": 68, "william": 76, "willkoehrsen": 76, "win": [48, 126, 136], "window": [40, 47, 56, 59, 78, 94, 126, 216], "window_s": 41, "window_sum": 46, "winter": [57, 58, 94], "wise": [53, 57, 59, 61, 71, 74, 76, 82, 83, 113, 118, 120], "wish": [53, 57, 68, 94, 211, 228], "with_flop": 114, "with_stack": [114, 115], "withdraw": 57, "within": [2, 4, 5, 6, 7, 9, 13, 17, 19, 27, 29, 30, 43, 46, 53, 56, 57, 58, 59, 61, 62, 68, 71, 74, 76, 79, 80, 82, 83, 87, 88, 89, 94, 95, 97, 98, 99, 100, 103, 108, 109, 117, 118, 123, 124, 174, 191, 204, 211, 213, 216, 221, 222, 228], "without": [2, 3, 4, 5, 6, 7, 9, 11, 16, 17, 19, 20, 27, 29, 30, 32, 36, 43, 44, 48, 53, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 71, 76, 79, 80, 83, 84, 89, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 109, 110, 113, 118, 119, 121, 123, 124, 126, 128, 132, 133, 136, 143, 174, 188, 195, 203, 213, 216, 217, 219, 221, 222, 225, 228, 230, 231, 236, 237, 238], "witten": [0, 60, 61, 67, 68, 73, 74], "woman": 48, "won": [3, 5, 8, 29, 35, 48, 59, 66, 68, 71, 74, 80, 89, 94, 96, 100, 101, 104, 106, 109, 113, 115, 136, 143, 148, 159, 174, 217], "wonder": [5, 6, 50, 58, 68, 85, 98, 174], "woof": [2, 3, 4], "word": [2, 3, 4, 9, 27, 29, 30, 36, 43, 53, 56, 58, 61, 62, 63, 64, 66, 68, 71, 72, 74, 76, 77, 79, 80, 84, 87, 89, 96, 97, 98, 101, 109, 111, 128, 130, 132, 133, 146, 153, 155, 159, 170, 174, 178, 180, 190, 192, 200, 206, 207, 211, 212, 216, 221, 238], "word2vec": 57, "work": [3, 5, 6, 7, 11, 16, 17, 20, 27, 29, 30, 32, 35, 36, 43, 44, 47, 48, 49, 53, 54, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 74, 75, 76, 77, 80, 84, 85, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 109, 110, 117, 118, 119, 123, 124, 126, 128, 143, 144, 146, 159, 169, 170, 174, 190, 198, 200, 201, 207, 211, 216, 217, 221, 227, 228, 229, 230, 231], "workaround": [17, 216], "workdir": 100, "worker": [59, 88, 89, 96, 100, 109, 213, 214, 216, 231], "worker_info": 216, "workflow": [100, 108, 115, 116, 216], "workload": [98, 99, 115], "workplac": 109, "workshop": 90, "workspac": 71, "world": [3, 5, 27, 29, 30, 58, 61, 78, 94, 96, 100, 102, 103, 106, 108, 109, 130, 136, 143, 148, 149, 154, 158, 159, 238], "world_siz": [59, 89, 91, 119], "worri": [8, 59, 77, 89, 98, 101, 103], "wors": [3, 5, 58, 61, 66, 94, 95], "worsen": 101, "worst": [11, 13, 17, 19, 26, 43, 46, 61, 66, 148, 239], "worth": [2, 3, 11, 29, 46, 53, 56, 57, 58, 59, 61, 68, 71, 74, 77, 82, 102, 104, 109, 118, 119, 123, 124, 198, 207, 216, 217], "would": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 26, 27, 29, 30, 32, 36, 43, 44, 46, 48, 50, 53, 55, 56, 57, 58, 59, 66, 68, 72, 74, 76, 77, 79, 80, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 113, 115, 116, 118, 119, 123, 124, 126, 130, 136, 146, 155, 174, 180, 211, 216, 217, 218, 223, 236, 238], "wouldn": [11, 13, 43, 213], "wrap": [58, 68, 69, 72, 94, 97, 100, 109, 117], "wrap_funct": 230, "wrapper": [69, 97, 117, 229, 230, 238], "write": [5, 6, 11, 17, 32, 34, 37, 48, 50, 53, 56, 57, 58, 59, 61, 63, 66, 68, 71, 74, 77, 87, 89, 90, 94, 97, 98, 105, 106, 115, 124, 137, 151, 155, 158, 168, 169, 170, 181, 183, 184, 191, 192, 193, 196, 198, 203, 211, 214, 216, 221, 225, 230, 231, 235], "write_and_log": 115, "writeup": [112, 114], "written": [2, 3, 5, 7, 10, 53, 56, 58, 61, 63, 66, 74, 76, 85, 87, 94, 96, 98, 105, 115, 124, 126, 176, 188, 198, 211], "wrong": [5, 8, 48, 59, 61, 66, 68, 72, 76, 77, 94, 103, 123, 146, 180, 213], "wrongli": 66, "wrote": [66, 118], "wu": [0, 1, 55, 57], "wurlitz": 114, "www": [0, 22, 23, 63, 74, 76, 126, 143, 146, 148, 185, 216, 223, 234], "x": [1, 3, 5, 6, 7, 8, 16, 29, 36, 50, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 66, 67, 69, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 94, 96, 97, 98, 100, 102, 103, 106, 110, 111, 112, 113, 114, 115, 118, 120, 121, 123, 124, 126, 127, 128, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 200, 201, 203, 206, 207, 210, 211, 221, 228, 230, 231, 233, 235], "x0": [58, 76], "x0_decod": 58, "x0_max": 76, "x0_min": 76, "x0_ohe": 58, "x0_rang": 76, "x0_tok_emb": 58, "x1": [53, 68, 76, 127, 169, 174, 178, 190], "x1_max": 76, "x1_min": 76, "x1_rang": 76, "x2": [53, 68, 76, 127, 169, 174, 178, 190], "x27": 62, "x2_mean": 76, "x2_x3_mean_std": 76, "x2_x3_mean_std_var": 76, "x3": [53, 68, 76, 97, 178, 190], "x3_mean": 76, "x5": 97, "x86_64": 90, "x_": [53, 56, 57, 58, 59, 66, 68, 71, 74, 76, 77, 80, 87, 118, 140, 146, 153, 158, 172, 174, 188, 196, 201, 203, 206, 211], "x_0": [68, 74, 80, 146], "x_1": [6, 7, 50, 53, 56, 57, 58, 59, 61, 68, 71, 74, 76, 77, 80, 87, 118, 127, 141, 146, 147, 153, 155, 158, 164, 172, 174, 176, 186, 188, 190, 191, 196, 198, 206, 207, 211], "x_2": [6, 7, 50, 53, 56, 57, 58, 59, 61, 68, 71, 74, 76, 77, 80, 118, 127, 141, 146, 147, 153, 155, 158, 164, 172, 174, 176, 186, 188, 190, 191, 196, 198, 207, 211], "x_2d": 75, "x_3": [57, 58, 68, 76, 80, 188], "x_6": 172, "x_axi": 53, "x_boot": 107, "x_d": [50, 53, 61, 68, 74, 75, 76, 77, 80, 127, 191], "x_full": [53, 54], "x_i": [58, 66, 71, 77, 121, 124, 140, 141, 146, 147, 153, 158, 164, 174, 176, 178, 188, 191, 195], "x_input_spac": [76, 127, 190], "x_j": [80, 121, 153, 176, 188, 191, 195], "x_k": [126, 140], "x_list": 8, "x_m": 87, "x_max": 54, "x_min": 54, "x_multi": 68, "x_n": [50, 68, 80, 141, 147, 153, 155, 164, 174, 176, 188, 190, 196, 198, 206, 207, 211], "x_plot": 53, "x_rang": [53, 171], "x_t": [56, 57, 58, 71, 77], "x_test": [62, 76], "x_train": [62, 69, 76], "x_val": 69, "x_where_k": [75, 76], "x_with_intercept": 68, "xarg": 90, "xavier": 58, "xavier_uniform_": 58, "xaxi": 128, "xd": 29, "xferd": 59, "xi": [69, 74, 130, 137, 139, 140, 159, 176], "xi_1": [137, 140, 141, 142], "xi_2": [137, 140, 141, 142], "xi_3": 137, "xi_4": 137, "xi_i": [137, 140], "xian": [0, 48], "xiaodong": 0, "xiong": 0, "xl": [58, 118], "xla": 72, "xlabel": [53, 54, 58, 59, 61, 62, 68, 76, 82, 83, 84, 85, 119, 127, 128, 156, 159, 171, 190, 207], "xlarg": 121, "xlim": [128, 168, 170], "xml": [94, 97, 98, 99], "xn": 54, "xor": 77, "xpu": 117, "xrightarrow": [56, 66, 206], "xsmall": 121, "xtick": [59, 69, 128, 146, 156], "xticklabel": [59, 119], "xtract": 99, "xtx": 69, "xtx_inv": 69, "xty": 69, "xu": [0, 48, 98], "xue": [1, 10], "xx": [53, 54, 127], "xxx": 90, "xxxxxxxxxxxxxxxxx": 90, "xy": [53, 59, 68, 77, 127, 178], "xy_1": 53, "xy_2": 53, "xy_3": 53, "xy_4": 53, "xy_5": 53, "xy_6": 53, "xytext": 53, "xyz": 59, "x\u03b2": 68, "y": [1, 4, 5, 6, 8, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 70, 71, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 90, 96, 100, 102, 103, 106, 110, 115, 118, 119, 121, 124, 126, 127, 128, 140, 143, 146, 148, 150, 170, 173, 174, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 196, 198, 201, 203, 207, 210, 217, 228, 233], "y1": 53, "y2": 53, "y_": [57, 59, 71, 146], "y_0": [80, 148], "y_1": [50, 57, 59, 66, 74, 80, 87, 146, 148, 190], "y_2": [57, 59, 66, 74, 80, 146, 190], "y_3": 66, "y_4": 66, "y_boot": 107, "y_i": [66, 71, 74, 121, 124, 146, 148, 178], "y_j": 124, "y_k": [66, 74], "y_m": [66, 87], "y_max": 54, "y_min": 54, "y_multi": 68, "y_n": [50, 57, 59, 80, 126, 148, 190], "y_plot": 53, "y_pred": [53, 54, 62, 63, 68, 69, 75], "y_prob": 75, "y_rang": 128, "y_t": 71, "y_test": [62, 76], "y_train": [62, 69, 76], "y_true": [62, 69], "y_val": 69, "yaida": [1, 124], "yaml": [59, 90, 94, 225], "yaml_cfg": 59, "yaml_config": 225, "yaml_path": 59, "yaml_schema": 238, "yaml_str": 225, "yan": [57, 58, 105, 125], "yang": [11, 12, 17, 18], "yaxi": 128, "ydata": 114, "ye": [7, 16, 48, 53, 59, 66, 71, 76, 95, 97, 100, 130, 170, 238], "year": [48, 55, 57, 68, 87, 98, 146, 238], "yearly_profit": 146, "yearly_profits_improv": 146, "yearly_revenu": 146, "yearly_salary_paid": 146, "yeast": 80, "yellow": [66, 84], "yelong": 0, "yesqa": 94, "yet": [8, 9, 30, 48, 53, 58, 61, 66, 68, 76, 94, 98, 106, 109, 124, 158, 162, 180, 238], "yi": 69, "yield": [4, 5, 6, 7, 8, 9, 16, 17, 27, 29, 32, 35, 53, 57, 59, 66, 68, 78, 80, 83, 84, 102, 104, 106, 112, 117, 118, 124, 163, 176, 211, 215, 216, 234], "yieldtyp": 213, "yiu": [0, 146], "ylabel": [53, 54, 58, 59, 61, 62, 68, 76, 82, 83, 84, 85, 119, 127, 128, 156, 159, 171, 174, 190, 207], "ylim": [128, 168, 170], "yolo": [94, 96], "yolov5": 95, "york": [1, 52, 53, 60, 61, 63, 66, 67, 68, 73, 74, 82, 83, 124, 193, 194, 238], "yoshua": 0, "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 23, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 50, 51, 53, 55, 56, 57, 58, 59, 61, 62, 63, 66, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 84, 85, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 130, 132, 133, 137, 143, 146, 153, 159, 170, 171, 173, 174, 179, 180, 183, 190, 191, 193, 198, 202, 203, 205, 207, 211, 213, 214, 216, 217, 218, 219, 221, 223, 226, 227, 228, 232, 233, 234, 235, 236, 237], "your": [2, 6, 8, 11, 17, 19, 32, 36, 43, 47, 48, 50, 53, 58, 59, 68, 69, 71, 76, 80, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 114, 117, 118, 126, 128, 136, 137, 143, 146, 159, 211, 213, 216, 217, 218, 219, 221, 226, 227, 238], "your_dataset": 68, "your_multi_dataset": 68, "yourkeynam": 90, "yourself": [5, 66, 68, 94, 115, 130, 137, 217], "youtub": [143, 146, 148], "yshift": [30, 32], "ytick": [59, 69, 128], "yticklabel": [59, 119], "yuanzhi": 0, "yval": 124, "yy": [53, 54, 127], "yyyi": [100, 217], "z": [1, 4, 7, 8, 10, 29, 30, 52, 54, 55, 56, 57, 58, 61, 63, 66, 68, 70, 71, 74, 76, 79, 80, 84, 87, 90, 102, 112, 114, 118, 120, 121, 123, 127, 128, 138, 146, 150, 172, 181, 186, 190, 196, 198, 201], "z0": 58, "z0_pos_emb": 58, "z0_tok_emb": 58, "z0_tok_embed_add_pos_emb": 58, "z0_tok_embed_matmul": 58, "z0_tok_embed_with_pos_emb": 58, "z0_tok_embed_with_pos_embed_ln1": 58, "z0_tok_embed_with_pos_embed_ln1_pytorch": 58, "z0_tok_embed_with_pos_embed_with_mha_and_addnorm1": 58, "z0_tok_embed_with_pos_embed_with_mha_and_addnorm1_and_ffn_addnorm2": 58, "z1": 6, "z2": 6, "z3": 6, "z_": [58, 121], "z_0": 80, "z_0_tok_embed_with_pos_emb": 58, "z_1": [6, 53, 124], "z_2": [53, 124], "z_3": 124, "z_4": 124, "z_5": 124, "z_a": 124, "z_b": 124, "z_i": [58, 124], "z_j": [58, 124], "z_k": [53, 124], "z_mha": 58, "z_t": 121, "z_tok_emb": 58, "z_tok_embed_with_pos_emb": 58, "zachari": [0, 58, 73, 74], "zebra": 57, "zero": [11, 16, 19, 29, 32, 43, 44, 51, 53, 54, 56, 58, 59, 61, 62, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 84, 85, 98, 108, 112, 114, 115, 117, 120, 123, 124, 126, 143, 146, 148, 155, 188, 192, 206, 207, 211, 231], "zero_divis": [72, 120], "zero_grad": [114, 115, 117, 120, 121, 217], "zeror": 103, "zeros_": [58, 72, 112, 114, 120], "zeros_lik": 53, "zeyuan": 0, "zfill": 59, "zhang": [0, 1, 55, 57, 58, 59, 66, 68, 70, 73, 74, 123, 124, 211], "zhenzhong": 98, "zhu": [0, 70, 71, 118], "zip": [48, 53, 54, 58, 76, 77, 119, 124, 156, 171, 178, 218, 238], "zmqexitautocal": 117, "zmqinteractiveshel": 117, "zmqshell": 117, "zmqstream": 213, "zombieprocess": 216, "zoom": [30, 56, 59, 76, 119, 123], "zorder": 53, "zsl": 57, "\u00b2": 48, "\u00b5": 230, "\u0142": [1, 55, 57, 70, 71], "\u03b1": 121, "\u03b5": 68, "\u03bc": 239, "\u03c1": 178, "\u03c3": 68}, "titles": ["Bibliography", "IEEE (Style) Citations", "Subtypes", "Type Safety", "Subsumption", "Generics and Type Variables", "Bound and Constraint in Generics and Type Variables", "Invariance, Covariance and Contravariance", "Function Overloading", "Sentinel Types", "Type Theory, A Very Rudimentary Introduction", "Concept", "List/Array", "Two Sum", "Questions", "Complexity Analysis", "Master Theorem ", "Concept", "Hash Map", "Two Sum", "Group Anagrams", "Questions", "Concept", "Double Ended Queue", "Queue", "Palindrome Checker", "Easy - Hot Potatoes", "Concept", "Binary Search", "Koko Eating Bananas", "Concept", "Linear Search", "Concept", "Stack", "Min Stack", "Valid Parentheses", "Implement Queue using Stacks", "Reverse String", "Questions", "Two Pointers And Sliding Window", "Questions", "Find All Anagrams in a String", "Sliding Window", "Two Sum II - Input Array Is Sorted", "Remove Duplicates from Sorted Array", "Two Pointers", "Sliding Window", "Two Pointers", "Chain-of-Verification Reduces Hallucination in Large Language Models", "Empirical Risk Minimization", "Concept: Empirical Risk Minimization", "Bayes Optimal Classifier", "Mixture Models", "Concept", "Gaussian Mixture Models Implementation", "Generative Pre-trained Transformers", "Notations", "The Concept of Generative Pre-trained Transformers (GPT)", "The Implementation of Generative Pre-trained Transformers (GPT)", "Training a Mini-GPT to Learn Two-Digit Addition", "Lloyd\u2019s K-Means Clustering Algorithm", "Concept: K-Means Clustering", "Implementation: K-Means (Lloyd)", "Application: Image Compression and Segmentation", "Conceptual Questions", "Is The Learning Problem Solvable?", "Concept: Learning Theory", "Linear Regression", "Concept", "Implementation", "Low-Rank Adaptation Of Large Language Models", "Concept", "Implementation", "Naive Bayes", "Concept", "Naives Bayes Implementation", "Naive Bayes Application: Penguins", "Naive Bayes Application (MNIST)", "Omniverse", "Fields", "Systems of Linear Equations", "Preliminaries", "Vector and Its Definition", "Vector and Its Operations", "Vector Norm and Distance", "A First Look at Vector Products", "Vectors", "Machine Learning Notations", "Notations", "Basics Of Distributed Data Parallelism", "How to Setup SLURM and ParallelCluster in AWS", "Ablations", "Distributed Systems", "The Lifecycle of an AIOps System", "Stage 10. Continuous Integration, Deployment, Learning and Training (DevOps, DataOps, MLOps)", "Stage 1. Problem Formulation", "Stage 2. Project Scoping And Framing The Problem", "Stage 3.1. Data Source and Formats", "Stage 3.2. Data Model and Storage", "Stage 3.3. Extract, Transform, Load (ETL)", "Stage 3. Data Pipeline (Data Engineering and DataOps)", "Stage 4. Data Extraction (MLOps), Data Analysis (Data Science), Data Preparation (Data Science)", "Stage 5.1. Model Selection", "Stage 5.2. Metric Selection", "Stage 5.3. Experiment Tracking And Versioning", "Stage 5.4. Model Testing", "Stage 5. Model Development and Training (MLOps)", "Stage 6. Model Evaluation (MLOps)", "Stage 7. Model Validation, Registry and Pushing Model to Production (MLOps)", "Stage 8. Model Serving (MLOps)", "Stage 9. Model Monitoring (MLOps)", "Synchronize CUDA To Time CUDA Operations", "Profiling Code With Timeit", "PyTorch\u2019s Event And Profiler", "Profile GPT Small Time And Memory", "CUDA Memory Allocations", "Profiling", "How to Inspect Function and Class Signatures in Python?", "How to Calculate the Number of FLOPs in Transformer Based Models?", "How To Fine-Tune Decoder-Only Models For Sequence Classification With Cross-Attention?", "How To Fine-Tune Decoder-Only Models For Sequence Classification Using Last Token Pooling?", "How To Do Teacher-Student Knowledge Distillation?", "Training Dynamics And Tricks", "Why Does Cosine Annealing With Warmup Stabilize Training?", "Softmax Preserves Order, Is Translation Invariant But Not Invariant Under Scaling.", "Permutations and Combinations", "Calculus", "Contour Maps", "Exercises", "Chapter 1. Mathematical Preliminaries", "Probability Space", "Probability Axioms", "Conditional Probability", "Independence", "Baye\u2019s Theorem and the Law of Total Probability", "Chapter 2. Probability", "Summary", "Random Variables", "Discrete Random Variables", "Probability Mass Function", "Cumulative Distribution Function", "Expectation", "Moments and Variance", "Application", "Concept", "Bernoulli Distribution", "Real World Examples", "Concept", "Implementation", "Binomial Distribution", "Exercises", "Concept", "Geometric Distribution", "Independent and Identically Distributed (IID)", "Chapter 3. Discrete Random Variables", "Concept", "Implementation", "Poisson Distribution", "Important", "Application", "Concept", "Discrete Uniform Distribution", "Continuous Random Variables", "Probability Density Function", "Expectation", "Moments and Variance", "Cumulative Distribution Function", "Mean, Median and Mode", "Continuous Uniform Distribution", "Exponential Distribution", "Gaussian Distribution", "Skewness and Kurtosis", "Convolution and Sum of Random Variables", "Functions of Random Variables", "From Discrete to Continuous", "Chapter 4. Continuous Random Variables", "Concept", "Joint PMF and PDF", "Concept", "Joint Expectation and Correlation", "Application", "Concept", "Conditional PMF and PDF", "Concept", "Exercises", "Conditional Expectation and Variance", "Concept", "Sum of Random Variables", "Concept", "Random Vectors", "Application: Plots and Transformations", "Concept", "Eigendecomposition and Covariance Matrix", "The Geometry of Multivariate Gaussians", "Multivariate Gaussian Distribution", "Covariance Matrix is Positive Semi-Definite", "From Single Variable to Joint Distributions", "Chapter 5. Joint Distributions", "Characteristic Function", "Moment Generating and Characteristic Functions", "Moment Generating Function", "Application: Moment Generating Function and the Sum of Random Variables", "Application: Learning Theory", "Probability Inequalities", "Probability Inequalities", "Application: Learning Theory", "Concept", "Convergence of Sample Average", "Law of Large Numbers", "Chapter 6. Sample Statistics", "Chapter 8. Estimation Theory", "Concept", "Maximum Likelihood Estimation", "A Rudimentary Introduction to Generator and Yield in Python", "Thread Safety", "Concurrency, Parallelism and Asynchronous Programming", "Overview Of Concurrency, Parallelism, and Asynchronous Execution", "Pydantic And Hydra", "State And Metadata Management", "Configuration Management", "Config, State, Metadata Management", "Dependency Inversion Principle", "Factory Method", "Context Object Pattern (God Object)", "Design Patterns", "Named Constructor", "Registry", "Singleton", "Strategy", "Decorator", "Generators Over Lists For Memory Efficiency", "Global Interpreter Lock (GIL)", "Python", "Is vs Equality", "The Iterator Protocol", "Late Binding Closures", "Do Not Use Mutable Default Arguments", "Init vs New", "Pydantic Is All You Need - Jason Liu", "Set Over List For Frequent Membership Tests"], "titleterms": {"": [53, 58, 60, 61, 66, 80, 113, 118, 123, 134, 203, 211, 216], "0": [99, 167], "1": [4, 9, 16, 29, 46, 48, 53, 56, 57, 58, 61, 63, 64, 68, 74, 80, 90, 94, 95, 97, 99, 100, 101, 102, 104, 110, 115, 123, 124, 129, 150, 153, 163, 200, 216, 236, 238], "10": [56, 94, 100, 128], "11": [56, 100], "2": [4, 16, 27, 29, 46, 48, 53, 56, 57, 58, 61, 63, 64, 74, 80, 90, 94, 96, 98, 99, 100, 101, 103, 104, 110, 118, 119, 123, 124, 135, 200, 216, 236, 238], "2d": [4, 53, 66, 80, 178, 190], "3": [4, 16, 48, 53, 56, 57, 61, 63, 80, 85, 90, 94, 97, 98, 99, 100, 101, 104, 110, 123, 124, 154, 216], "39": 27, "3d": 80, "4": [48, 56, 57, 94, 100, 101, 105, 175, 216], "5": [48, 56, 57, 94, 100, 102, 103, 104, 105, 106, 184, 197, 216], "6": [48, 56, 57, 66, 94, 100, 107, 128, 209], "7": [56, 57, 94, 100, 108, 184], "8": [56, 63, 100, 109, 210], "9": [56, 100, 110, 128], "A": [3, 6, 8, 10, 29, 48, 53, 59, 63, 66, 71, 85, 94, 98, 100, 106, 119, 123, 126, 181, 213, 216, 221, 226, 233], "And": [6, 39, 56, 58, 71, 72, 75, 88, 89, 96, 97, 98, 102, 103, 104, 112, 113, 114, 120, 121, 122, 126, 214, 216, 217, 218, 219, 222, 225, 226, 227, 228, 230, 233, 235, 237], "As": 94, "But": [124, 234], "By": 63, "For": [56, 97, 99, 119, 120, 219, 226, 229, 230, 239], "In": [43, 44, 66, 71, 94, 100, 106, 110, 216], "It": [216, 222], "Its": [82, 83], "No": [11, 17, 53, 68, 71, 80, 91, 94, 102], "Not": [6, 8, 46, 124, 229, 234, 236, 238], "Of": [58, 70, 71, 89, 96, 99, 101, 124, 216, 219, 236], "On": [3, 6, 95, 96, 99, 106, 109, 126, 216], "One": [53, 56, 58, 66, 76], "The": [5, 6, 7, 13, 17, 19, 22, 23, 29, 30, 32, 35, 44, 46, 47, 48, 53, 56, 57, 58, 61, 64, 65, 66, 68, 71, 74, 76, 77, 79, 85, 88, 93, 94, 96, 99, 103, 106, 109, 124, 125, 126, 130, 131, 136, 141, 143, 147, 148, 158, 159, 164, 173, 183, 193, 195, 203, 211, 213, 216, 222, 227, 228, 231, 234], "To": [58, 59, 88, 111, 119, 120, 121, 124, 222, 236], "With": [6, 59, 72, 89, 91, 112, 119, 123, 124, 228, 238], "_": [53, 56], "_2": 79, "__dict__": 117, "__init__": 227, "__new__": 227, "_k": 53, "ablat": [91, 106], "about": 119, "abstract": [22, 23, 57], "abus": [56, 58, 66], "accept": 94, "access": [11, 17, 90, 99], "accommod": 17, "accuraci": [68, 102], "acid": 98, "action": 48, "activ": [56, 58, 94], "ad": 213, "adapt": [70, 71], "add": 59, "addabl": 6, "adder": 59, "addit": [59, 71, 83, 124, 131], "addnorm": 58, "address": 89, "adher": 222, "adjust": 68, "advanc": 109, "advantag": [11, 17, 98, 109], "affin": 58, "after": [27, 100, 238], "ai": 48, "aiop": [93, 95], "alert": [66, 100], "algebra": [78, 80, 82, 83, 85], "algorithm": [16, 27, 29, 30, 43, 44, 48, 53, 60, 61, 62, 71, 74, 78], "all": [5, 41, 53, 58, 99, 109, 115, 117, 213, 234, 238], "alloc": [94, 115], "also": [94, 98, 103, 106, 109, 167, 216], "altern": [56, 142, 146, 165], "alwai": 195, "am": 99, "among": 68, "amort": [32, 36], "an": [30, 58, 63, 68, 88, 93, 94, 95, 96, 97, 99, 101, 123, 166, 170, 181, 192, 213, 234], "anagram": [20, 41], "analogi": [29, 32, 58, 80], "analysi": [11, 13, 15, 17, 27, 29, 30, 36, 66, 101, 208], "analyt": 98, "analyz": 36, "andrej": 58, "angl": 85, "ani": [5, 239], "anneal": [59, 123], "annot": 117, "antisymmetri": 4, "appendix": 94, "appli": [58, 63], "applic": [4, 16, 48, 56, 58, 63, 76, 77, 143, 159, 180, 190, 201, 202, 203, 205], "approach": [6, 29, 43, 57], "approxim": [50, 56, 58, 155, 156], "ar": [2, 5, 19, 36, 43, 58, 61, 68, 98, 99, 158, 192, 213, 222, 234, 239], "arbitrari": 170, "architectur": [48, 56, 58, 100, 120], "argument": [5, 7, 89, 94, 236], "armort": 36, "arrai": [11, 12, 29, 30, 43, 44, 47], "artifact": 104, "ask": 158, "assess": 68, "assign": [53, 61, 64], "assumpt": [19, 25, 26, 27, 29, 35, 36, 37, 43, 50, 53, 57, 68, 74, 102, 144, 147, 155, 191, 211], "assur": 94, "asynchron": [58, 109, 215, 216], "asyncio": 216, "atom": 98, "attent": [56, 57, 58, 59, 119], "attribut": 117, "augment": 101, "auroc": 103, "autocorrel": 68, "autom": [94, 100], "autoregress": [56, 57, 71], "auxiliari": [13, 19, 20, 27, 29, 30, 43, 57], "averag": [13, 19, 27, 29, 30, 206, 207], "aw": 90, "axiom": [79, 124, 131], "b": [94, 222], "babi": 174, "back": [119, 126], "backbon": 56, "backend": 89, "background": 30, "bad": [94, 210], "bakeri": 80, "banana": 29, "bang": 94, "barrier": [91, 216], "base": [8, 72, 118], "baselin": [95, 102], "basi": [68, 192], "basic": [89, 118, 238], "batch": [56, 59, 99, 101, 109], "bay": [50, 51, 73, 74, 75, 76, 77, 134, 136], "befor": [56, 66, 97, 238], "behavior": [8, 9], "benchmark": [118, 230], "benefit": [94, 95, 103], "bernoulli": [143, 144, 145, 146, 147, 200, 207, 210, 211], "best": [13, 19, 27, 29, 30, 43, 94], "between": [3, 66, 68, 85, 94, 98, 109], "beyond": [48, 94], "bi": 53, "bia": [68, 74, 107], "bibliographi": [0, 48], "big": [30, 94, 213], "bigqueri": 100, "binari": [27, 28, 29, 59, 63, 79, 97], "bind": [6, 235], "binomi": [146, 147, 149, 155, 156], "birthdai": 128, "bit": 63, "bitcoin": 110, "bivari": 176, "block": [56, 58], "boldsymbol": [53, 124], "book": [60, 73, 98], "boolean": 29, "bottom": 94, "bound": [6, 66, 131, 203, 216, 231], "boundari": [74, 102], "box": 68, "bpe": 57, "brain": 158, "break": [29, 68], "breakdown": [36, 48], "breakthrough": 48, "brier": 103, "broadcast": 58, "brute": 61, "budget": 99, "bug": 94, "build": 94, "busi": [95, 96, 228], "byte": 57, "c": 222, "cach": 236, "calcul": [30, 118, 146, 216], "calculu": [53, 126, 174], "calibr": [103, 107, 124], "call": [146, 237], "callabl": 7, "callback": 119, "came": 5, "can": [61, 99], "cancer": 95, "capac": 57, "car": 98, "case": [6, 9, 11, 13, 16, 17, 19, 27, 29, 30, 32, 36, 43, 48, 58, 66, 68, 80, 124], "categor": [20, 53, 74, 76, 110], "cauchi": [85, 178, 203], "caus": [27, 94], "causal": [58, 119], "caution": 106, "cd": [94, 100], "cdf": [140, 144, 147, 155, 156, 160, 166, 167, 168, 169, 170, 173, 176, 181, 188], "ceil": 29, "center": [29, 61, 64, 146], "central": 171, "centroid": 61, "chain": [48, 53, 57], "chaotic": 102, "chapter": [129, 135, 154, 175, 197, 209, 210], "charact": 77, "characterist": [98, 102, 192, 198, 199, 216], "chatgpt": 96, "chebyshev": [66, 203], "check": [3, 62, 75, 94, 118], "checker": 25, "checkpoint": 118, "chernoff": 203, "child": 117, "choos": [61, 96, 103], "chronicl": 106, "ci": [94, 100], "circl": 4, "citat": [1, 10, 55, 57, 70, 123, 124], "claim": [43, 44], "clarif": [11, 17], "clarifi": 95, "clariti": 6, "clash": 68, "class": [2, 36, 74, 101, 117, 227], "classif": [59, 66, 77, 95, 103, 119, 120], "classifi": [50, 51, 76, 77], "cli": 90, "client": 228, "clone": 94, "close": [53, 61, 84, 163, 213, 222], "closur": 235, "cluster": [53, 60, 61, 64, 90, 103], "code": [30, 32, 36, 44, 48, 63, 73, 89, 94, 97, 104, 112, 114], "coeffici": [53, 68, 178], "coerciv": 2, "coher": 94, "cohes": 11, "coin": [137, 139, 144, 181, 211], "collat": [58, 59, 120], "collect": 99, "collis": 17, "column": [85, 97], "columnar": 97, "combin": [96, 125], "combo": 103, "come": [97, 155], "command": [89, 90], "commerc": [96, 97], "commit": 94, "common": [11, 16, 17, 60, 87, 99, 104, 112, 114, 186, 201, 211], "commoncrawl": 57, "commut": 83, "compar": 66, "comparison": [3, 6, 27, 216], "compet": 57, "compil": 2, "complement": 131, "complex": [11, 13, 15, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 46, 48, 58, 61, 66, 68, 74, 228, 230, 239], "complianc": 99, "compliant": 228, "compon": [96, 222], "compos": [58, 59, 123], "composit": [217, 219], "compress": 63, "comput": [1, 48, 58, 59, 78, 90, 102], "con": [2, 97, 217, 228], "concaten": 56, "concav": 203, "concept": [11, 17, 22, 27, 30, 32, 50, 53, 57, 61, 66, 68, 71, 74, 97, 110, 141, 142, 144, 147, 151, 155, 160, 164, 165, 176, 178, 181, 183, 186, 188, 191, 206, 211], "conceptu": 64, "conclus": [48, 63, 216], "concret": 228, "concurr": [215, 216], "condit": [53, 57, 61, 68, 74, 76, 87, 132, 133, 134, 136, 181, 182, 183, 185, 192, 211, 216, 231], "confid": [48, 68, 94], "config": [58, 59, 217, 219, 220], "configur": [58, 90, 94, 118, 217, 219], "confus": [66, 207], "connect": [4, 7, 56, 58, 74, 94, 96], "conquer": 16, "consid": 158, "consider": [99, 118, 227], "consist": [94, 98], "consol": 48, "consolid": 90, "constant": [74, 118], "constrain": 6, "constraint": [6, 19, 20, 25, 26, 27, 29, 35, 36, 37, 43, 95, 99], "construct": [57, 58, 59, 117, 119], "constructor": [225, 237], "cont": 176, "contain": [5, 8], "container": 100, "content": [10, 12, 14, 15, 18, 21, 24, 28, 31, 33, 38, 39, 40, 42, 45, 55, 60, 67, 68, 81, 86, 92, 93, 100, 106, 116, 122, 129, 135, 145, 149, 152, 154, 157, 161, 175, 197, 209, 210, 215, 220, 224, 232], "context": [57, 58, 208, 211, 223, 228], "contextu": 57, "contig": 62, "contigu": 11, "continu": [57, 74, 76, 94, 106, 124, 162, 166, 168, 174, 175, 176, 211], "contour": [127, 190], "contravari": 7, "contribut": 94, "control": 94, "conveni": 211, "convent": [48, 68, 87], "converg": [57, 61, 206, 207], "convers": 140, "convex": [68, 203], "convolut": [172, 186], "cooper": 216, "coordin": 82, "core": 227, "corner": [11, 17], "corollari": [131, 134, 170], "corpu": 56, "correct": [27, 29, 30, 48, 221], "corrector": 94, "correl": [178, 179], "correspond": 96, "cosin": [59, 85, 123, 178], "cosineannealinglr": 123, "cosineannealingschedul": 123, "cost": [61, 64, 68, 94, 96], "costli": 11, "count": [20, 118, 125, 231], "countabl": 138, "counter": 155, "counterpart": 30, "countour": 127, "coupl": 222, "covari": [7, 53, 178, 188, 190, 191, 192, 195], "cove": 48, "cpu": [89, 216, 231], "creat": [59, 90, 94], "creation": [90, 222, 238], "criteria": 4, "criterion": [4, 59, 64], "cross": [56, 106, 119, 139], "cuda": [89, 111, 113, 115], "cumul": [140, 166], "current": 48, "curv": 106, "cycl": 115, "d": [50, 58, 68, 74, 84, 176, 203, 222], "dag": 100, "dai": 146, "dampen": 124, "dashboard": 110, "data": [11, 22, 23, 29, 30, 32, 50, 53, 58, 66, 78, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 110, 120, 158, 213], "databas": [58, 98], "dataload": [58, 59, 120, 213], "dataop": [94, 100], "dataset": [53, 57, 58, 59, 66, 72, 74, 119, 120, 121], "dc": [141, 142, 164], "deadlock": 231, "deal": 99, "debt": 94, "decai": 123, "decis": 74, "declar": [2, 98], "decod": [56, 58, 119, 120], "decompos": 57, "decomposit": 71, "decor": 229, "decoupl": 96, "decreas": [61, 64], "deep": [1, 79, 84, 96, 118], "default": [94, 236], "defin": [6, 30, 61, 66, 99, 130, 133, 166, 193], "definit": [7, 29, 51, 56, 58, 59, 79, 82, 83, 85, 99, 109, 123, 127, 132, 133, 137, 138, 139, 140, 141, 151, 153, 162, 163, 164, 166, 168, 169, 170, 195, 200, 211, 216, 221, 222], "delet": [11, 90], "delta": [98, 124], "demo": [53, 89, 237], "demonstr": 4, "densiti": [163, 174], "depend": [17, 53, 58, 62, 72, 75, 76, 94, 106, 119, 120, 121, 219, 221, 222], "deploi": 100, "deploy": [94, 100, 108, 109], "deprec": 59, "deriv": [29, 124, 166], "descript": 56, "deseri": 97, "design": [94, 222, 224, 229], "destin": 99, "detail": [13, 227], "detect": [94, 96, 103], "determin": [2, 53, 85, 200], "determinist": [66, 158], "develop": [94, 100, 106], "deviat": 142, "devic": [89, 109], "devop": 94, "diagnosi": [95, 96, 180], "diagonaliz": 192, "diagram": 96, "dialogu": 48, "dice": [137, 139], "dichotomi": 66, "dictionari": 17, "did": [155, 238], "differ": [43, 66, 94, 98, 216, 219], "differenti": [68, 124], "digit": [59, 63], "dimens": [56, 58, 59, 66, 84, 211], "dimension": [58, 68, 85, 98, 102, 163], "dip": 222, "dir": 117, "direct": [11, 17, 43, 44, 47, 48, 56], "directori": 94, "disadvantag": [11, 17, 98, 109], "discret": [58, 74, 138, 154, 160, 161, 174, 176], "discrimin": 74, "disjoint": [131, 133], "dispatch": 8, "distanc": 84, "distil": 121, "distinct": 109, "distribut": [30, 53, 57, 58, 66, 68, 74, 89, 91, 92, 97, 102, 124, 140, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 166, 168, 169, 170, 176, 178, 181, 186, 188, 191, 194, 196, 197, 200, 201, 210, 211], "divid": 16, "do": [68, 99, 121, 125, 126, 136, 236], "document": [94, 98], "doe": [103, 109, 123, 213, 214], "don": 99, "dot": [56, 58, 85, 178], "doubl": [23, 126], "down": [29, 58, 68, 94], "draft": 48, "draw": 7, "drift": [106, 110], "driven": 217, "dropout": 56, "dry": 120, "dump": 158, "dunder": 32, "duplic": [44, 47, 239], "durabl": 98, "dure": 231, "dynam": [3, 8, 17, 58, 94, 122, 238], "e": [30, 53, 56, 96, 97, 130, 222, 227], "e2": 94, "earli": [94, 96], "eas": 11, "easi": 26, "easier": 173, "eat": 29, "ec2": 90, "edg": [19, 27, 29, 36, 43], "effect": 97, "effici": [11, 17, 30, 118, 213, 230], "eigendecomposit": 192, "eigenvalu": [192, 193], "eigenvector": [192, 193], "elbow": 61, "element": [17, 222], "elementwis": 56, "ell": 56, "elt": 99, "eltl": 99, "em": 53, "embed": [56, 57, 58], "empir": [49, 50, 66, 74, 143, 148, 158, 159, 178], "empti": [36, 131], "emptiv": 216, "enabl": 58, "encapsul": 222, "encod": [56, 57, 58, 59], "end": [23, 94], "engin": [78, 98, 99, 100, 101], "enhanc": 222, "enough": 124, "ensembl": 102, "entir": [53, 66], "entropi": [56, 57], "enum": 118, "environ": [90, 94, 100], "equal": [82, 132, 163, 233], "equat": [16, 80], "equip": 96, "equival": [61, 85, 192], "erm": 50, "error": [50, 56, 58, 66, 68, 94, 170], "establish": 96, "estim": [8, 53, 57, 68, 74, 87, 118, 210, 211, 212], "etl": 99, "euclidean": [4, 84], "evalu": [62, 72, 103, 107], "event": [113, 130, 131, 133, 181], "everyth": 58, "eviron": 219, "evolut": 99, "exact": [27, 58], "exampl": [3, 5, 7, 8, 11, 16, 17, 20, 27, 29, 32, 48, 53, 56, 58, 59, 63, 66, 68, 74, 79, 85, 88, 94, 95, 96, 97, 98, 99, 101, 103, 109, 110, 123, 127, 130, 137, 146, 153, 155, 174, 184, 200, 206, 207, 211, 213, 216, 236, 237], "exclus": 131, "execut": [48, 216], "exercis": [77, 128, 133, 150, 184], "exist": [94, 141, 164], "expect": [30, 53, 68, 141, 144, 146, 147, 151, 155, 158, 164, 168, 169, 170, 173, 178, 179, 183, 185, 188, 191, 206, 216], "experi": [100, 104, 130], "expert": 57, "explain": 236, "explan": 27, "exponenti": [124, 169], "expos": 94, "express": 213, "extend": 74, "extens": [16, 30], "extern": 29, "extract": [97, 99, 100, 101], "f": [79, 124, 130], "f_1": 66, "f_3": 66, "facilit": 222, "fact": 48, "factor": [48, 71], "factori": [222, 228], "factual": 48, "fail": [57, 61], "failurecod": 90, "failurereason": 90, "famili": [57, 58, 124], "faq": 60, "far": 124, "favour": 95, "feasibl": [29, 66], "featur": [68, 74, 76, 95, 96, 101, 102, 109], "feed": [56, 58], "feedback": 100, "feedforward": [56, 58], "ffn": 58, "field": [79, 238], "file": [90, 213], "final": [48, 106], "find": [27, 41, 46, 48, 61, 90, 99, 115, 173, 239], "fine": [57, 71, 119, 120], "finit": [61, 109], "first": [29, 56, 59, 85], "fit": [61, 68, 74], "fix": [46, 66], "flexibl": 99, "float": 118, "flop": 118, "fluff": 118, "footprint": 118, "forc": 61, "form": [16, 53, 58, 74, 80, 124], "formal": 27, "format": [94, 97, 99], "formul": [29, 53, 61, 68, 95, 124], "forward": [56, 58, 118], "foundat": [29, 48], "four": 94, "fourier": 198, "fourth": 59, "fraction": 123, "frame": [29, 66, 96], "framework": [48, 66, 99], "free": 102, "frequenc": 174, "frequent": 239, "from": [44, 47, 48, 50, 57, 58, 66, 80, 95, 109, 119, 124, 155, 167, 174, 196, 238], "fulfil": 4, "full": [35, 58], "fulli": 53, "function": [4, 5, 7, 8, 11, 13, 17, 19, 29, 43, 56, 57, 58, 59, 61, 64, 66, 68, 74, 94, 96, 112, 114, 117, 124, 130, 139, 140, 163, 166, 170, 173, 174, 198, 199, 200, 201, 203, 211, 213, 236], "functool": 229, "fundament": 126, "further": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 20, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 141, 142, 143, 144, 146, 147, 148, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 193, 194, 198, 200, 201, 203, 204, 206, 211, 213, 214, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 230, 231, 233, 235, 237], "fusion": 96, "futur": [48, 58, 59], "g": 30, "gap": 66, "gaussian": [53, 54, 56, 58, 68, 74, 170, 176, 178, 186, 190, 191, 193, 194, 201, 210, 211], "gaussion": 53, "gc": 100, "gelu": [56, 58], "gener": [5, 6, 16, 32, 46, 48, 50, 53, 55, 56, 57, 58, 59, 66, 74, 80, 84, 170, 199, 200, 201, 213, 230, 234], "generalist": 57, "geometr": [80, 82, 83, 85, 151, 152], "geometri": [4, 193], "get": 117, "get_arg": 238, "get_origin": 238, "getmemb": 117, "gil": [216, 231], "git": 94, "given": [53, 68, 181], "global": [61, 88, 89, 216, 231], "gloo": 89, "gmm": 53, "goal": 96, "god": 223, "golden": 94, "good": [8, 210, 222], "gpt": [57, 58, 59, 114, 118, 119], "gpu": [90, 115, 118], "gradient": [58, 124], "graph": 98, "greedi": 61, "group": [20, 89], "growth": 66, "guard": 94, "guid": 48, "h": 66, "h_": 66, "ha": [53, 57, 58, 71], "hallucin": 48, "hand": 74, "handl": [58, 238], "happen": 214, "har": 30, "hard": 53, "hash": [17, 18, 19], "head": [56, 58, 90, 119], "headnodebootstrapfailur": 90, "health": 110, "heatmap": [58, 59, 119], "hessian": 124, "hierarchi": 2, "high": [98, 221], "higher": [56, 58, 211], "highlight": 94, "histogram": [143, 148, 158, 159], "hoeffd": [66, 203], "homoscedast": 68, "hook": 94, "hot": [26, 56, 58], "how": [2, 61, 90, 99, 117, 118, 119, 120, 121, 130, 213, 222], "http": 9, "huggingfac": [58, 120], "hybrid": [96, 109], "hydra": 217, "hyperparamet": [104, 106], "hyperplan": 80, "hypothesi": [61, 66, 68], "hypothet": 117, "i": [2, 4, 5, 7, 43, 47, 48, 50, 53, 56, 57, 58, 61, 65, 66, 68, 74, 79, 82, 83, 85, 90, 94, 96, 99, 106, 124, 130, 158, 166, 173, 174, 176, 181, 183, 195, 196, 200, 201, 203, 208, 211, 213, 216, 227, 229, 231, 233, 234, 236, 238], "iac": 94, "iam": 90, "id": [90, 94, 216], "idea": [57, 78], "ideal": [143, 148, 158, 159], "ident": [56, 58, 66, 74, 90, 102, 153, 176, 188, 211], "identifi": [94, 95, 96, 97], "ieee": 1, "ignor": 59, "ii": [43, 47], "iid": [57, 68, 102, 153, 176, 188, 191, 211], "illustr": [59, 88, 216], "imag": [63, 100, 137], "imagenet": 196, "imbal": 101, "immut": 7, "imper": 98, "implement": [2, 8, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 35, 36, 37, 41, 43, 44, 46, 48, 54, 57, 58, 59, 60, 62, 63, 68, 69, 72, 73, 75, 123, 124, 148, 156, 213, 222], "implic": 29, "import": [32, 62, 66, 75, 79, 158, 176, 195], "improv": 94, "inadmissbl": 16, "inclus": [2, 4, 131], "increas": [48, 211], "increment": 94, "independ": [48, 56, 58, 66, 74, 76, 80, 102, 133, 136, 153, 155, 176, 178, 181, 188, 191, 201, 211], "index": [56, 59], "indic": 118, "individu": 61, "induct": [30, 74], "ineffici": [17, 239], "inequ": [66, 85, 131, 178, 203, 204], "infer": [53, 57, 61, 68, 71, 74, 109], "infin": 126, "infinit": [66, 80], "influenti": 78, "inform": [89, 211], "infrastructur": 94, "infti": 50, "ingest": [99, 101], "init": 237, "initi": [53, 57, 59, 89, 94, 98, 237], "inject": [94, 219, 221], "input": [13, 19, 20, 27, 29, 30, 43, 47, 56, 57, 58, 59, 68, 96, 109], "insert": 11, "inspect": 117, "instabl": 124, "instanc": [90, 117], "instanti": 217, "integ": [2, 4, 63], "integr": [94, 126], "intent": 236, "interfac": [94, 222], "interpret": [50, 66, 80, 83, 85, 102, 124, 134, 203, 216, 231], "interv": [68, 163, 166, 170], "interview": [11, 17], "intrins": 71, "introduc": 126, "introduct": [10, 11, 16, 17, 27, 29, 30, 32, 52, 57, 79, 95, 96, 177, 179, 182, 185, 213], "introspect": 229, "intuit": [19, 20, 27, 29, 30, 32, 36, 43, 44, 53, 58, 61, 66, 68, 94, 97, 99, 110, 123, 126, 132, 133, 134, 168, 173, 181, 186, 211], "invalid": 66, "invari": [4, 7, 30, 58, 82, 83, 124], "invers": [221, 222], "io": 231, "iri": 62, "isol": 98, "isp": 222, "issu": [94, 236], "item": [27, 96, 239], "iter": [11, 27, 29, 30, 56, 183, 213, 234], "its": [53, 97], "j": 124, "jacobian": 124, "jason": 238, "jensen": 203, "job": 29, "join": 216, "joint": [53, 57, 74, 176, 177, 178, 179, 188, 196, 197], "json": 97, "just": 5, "k": [27, 46, 53, 60, 61, 62, 63, 64], "karpathi": 58, "keep": 99, "kei": [17, 56, 57, 58, 90, 96, 98, 106, 216, 222], "kind": 61, "knowledg": 121, "koko": 29, "kolmogorov": [124, 131], "kroneck": 124, "kurtosi": 171, "l": [56, 84, 124], "l2": 84, "l_1": 84, "l_2": 84, "l_p": 84, "label": [96, 101, 211], "lagrangian": 74, "lake": [98, 99, 100], "lakehous": 98, "lambda": 192, "languag": [2, 48, 57, 70, 98], "larg": [48, 57, 66, 70, 98, 99, 206, 208, 213], "last": [58, 120], "late": [96, 235], "latenc": [71, 94], "latent": 53, "law": [66, 85, 130, 134, 136, 141, 164, 176, 183, 206, 208], "layer": [56, 58, 100], "layernorm": 58, "lazi": [213, 234], "lead": 58, "leakag": [101, 106], "lear": 66, "learn": [1, 29, 32, 50, 56, 57, 59, 65, 66, 71, 79, 82, 83, 84, 87, 94, 95, 96, 97, 100, 106, 118, 123, 182, 202, 205, 208, 211], "learnabl": 58, "learner": 68, "learnt": 66, "least": 68, "lebesgu": 126, "lectur": [60, 73], "left": [27, 166], "lemma": [61, 66, 203], "length": [6, 57, 58], "level": [127, 221], "li": 126, "licens": 94, "lifecycl": [93, 94], "likelihood": [53, 68, 74, 87, 211, 212], "limit": [11, 48, 181], "line": [80, 89, 127], "linear": [30, 31, 56, 58, 67, 68, 78, 80, 102, 141, 142, 164, 170, 178, 190], "link": [80, 94, 184], "lint": 94, "liskov": [4, 222], "list": [7, 11, 12, 22, 32, 36, 213, 230, 239], "liu": 238, "lloyd": [60, 61, 62], "load": [58, 63, 99, 100, 118, 213], "local": [61, 88, 94], "locat": 219, "lock": [214, 216, 231], "log": [53, 68, 74, 90, 211], "logic": 228, "logist": [74, 143], "logit": 124, "look": 85, "lookup": [56, 58], "loop": [13, 30, 100], "loos": 222, "lora": [71, 72], "loss": [50, 56, 57, 59, 61, 66, 68, 96, 106], "low": [70, 71, 221], "lsp": 222, "lunch": 102, "m": 53, "machin": [84, 87, 94, 95, 96, 97, 100, 208, 211], "mai": 27, "main": [94, 112, 114], "maintain": [94, 222], "mainten": 4, "major": [66, 97, 98], "man": 58, "manag": [90, 94, 218, 219, 220], "manhattan": 84, "mani": 90, "manipul": 11, "map": [17, 18, 19, 56, 58, 127], "margin": [53, 74, 176, 188], "markov": [57, 203], "mask": [56, 58, 59, 119], "mass": [139, 174], "master": [16, 27, 58, 89], "match": [27, 58], "mathbb": [30, 79, 130], "mathbf": [56, 58, 68, 124, 130], "mathcal": [30, 53, 66, 124, 130, 211], "mathemat": [27, 29, 30, 48, 87, 123, 129, 211], "matmul": 58, "matric": 56, "matrix": [53, 56, 58, 62, 68, 71, 85, 118, 124, 178, 188, 192, 195], "matter": 103, "maxim": [53, 74], "maximum": [46, 58, 68, 74, 87, 144, 211, 212], "me": 99, "mean": [53, 60, 61, 62, 63, 64, 68, 99, 109, 167, 190], "measur": [95, 130, 137, 163], "mechan": [56, 57, 58], "median": 167, "medic": [95, 96, 180], "medoid": 61, "meet": 47, "member": 117, "membership": [4, 239], "memori": [11, 58, 114, 115, 118, 213, 216, 230], "merg": [59, 71, 72, 94], "mermaid": 96, "metadata": [104, 218, 220], "method": [5, 30, 32, 61, 74, 117, 173, 213, 222, 227], "metric": [62, 68, 72, 95, 96, 103, 104], "mfu": 118, "mgf": 201, "middl": 47, "might": 239, "min": 34, "mind": 99, "mineatingspe": 29, "mini": 59, "miniconda": 90, "minim": [49, 50, 61, 66], "minima": 61, "minimalist": 48, "minimum": [46, 61, 96, 144], "mirror": 94, "miss": 9, "mix": [53, 74], "mixtur": [52, 53, 54], "mle": 68, "mlop": [94, 101, 106, 107, 108, 109, 110], "mnist": [62, 77], "mock": [94, 222], "modal": [53, 96], "mode": 167, "model": [48, 52, 53, 54, 57, 58, 59, 61, 66, 68, 70, 72, 74, 77, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 120, 158, 180, 238], "modern": 97, "modif": [57, 58], "modifi": 119, "modul": 221, "moment": [142, 165, 171, 199, 200, 201], "monitor": [90, 94, 99, 100, 106, 110], "monologu": 48, "monoton": [29, 61, 64, 124], "moot": 5, "more": [58, 94], "motiv": [5, 6, 7, 8, 9, 57, 59, 71, 80, 94, 117, 123, 170], "move": [43, 44], "movi": 95, "mp": 125, "mse": 68, "mu": 53, "multi": [56, 57, 58, 89, 96], "multicollinear": 68, "multimod": [96, 97], "multinomi": [53, 74], "multipl": [56, 83, 85, 118, 125], "multipli": [123, 125, 136], "multiprocess": 216, "multitask": 216, "multithread": 216, "multivari": [68, 178, 190, 191, 193, 194, 211], "murphi": 53, "must": 66, "mutabl": [7, 94, 236], "mutat": 35, "mutual": 131, "mvp": 96, "my": 99, "mypi": 94, "n": [30, 50, 53, 176, 201, 211], "nacent": 57, "naiv": [29, 51, 58, 73, 74, 75, 76, 77, 100, 213], "name": 225, "narrow": [4, 57], "necessari": [53, 61], "need": [63, 68, 99, 238], "neg": [83, 124, 131, 211], "neighborhood": 174, "neq": 124, "nest": [13, 238], "network": [56, 58, 90], "new": [94, 237], "newsfe": 96, "next": 213, "node": [88, 89, 90], "nois": 68, "nomin": 2, "non": [68, 79, 96, 124, 131], "none": 233, "norm": [58, 84], "normal": [56, 58, 68, 74, 80, 98, 124, 131, 139, 170, 176], "nosql": 98, "notat": [11, 17, 27, 30, 48, 53, 56, 58, 61, 66, 68, 74, 78, 87, 88, 142, 165, 210], "note": [66, 106, 126, 130, 174], "notebook": [60, 73], "notgiven": 9, "notion": [61, 130], "nuanc": 94, "number": [4, 27, 61, 63, 66, 79, 118, 206, 208, 216], "numer": [58, 124, 211], "o": [30, 216], "obei": 124, "object": [2, 29, 30, 32, 57, 61, 68, 79, 82, 83, 95, 96, 182, 222, 223, 233], "observ": 94, "occur": 235, "ocp": 222, "offlin": [96, 108], "omega": 130, "omnivers": 78, "one": [76, 126], "onli": [36, 109, 119, 120], "onlin": [30, 60, 73, 96, 108, 109], "open": [163, 222], "oper": [11, 17, 32, 36, 56, 58, 78, 83, 111, 113, 118, 216], "opposit": 47, "optic": 77, "optim": [30, 46, 50, 51, 57, 59, 61, 64, 99, 118, 211], "option": 100, "orchestr": 94, "order": [17, 30, 94, 97, 117, 124, 217], "ordinari": 7, "orient": [2, 82], "orthornorm": 192, "oscil": [59, 123], "other": [61, 103], "our": 59, "out": [53, 66, 90], "outcom": [30, 216], "outer": 85, "output": [48, 56, 58, 96, 124, 235, 236], "outsid": 66, "over": [57, 115, 230, 239], "overflow": 27, "overload": [8, 74], "overrid": 227, "overview": [30, 57, 59, 216, 227], "p": [68, 84, 130, 137], "pac": 66, "pad": 59, "pair": [5, 17, 57, 90], "pairwis": 103, "palindrom": 25, "palm": 118, "pandora": 68, "paper": [57, 78, 118], "paradigm": [56, 57, 59, 71, 96, 106], "paradox": 128, "parallel": [58, 89, 97, 215, 216], "parallelclust": 90, "paramet": [5, 53, 57, 68, 71, 74, 118, 210], "parametr": 80, "parent": 117, "parenthes": 35, "part": 100, "partit": 61, "pass": 118, "patch": 58, "path": 58, "pattern": [222, 223, 224, 227, 228, 229], "pdf": [166, 168, 169, 170, 173, 174, 176, 177, 181, 182, 188, 191, 211], "pe": 56, "peek": 36, "penguin": 76, "pep8": 94, "per": [58, 118, 146], "perceptron": 66, "perform": [62, 68, 95, 96, 97, 99, 110, 213], "permut": [58, 125], "perpect": 53, "perplex": 57, "person": 96, "perspect": [53, 181], "phase": [56, 94, 123], "pi": 53, "pi_": 53, "pigeonhol": 29, "pin": 94, "pip": 94, "pipelin": [94, 100], "plain": 238, "plan": [48, 94], "plane": 80, "plate": 32, "playbook": 78, "playground": 98, "plot": [53, 127, 144, 147, 155, 160, 190], "pmf": [139, 140, 143, 144, 147, 148, 155, 156, 159, 160, 176, 177, 181, 182], "point": [53, 66, 80, 94, 118, 158, 166, 174], "pointer": [39, 43, 44, 45, 47], "poisson": [155, 156, 157, 160, 186, 201], "polynomi": 192, "pool": 120, "poor": 58, "pop": 36, "popul": [181, 183], "port": 89, "posit": [56, 58, 63, 80, 83, 195], "positionwis": [56, 58], "possibl": 109, "posterior": [53, 74, 134, 136], "posteriori": 66, "potato": 26, "potenti": [99, 207], "ppe": 96, "practic": [29, 48, 94, 110, 118], "pre": [55, 56, 57, 58, 94, 137, 216], "precis": 48, "precondit": 29, "precurs": 109, "predict": [74, 96, 102, 109, 110], "predictor": [68, 76], "prefer": 239, "prefetch": 58, "preliminari": [81, 129], "prepar": [72, 101], "preserv": [4, 124, 229], "pretrain": 72, "prevent": 216, "price": 110, "prime": 216, "primer": [53, 56, 63], "primit": 2, "principl": [4, 29, 125, 221, 222], "prior": [53, 74, 76], "priori": [66, 136], "pro": [2, 97, 217, 228], "probabilist": [30, 66, 77, 124], "probabl": [30, 48, 57, 74, 78, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 139, 163, 166, 170, 174, 176, 203, 204], "probit": 180, "problem": [5, 6, 11, 17, 19, 20, 25, 26, 29, 30, 35, 36, 37, 41, 43, 44, 48, 53, 61, 63, 65, 66, 68, 76, 87, 94, 95, 96, 124, 150, 158, 184, 216], "procedur": 48, "process": [53, 56, 58, 88, 89, 96, 98, 99, 109, 216], "product": [30, 53, 56, 58, 80, 85, 94, 96, 100, 108, 178], "profil": [112, 113, 114, 116, 213], "program": [215, 216], "project": [56, 58, 85, 94, 96, 99, 227], "promot": [108, 222], "proof": [29, 43, 44, 79, 85], "properli": 126, "properti": [4, 80, 82, 85, 98, 139, 140, 141, 142, 151, 155, 164, 166, 195, 200, 238], "proposit": 132, "protect": [96, 231], "protocol": 234, "provid": 236, "pseudocod": [27, 29, 30], "publish": 98, "puriti": 62, "purpos": 9, "push": [36, 108], "put": 58, "pydant": [217, 238], "pydra": 217, "pylint": 94, "pyproject": 94, "pyramid": 94, "pythagorean": 84, "python": [22, 23, 48, 53, 90, 94, 97, 117, 213, 216, 231, 232, 236], "pytorch": [58, 59, 76, 113, 123, 226], "q": 48, "qualiti": 94, "quantit": 76, "quantiz": [63, 72], "queri": [56, 58], "question": [14, 21, 38, 40, 48, 64, 66, 128, 158], "queue": [22, 23, 24, 36], "quickselect": 48, "quot": 99, "r": [68, 158], "race": [216, 231], "rag": 222, "rail": 94, "random": [30, 53, 66, 68, 94, 126, 137, 138, 154, 155, 158, 162, 172, 173, 175, 176, 186, 187, 188, 189, 191, 200, 201, 203], "rank": [70, 71, 88, 89, 96, 103], "rate": [59, 123], "ratio": 118, "raw": 99, "re": 61, "read": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 20, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 141, 142, 143, 144, 146, 147, 148, 151, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 182, 185, 187, 193, 194, 198, 200, 201, 203, 204, 206, 211, 213, 214, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 230, 231, 233, 235, 237], "readm": 94, "real": [4, 7, 32, 48, 57, 79, 101, 102, 109, 146, 208], "recal": 95, "recognit": 77, "recommend": [95, 96], "reconstruct": 63, "recov": 104, "recurs": [27, 30], "redo": 59, "reduc": [29, 48, 94], "reduct": [59, 71], "refactor": 94, "refer": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 20, 27, 28, 29, 30, 31, 32, 33, 36, 43, 44, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 141, 142, 143, 144, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 211, 213, 214, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 230, 231, 233, 235, 237], "reflex": 4, "region": 61, "registri": [108, 226, 228], "regress": [67, 68, 74, 80, 103, 143], "reistri": 229, "reject": 57, "relat": [53, 98, 118], "relationship": [4, 96], "releas": [94, 231], "relev": [84, 99], "reliabl": 48, "remark": [32, 51, 53, 61, 74, 193], "remind": 53, "remot": 94, "remov": [44, 47, 115], "repeat": 27, "repositori": 94, "repres": [61, 124], "represent": [27, 29, 30, 56, 57, 58, 68, 82, 192], "reproduc": [58, 59, 71, 104, 119], "request": 9, "requir": [94, 95, 99], "research": 48, "reshap": 56, "residu": [56, 58], "resolut": [17, 117, 236, 239], "resourc": [60, 73, 78, 90, 102], "respect": [57, 124], "respons": [53, 222], "restrict": 66, "retriev": [103, 117], "return": [7, 213], "revenu": 146, "revers": [34, 37, 119], "review": [48, 90], "revisit": 5, "right": [27, 96, 103, 166], "rightarrow": 50, "risk": [49, 50, 66], "roadmap": 78, "role": 90, "roll": [137, 139], "root": [48, 192], "rotat": 83, "rough": 118, "row": [85, 97, 98], "rudimentari": [10, 213], "rule": [53, 57, 139], "run": [2, 53, 90, 104, 120, 216, 227], "runtim": [8, 94], "safe": 3, "safer": 216, "safeti": [3, 94, 214, 227], "sale": 30, "same": [44, 47, 57], "sampl": [53, 58, 59, 66, 90, 94, 101, 110, 124, 130, 143, 178, 206, 207, 209], "saniti": [62, 75, 94, 118], "satisfi": 4, "satur": [58, 94], "sauer": 66, "scalabl": [94, 99, 222], "scalar": [80, 83, 85], "scale": [56, 58, 68, 83, 95, 124, 141, 142, 164, 173], "scan": 94, "scenario": [30, 58, 239], "schedul": [29, 59, 226], "schema": [217, 238], "schwarz": [85, 178, 203], "scienc": [1, 78, 101], "scope": [5, 6, 96, 97, 99], "score": [58, 62], "script": [90, 216], "search": [27, 28, 29, 30, 31, 61], "second": [61, 118], "section": 57, "secur": 99, "see": [94, 98, 103, 106, 109, 167, 216], "seed": 104, "seen": 239, "segment": 63, "segreg": 222, "select": [102, 103], "self": [56, 57, 58, 71], "semant": [6, 56, 58], "semi": 195, "send": 213, "sentinel": 9, "sequenc": [56, 58, 119, 120], "sequenti": [30, 58], "serial": 97, "serv": 109, "servic": 219, "set": [2, 4, 66, 72, 89, 90, 94, 109, 120, 121, 130, 131, 138, 162, 239], "setup": [66, 74, 89, 90, 143, 148, 158, 159], "setuptool": 94, "shadow": 94, "shape": [4, 193], "shard": 97, "share": [56, 90, 216], "sharpen": 124, "shatter": 66, "shift": [141, 142, 164, 173, 190], "shot": 57, "should": 99, "shuffl": 58, "sigma": 53, "sign": 85, "signal": 94, "signatur": 117, "similar": 61, "simpl": [6, 53, 59, 74, 94], "simplif": 57, "simplifi": 180, "simul": 146, "simultan": 216, "singl": [8, 53, 118, 196, 216, 222], "singleton": [59, 226, 227, 233, 237], "singular": 90, "size": [6, 11, 17, 46, 58, 63, 88, 89, 94, 118], "skew": 171, "sklearn": 53, "slide": [39, 42, 46], "slurm": 90, "small": [53, 114, 126, 174], "smaller": 59, "smooth": [57, 102, 124], "so": [8, 124, 176], "soft": 53, "softmax": [56, 58, 124], "softwar": 78, "solut": [19, 20, 29, 36, 43, 44, 46, 48, 53, 80], "solv": 68, "solvabl": 65, "some": [6, 7, 32, 51, 53, 66, 74, 90, 104, 106, 118, 124, 181, 211], "sort": [17, 20, 29, 30, 43, 44, 47], "sourc": [97, 99], "space": [11, 13, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 46, 56, 58, 61, 66, 68, 74, 79, 80, 84, 85, 109, 130, 139, 147, 230, 239], "special": 11, "specif": [66, 71], "split": 59, "squar": [48, 68, 113], "srp": 222, "stabil": [57, 58, 94, 123], "stabilis": 58, "stack": [32, 33, 34, 35, 36, 237], "stage": [48, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 219], "standard": [27, 29, 68, 82, 94, 142, 170], "start": [94, 126], "state": [27, 59, 139, 147, 218, 220], "statement": [29, 63, 66, 76, 213], "static": [3, 94], "statist": [68, 209], "statistician": [141, 164], "statu": 90, "step": [53, 56, 61, 63, 94, 97, 99, 100, 108, 124], "stirl": 61, "stop": 90, "storag": [97, 98, 99], "store": [30, 99], "stori": 53, "strategi": [59, 96, 109, 228], "stream": [99, 101, 109, 213], "string": [20, 34, 37, 41, 56], "strong": 206, "stronger": [141, 164], "strongli": 94, "structur": [2, 32, 78, 95, 98, 103, 217, 227], "stub": 94, "student": 121, "studi": [6, 48, 106], "sturg": 139, "style": [1, 94], "sub": [181, 183], "subarrai": 46, "subsequ": 56, "subset": 35, "subspac": 58, "substitut": [4, 6, 27, 222], "subsumpt": 4, "subtract": 83, "subtyp": [2, 3, 4], "success": 95, "suffici": 94, "sum": [13, 19, 43, 46, 47, 56, 126, 147, 155, 172, 186, 187, 201], "summari": [30, 53, 66, 76, 77, 79, 100, 136, 137, 216], "super": 158, "supervis": [56, 57, 71, 211], "support": [11, 17], "symmetr": [192, 195], "symptom": 94, "synchron": [111, 216], "synthesi": 48, "system": [80, 90, 92, 93, 94, 95, 97, 109, 110, 222], "t": [30, 68, 99, 110], "tabl": [10, 12, 14, 15, 18, 21, 24, 27, 28, 30, 31, 33, 38, 39, 40, 42, 45, 55, 56, 60, 66, 67, 81, 86, 92, 93, 97, 100, 106, 116, 122, 129, 135, 145, 149, 152, 154, 157, 161, 174, 175, 197, 209, 210, 215, 220, 224, 232], "target": [58, 59, 66, 68, 74, 110], "task": [57, 71, 96, 231], "tau": 123, "teacher": 121, "technic": 94, "techniqu": [46, 47, 94, 99, 108], "temperatur": 124, "templat": 99, "term": [68, 133], "terminologi": [87, 134], "test": [19, 20, 27, 29, 30, 36, 41, 43, 44, 46, 59, 66, 68, 94, 105, 108, 110, 222, 239], "text": [97, 99], "textbf": 50, "tflop": 118, "th": 27, "theorem": [16, 27, 30, 58, 61, 84, 102, 126, 134, 136], "theoret": [13, 19, 29, 43, 48, 118, 158], "theori": [10, 66, 78, 202, 205, 210, 211], "theta": 124, "thi": [99, 214, 216], "thing": 66, "thread": [214, 216, 227, 231], "three": [76, 124, 131], "through": [56, 186], "throw": 213, "ticket": 158, "tight": 203, "tikz": [30, 32], "tild": 56, "time": [2, 6, 11, 13, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 46, 61, 68, 74, 90, 101, 102, 109, 111, 114, 115, 213, 230, 239], "timeit": 112, "timeout": 9, "tip": [11, 17, 124], "togeth": 58, "token": [56, 57, 58, 59, 120], "toml": 94, "tool": [94, 99], "top": 94, "topic": 158, "torch": 113, "toss": [137, 139, 144, 211], "total": [13, 19, 20, 27, 29, 30, 43, 118, 134, 136, 176, 183], "total_hours_to_finish_": 29, "trace": 113, "track": [104, 239], "tractabl": 102, "tradeoff": [11, 13, 17, 19, 29, 43], "traffic": 94, "train": [55, 56, 57, 58, 59, 66, 72, 77, 94, 106, 119, 120, 122, 123], "trainabl": 118, "trainer": 59, "transact": 98, "transfer": 57, "transform": [55, 57, 58, 82, 99, 100, 118, 170, 173, 190, 198], "transiv": 4, "translat": [29, 124], "transpos": [56, 82, 85], "trap": 48, "trial": [50, 144, 146, 147], "trick": 122, "trigger": 100, "troubleshoot": 90, "true": [29, 50, 66], "truth": 66, "tune": [57, 71, 104, 106, 119, 120], "two": [13, 19, 36, 39, 43, 44, 45, 47, 59, 66, 76, 85, 110, 131, 139, 181, 201, 216], "txt": 94, "type": [2, 3, 5, 6, 7, 9, 10, 22, 23, 32, 94, 96, 97, 99, 101, 110, 117], "typeguard": 94, "typevar": 6, "unbias": 68, "unbound": 109, "unconsci": [141, 164], "unconstrain": 6, "uncout": 162, "under": [82, 83, 124], "underflow": 211, "underli": [32, 74], "understand": [94, 96, 102, 115, 216, 235], "unexpect": 235, "uniform": [30, 58, 160, 161, 168], "union": [6, 66, 131, 203], "uniqu": [80, 200], "unit": [56, 58, 94], "univari": [68, 74, 211], "unload": 72, "unnorm": 124, "unord": 30, "unsaf": 8, "unsign": 63, "unstructur": 98, "unsupervis": 57, "up": [72, 89, 90, 94, 109, 120, 121], "updat": [53, 56, 64, 71, 98], "upgrad": 94, "upper": 6, "us": [5, 6, 9, 13, 19, 22, 30, 32, 34, 35, 36, 43, 50, 58, 61, 90, 99, 110, 117, 119, 120, 200, 208, 213, 216, 222, 227, 229, 236, 239], "usag": [17, 236], "user": 238, "util": [58, 118, 143, 146, 148, 156, 159], "v": [2, 3, 7, 9, 50, 74, 80, 94, 97, 98, 99, 102, 109, 123, 133, 137, 158, 159, 213, 216, 233, 237], "valid": [35, 59, 94, 100, 106, 108, 139, 238], "valu": [4, 17, 30, 56, 58, 68, 146], "var": 117, "variabl": [5, 6, 30, 46, 53, 66, 68, 126, 137, 138, 154, 155, 158, 162, 172, 173, 175, 176, 186, 187, 188, 196, 200, 201, 203, 211, 227], "varianc": [7, 58, 68, 107, 142, 144, 147, 151, 155, 158, 165, 168, 169, 170, 183, 185, 206], "variant": [8, 57, 58], "vc": 66, "vector": [53, 58, 63, 74, 79, 80, 82, 83, 84, 85, 86, 98, 124, 188, 189, 191], "vectorwis": 56, "verbatim": 94, "verdict": 48, "veri": 10, "verif": 48, "version": [74, 94, 104], "versu": [6, 82], "via": [57, 58, 63, 68, 71, 124, 201], "viabl": 96, "video": 58, "view": 66, "violat": [3, 221, 228], "virtual": [90, 94], "visual": [27, 29, 58, 109, 115, 207, 211, 216], "visualis": [43, 44, 58], "vocabulari": [56, 58, 59], "volum": 99, "voronoi": 61, "w": 56, "wai": [5, 58, 146], "walkthrough": [19, 43, 123, 174], "want": 27, "warehous": [98, 99, 100], "warmup": [59, 123], "warn": 174, "wastag": 11, "wavi": 74, "we": [27, 68, 119, 222, 238], "weak": [66, 206], "websit": 216, "webtext": 57, "weight": [53, 56, 58, 71, 124], "what": [2, 19, 27, 36, 43, 66, 68, 94, 97, 99, 158, 196, 216, 222, 227, 234, 236, 238], "wheel": 94, "when": [50, 61, 99, 216], "where": [94, 99, 106, 155, 211, 239], "whiteboard": [19, 29, 43], "why": [2, 5, 6, 27, 29, 32, 48, 53, 59, 66, 68, 74, 94, 100, 103, 123, 125, 136, 158, 176, 193, 198, 200, 208, 214, 216, 222, 227, 235, 236], "widen": 4, "window": [39, 42, 46, 57, 58], "wise": [56, 58, 85, 103], "word": [57, 59, 94, 123], "work": [213, 222], "workaround": 235, "workflow": [94, 97, 99], "world": [7, 32, 48, 57, 88, 89, 146], "worst": [27, 29, 30, 32, 36], "wrap": [229, 238], "write": 100, "x": [30, 53, 56, 58, 68, 167], "y": [68, 181, 211], "yaml": [217, 238], "ye": 96, "yield": 213, "you": [125, 136, 238], "your": [66, 103], "z": [53, 124], "zero": [57, 66, 130, 163, 174]}})