Search.setIndex({"alltitles": {"": [[125, "fundamental_theorem_of_calculus_corollary"], [163, "cor_continuous_expectation"]], " (Additivity)": [[123, "how-does-softmax-work-additivity"], [130, "axiom:additivity"]], " (Algebraic Definition (Scalar-Vector Multiplication))": [[82, "02-vector-operation-scalar-vector-multiplication-algebraic-definition"]], " (Algebraic Definition (Vector Addition and Subtraction))": [[82, "02-vector-operation-vector-addition-algebraic-definition"]], " (Algebraic Definition of a Vector)": [[81, "01-vector-definition-algebraic-definition"]], " (All Generators are Iterators)": [[212, "software-engineering-concurrency-parallelism-asynchronous-generator-yield-remark"]], " (Amortized Time Complexity of Queue Operations)": [[36, "amortized-time-complexity"]], " (Amortized Worst-Case Time Complexity)": [[32, "stack-list-amortized-worst-case-time-complexity"]], " (Analyzing Time Complexity with Worst Case Only)": [[36, "worst-case-only"]], " (Application of the Cauchy-Schwarz Inequality)": [[202, "remark:cauchy_schwarz"]], " (Approximation of GELU)": [[55, "remark-approx-gelu-notation"], [57, "remark-approx-gelu"]], " (Assignment)": [[60, "def:assignment"], [60, "example:assignment"]], " (Attention Scores)": [[57, "decoder-concept-attention-scores"]], " (Attention Scoring Function with Scaling and Softmax)": [[57, "decoder-concept-attention-scoring-function-with-scaling-softmax"]], " (Attention Scoring Function with Scaling)": [[57, "decoder-concept-attention-scoring-function-with-scaling"]], " (Attention Scoring Function)": [[57, "decoder-concept-attention-scoring-function"]], " (Bayes Optimal Classifier and Naive Bayes)": [[50, "remark-bayes-optimal-classifier-naive-bayes"]], " (Bayes Optimal Classifier)": [[49, "example-bayes-optimal-classifier"]], " (Baye\u2019s Theorem)": [[133, "def:bayes-theorem"]], " (Bernoulli Distribution (CDF))": [[143, "def_bernoulli_distribution_cdf"]], " (Bernoulli Distribution (PMF))": [[143, "def_bernoulli_distribution_pmf"]], " (Bernoulli Trials)": [[143, "def:bernoulli_trials_1"], [146, "def:bernoulli_trials_2"]], " (Binary Search Pseudocode)": [[29, "875-koko-eating-bananas-binary-search-pseudocode"]], " (Binomial Distribution (CDF))": [[146, "def_binomial_distribution_cdf"]], " (Binomial Distribution (PMF))": [[146, "def_binomial_distribution_pmf"]], " (Binomial Distribution as a Sum of Bernoulli Trials)": [[146, "def:binomial_as_sum_of_bernoulli"]], " (Bounding the Entire Hypothesis Set)": [[65, "prf:remark-bounding-the-entire-hypothesis-set"]], " (Brute Force Search for K-Means)": [[60, "brute-force-search-kmeans"]], " (CDF is Right Continuous)": [[165, "thm_cdf_right_continuous"]], " (CDF of Arbitrary Gaussian Distribution)": [[169, "thm_cdf_arbitrary_gaussian_distribution"]], " (CDF)": [[139, "example_cdf"]], " (Categorical (Multinomial) Distribution)": [[52, "categorical-multinomial-distribution-gmm"], [73, "categorical-multinomial-distribution"]], " (Categorical Distribution Example)": [[73, "categorical-distribution-example"]], " (Categorical Distribution)": [[52, "categorical-distribution-gmm"], [73, "categorical-distribution"]], " (Cauchy-Schwarz Inequality)": [[177, "thm:cauchy_schwarz_inequality"], [202, "theorem:cauchy_schwarz"]], " (Central Moments)": [[170, "probability-theory-central-moments"]], " (Centroids)": [[60, "def:centroids"]], " (Characteristic Polynomial)": [[191, "def:characteristic_polynomial"]], " (Chebyshev\u2019s Inequality for i.i.d. Random Variables)": [[202, "corollary:chebyshev-iid"]], " (Chebyshev\u2019s Inequality)": [[202, "theorem:chebyshev"]], " (Chernoff\u2019s Bound)": [[202, "theorem:chernoff-bound"]], " (Claim)": [[43, "two-sum-167-two-sum-ii-input-array-is-sorted-two-pointers-claim"], [44, "remove-duplicates-from-sorted-array-two-pointers-claim"]], " (Coercive and Primitive Types)": [[2, "type-theory-01-subtypes-example-coercive-impl-primitive-types"]], " (Coin Toss)": [[136, "example_random_variable_coin_toss"]], " (Conditional CDF)": [[180, "def:conditional-cdf-of-a-discrete-random-variable"], [180, "def:conditional-cdf-of-a-continuous-random-variable"]], " (Conditional Distribution is a Distribution for a Sub-Population)": [[180, "remark:conditional-distribution-is-a-distribution-for-a-sub-population"]], " (Conditional Expectation is the Expectation for a Sub-Population)": [[182, "remark:conditional-expectation-is-the-expectation-for-a-sub-population"]], " (Conditional Expectation)": [[182, "def:conditional_expectation"]], " (Conditional Independence)": [[73, "conditional-independence"], [180, "def:conditional-independence"], [180, "example:conditional-independence"]], " (Conditional Likelihood Function (Machine Learning))": [[210, "def:conditional-likelihood-machine-learning"]], " (Conditional Likelihood Function)": [[67, "def-conditional-likelihood-function-linear-regression"]], " (Conditional Log-Likelihood Function)": [[67, "def-conditional-log-likelihood-function-linear-regression"]], " (Conditional PDF of an Event A Given Y=y)": [[180, "thm:conditional-pdf-of-an-event-given-y"]], " (Conditional PDF)": [[180, "def:conditional-pdf-of-a-continuous-random-variable"]], " (Conditional PMF of an Event A Given Y=y)": [[180, "thm:conditional-pmf-of-an-event-a-given-y"]], " (Conditional PMF)": [[180, "def:conditional-pmf"]], " (Conditional Probability Equalities)": [[131, "prop:conditional-probability-equalities"]], " (Conditional Probability)": [[131, "definition-0"]], " (Conditional Variance)": [[182, "def:conditional-variance"]], " (Context Vector/Matrix)": [[57, "decoder-concept-context-vector-matrix"]], " (Continuous Random Variables)": [[161, "def_continuous_random_variable"]], " (Continuous Uniform Distribution (CDF))": [[167, "def_continuous_uniform_distribution_cdf"]], " (Continuous Uniform Distribution (PDF))": [[167, "def_continuous_uniform_distribution_pdf"]], " (Contour Map/Plot)": [[126, "def:contour_map"]], " (Contravariance)": [[7, "computer-science-type-theory-contravariance"]], " (Convex and Concave Functions)": [[202, "remark:convex_concave"]], " (Convex)": [[202, "definition:convex"]], " (Convolutions of Random Variables)": [[185, "theorem:convolutions-of-random-variables"]], " (Corollary of Standard Gaussian)": [[169, "cor_standard_gaussian"]], " (Correctness of Binary Search Recursive Algorithm)": [[27, "omniverse-dsa-searching-algorithms-binary-search-recursive-algorithm-correctness"]], " (Correlation Coefficient)": [[177, "def:correlation_coefficient"], [177, "prop:correlation_coefficient"]], " (Cosine Annealing With Warmup)": [[58, "why-do-we-use-warmup-cosine-scheduler-definition-duplicate"], [122, "why-do-we-use-warmup-cosine-scheduler-definition"]], " (Cosine Dot Product)": [[177, "def:cosine_dot_product"]], " (Cost Function is a Function of Assignment and Centroids)": [[60, "remark:cost-function-is-a-function-of-assignment-and-centroids"]], " (Cost Function is a function of assignments and cluster centers)": [[60, "remark:kmeans-cost-function-is-a-function-of-assignments-and-cluster-centers"]], " (Cost Function of K-Means Monotonically Decreases)": [[60, "kmeans-monotonic-decrease"]], " (Countable Set)": [[137, "def_countable_set"]], " (Counter Example)": [[154, "ex:poi2"]], " (Countour Lines (Levels))": [[126, "def:contour_lines"]], " (Covariance Matrix (2D))": [[177, "def:covariance_matrix_2d"]], " (Covariance Matrix is always Symmetric Positive Semi-Definite)": [[194, "theorem:positive_semi_definite_covariance_matrix"]], " (Covariance Matrix of Independent Random Variables)": [[187, "thm:covariance-matrix-independent"]], " (Covariance Matrix)": [[187, "def:covariance-matrix"]], " (Covariance)": [[7, "computer-science-type-theory-covariance"], [177, "def:covariance"], [177, "thm:covariance"], [177, "prop:covariance"]], " (Cumulative Distribution Function)": [[139, "def_cdf"], [165, "def_continuous_cdf"]], " (DC Shift)": [[140, "prop_expectation_dc_shift_discrete"], [141, "prop_dc_shift"], [163, "prop_expectation_dc_shift_continuous"]], " (Dataset)": [[73, "dataset-definition"]], " (Define Probability at a Point)": [[165, "thm_cdf_point"]], " (Definition of Independence in Terms of Conditional Probability)": [[132, "def:independence-conditional"]], " (Diagonalizable Matrix)": [[191, "def:diagonalizable_matrix"]], " (Dice Roll)": [[136, "example_random_variable_dice_roll"]], " (Dichotomy)": [[65, "def:dichotomy"]], " (Dimensionality of the Subspaces)": [[57, "decoder-concept-linear-projections-queries-keys-values-remark"]], " (Discrete Random Variables)": [[137, "def_discrete_random_variables"]], " (Discrete Uniform Distribution (CDF))": [[159, "def_discrete_uniform_cdf"]], " (Discrete Uniform Distribution (PMF))": [[159, "def_discrete_uniform_pmf"]], " (Disjoint vs Independence)": [[132, "thm:disjoint-vs-independent"]], " (Disjoint)": [[132, "def:disjoint"]], " (Distance)": [[83, "03-vector-norm-distance"]], " (Dot Product Example in 3-Dimensional Space)": [[84, "linear-algebra-02-vectors-04-vector-products-dot-product-example-1"]], " (EM Algorithm for GMM)": [[52, "alg:em-gmm-1"]], " (ERM is \u201clearning from data using trial and error\u201d)": [[49, "rem-erm-trial-and-error"]], " (Eigendecomposition)": [[191, "def:eigendecomposition"]], " (Eigenvalue and Eigenvector)": [[191, "def:eigenvalue"]], " (Eigenvalues are roots of the characteristic polynomial)": [[191, "thm:eigenvalues_are_roots_of_the_characteristic_polynomial"]], " (Eigenvalues of a Symmetric Matrix)": [[191, "thm:eigenvalues_of_a_symmetric_matrix"]], " (Elbow Method)": [[60, "elbow-method"]], " (Empirical Correlation Coefficient)": [[177, "thm:empirical_correlation_coefficient"]], " (Empirical Parameters)": [[73, "remark-empirical-parameters"]], " (Empirical Risk Minimization approximates True Risk Minimization when N \\rightarrow \\infty)": [[49, "theorem-erm-approximates-trm"]], " (Empirical Risk Minimization)": [[49, "theorem-empirical-risk-minimization"]], " (Empirical Risk)": [[49, "def-empirical-risk"], [49, "example-empirical-risk"]], " (Equality of Vectors)": [[81, "01-vector-definition-equality-of-vectors"]], " (Equivalent Conditions for \\lambda to be an Eigenvalue)": [[191, "thm:equivalent_conditions_for_lambda_to_be_an_eigenvalue"]], " (Error Function)": [[169, "def_error_function"]], " (Event E)": [[129, "event"]], " (Event Space \\mathcal{F})": [[129, "event_space"]], " (Exact Match Scenario)": [[57, "decoder-concept-attention-exact-match-scenario"]], " (Example 1)": [[152, "ex_iid_1"]], " (Example of Growth Function)": [[65, "example_growth_function"]], " (Example on Feature 1 and Class 2)": [[73, "example-naive-bayes-feature-1-class-2"]], " (Example)": [[52, "prf:example-gmm-1"], [55, "gpt-notations-one-hot-example-dup"], [57, "gpt-notations-one-hot-example"], [62, "prf:example-bits"], [62, "example-pixels"], [154, "ex:poi"]], " (Example: Conditional Expectation)": [[67, "prf-example-conditional-expectation"]], " (Existence of Expectation)": [[140, "thm_existence_of_expectation_discrete"], [163, "thm_existence_of_expectation_continuous"]], " (Expectation and Covariance of Multivariate Gaussian)": [[190, "prop:mean_vector_covariance_matrix"]], " (Expectation and Variance of Continuous Uniform Distribution)": [[167, "thm_continuous_uniform_distribution"]], " (Expectation and Variance of Exponential Distribution)": [[168, "thm_exponential_distribution_expectation_variance"]], " (Expectation and Variance of the Gaussian Distribution)": [[169, "theorem-3"]], " (Expectation of Bernoulli Distribution)": [[143, "prop:bernoulli"]], " (Expectation of Binomial Distribution)": [[146, "prop:bino_exp"]], " (Expectation of Geometric Distribution)": [[150, "prop:geo_exp"]], " (Expectation of Poisson Distribution)": [[154, "prop:poi_exp"]], " (Expectation of Random Vectors)": [[187, "def:expectation-random-vector"]], " (Expectation of Sample Average)": [[205, "theorem-expectation-of-sample-average"]], " (Expectation)": [[140, "def_discrete_expectation"], [163, "def_continuous_expectation"]], " (Experiment/Probability Space)": [[129, "experiment"]], " (Exponential Distribution (CDF))": [[168, "def_exponential_distribution_cdf"]], " (Exponential Distribution (PDF))": [[168, "def_exponential_distribution_pdf"], [168, "rem_exponential_distribution_pdf"]], " (Externally Derived Constraints)": [[29, "875-koko-eating-bananas-externally-derived-constraints"]], " (Feasibility Function for Koko Eating Bananas)": [[29, "875-koko-eating-bananas-feasibility-function-for-koko-eating-bananas"]], " (Feasibility Function)": [[29, "875-koko-eating-bananas-feasibility-function"]], " (Field)": [[78, "linear-algebra-01-preliminaries-field"]], " (Fields on the Real Numbers)": [[78, "linear-algebra-preliminaries-fields-on-the-real-numbers"]], " (Finding CDF is easier)": [[172, "remark-finding-cdf-is-easier"]], " (GELU Activation Function)": [[55, "def-gelu-notation"], [57, "def-gelu"]], " (GMM Sampling Process)": [[52, "alg:gmm-sampling"]], " (Gaussian Distribution (CDF))": [[169, "def_gaussian_distribution_cdf"]], " (Gaussian Distribution (PDF))": [[169, "def_gaussian_distribution_pdf"], [169, "rmk_gaussian_distribution_pdf"]], " (Gaussian \\iid (cont.))": [[175, "ex_gaussian_iid_cont"]], " (Gaussian \\iid)": [[175, "ex_gaussian_iid"]], " (Generalization Bound)": [[65, "thm:generalization-bound"]], " (Generalization Gap)": [[65, "def-generalization-gap"]], " (Generic Divide and Conquer Algorithm)": [[16, "master-theorem-generic-divide-and-conquer-algorithm"]], " (Geometric Definition of a Vector)": [[81, "01-vector-definition-geometric-definition"]], " (Geometric Distribution)": [[150, "def:geo"]], " (Gradient Saturation)": [[57, "decoder-concept-gradient-saturation"]], " (Growth Function)": [[65, "ece595_def4.6"]], " (Hoeffding\u2019s Inequality)": [[65, "theorem-hoeffding-inequality-restated"], [202, "theorem:hoeffding"]], " (Hoeffding\u2019s Lemma)": [[202, "lemma:hoeffding"]], " (I came all the way just for a Moot Example)": [[5, "computer-science-type-theory-generics-moot-example"]], " (IID Assumption)": [[190, "remark:iid_assumption"]], " (In-Sample Error (Empirical Risk Minimization))": [[65, "prf:definition:in-sample-error"]], " (Inclusion-Exclusion)": [[130, "corollary:inclusion-exclusion"]], " (Inclusive Implementations in Object-Oriented Languages)": [[2, "type-theory-01-subtypes-example-inclusive-impl-oop"]], " (Independence and Covariance)": [[177, "thm:independence_and_covariance"]], " (Independence and Joint Expectation)": [[177, "thm:independence_and_joint_expectation"]], " (Independence for N random variables)": [[175, "def_independent_n"]], " (Independent Events)": [[132, "def:independent-events"]], " (Independent Random Vectors)": [[187, "def:independent-random-vector"]], " (Independent and Identically Distributed (IID))": [[152, "def_iid"], [187, "def_iid_N"]], " (Independent and Identically Distributed (i.i.d.))": [[175, "def_iid_restated"]], " (Independent random variables)": [[175, "def_independent"]], " (Inequality Bounds)": [[130, "corollary:inequality-bounds"]], " (Integer Type as a Set)": [[2, "type-theory-01-subtypes-example-int-type-as-set"]], " (Interpretation of True Risk)": [[49, "remark-interpretation-true-risk"]], " (Intuition for Expectation and Variance of Continuous Uniform Distribution)": [[167, "rmk_continuous_uniform_distribution"]], " (Invariance)": [[7, "computer-science-type-theory-invariance"]], " (Is \\mathbf{X} a random variable?)": [[67, "prf-remark-x-random"]], " (Jacobian Matrix of Softmax Function)": [[123, "jacobian-softmax"]], " (Jensen\u2019s Inequality)": [[202, "theorem:jensen"]], " (Joint CDF (cont.))": [[175, "def_joint_cdf_cont"]], " (Joint CDF of Random Vectors)": [[187, "def:joint-cdf-random-vector"]], " (Joint CDF)": [[175, "def_joint_cdf"]], " (Joint Distribution Example)": [[73, "joint-distribution-example"]], " (Joint Expectation of Independent Random Vectors)": [[187, "def:joint-expectation-independent-random-vector"]], " (Joint Expectation)": [[177, "def:joint_expectation"]], " (Joint PDF of \\iid random variables)": [[175, "cor_iid_joint_pdf"]], " (Joint PDF)": [[175, "def_joint_pdf"], [175, "remark-joint-pdf"]], " (Joint PMF and Joint PDF)": [[175, "thm_joint_pmf_pdf"]], " (Joint PMF)": [[175, "def_joint_pmf"], [175, "remark-joint-pmf"]], " (Joint and Conditional Probability)": [[73, "joint-and-conditional-probability"]], " (K-Means Cost Function)": [[60, "def:kmeans-cost"]], " (K-Means Loss Function)": [[60, "def:kmeans-loss"]], " (K-Means Objective Function)": [[60, "def:kmeans-objective"]], " (K-Means Optimal Assignment)": [[60, "criterion:kmeans-optimal-assignment"]], " (K-Means Optimal Cluster Centers)": [[60, "criterion:kmeans-optimal-cluster-centers"]], " (K-Means Voronoi Partition)": [[60, "def:kmeans-voronoi-partition"]], " (K-Means is a Greedy Algorithm)": [[60, "remark-kmeans-greedy"]], " (L2 Norm)": [[83, "03-vector-norm-l2-norm"]], " (L_1 Norm)": [[83, "03-vector-norm-l1-norm"]], " (L_p Norm)": [[83, "03-vector-norm-lp-norm"]], " (Lagrangian Method)": [[73, "lagrangian-method"]], " (Law of Total Expectation)": [[182, "theorem:law_of_total_expectation"]], " (Law of Total Probability (Corollary))": [[133, "cor:law-total-probability"]], " (Law of Total Probability)": [[133, "thm:law-total-probability"]], " (Layer Normalization)": [[57, "decoder-layer-normalization"]], " (Learning Theory)": [[65, "theorem-learning-theory-1"]], " (Left and Right Continuity)": [[165, "def_continuous_cdf_continuity"]], " (Likelihood Function of Naive Bayes)": [[73, "def:naive-bayes-likelihood"]], " (Likelihood Function with IID Assumption (Higher Dimension))": [[210, "def:likelihood-iid-higher-dim"]], " (Likelihood Function with IID Assumption (Supervised Learning))": [[210, "def:likelihood-iid-supervised-learning"]], " (Likelihood Function with IID Assumption)": [[210, "def:likelihood-iid"]], " (Likelihood Function)": [[210, "def:likelihood"]], " (Likelihood is not Conditional PDF)": [[210, "rem:likelihood"]], " (Likelihood)": [[73, "likelihood"]], " (Limiting Perspective)": [[180, "def:limiting-perspective"]], " (Linear Projections for Queries, Keys, and Values)": [[57, "decoder-concept-linear-projections-queries-keys-values"]], " (Linear Transformation of Gaussian Distribution)": [[169, "thm_linear_transformation_gaussian_distribution"]], " (Linearity of Covariance)": [[177, "thm:linearity_of_covariance"]], " (Linearity)": [[140, "prop_expectation_linearity_discrete"], [141, "prop_linearity"], [163, "prop_expectation_linearity_continuous"]], " (Liskov Substitution Principle)": [[4, "type-theory-liskov-substitution-principle"]], " (Lloyd\u2019s Algorithm (K-Means))": [[60, "lloyd-kmeans-algorithm"]], " (Log Likelihood Function of Naive Bayes)": [[73, "def:naive-bayes-log-likelihood"]], " (Log-Likelihood Function)": [[210, "def:log-likelihood"]], " (Log-Likelihood of Bernoulli Distribution)": [[210, "ex:log-likelihood-bernoulli"]], " (Loop Invariant Theorem)": [[30, "linear-search-loop-invariant-theorem"]], " (Major Confusion Alert)": [[65, "prf:remark-major-confusion-alert"]], " (Marginal Distribution and Normalization Constant)": [[73, "marginal-distribution-and-normalization-constant"]], " (Marginal Distribution and the Law of Total Probability)": [[175, "remark-marginal-distribution-ltp"]], " (Marginal PDF of Bivariate Normal Distribution)": [[175, "example-marginal-pdf-bivariate-normal"]], " (Marginal PDF of Random Vectors)": [[187, "def:marginal-pdf-random-vector"]], " (Marginal PMF and PDF)": [[175, "def-marginal-pmf-pdf"]], " (Markov\u2019s Inequality)": [[202, "theorem:markov"]], " (Mathematical Representation (Iterative))": [[27, "binary-search-mathematical-representation-iterative"]], " (Mathematical Representation)": [[27, "binary-search-mathematical-representation"]], " (Matrix Formulation)": [[123, "matrix-formulation-softmax"]], " (Matrix Representation of a Eigenvalue and Eigenvector)": [[191, "def:matrix_representation_of_a_eigenvalue_and_eigenvector"]], " (Maximize Feature Parameters)": [[73, "def:naive-bayes-max-feature-params"]], " (Maximize Priors)": [[73, "def:naive-bayes-max-priors"]], " (Maximum Likelihood Estimation for Bernoulli Distribution)": [[210, "def:maximum-likelihood-estimation-for-bernoulli-distribution"]], " (Maximum Likelihood Estimation for \\mathcal{S} with Label y)": [[210, "rmk:maximum-likelihood-estimation"]], " (Maximum Likelihood Estimation)": [[210, "def:maximum-likelihood-estimation"]], " (Mean and Covariance of Linear Transformation)": [[189, "thm:linear_transformation_mean_covariance"]], " (Mean and Covariance of Shifting)": [[189, "thm:shifting_mean_covariance"]], " (Mean from CDF (X < 0))": [[166, "probability-theory-mean-from-cdf-x-lt-0"]], " (Mean from CDF (X > 0))": [[166, "probability-theory-mean-from-cdf-x-gt-0"]], " (Mean from CDF)": [[166, "probability-theory-mean-from-cdf"]], " (Measure Zero Sets)": [[129, "measure_zero_sets"]], " (Median from CDF)": [[166, "probability-theory-median-from-cdf"]], " (Median)": [[166, "probability-theory-median"]], " (Minimizing Individual Cluster\u2019s Cost is Equivalent to Minimizing the Objective Function)": [[60, "thm:minimizing-individual-clusters-cost-is-equivalent-to-minimizing-the-objective-function"]], " (Mode)": [[166, "probability-theory-mode"]], " (Moment Generating Function Example 1.)": [[199, "ex:moment_generating_function_1"]], " (Moment Generating Function Example 2.)": [[199, "ex:moment_generating_function_2"]], " (Moment Generating Function Properties)": [[199, "thm:moment_generating_function_properties"]], " (Moment Generating Function of the Sum of N Independent Random Variables)": [[200, "cor:moment_generating_function_sum_of_N_rv"]], " (Moment Generating Function of the Sum of Two Independent Random Variables)": [[200, "thm:moment_generating_function_sum_of_2_rv"]], " (Moment Generating Function)": [[199, "def:moment_generating_function"]], " (Moments of Bernoulli Random Variable)": [[199, "ex:moment_generating_function_bernoulli"]], " (Moments)": [[141, "def_moments"], [164, "def_moments_continuous"]], " (Monotone Convergence Theorem)": [[60, "monotone-convergence"]], " (Monotonicity)": [[29, "875-koko-eating-bananas-monotonicity"]], " (Multivariate Gaussian Distribution (2D))": [[177, "def:multivariate_gaussian_distribution_2d"]], " (Multivariate Gaussian Distribution)": [[190, "def:multivariate_gaussian"]], " (Naive Bayes Estimation Algorithm)": [[73, "prf:naive-bayes-estimation-algorithm"]], " (Naive Bayes Inference Algorithm)": [[73, "naive-bayes-inference-algorithm"]], " (Non-Negativity)": [[123, "how-does-softmax-work-non-negativity"], [130, "axiom:non-negativity"]], " (Norm on a Vector Space)": [[83, "03-vector-norm-norm-on-a-vector-space"]], " (Normalization Property of PMF)": [[138, "thm_pmf_normalization"]], " (Normalization)": [[97, "ml-lifecycle-032-normalization"], [123, "how-does-softmax-work-normalization"], [130, "axiom:normalization"]], " (Notation Clash)": [[67, "remark-likelihood-function-notation-clash"]], " (Notation Convention)": [[67, "prf-remark-notation-convention-linear-regression"]], " (Notation Overload)": [[73, "notation-overload"]], " (Notation Reminder)": [[52, "prf:remark-notation-gmm"]], " (Notation)": [[60, "prf:remark:kmeans-optimal-cluster-centers-notation"], [65, "remark-learning-problem-notations"]], " (Notations)": [[65, "remark-learning-problem-notations-learning-theory"]], " (Numerical Stability)": [[57, "decoder-concept-numerical-stability"]], " (Open Equals Closed Interval)": [[162, "rem_open_equals_closed_interval"]], " (Orthornormal Basis)": [[191, "thm:orthornormal_basis"]], " (Out-Sample Error (Generalization Error))": [[65, "prf:definition:out-sample-error"]], " (PDF is Derivative of CDF)": [[165, "thm_pdf_derivative_cdf"]], " (PDF of Independent Multivariate Gaussian Random Vectors)": [[190, "def:independence"]], " (PDF of Independent Random Vectors)": [[187, "def:pdf-independent-random-vector"]], " (PDF of Random Vectors)": [[187, "def:pdf-random-vector"]], " (PMF and CDF Conversion)": [[139, "thm_pmf_cdf"]], " (PMF of Coin Toss)": [[138, "example_pmf_coin_toss"]], " (PMF of Two Dice Rolls)": [[138, "example_pmf_two_dice_rolls"]], " (Parameter of a Bernoulli Distribution)": [[209, "prf:example-bernoulli-parameter"]], " (Parameter of a Gaussian Distribution)": [[209, "prf:example-gaussian-parameter"]], " (Pinning Pylint Version)": [[93, "cicd-concept-pinning-pylint"]], " (Point vs. Position Vector)": [[79, "02-systems-of-linear-equations-point-vs-position-vector"]], " (Poisson Approximation to Binomial Distribution)": [[154, "thm:poi_bin"]], " (Poisson Distribution)": [[154, "def:poi"]], " (Position-wise Feedforward Networks)": [[55, "def-positionwise-ffn-notation"], [57, "def-positionwise-ffn"]], " (Positional Encoding)": [[57, "decoder-positional-encoding"]], " (Positive Definite Matrix)": [[194, "corollary:positive_definite_matrix"]], " (Positive Definite)": [[194, "def:positive_definite"]], " (Positive Semi-Definite Matrix)": [[194, "theorem:positive_semi_definite_matrix"]], " (Positive Semi-Definite)": [[194, "def:positive_semi_definite"]], " (Posterior)": [[73, "posterior"]], " (Pre-image of a Random Variable)": [[136, "pre_image"]], " (Prior)": [[73, "prior"]], " (Probability Density Function (1-dimensional))": [[162, "def_probability_density_function_1d"]], " (Probability Density Function)": [[162, "def_probability_density_function"], [162, "rem_probability_density_function"]], " (Probability Law)": [[129, "probability_law"]], " (Probability Mass Function)": [[138, "def_pmf"]], " (Probability of Complements)": [[130, "corollary:probability-of-complements"]], " (Probability of Empty Set)": [[130, "corollary:probability-of-empty-set"]], " (Probability of an Interval)": [[165, "prop_continuous_cdf_interval"], [169, "cor_probability_interval"]], " (Properties of CDF)": [[139, "thm_cdf"], [165, "prop_continuous_discrete_cdf"]], " (Properties of Transpose)": [[81, "01-vector-definition-properties-of-transpose"]], " (Pseudocode)": [[27, "binary-search-pseudocode-iterative"], [27, "binary-search-pseudocode-recursive"]], " (Query and Key are Independent and Identically Distributed (i.i.d.))": [[57, "decoder-concept-query-key-iid"]], " (R-squared)": [[67, "def-r-squared"]], " (Random Variable is a Function)": [[65, "remark-random-variable-is-a-function"]], " (Random Variables)": [[136, "random_variables"]], " (Random Vectors)": [[187, "def:random-vector"], [187, "rmk:random-vector"]], " (Ranking items on a newsfeed)": [[95, "ml-lifecycle-02-ranking-items-newsfeed"]], " (Remark)": [[60, "remark-kmeans-problem-statement"], [192, "prf:remark:why_contours_of_multivariate_gaussian_are_elliptical"]], " (Remark: Closed-Form Solution for Single Gaussian)": [[52, "prf:remark-gmm-closed-form"]], " (Restricted Hypothesis Space)": [[65, "restricted_hypothesis_space"]], " (Risk vs Loss)": [[49, "rem-risk-vs-loss"]], " (Running Example (Initialization))": [[52, "example-gmm-initialization"]], " (Running Example: Update Covariance Matrix)": [[52, "prf-gmm-update-covariance-example"]], " (Running Example: Update Mean)": [[52, "prf-gmm-update-means-example"]], " (Running Example: Update of the GMM Mixture Weights)": [[52, "ex:gmm-update-mixture-weights"]], " (Sample Average)": [[205, "def-sample-average"]], " (Sample Complexity)": [[65, "sample_complexity_example"]], " (Sample Space \\mathbf{\\Omega})": [[129, "sample_space"]], " (Sauer\u2019s Lemma)": [[65, "sauer's_lemma"]], " (Scaled Dot-Product Attention)": [[57, "decoder-concept-scaled-dot-product-attention"]], " (Scaling)": [[140, "prop_expectation_scaling_discrete"], [141, "prop_scaling"], [163, "prop_expectation_scaling_continuous"]], " (Shattering)": [[65, "shatters"]], " (Simplification of the Objective Function)": [[56, "decoder-simplified-objective-function"]], " (Softmax Normalization and Attention Weights)": [[57, "decoder-concept-softmax-normalization-attention-weights"]], " (Softmax Output as Vector)": [[123, "softmax-output-vector"]], " (Some Intuition)": [[180, "remark:conditional-pmf"]], " (Some Remarks)": [[32, "stack-list-remarks"]], " (Some remarks)": [[50, "remark-bayes-optimal-classifier"], [73, "some-remarks"]], " (Standard Deviation)": [[141, "def_standard_deviation"]], " (Standard Gaussian Distribution)": [[169, "def_standard_gaussian_distribution"]], " (Standard Normal Distribution (CDF))": [[169, "def_standard_normal_distribution_cdf"]], " (Standard Representation of Vectors)": [[81, "01-vector-definition-column-vector-is-the-standard-representation"]], " (State Space of Coin Toss)": [[138, "example_state_space_coin_toss"]], " (State Space of Dice Roll)": [[138, "example_state_space_dice_roll"]], " (State Space)": [[138, "def_state_space"]], " (Stirling Numbers of the Second Kind)": [[60, "stirling-numbers"]], " (Strong Law of Large Numbers)": [[205, "theorem-strong-law-of-large-numbers"]], " (Stronger Linearity)": [[140, "prop_expectation_stronger_linearity_discrete"], [163, "prop_expectation_stronger_linearity_continuous"]], " (Subtype Criterion)": [[4, "type-theory-subtype-criterion"]], " (Subtype and Type Safety)": [[3, "type-theory-subtype-and-type-safety"]], " (Sum of Common Distributions)": [[185, "theorem:sum-of-common-distributions"]], " (Sum of Gaussian Random Variables is Gaussian)": [[200, "thm:moment_generating_function_sum_of_gaussian_rv"]], " (Sum of Gaussian Random Variables)": [[185, "theorem:sum-of-gaussian-random-variables"]], " (Sum of Independent Poisson Random Variables)": [[154, "prop_sum_poi"]], " (Sum of Poisson Random Variables is Poisson)": [[200, "thm:moment_generating_function_sum_of_poisson_rv"]], " (Sum of Poisson Random Variables)": [[185, "theorem:sum-of-poisson-random-variables"]], " (Summary)": [[65, "remark-summary-1"]], " (System of Linear Equations (Algebraic Form))": [[79, "02-systems-of-linear-equations-definition-algebraic-form"]], " (The Average Case)": [[13, "two-sum-time-complexity-nested-loops-avg-case"], [19, "remark-0"]], " (The Fundamental Theorem of Calculus)": [[125, "fundamental_theorem_of_calculus"]], " (The Law of Iterated Expectation)": [[182, "corollary:law_of_iterated_expectation"]], " (The Law of The Unconscious Statistician)": [[140, "prop_expectation_function_discrete"], [163, "prop_expectation_function_continuous"]], " (The Method of Transformations)": [[172, "theorem:method-of-transformations"]], " (The Parameter Vector)": [[73, "parameter-vector"]], " (The State Space of Binomial Distribution)": [[146, "def:state_space_binomial"]], " (The VC Generalization Bound)": [[65, "vc_generalization_bound"]], " (The i.i.d. Assumption)": [[73, "iid-assumption"]], " (The i.i.d. assumption)": [[67, "prf-remark-iid"]], " (The update of the GMM Means depends on the responsibilities)": [[52, "remark-gmm-update-means"]], " (Things to Note (Important))": [[65, "remark-things-to-note"]], " (Tightness of the Union Bound)": [[202, "remark:union_bound_tightness"]], " (Time Complexity)": [[29, "time-complexity"]], " (Transpose of a Vector)": [[81, "01-vector-definition-transpose-of-a-vector"]], " (True Risk Minimization)": [[49, "theorem-true-risk-minimization"]], " (True Risk/Generalization Error)": [[49, "def-true-risk"]], " (Two Coins)": [[180, "ex:two-coins"]], " (Two Pointers Technique with Meet in the Middle)": [[47, "two-pointers-technique-meet-in-middle-algorithm"]], " (Two Pointers Technique)": [[47, "two-pointers-technique-algorithm"]], " (Two-Pointers (Code))": [[44, "remove-duplicates-from-sorted-array-two-pointers-algorithm-2"]], " (Two-Pointers)": [[43, "two-sum-167-two-sum-ii-input-array-is-sorted-two-pointers-algorithm"], [44, "remove-duplicates-from-sorted-array-two-pointers-algorithm-1"]], " (Uncoutable Set)": [[161, "def_uncountable_set"]], " (Underlying Distributions)": [[73, "underlying-distributions"]], " (Union Bound)": [[202, "theorem:union_bound"]], " (Univariate Maximum Likelihood Estimation)": [[73, "remark-univariate-mle"]], " (Unordered Linear Search Mathematical Representation (Iterative))": [[30, "unordered-linear-search-mathematical-representation-iterative"]], " (Unordered Linear Search Pseudocode (Iterative))": [[30, "unordered-linear-search-pseudocode-iterative"]], " (Update of the GMM Covariances)": [[52, "theorem-gmm-update-covariance"]], " (Update of the GMM Means)": [[52, "theorem-gmm-update-means"]], " (Update of the GMM Mixture Weights depends on all Parameters)": [[52, "rem:gmm-update-mixture-weights-depends-on-all-parameters"]], " (Update of the GMM Mixture Weights)": [[52, "thm:gmm-update-mixture-weights"]], " (VC Dimension of \\mathcal{H})": [[65, "vc_dimension"]], " (VC Dimension of a 2D Perceptron)": [[65, "vc_dimension_of_a_2d_perceptron"]], " (VC Dimension of a Perceptron)": [[65, "vc_dimension_of_a_perceptron"]], " (Valid Parentheses Using Stack)": [[35, "valid-parentheses-using-stack"]], " (Variable vs Random Variable)": [[136, "example_variable_vs_random_variable"]], " (Variance (Alternative))": [[141, "def_variance_alt"], [164, "def_variance_continuous_alt"]], " (Variance of Bernoulli Distribution)": [[143, "prop:bernoulli_var"]], " (Variance of Binomial Distribution)": [[146, "prop:bino_var"]], " (Variance of Dot Product)": [[57, "decoder-concept-variance-dot-product"]], " (Variance of Geometric Distribution)": [[150, "prop:geo_var"]], " (Variance of Poisson Distribution)": [[154, "prop:poi_var"]], " (Variance of Sample Average)": [[205, "theorem-variance-of-sample-average"]], " (Variance)": [[141, "def_variance"], [164, "def_variance_continuous"]], " (Vector Addition)": [[82, "02-vector-operation-vector-addition-example"]], " (Vector Subtraction)": [[82, "02-vector-operation-vector-subtraction-example"]], " (Vector is Invariant under Coordinate Transformation)": [[81, "01-vector-definition-is-invariant-under-coordinate-transformation"]], " (Vector versus Coordinate)": [[81, "01-vector-definition-vector-versus-coordinate"]], " (Voronoi Region)": [[60, "def-voronoi-region"]], " (Weak Law of Large Numbers)": [[65, "theorem-weak-law-of-large-numbers-restated"], [205, "theorem-weak-law-of-large-numbers"]], " (What if we want to find 39?)": [[27, "binary-search-remark-what-if-we-want-to-find-39"]], " (What is a joint distribution?)": [[195, "remark-what-is-a-joint-distribution"]], " (What is a learner?)": [[67, "prf-example-learner"]], " (What is the Hypothesis Space is Infinite?)": [[65, "rmk:infinite-hypothesis-space"]], " (Where\u2019s the y?)": [[210, "rem:where-y"]], " (Why 2^D parameters?)": [[73, "2dparameters"]], " (Why ceiling?)": [[29, "875-koko-eating-bananas-why-ceiling"]], " (Why do we need a bias?)": [[67, "prf:remark-bias"]], " (Why is \\iid so important?)": [[175, "rem_iid"]], " (Why not just use Any?)": [[5, "computer-science-type-theory-generics-why-use-t"]], " (Yield is an expression and not a statement)": [[212, "software-engineering-concurrency-parallelism-asynchronous-generator-yield-is-an-expression"]], " (Zero Measure)": [[162, "def_zero_measure"]], " (Zero-One Loss)": [[65, "prf:definition:zero-one-loss"]], " (\\textbf{i.i.d.} Assumption in ERM)": [[49, "rem-iid-erm"]], "1. Code versioning": [[103, "code-versioning"]], "1. Model Performance Monitoring": [[109, "model-performance-monitoring"]], "1. Randomized Traffic Allocation": [[93, "randomized-traffic-allocation"]], "1. Review the Configuration File": [[89, "review-the-configuration-file"]], "1. Understanding Threading and Asyncio": [[215, "understanding-threading-and-asyncio"]], "1. Warmup Phase": [[122, "warmup-phase"]], "1. What will be the output of the provided example usage? Explain why.": [[235, "what-will-be-the-output-of-the-provided-example-usage-explain-why"]], "2. Cosine Decay Phase": [[122, "cosine-decay-phase"]], "2. Create the Cluster": [[89, "create-the-cluster"]], "2. Data Drift Monitoring": [[109, "data-drift-monitoring"]], "2. Data versioning": [[103, "data-versioning"]], "2. Pre-emptive Multitasking in Threading": [[215, "pre-emptive-multitasking-in-threading"]], "2. Sufficient Sample Size": [[93, "sufficient-sample-size"]], "2. What is the issue with using mutable default arguments in Python functions?": [[235, "what-is-the-issue-with-using-mutable-default-arguments-in-python-functions"]], "2.1. Tau Fraction": [[122, "tau-fraction"]], "2.1. Training Dataset": [[56, "training-dataset"]], "2.2. Input Representation": [[56, "input-representation"]], "2.2. Learning Rate Multiplier": [[122, "learning-rate-multiplier"]], "2.3. Learning Rate": [[122, "learning-rate"]], "2.3. Model": [[56, "model"]], "2D Multivariate Gaussian": [[189, "d-multivariate-gaussian"]], "3. Concept Drift Monitoring": [[109, "concept-drift-monitoring"]], "3. Cooperative Multitasking in Asyncio": [[215, "cooperative-multitasking-in-asyncio"]], "3. Model artifacts and metadata": [[103, "model-artifacts-and-metadata"]], "3. Monitor the Cluster Creation": [[89, "monitor-the-cluster-creation"]], "4. Summary of Key Differences": [[215, "summary-of-key-differences"]], "5. When to Use Threading vs Asyncio": [[215, "when-to-use-threading-vs-asyncio"]], "A Case Study On Addable": [[6, "a-case-study-on-addable"]], "A Case Study On Sized": [[6, "a-case-study-on-sized"]], "A Caution on Data Leakage": [[105, "a-caution-on-data-leakage"]], "A First Look at Vector Products": [[84, null]], "A More Nuanced Example: Mutable Default Arguments": [[93, "a-more-nuanced-example-mutable-default-arguments"]], "A Naive Approach": [[29, "a-naive-approach"]], "A Naive DataOps Pipeline": [[99, "a-naive-dataops-pipeline"]], "A Naive Implementation of DataLoader": [[212, "a-naive-implementation-of-dataloader"]], "A Not So Good Example on Implementing Base Estimator": [[8, "a-not-so-good-example-on-implementing-base-estimator"]], "A Note On Cross-validation": [[105, "a-note-on-cross-validation"]], "A Note On Random Variables": [[125, "a-note-on-random-variables"]], "A Primer": [[52, "a-primer"]], "A Primer on Binary Digits (Bits) and 8-bit Unsigned Integers": [[62, "a-primer-on-binary-digits-bits-and-8-bit-unsigned-integers"]], "A Registry For PyTorch Schedulers": [[225, "a-registry-for-pytorch-schedulers"]], "A Rudimentary Introduction to Generator and Yield in Python": [[212, null]], "A Small Example": [[52, "a-small-example"]], "A Smaller Example for Illustration": [[58, "a-smaller-example-for-illustration"]], "A Type Safe Example": [[3, "a-type-safe-example"]], "A Violation of Dependency Inversion Principle": [[220, "a-violation-of-dependency-inversion-principle"]], "A Word on Monitoring in Machine Learning Systems": [[93, "a-word-on-monitoring-in-machine-learning-systems"]], "A Word on Oscillations": [[58, null], [122, null]], "A Word on Type Safety Checks in Python": [[93, "a-word-on-type-safety-checks-in-python"]], "A-posteriori:": [[65, "a-posteriori"]], "A-priori:": [[65, "a-priori"]], "A/B Testing": [[93, "a-b-testing"]], "ACID Properties": [[97, "ml-lifecycle-032-acid-properties"]], "Ablation Studies": [[105, "ablation-studies"]], "Ablations": [[90, null]], "Abstract Overview": [[56, "abstract-overview"]], "Accommodate Dynamic Size": [[17, "accommodate-dynamic-size"]], "Activate Virtual Environment": [[93, "activate-virtual-environment"]], "Adding a Return Statement": [[212, "adding-a-return-statement"]], "Adding send": [[212, "adding-send"]], "Adding throw and close": [[212, "adding-throw-and-close"]], "Additivity": [[123, "additivity"]], "Adjusted R-Squared": [[67, "adjusted-r-squared"]], "Advantages": [[97, "advantages"], [108, "advantages"], [108, "id5"], [108, "id9"], [108, "id14"]], "Advantages of Arrays": [[11, "advantages-of-arrays"]], "Advantages of Hash Maps": [[17, "advantages-of-hash-maps"]], "After": [[237, "after"]], "Algebraic Definition": [[81, "algebraic-definition"], [82, "algebraic-definition"], [82, "id1"], [84, "algebraic-definition"]], "Algorithm": [[29, "algorithm"], [43, "algorithm"], [44, "algorithm"], [60, "algorithm"]], "Algorithm (Iterative + Exact Match)": [[27, "algorithm-iterative-exact-match"]], "Algorithm (Iterative)": [[30, "algorithm-iterative"]], "Algorithm (Recursive + Exact Match)": [[27, "algorithm-recursive-exact-match"]], "All Generators Are Iterators": [[233, "all-generators-are-iterators"]], "All Iterators Are Iterable, But Not All Iterables Are Iterators": [[233, "all-iterators-are-iterable-but-not-all-iterables-are-iterators"]], "Alternative Masking": [[55, null]], "Alternative way to Calculate Expected Value of Revenue per Day": [[145, "alternative-way-to-calculate-expected-value-of-revenue-per-day"]], "An Example": [[94, "an-example"], [212, "an-example"]], "An Example Of Data Extraction For Collecting Large Volumes Of Text Data": [[98, "an-example-of-data-extraction-for-collecting-large-volumes-of-text-data"]], "An Example On E-commerce Recommendation": [[95, "an-example-on-e-commerce-recommendation"]], "An Example On Medical Diagnosis": [[95, "an-example-on-medical-diagnosis"]], "An Example On Movie Recommendation System": [[94, "an-example-on-movie-recommendation-system"]], "An Example To Illustrate The Notations": [[87, "an-example-to-illustrate-the-notations"]], "An Example Walkthrough": [[122, "an-example-walkthrough"]], "An Example of Batch Extraction": [[100, "an-example-of-batch-extraction"]], "An Example of Positional Encoding": [[57, "an-example-of-positional-encoding"]], "An Example of Real-time Ingestion": [[100, "an-example-of-real-time-ingestion"]], "An Example on Multimodal Data Storage For E-Commerce": [[96, "an-example-on-multimodal-data-storage-for-e-commerce"]], "Analogy: Bakery": [[79, "analogy-bakery"]], "Analogy: Job Scheduling in Data Centers": [[29, "analogy-job-scheduling-in-data-centers"]], "Analogy: The Stack of Plates": [[32, "analogy-the-stack-of-plates"]], "Analytical Processing": [[97, "analytical-processing"]], "Appendix A. Styling, Formatting, and Linting": [[93, "appendix-a-styling-formatting-and-linting"]], "Application": [[142, null], [158, null], [179, null]], "Application of Chernoff and Chebyshev\u2019s Inequality": [[202, "application-of-chernoff-and-chebyshev-s-inequality"]], "Application to Common Algorithms": [[16, "application-to-common-algorithms"]], "Application: Image Compression and Segmentation": [[62, null]], "Application: Learning Theory": [[201, null], [204, null]], "Application: Moment Generating Function and the Sum of Random Variables": [[200, null]], "Application: Plots and Transformations": [[189, null]], "Applying Compression via K-Means": [[62, "applying-compression-via-k-means"]], "Applying LayerNorm and Residual Connections to Multi-Head Attention Output": [[57, "applying-layernorm-and-residual-connections-to-multi-head-attention-output"]], "Applying LayerNorm and Residual Connections to Positionwise FFN Output": [[57, "applying-layernorm-and-residual-connections-to-positionwise-ffn-output"]], "Approximating True Risk with Empirical Risk": [[49, "approximating-true-risk-with-empirical-risk"]], "Architecture": [[99, "architecture"]], "Are there any scenarios where using a list might be preferable over a set for tracking seen items?": [[238, "are-there-any-scenarios-where-using-a-list-might-be-preferable-over-a-set-for-tracking-seen-items"]], "Armortized Analysis": [[36, "armortized-analysis"]], "Array Notations": [[11, "array-notations"]], "Assessing the Accuracy of the Coefficient Estimates": [[67, "assessing-the-accuracy-of-the-coefficient-estimates"]], "Assignment": [[60, "assignment"]], "Assignments are Equivalent to Clusters": [[60, "assignments-are-equivalent-to-clusters"]], "Assumption 1: The Distribution of the Data Point \\boldsymbol{x}^{(n)} given the Latent Variable \\boldsymbol{z}^{(n)}": [[52, "assumption-1-the-distribution-of-the-data-point-boldsymbol-x-n-given-the-latent-variable-boldsymbol-z-n"]], "Assumption 2: The Latent Variable \\boldsymbol{z}": [[52, "assumption-2-the-latent-variable-boldsymbol-z"]], "Assumption 3: The Joint Distribution of \\boldsymbol{x}^{(n)} and \\boldsymbol{z}^{(n)}": [[52, "assumption-3-the-joint-distribution-of-boldsymbol-x-n-and-boldsymbol-z-n"]], "Assumptions": [[19, "assumptions"], [27, "assumptions"], [29, "assumptions"], [36, "assumptions"], [43, "assumptions"], [143, "assumptions"], [146, "assumptions"], [154, "assumptions"]], "Assumptions and Constraints": [[27, "assumptions-and-constraints"], [29, "assumptions-and-constraints"]], "Assumptions of Linear Regression": [[67, "assumptions-of-linear-regression"]], "Asynchronous Data Loading and Prefetching": [[57, "asynchronous-data-loading-and-prefetching"]], "Asyncio": [[215, "asyncio"]], "Atomicity, Consistency, Isolation, Durability (ACID)": [[97, "atomicity-consistency-isolation-durability-acid"]], "Attention Heatmap": [[118, "attention-heatmap"]], "Attention Notations": [[55, "attention-notations"]], "Attention Scoring Function": [[57, "attention-scoring-function"]], "Automate Linting and Integration with CI/CD Pipelines": [[93, "automate-linting-and-integration-with-ci-cd-pipelines"]], "Autoregressive Self-Supervised Learning": [[56, "autoregressive-self-supervised-learning"]], "Autoregressive Self-Supervised Learning Paradigm": [[55, "autoregressive-self-supervised-learning-paradigm"]], "Auxiliary Loss Function": [[56, "auxiliary-loss-function"]], "Auxiliary Space": [[13, "auxiliary-space"], [19, "auxiliary-space"], [43, "auxiliary-space"]], "Auxiliary Space Complexity": [[20, "auxiliary-space-complexity"], [20, "id8"], [27, "auxiliary-space-complexity"], [27, "id11"], [29, "auxiliary-space-complexity"], [30, "auxiliary-space-complexity"]], "Average Case": [[30, "average-case"]], "Baby Mass Frequency Table": [[173, "baby-frequency-1"]], "Back to Intuition": [[125, "back-to-intuition"]], "Backbone Architecture": [[55, "backbone-architecture"]], "Backend": [[88, "backend"]], "Background": [[30, "background"]], "Barrier": [[90, "barrier"]], "Base Model": [[71, "base-model"]], "Baseline": [[94, "baseline"], [101, "baseline"]], "Basics Of Distributed Data Parallelism": [[88, null]], "Basics of Floating Point Numbers": [[117, "basics-of-floating-point-numbers"]], "Basis Function and Non-Linearity": [[67, "basis-function-and-non-linearity"]], "Batch Extraction/Ingestion": [[100, "batch-extraction-ingestion"]], "Batch Features, Online Features, and Streaming Features": [[108, "batch-features-online-features-and-streaming-features"]], "Batch Processing does not mean Predicting all Possible Inputs in Advance": [[108, "batch-processing-does-not-mean-predicting-all-possible-inputs-in-advance"]], "Batch Processing vs. Stream Processing": [[98, "batch-processing-vs-stream-processing"]], "Batch Serving/Inference (Asynchronous)": [[108, "batch-serving-inference-asynchronous"]], "Batched": [[55, "batched"]], "Batched Input Sequences": [[55, "batched-input-sequences"]], "Bayes Optimal Classifier": [[50, null]], "Bayes\u2019 Theorem": [[135, "bayes-theorem"]], "Baye\u2019s Theorem": [[133, "baye-s-theorem"]], "Baye\u2019s Theorem and the Law of Total Probability": [[133, null]], "Before": [[237, "before"]], "Benchmark": [[229, "benchmark"]], "Benefit Structure": [[94, "benefit-structure"], [102, "benefit-structure"]], "Benefits of Integration Testing": [[93, "benefits-of-integration-testing"]], "Benefits of Linting": [[93, "benefits-of-linting"]], "Benefits of Unit Testing": [[93, "benefits-of-unit-testing"]], "Bernoulli Distribution": [[144, null]], "Bernoulli Example": [[206, "bernoulli-example"]], "Bernoulli Sampling": [[142, "bernoulli-sampling"]], "Bernoulli Trials": [[145, "bernoulli-trials"]], "Best Case": [[30, "best-case"]], "Best Practices for Formatting and CI/CD Pipeline Integration": [[93, "best-practices-for-formatting-and-ci-cd-pipeline-integration"]], "Best Practices for Linting and CI/CD Pipeline Integration": [[93, "best-practices-for-linting-and-ci-cd-pipeline-integration"]], "Best, Worst, and Average Case Analysis": [[29, "best-worst-and-average-case-analysis"]], "Best, Worst, and Average Case Analysis of Binary Search": [[27, "binary-search-time-complexity-iterative"], [29, "koko-eating-bananas-best-worst-average-case-analysis-of-binary-search"]], "Best, Worst, and Average Case Analysis of Koko Eating Bananas": [[29, "koko-eating-bananas-best-worst-average-case-analysis-of-koko-eating-bananas"]], "Bias and Variance": [[106, "bias-and-variance"]], "Bibliography": [[0, null]], "Big Bang Testing": [[93, "big-bang-testing"]], "Binary Field \\mathbb{F}_2": [[78, "binary-field-mathbb-f-2"]], "Binary Search": [[28, null]], "Binary Search State Table": [[27, "binary-search-state-table-1"], [27, "binary-search-state-table-2"]], "Binding Time And Scope": [[6, "binding-time-and-scope"]], "Binomial Distribution": [[145, "binomial-distribution"], [148, null]], "Binomial Distribution as a Sum of Bernoulli Trials": [[146, "binomial-distribution-as-a-sum-of-bernoulli-trials"]], "Books and Lectures": [[59, "books-and-lectures"], [72, "books-and-lectures"]], "Bottom-Up Testing": [[93, "bottom-up-testing"]], "Bound and Constraint in Generics and Type Variables": [[6, null]], "Bound versus Constraints": [[6, "bound-versus-constraints"]], "Boundaries (Linearity)": [[101, "boundaries-linearity"]], "Bounding and Semantic Clarity": [[6, "bounding-and-semantic-clarity"]], "Break down of the Matrix Representation": [[67, "break-down-of-the-matrix-representation"]], "Breaking it Down": [[29, "breaking-it-down"]], "Broadcasting": [[57, null]], "Brute Force Search and Global Minimum": [[60, "brute-force-search-and-global-minimum"]], "Business Problem and Objectives": [[94, "business-problem-and-objectives"]], "Business metrics": [[94, "business-metrics"]], "CDF of Arbitrary Gaussian Distribution": [[169, "cdf-of-arbitrary-gaussian-distribution"]], "CDF of Functions of Random Variables": [[172, "cdf-of-functions-of-random-variables"]], "CI/CD Pipeline": [[99, "ml-lifecycle-03-ci-cd-pipeline"]], "CONTRIBUTING": [[93, "contributing"]], "CPU Bound": [[215, "cpu-bound"]], "CPU-bound tasks": [[230, "cpu-bound-tasks"]], "CUDA Memory Allocations": [[114, null]], "Calculating Checkpoint Size and Fluff Ratio": [[117, "calculating-checkpoint-size-and-fluff-ratio"]], "Calculating Expected Value \\mathbb{E}[\\mathcal{T}(N)]": [[30, "calculating-expected-value-mathbb-e-mathcal-t-n"]], "Calculus": [[125, null], [173, "calculus"]], "Calibrating Models": [[102, "calibrating-models"]], "Calibration": [[102, "calibration"], [123, "calibration"]], "Calibration and Evaluation (Brier + AUROC combo)": [[102, "calibration-and-evaluation-brier-auroc-combo"]], "Call Center Simulation": [[145, "call-center-simulation"]], "Call Stack": [[236, "call-stack"]], "Callable Argument Types (Contravariance)": [[7, "callable-argument-types-contravariance"]], "Callable Return Types (Covariance)": [[7, "callable-return-types-covariance"]], "Callback": [[118, "callback"]], "Car Data Model Characteristics": [[97, "ml-lifecycle-032-car-data-model"]], "Case 1": [[16, "case-1"]], "Case 1: Unique Solution": [[79, "case-1-unique-solution"]], "Case 1: i = j": [[123, "case-1-i-j"]], "Case 2": [[16, "case-2"]], "Case 2: Infinite Solutions": [[79, "case-2-infinite-solutions"]], "Case 2: i \\neq j": [[123, "case-2-i-neq-j"]], "Case 3": [[16, "case-3"]], "Case 3: No Solution": [[79, "case-3-no-solution"]], "Categorizing Drift Types": [[109, "categorizing-drift-types"]], "Cauchy-Schwarz Inequality": [[84, "cauchy-schwarz-inequality"]], "Central Moments": [[170, "central-moments"]], "Centroids (Representatives)": [[60, "centroids-representatives"]], "Chapter 1. Mathematical Preliminaries": [[128, null]], "Chapter 2. Probability": [[134, null]], "Chapter 3. Discrete Random Variables": [[153, null]], "Chapter 4. Continuous Random Variables": [[174, null]], "Chapter 5. Joint Distributions": [[196, null]], "Chapter 6. Sample Statistics": [[208, null]], "Chapter 8. Estimation Theory": [[209, null]], "Characteristic Function": [[197, null]], "Characteristic Function and Fourier Transform": [[197, "characteristic-function-and-fourier-transform"]], "Chebyshev\u2019s Inequality": [[202, "chebyshev-s-inequality"]], "Chernoff\u2019s Bound": [[202, "chernoff-s-bound"]], "Choose K that Minimizes the Cost Function": [[60, "choose-k-that-minimizes-the-cost-function"]], "Choose Your Metrics Wisely": [[102, "choose-your-metrics-wisely"]], "Choosing The Right Metric": [[102, "choosing-the-right-metric"]], "Choosing the Right Fusion Strategy": [[95, "choosing-the-right-fusion-strategy"]], "Circle as a Subtype of Shape in 2D Euclidean Geometry": [[4, "circle-as-a-subtype-of-shape-in-2d-euclidean-geometry"]], "Circle is a Subtype of Shape": [[4, "circle-is-a-subtype-of-shape"]], "Citations": [[10, "citations"], [54, "citations"], [56, "citations"], [69, "citations"], [122, "citations"], [123, "citations"]], "Claim": [[43, "claim"], [44, "claim"]], "Clarifying Requirements": [[94, "clarifying-requirements"]], "Clarifying Requirements for an AIOps System": [[94, "clarifying-requirements-aiops-system"]], "Class Imbalance": [[100, "class-imbalance"]], "Class Variables": [[226, "class-variables"]], "Classification": [[94, "classification"], [102, "classification"]], "Classifying one penguin": [[75, "classifying-one-penguin"]], "Cloning an Existing Repository": [[93, "cloning-an-existing-repository"]], "Closing: Relevance of Vector Norms and Distances in Machine Learning and Deep Learning": [[83, "closing-relevance-of-vector-norms-and-distances-in-machine-learning-and-deep-learning"]], "Clustering": [[102, "clustering"]], "Code Breakdown": [[36, "code-breakdown"], [36, "id1"]], "Code Correctors": [[93, "code-correctors"]], "Code Implementations": [[72, "code-implementations"]], "Code Quality Assurance": [[93, "code-quality-assurance"]], "Coercive Implementations": [[2, "coercive-implementations"]], "Coin Toss Example": [[210, "coin-toss-example"]], "Collating Everything Together": [[57, "collating-everything-together"]], "Column Wise Interpretation": [[84, "column-wise-interpretation"]], "Column-major order": [[96, "column-major-order"]], "Combination of Machine Learning and Deep Learning Tasks": [[95, "combination-of-machine-learning-and-deep-learning-tasks"]], "Command Line Arguments (CPU And Gloo Backend)": [[88, "command-line-arguments-cpu-and-gloo-backend"]], "Common Algorithms": [[16, "master-theorem-application-to-common-algorithms"]], "Common Clarifications and Corner Cases": [[11, "common-clarifications-and-corner-cases"], [17, "common-clarifications-and-corner-cases"]], "Common Data Destinations": [[98, "common-data-destinations"]], "Common FAQ": [[59, "common-faq"]], "Common Functions": [[111, "common-functions"], [113, "common-functions"]], "Common Machine Learning Terminologies": [[86, "common-ml-terminologies"]], "Common Notations": [[11, "common-notations"], [17, "common-notations"]], "Common Terminologies": [[86, "common-terminologies"]], "Comparing Hoeffding\u2019s Inequality with the Chebyshev\u2019s Inequality": [[65, "comparing-hoeffding-s-inequality-with-the-chebyshev-s-inequality"]], "Comparison between Dynamic and Static Type Checking": [[3, "comparison-between-dynamic-and-static-type-checking"]], "Comparison of CPU-Bound and I/O-Bound Operations": [[215, "comparison-of-cpu-bound-and-i-o-bound-operations"]], "Complex Hypothesis Set and Complex Target Function": [[65, "complex-hypothesis-set-and-complex-target-function"]], "Complex Strategy With Factory And Registry Pattern": [[227, "complex-strategy-with-factory-and-registry-pattern"]], "Complexity Analysis": [[11, "complexity-analysis"], [15, null], [17, "complexity-analysis"], [30, "complexity-analysis"]], "Complexity of Collision Resolution": [[17, "complexity-of-collision-resolution"]], "Complexity per Layer": [[57, "complexity-per-layer"]], "Composing the Configurations": [[57, "composing-the-configurations"]], "Composition Of Configurations": [[218, "composition-of-configurations"]], "Composition Order": [[216, "composition-order"]], "Computational Complexity of Self-Attention": [[57, "computational-complexity-of-self-attention"]], "Compute Node": [[89, "compute-node"]], "Computer Science": [[1, "computer-science"], [77, null]], "Concept": [[11, null], [17, null], [22, null], [27, null], [30, null], [32, null], [52, null], [67, null], [70, null], [73, null], [140, "concept"], [140, null], [141, "concept"], [141, null], [143, null], [146, null], [150, null], [154, null], [159, null], [163, "concept"], [163, null], [164, "concept"], [164, null], [175, null], [177, null], [180, null], [182, null], [185, null], [187, null], [190, null], [205, null], [210, null]], "Concept Drift": [[109, "concept-drift"]], "Concept of Row-major vs Column-major order": [[96, "concept-of-row-major-vs-column-major-order"]], "Concept: Empirical Risk Minimization": [[49, null]], "Concept: K-Means Clustering": [[60, null]], "Concept: Learning Theory": [[65, null]], "Conceptual Questions": [[63, null]], "Conclusion": [[62, "conclusion"], [215, "conclusion"]], "Concurrency vs Parallelism": [[215, "concurrency-vs-parallelism"]], "Concurrency, Parallelism and Asynchronous Programming": [[214, null]], "Condition 1: The Optimal Assignment": [[60, "condition-1-the-optimal-assignment"]], "Condition 2: The Optimal Cluster Centers (Centroids)": [[60, "condition-2-the-optimal-cluster-centers-centroids"]], "Conditional": [[135, "conditional"]], "Conditional Entropy": [[56, "conditional-entropy"]], "Conditional Entropy and Perplexity as Loss Function": [[56, "conditional-entropy-and-perplexity-as-loss-function"]], "Conditional Expectation": [[182, "conditional-expectation"]], "Conditional Expectation and Variance": [[184, null]], "Conditional Independence": [[73, "conditional-independence"], [75, "conditional-independence"], [180, "conditional-independence"]], "Conditional Likelihood Function": [[67, "conditional-likelihood-function"]], "Conditional Likelihood in the Context of Machine Learning": [[210, "conditional-likelihood-in-the-context-of-machine-learning"]], "Conditional Log-Likelihood Function": [[67, "conditional-log-likelihood-function"]], "Conditional PDF": [[180, "conditional-pdf"]], "Conditional PMF": [[180, "conditional-pmf"]], "Conditional PMF and PDF": [[181, null]], "Conditional Probability": [[131, null]], "Conditional Variance": [[182, "conditional-variance"]], "Conditional on Task": [[56, "conditional-on-task"]], "Conditional, Priori, Posterior": [[135, "conditional-priori-posterior"]], "Config": [[58, "config"]], "Config For Different Stages/Evironments": [[218, "config-for-different-stages-evironments"]], "Config, State, Metadata Management": [[219, null]], "Configuration Management": [[218, null]], "Configurations, Constants and Enums": [[117, "configurations-constants-and-enums"]], "Configure AWS CLI": [[89, "configure-aws-cli"]], "Configure AWS ParallelCluster": [[89, "configure-aws-parallelcluster"]], "Connecting to a Remote Repository": [[93, "connecting-to-a-remote-repository"]], "Connection to Liskov Substitution Principle": [[4, "connection-to-liskov-substitution-principle"]], "Connection with Logistic Regression": [[73, "connection-with-logistic-regression"]], "Cons": [[216, "cons"]], "Consolidated Script": [[89, "consolidated-script"]], "Constrained TypeVar Approach": [[6, "constrained-typevar-approach"]], "Constraining Type Variable": [[6, "constraining-type-variable"]], "Constraints": [[19, "constraints"], [20, "constraints"], [27, "constraints"], [29, "constraints"], [36, "constraints"], [43, "constraints"], [94, "constraints"]], "Constraints and Assumptions": [[25, "constraints-and-assumptions"], [26, "constraints-and-assumptions"], [35, "constraints-and-assumptions"], [37, "constraints-and-assumptions"]], "Construct Batches, Collate Function and DataLoader": [[58, "construct-batches-collate-function-and-dataloader"]], "Construct Hypothetical Function, Child and Parent Classes": [[116, "construct-hypothetical-function-child-and-parent-classes"]], "Constructing A Reversal Dataset": [[118, "constructing-a-reversal-dataset"]], "Constructing PyTorch Dataset": [[58, "constructing-pytorch-dataset"]], "Construction Input Sequences": [[57, "construction-input-sequences"]], "Construction Target Sequences": [[57, "construction-target-sequences"]], "Constructor": [[236, "constructor"]], "Containers are Generics": [[5, "containers-are-generics"]], "Contents": [[67, "contents"]], "Context Length / Context Window / Block Size": [[57, "context-length-context-window-block-size"]], "Context Length and Token Context Window": [[56, "context-length-and-token-context-window"]], "Context Object Pattern (God Object)": [[222, null]], "Context Vector/Matrix": [[57, "context-vector-matrix"]], "Contigency Matrix and Purity Score": [[61, "contigency-matrix-and-purity-score"]], "Contiguous": [[11, "contiguous"]], "Continuous Features (Gaussian Distribution)": [[73, "continuous-features-gaussian-distribution"]], "Continuous Integration (CI)": [[93, "continuous-integration-ci"]], "Continuous Random Variables": [[161, null]], "Continuous Training (Dependent on Monitoring of Drifts)": [[105, "continuous-training-dependent-on-monitoring-of-drifts"]], "Continuous Uniform Distribution": [[167, null]], "Contour Maps": [[126, null]], "Contour Plots": [[189, "contour-plots"]], "Contravariance": [[7, "contravariance"], [7, "id2"]], "Contravariant and Callable Types": [[7, "contravariant-and-callable-types"]], "Conventions": [[86, "conventions"]], "Convergence": [[56, "convergence"], [60, "convergence"]], "Convergence of Sample Average": [[206, null]], "Convexity and Differentiability": [[67, "convexity-and-differentiability"]], "Convolution and Sum of Random Variables": [[171, null]], "Convolutions of Random Variables": [[185, "convolutions-of-random-variables"]], "Corollaries of the Axioms": [[130, "corollaries-of-the-axioms"]], "Corpus and Tokenization": [[55, "corpus-and-tokenization"]], "Correcting the Violation": [[220, "correcting-the-violation"]], "Correctness": [[27, "correctness"], [27, "id5"], [29, "correctness"], [30, "correctness"]], "Cost Function": [[60, "cost-function"], [67, "cost-function"]], "Cost Function of K-Means Monotonically Decreases": [[63, "cost-function-of-k-means-monotonically-decreases"]], "Costly Insertions and Deletions": [[11, "costly-insertions-and-deletions"]], "Counting FLOPs of Matrix Multiplications": [[117, "counting-flops-of-matrix-multiplications"]], "Covariance": [[7, "covariance"], [7, "id1"]], "Covariance Matrix is Positive Semi-Definite": [[194, null], [194, "id1"]], "Covariance and Correlation Coefficient": [[177, "covariance-and-correlation-coefficient"]], "Covariance of Random Vectors (Covariance Matrix)": [[187, "covariance-of-random-vectors-covariance-matrix"]], "Create DataLoader": [[58, "create-dataloader"]], "Create Dataset": [[58, "create-dataset"]], "Create EC2 Key Pair": [[89, "create-ec2-key-pair"]], "Create Virtual Environment": [[93, "create-virtual-environment"]], "Criteria 1: Value Inclusion (Set Membership)": [[4, "criteria-1-value-inclusion-set-membership"]], "Criteria 2: Function Applicability": [[4, "criteria-2-function-applicability"]], "Criteria 3: Property Preservation (Invariant Maintenance)": [[4, "criteria-3-property-preservation-invariant-maintenance"]], "Criterion": [[58, "criterion"]], "Criterion 1: The Optimal Assignment": [[63, "criterion-1-the-optimal-assignment"]], "Criterion 2: The Optimal Cluster Centers": [[63, "criterion-2-the-optimal-cluster-centers"]], "Criterion for Subtype Relationships": [[4, "criterion-for-subtype-relationships"]], "Cross-Entropy Loss Function": [[55, "cross-entropy-loss-function"]], "Cross-Validation": [[105, "cross-validation"]], "Cumulative Distribution Function": [[139, null], [165, null]], "Data": [[94, "data"]], "Data Augmentation": [[100, "data-augmentation"]], "Data Cohesion": [[11, "data-cohesion"]], "Data Collator And DataLoader": [[119, "data-collator-and-dataloader"]], "Data Drift": [[109, "data-drift"]], "Data Engineering In Machine Learning": [[99, "data-engineering-in-machine-learning"]], "Data Formats": [[96, "data-formats"]], "Data Formats in Machine Learning Systems": [[96, "data-formats-in-machine-learning-systems"]], "Data Lake vs. Data Warehouse": [[98, "data-lake-vs-data-warehouse"]], "Data Lake, Data Warehouse, Data Lakehouse, Delta Lake": [[97, "data-lake-data-warehouse-data-lakehouse-delta-lake"], [97, "ml-lifecycle-032-data-lake-vs-data-warehouse"]], "Data Leakage": [[100, "data-leakage"]], "Data Model": [[97, "data-model"]], "Data Serialization vs Data Deserialization": [[96, "data-serialization-vs-data-deserialization"]], "Data Sources in Machine Learning Systems": [[96, "data-sources-in-machine-learning-systems"]], "Data Storage Engines": [[97, "data-storage-engines"]], "Data Structures and Algorithms": [[77, null]], "Data Types in Machine Learning Systems": [[96, "data-types-in-machine-learning-systems"]], "DataLoaders, Streaming and Lazy Loading": [[212, "dataloaders-streaming-and-lazy-loading"]], "Database Analogy": [[57, "database-analogy"]], "Dataset": [[58, "dataset"], [119, "dataset"], [120, "dataset"]], "Dataset Preparation": [[71, "dataset-preparation"]], "Dataset and Dataloading (Poor Man\u2019s Dataloader)": [[57, "dataset-and-dataloading-poor-man-s-dataloader"]], "Deadlocks": [[230, "deadlocks"]], "Decision Boundary": [[73, "decision-boundary"]], "Declaration, Compile, and Run Time": [[2, null]], "Decoder": [[57, "decoder"]], "Decoder Blocks": [[57, "decoder-blocks"]], "Decorator": [[228, null], [228, "id1"]], "Decorators For Reistry Design Pattern": [[228, "decorators-for-reistry-design-pattern"]], "Decoupling Objectives": [[95, "decoupling-objectives"]], "Deep Learning": [[1, "deep-learning"]], "Deep Learning Tasks": [[95, "deep-learning-tasks"]], "Defining Independence in Terms of Conditional Probability": [[132, "defining-independence-in-terms-of-conditional-probability"]], "Defining Type Variables with Upper Bounds": [[6, "defining-type-variables-with-upper-bounds"]], "Defining the Random Variable": [[30, "defining-the-random-variable"]], "Definition": [[50, "definition"], [55, "definition"], [55, "id1"], [55, "id2"], [57, "definition"], [57, "id8"], [57, "id11"], [57, "id17"], [57, "id26"], [57, "id34"], [57, "id37"], [58, "definition"], [78, "definition"], [81, "definition"], [84, "definition"], [84, "id3"], [98, "definition"], [98, "id6"], [98, "id10"], [108, "definition"], [108, "id2"], [108, "id7"], [108, "id12"], [122, "definition"], [126, "definition"], [131, "definition"], [136, "definition"], [137, "definition"], [138, "definition"], [139, "definition"], [140, "definition"], [150, "definition"], [152, "definition"], [161, "definition"], [162, "definition"], [163, "definition"], [165, "definition"], [167, "definition"], [168, "definition"], [169, "definition"], [169, "id2"], [199, "definition"], [210, "definition"], [220, "definition"], [221, "definition"]], "Definition (Independent Events)": [[132, "definition-independent-events"]], "Definition: What is CPU-Bound?": [[215, "definition-what-is-cpu-bound"]], "Definition: What is I/O-Bound?": [[215, "definition-what-is-i-o-bound"]], "Definition: What is a Process?": [[215, "definition-what-is-a-process"]], "Definition: What is a Thread?": [[215, "definition-what-is-a-thread"]], "Definitions": [[29, "definitions"]], "Delete Cluster": [[89, "delete-cluster"]], "Delete Network Resources": [[89, "delete-network-resources"]], "Delete ParallelCluster": [[89, "delete-parallelcluster"]], "Demo Code": [[88, "demo-code"]], "Demo Example": [[236, "demo-example"]], "Demonstrating Reflexivity, Transivity and Antisymmetry": [[4, "demonstrating-reflexivity-transivity-and-antisymmetry"]], "Dependencies": [[57, "dependencies"], [71, "dependencies"], [75, "dependencies"], [118, "dependencies"], [119, "dependencies"], [120, "dependencies"]], "Dependency Injection": [[93, "dependency-injection"]], "Dependency Inversion Principle": [[220, null]], "Dependency Inversion Principle and Dependency Injection": [[220, "dependency-inversion-principle-and-dependency-injection"]], "Deployment Testing": [[107, "deployment-testing"]], "Deprecated To Redo": [[58, null]], "Derivative Of Softmax With Respect To Weight Matrix": [[123, "derivative-of-softmax-with-respect-to-weight-matrix"]], "Derivative of the Softmax Function": [[123, "derivative-of-the-softmax-function"]], "Derivatives of the Softmax Function": [[123, "derivatives-of-the-softmax-function"]], "Design Patterns": [[223, null]], "Detailed Analysis": [[13, "detailed-analysis"]], "Dimensionality": [[101, "dimensionality"]], "Dimensions": [[55, "dimensions"]], "Dimensions and Indexing": [[55, "dimensions-and-indexing"]], "Direct Sum Notation Is Concatenation": [[55, null]], "Disadvantages": [[97, "disadvantages"], [108, "disadvantages"], [108, "id6"], [108, "id10"], [108, "id15"]], "Disadvantages of Arrays": [[11, "disadvantages-of-arrays"]], "Disadvantages of Hash Maps": [[17, "disadvantages-of-hash-maps"]], "Discrete Features (Categorical Distribution)": [[73, "discrete-features-categorical-distribution"]], "Discrete Random Variables": [[137, null]], "Discrete Uniform Distribution": [[160, null]], "Discriminative vs Generative": [[73, "discriminative-vs-generative"]], "Disjoint vs Independence": [[132, "disjoint-vs-independence"]], "Distance": [[83, "distance"]], "Distributed Data Parallelism And Data Sharding": [[96, "distributed-data-parallelism-and-data-sharding"]], "Distributed Information": [[88, "distributed-information"]], "Distributed Systems": [[91, null]], "Do Not Use Mutable Default Arguments": [[235, null]], "Document Model": [[97, "document-model"]], "Document Model Characteristics": [[97, "ml-lifecycle-032-document-model"]], "Documentation": [[93, "documentation"]], "Doing it properly": [[125, "doing-it-properly"]], "Dot Product": [[84, "dot-product"]], "Double Ended Queue": [[23, null]], "Double Integrals": [[125, "double-integrals"]], "Drawing Some Connection to Ordinary Functions": [[7, "drawing-some-connection-to-ordinary-functions"]], "Dropout And Elementwise Operation": [[55, null]], "Dry Run": [[119, "dry-run"]], "Dynamic Model Creation": [[237, "dynamic-model-creation"]], "Dynamic Type Checking": [[3, "dynamic-type-checking"]], "E-Step": [[52, "e-step"], [52, "id21"]], "ELT (Extract, Load, Transform)": [[98, "elt-extract-load-transform"]], "ELTL (Extract, Load, Transform, Load)": [[98, "eltl-extract-load-transform-load"]], "ETL (Extract, Transform, Load)": [[98, "etl-extract-transform-load"]], "Early Bug Detection and Reduce Cost": [[93, "early-bug-detection-and-reduce-cost"]], "Early Fusion": [[95, "early-fusion"]], "Ease of Iteration": [[11, "ease-of-iteration"]], "Easy - Hot Potatoes": [[26, null]], "Edge Cases": [[19, "edge-cases"], [27, "edge-cases"], [29, "edge-cases"], [36, "edge-cases"], [43, "edge-cases"]], "Efficient Access": [[11, "efficient-access"]], "Efficient Key-Value Access": [[17, "efficient-key-value-access"]], "Eigendecomposition and Covariance Matrix": [[191, null]], "Elbow Method": [[60, "elbow-method"]], "Elementwise and Vectorwise Operations": [[55, "elementwise-and-vectorwise-operations"]], "Embedding Layer Is Matmul Of One-Hot Encoded Input Matrix And Embedding Matrix Weights": [[57, "embedding-layer-is-matmul-of-one-hot-encoded-input-matrix-and-embedding-matrix-weights"]], "Empirical (Sample) Correlation Coefficient": [[177, "empirical-sample-correlation-coefficient"]], "Empirical Distribution (Empirical Histograms)": [[142, "empirical-distribution-empirical-histograms"], [147, "empirical-distribution-empirical-histograms"]], "Empirical Risk Minimization": [[48, null]], "Empirical Risk Minimization approximates True Risk Minimization": [[49, "empirical-risk-minimization-approximates-true-risk-minimization"]], "Empirical distribution/histogram": [[157, "empirical-distribution-histogram"]], "Empty": [[36, "empty"]], "Encoding Strategy Overview": [[58, "encoding-strategy-overview"]], "End-to-End Testing": [[93, "end-to-end-testing"]], "Enough is Enough": [[123, null]], "Ensembling": [[101, "ensembling"]], "Equality of Vectors": [[81, "equality-of-vectors"]], "Error Function": [[169, "error-function"]], "Errors": [[93, "errors"]], "Estimated Coefficients are Multivariate Normally Distributed": [[67, "estimated-coefficients-are-multivariate-normally-distributed"]], "Estimating FLOPs for a Single Forward Pass": [[117, "estimating-flops-for-a-single-forward-pass"]], "Estimating FLOPs for a Single Forward Pass of GPT-2": [[117, "estimating-flops-for-a-single-forward-pass-of-gpt-2"]], "Estimating Likelihood (Gaussian Version)": [[73, "estimating-likelihood-gaussian-version"]], "Estimating Priors": [[73, "estimating-priors"]], "Estimating the Covariance Matrix \\boldsymbol{\\Sigma}_{k} in Python": [[52, "estimating-the-covariance-matrix-boldsymbol-sigma-k-in-python"]], "Estimating the Covariance Parameters \\boldsymbol{\\Sigma}_{k}": [[52, "estimating-the-covariance-parameters-boldsymbol-sigma-k"]], "Estimating the Mean Parameters \\boldsymbol{\\mu}_k": [[52, "estimating-the-mean-parameters-boldsymbol-mu-k"]], "Estimating the Mean Parameters \\boldsymbol{\\mu}_{k} in Python": [[52, "estimating-the-mean-parameters-boldsymbol-mu-k-in-python"]], "Estimating the Mixing Coefficients (Prior/Weights) \\pi_{k}": [[52, "estimating-the-mixing-coefficients-prior-weights-pi-k"]], "Estimation of the Conditional Probability Distribution": [[56, "estimation-of-the-conditional-probability-distribution"]], "Evaluate With Pretrained Model": [[71, "evaluate-with-pretrained-model"]], "Evaluation (Performance Metrics)": [[61, "evaluation-performance-metrics"]], "Event E and Event space \\mathcal{F}": [[129, "event-e-and-event-space-mathcal-f"]], "Example": [[11, "example"], [17, "example"], [27, "example"], [29, "example"], [32, "example"], [62, "example"], [97, "example"], [102, "example"], [108, "example"], [108, "id4"], [108, "id8"], [108, "id13"], [122, "example"], [126, "example"]], "Example 1": [[152, "example-1"]], "Example 1: Iterative Approach": [[29, "example-1-iterative-approach"]], "Example 2: Pigeonhole Principle": [[29, "example-2-pigeonhole-principle"]], "Example 5.7 (link)": [[183, "example-5-7-link"]], "Example Using Asyncio": [[215, "example-using-asyncio"]], "Example Walkthrough": [[173, "example-walkthrough"]], "Example is not a Proof": [[78, null]], "Example of Convergence": [[205, "example-of-convergence"]], "Example of Probability Space": [[129, "example-of-probability-space"]], "Example of a Data Model": [[97, "example-of-a-data-model"]], "Example: Calculating Prime Numbers": [[215, "example-calculating-prime-numbers"]], "Example: Hoeffding\u2019s Inequality in Classification": [[65, "example-hoeffding-s-inequality-in-classification"]], "Example: Monitoring a Bitcoin Price Prediction Model": [[109, "example-monitoring-a-bitcoin-price-prediction-model"]], "Example: Personal Protective Equipment (PPE) Detection": [[95, "example-personal-protective-equipment-ppe-detection"]], "Example: Python Program On Single Process And Single Thread": [[215, "example-python-program-on-single-process-and-single-thread"]], "Example: Reading A Website": [[215, "example-reading-a-website"]], "Example: Two Scripts Running Simultaneously": [[215, "example-two-scripts-running-simultaneously"]], "Examples": [[16, "examples"], [20, "examples"], [78, "examples"], [97, "examples"], [136, "examples"], [152, "examples"]], "Examples in code (Python) of Row-major vs Column-major order and its effect on performance": [[96, "examples-in-code-python-of-row-major-vs-column-major-order-and-its-effect-on-performance"]], "Examples of Deep Learning Tasks": [[95, "examples-of-deep-learning-tasks"]], "Examples of Machine Learning Tasks": [[95, "examples-of-machine-learning-tasks"]], "Examples of Row-major vs Column-major order": [[96, "examples-of-row-major-vs-column-major-order"]], "Exercise (Independence)": [[132, "exercise-independence"]], "Exercises": [[76, "exercises"], [127, null], [149, null], [183, null]], "Existence of Expectation": [[140, "existence-of-expectation"], [163, "existence-of-expectation"]], "Expectation": [[140, null], [163, null]], "Expectation and Variance": [[143, "expectation-and-variance"], [146, "expectation-and-variance"], [167, "expectation-and-variance"], [168, "expectation-and-variance"], [169, "expectation-and-variance"]], "Expectation is deterministic": [[157, "expectation-is-deterministic"]], "Expectation of Functions of Random Variables": [[172, "expectation-of-functions-of-random-variables"]], "Expectation of Random Vectors": [[187, "expectation-of-random-vectors"]], "Expectation-Maximization (EM) (Gaussion Mixture Model Perspective)": [[52, "expectation-maximization-em-gaussion-mixture-model-perspective"]], "Expectation-Maximization (EM) (Latent Variable Perspective)": [[52, "expectation-maximization-em-latent-variable-perspective"]], "Expected Outcome": [[30, "expected-outcome"], [215, "expected-outcome"]], "Experiment": [[129, "experiment"]], "Experiment Tracking": [[103, "experiment-tracking"]], "Explanation": [[27, "explanation"]], "Exponential Distribution": [[168, null]], "Exposes Interface Issues": [[93, "exposes-interface-issues"]], "Extended form": [[73, "extended-form"]], "Extensions": [[30, "extensions"]], "FLOPS Per Second in GPUs": [[117, "flops-per-second-in-gpus"]], "Factory Method": [[221, null]], "Factory Method in the RAG System": [[221, "factory-method-in-the-rag-system"]], "Feasibility Function": [[29, "feasibility-function"]], "Feasibility from the Two View Points": [[65, "feasibility-from-the-two-view-points"]], "Feature Characteristics": [[101, "feature-characteristics"]], "Feature Engineering": [[100, "feature-engineering"]], "Feature Scaling": [[67, "feature-scaling"]], "Features": [[94, "features"]], "Features (Inputs)": [[95, "features-inputs"]], "Features of a Cancer Diagnosis System": [[94, "features-cancer-diagnosis"]], "Features, Labels and Outputs (Inputs/Outputs)": [[95, "features-labels-and-outputs-inputs-outputs"]], "Feedback Loop": [[99, "feedback-loop"]], "Field Axioms": [[78, "linear-algebra-preliminaries-definition-of-a-field"]], "Field Validators": [[237, "field-validators"]], "Fields": [[78, null], [78, "id2"]], "Final Model Training": [[105, "final-model-training"]], "Find All Anagrams in a String": [[41, null]], "Find Duplicates": [[238, "find-duplicates"]], "Find maximum (or minimum) sum of a subarray of size k": [[46, "find-maximum-or-minimum-sum-of-a-subarray-of-size-k"]], "Find the Instance ID": [[89, "find-the-instance-id"]], "Finding and Removing Reference Cycles": [[114, "finding-and-removing-reference-cycles"]], "Finite vs. Unbounded Feature Space, Precurser to Deployment Strategies": [[108, "finite-vs-unbounded-feature-space-precurser-to-deployment-strategies"]], "First Decoder Block (\\ell = 1)": [[55, "first-decoder-block-ell-1"]], "First Sample First Token": [[58, "first-sample-first-token"]], "First Sample Fourth Token": [[58, "first-sample-fourth-token"]], "Fitting Algorithm": [[73, "fitting-algorithm"]], "Fix Sized Window": [[46, "fix-sized-window"]], "Fixed Window Size Sliding Window Technique": [[46, "fixed-window-size-sliding-window-technique"]], "Floating Point Operations (FLOPs)": [[117, "floating-point-operations-flops"]], "Floating Point Operations Per Second (FLOPS)": [[117, "floating-point-operations-per-second-flops"]], "Formal Notation of Time Complexity": [[27, null]], "Formatting": [[93, "formatting"]], "Frame a Business Problem as an Machine Learning Task": [[95, "frame-a-business-problem-as-an-machine-learning-task"]], "Framing Learning Theory with Hoeffding\u2019s Inequality": [[65, "framing-learning-theory-with-hoeffding-s-inequality"]], "Framing the Problem as a Sorted Boolean Array": [[29, "framing-the-problem-as-a-sorted-boolean-array"]], "From Batch Prediction to Online Prediction": [[108, "from-batch-prediction-to-online-prediction"]], "From Business Metrics to Machine Learning Metrics": [[94, "from-business-metrics-to-machine-learning-metrics"]], "From Causal Mask To Cross-Attention Mask": [[118, "from-causal-mask-to-cross-attention-mask"]], "From Discrete to Continuous": [[173, null]], "From GPT-1 to GPT-2": [[56, "from-gpt-1-to-gpt-2"]], "From Single Variable to Joint Distributions": [[195, null]], "From Yaml": [[237, "from-yaml"]], "Fulfilling the Subtype Criterion": [[4, "fulfilling-the-subtype-criterion"]], "Function Overloading": [[8, null], [8, "id1"]], "Function Overloading and Single/Dynamic Dispatch": [[8, "function-overloading-and-single-dynamic-dispatch"]], "Function Table": [[65, "boolean-function-truth-table"]], "Function Table with f_1 as True Function": [[65, "boolean-function-truth-table-f1"]], "Function Table with f_3 as True Function": [[65, "boolean-function-truth-table-f3"]], "Function feasible": [[29, "function-feasible"]], "Function minEatingSpeed": [[29, "function-mineatingspeed"]], "Function total_hours_to_finish_eating": [[29, "function-total-hours-to-finish-eating"]], "Functional Form of f": [[123, "functional-form-of-f"]], "Functions of Random Variables": [[172, null]], "Further Add a Singleton Dimension in Target Masks": [[58, "further-add-a-singleton-dimension-in-target-masks"]], "Further Processing": [[95, "further-processing"]], "Further Readings": [[22, "further-readings"], [23, "further-readings"], [34, "further-readings"], [35, "further-readings"], [48, "further-readings"], [50, "further-readings"], [65, "further-readings"], [72, "further-readings"], [75, "further-readings"], [86, "further-readings"], [93, "further-readings"], [93, "id7"], [145, "further-readings"], [146, "further-readings"], [147, "further-readings"], [150, "further-readings"], [152, "further-readings"], [154, "further-readings"], [176, "further-readings"], [178, "further-readings"], [181, "further-readings"], [184, "further-readings"], [186, "further-readings"], [192, "further-readings"], [193, "further-readings"], [197, "further-readings"], [199, "further-readings"], [200, "further-readings"], [202, "further-readings"], [203, "further-readings"], [205, "further-readings"]], "Further Violation of Type Safety": [[3, "further-violation-of-type-safety"]], "Future Mask": [[58, "future-mask"]], "GIL Is Released During IO-bound Tasks": [[230, "gil-is-released-during-io-bound-tasks"]], "GMM 2D (sklearn)": [[52, "gmm-2d-sklearn"]], "GMM Demo": [[52, "gmm-demo"]], "GMM and Soft Assignments": [[52, "gmm-and-soft-assignments"]], "GMM and its Relation to K-Means": [[52, "gmm-and-its-relation-to-k-means"]], "GPT Example": [[58, "gpt-example"]], "GPT is a Autoregressive Self-Supervised Learning Model": [[56, "gpt-is-a-autoregressive-self-supervised-learning-model"]], "GPT-2 Family": [[56, "decoder-concept-gpt-2-family"], [57, "decoder-concept-gpt-2-family-duplicate"]], "GPT-2 Model Architecture (HuggingFace)": [[57, "gpt-2-model-architecture-huggingface"]], "GPT-2 Paper Key Ideas": [[56, "gpt-2-paper-key-ideas"]], "GPT-2 Variants": [[56, "gpt-2-variants"], [57, "gpt-2-variants"]], "GPU Memory Footprint of Loading Model and Optimizer": [[117, "gpu-memory-footprint-of-loading-model-and-optimizer"]], "Gaussian Distribution": [[169, null]], "Gaussian Error Linear Unit (GELU)": [[55, "gaussian-error-linear-unit-gelu"], [57, "gaussian-error-linear-unit-gelu"]], "Gaussian Mixture Model": [[52, "gaussian-mixture-model"]], "Gaussian Mixture Models Implementation": [[53, null]], "General Attention Mechanism": [[55, "general-attention-mechanism"]], "General Form of Linear Equations": [[79, "general-form-of-linear-equations"]], "General Gaussian Distribution": [[169, "general-gaussian-distribution"]], "General Notations": [[55, "general-notations"]], "Generalization Bound": [[65, "generalization-bound"]], "Generalization of the Pythagorean Theorem to D Dimensions": [[83, "generalization-of-the-pythagorean-theorem-to-d-dimensions"], [83, "vector-norm-pythagorean-theorem-d-dimensions"]], "Generalized Sliding Window Technique": [[46, "generalized-sliding-window-technique"]], "Generation": [[58, "generation"]], "Generative Pre-trained Transformer (GPT)": [[57, "generative-pre-trained-transformer-gpt"]], "Generative Pre-trained Transformers": [[54, null]], "Generative Story": [[52, "generative-story"]], "Generator Expression": [[212, "generator-expression"]], "Generators Over Lists For Memory Efficiency": [[229, null]], "Generators and Streaming Data": [[212, "generators-and-streaming-data"]], "Generic Form": [[16, "generic-form"]], "Generic Functions": [[5, "generic-functions"]], "Generic Methods": [[5, "generic-methods"]], "Generics": [[5, "generics"]], "Generics and Type Variables": [[5, null], [5, "id2"]], "Geometric Definition": [[81, "geometric-definition"]], "Geometric Distribution": [[151, null]], "Geometric Interpretation": [[82, "geometric-interpretation"]], "Geometric definition": [[84, "geometric-definition"]], "Geometrical Definition": [[82, "geometrical-definition"]], "Get Class and Instance Attributes": [[116, "get-class-and-instance-attributes"]], "Get Signature and Type Annotations of a Function": [[116, "get-signature-and-type-annotations-of-a-function"]], "Git Sanity Checks": [[93, "git-sanity-checks"]], "Git Workflow": [[93, "git-workflow"]], "Global Interpreter Lock (GIL)": [[230, null]], "Global Interpreter Lock (GIL) in Python": [[215, "global-interpreter-lock-gil-in-python"]], "Global Rank And World Size": [[88, "global-rank-and-world-size"]], "Good and Bad Estimates": [[209, "good-and-bad-estimates"]], "Gradient, Jacobian, and Hessian of Softmax": [[123, "gradient-jacobian-and-hessian-of-softmax"]], "Graph Model": [[97, "graph-model"]], "Group Anagrams": [[20, null]], "Guard Rails": [[93, "guard-rails"]], "Hand Wavy": [[73, null]], "Hash Function Dependence": [[17, "hash-function-dependence"]], "Hash Map": [[18, null]], "Hash Map Notations": [[17, "hashmap-notations"]], "Head": [[55, "head"]], "Heatmap": [[57, "heatmap"]], "Hessian Matrix": [[123, "hessian-matrix"]], "Highlights Dependency Problems": [[93, "highlights-dependency-problems"]], "Hoeffding Inequality is Invalid for h_S learnt from \\mathcal{S}": [[65, "hoeffding-inequality-is-invalid-for-h-s-learnt-from-mathcal-s"]], "Hoeffding\u2019s Inequality": [[65, "hoeffding-s-inequality"], [202, "hoeffding-s-inequality"]], "Homoscedasticity": [[67, "homoscedasticity"]], "How About We Use Back Causal Attention Mask?": [[118, "how-about-we-use-back-causal-attention-mask"]], "How It Works?": [[221, "how-it-works"]], "How Many GPUs?": [[89, "how-many-gpus"]], "How To Do Teacher-Student Knowledge Distillation?": [[120, null]], "How To Fine-Tune Decoder-Only Models For Sequence Classification Using Last Token Pooling?": [[119, null]], "How To Fine-Tune Decoder-Only Models For Sequence Classification With Cross-Attention?": [[118, null]], "How do I access and extract the data?": [[98, "how-do-i-access-and-extract-the-data"]], "How do I access the data?": [[98, "how-do-i-access-the-data"]], "How do I load the extracted data into the destination storage?": [[98, "how-do-i-load-the-extracted-data-into-the-destination-storage"]], "How does Generator Work?": [[212, "how-does-generator-work"]], "How to Calculate the Number of FLOPs in Transformer Based Models?": [[117, null]], "How to Implement Nominal Subtyping?": [[2, "how-to-implement-nominal-subtyping"]], "How to Implement Structural Subtyping?": [[2, "how-to-implement-structural-subtyping"]], "How to Inspect Function and Class Signatures in Python?": [[116, null]], "How to Setup SLURM and ParallelCluster in AWS": [[89, null]], "How to define a Sample Space?": [[129, "how-to-define-a-sample-space"]], "How to find K?": [[60, "how-to-find-k"]], "Hybrid Fusion": [[95, "hybrid-fusion"]], "Hybrid Serving": [[108, "hybrid-serving"]], "Hydra": [[216, "hydra"]], "Hyperparameter Tuning": [[103, "hyperparameter-tuning"], [105, "hyperparameter-tuning"]], "Hypothesis Space": [[60, "hypothesis-space"], [67, "hypothesis-space"]], "I/O Bound": [[215, "i-o-bound"]], "IEEE (Style) Citations": [[1, null]], "IID Assumption": [[67, "iid-assumption"]], "Ideal Histogram/Distribution (PMF) vs Empirical Histogram/Distribution": [[158, "ideal-histogram-distribution-pmf-vs-empirical-histogram-distribution"]], "Ideal histogram": [[157, "ideal-histogram"]], "Identical Application": [[55, "identical-application"], [57, "identical-application"]], "Identically and Independently Distributed Random Variables": [[65, "identically-and-independently-distributed-random-variables"]], "Identify and Scope the Data Source": [[96, "identify-and-scope-the-data-source"]], "Identify the Business Problem": [[94, "identify-the-business-problem"]], "Identifying the Type of Machine Learning Task": [[95, "identifying-the-type-of-machine-learning-task"]], "Illustrative Example: Race Condition in Threading": [[215, "illustrative-example-race-condition-in-threading"]], "Image Compression with K-Means": [[62, "image-compression-with-k-means"]], "Image Segmentation": [[62, "image-segmentation"]], "ImageNet": [[195, "imagenet"]], "Imperative vs Declarative": [[97, "imperative-vs-declarative"]], "Implement Queue using Stacks": [[36, null]], "Implementation": [[19, "implementation"], [20, "implementation"], [20, "id3"], [25, "implementation"], [26, "implementation"], [27, "implementation"], [27, "id6"], [29, "implementation"], [30, "implementation"], [30, "id2"], [32, "implementation"], [35, "implementation"], [37, "implementation"], [41, "implementation"], [43, "implementation"], [44, "implementation"], [46, "implementation"], [56, null], [57, "implementation"], [57, "id13"], [57, "id18"], [57, "id30"], [57, "id35"], [57, "id39"], [58, "implementation"], [61, "implementation"], [68, null], [71, null], [74, "implementation"], [122, "implementation"], [123, "implementation"], [147, null], [155, null]], "Implementation of Residual Block and AddNorm": [[57, "implementation-of-residual-block-and-addnorm"]], "Implementation of the Jacobian Matrix": [[123, "implementation-of-the-jacobian-matrix"]], "Implementation using List": [[36, "implementation-using-list"]], "Implementation using Stack Class": [[36, "implementation-using-stack-class"]], "Implementation: K-Means (Lloyd)": [[61, null]], "Implementations": [[59, "implementations"]], "Implementing Queue Using List": [[22, "implementing-queue-using-list"]], "Implementing T-Statistics": [[67, "implementing-t-statistics"]], "Implementing the Factory Method": [[221, "implementing-the-factory-method"]], "Importance": [[194, "importance"]], "Important": [[157, null]], "Important Brain Dump": [[157, "important-brain-dump"]], "Important Topics": [[157, "important-topics"]], "Imports and Dependencies": [[61, "imports-and-dependencies"], [74, "imports-and-dependencies"]], "Improves Confidence in System Stability": [[93, "improves-confidence-in-system-stability"]], "Inadmissble Equations": [[16, "inadmissble-equations"]], "Inclusion-Exclusion - Unions of Two Non-Disjoint Sets": [[130, "inclusion-exclusion-unions-of-two-non-disjoint-sets"]], "Inclusive Implementations": [[2, "inclusive-implementations"]], "Inclusive vs. Coercive Implementations": [[2, "inclusive-vs-coercive-implementations"]], "Incremental Testing": [[93, "incremental-testing"]], "Independence": [[132, null], [135, "independence"], [175, "independence"], [187, "independence"], [190, "independence"]], "Independence and Correlation Coefficient": [[177, "independence-and-correlation-coefficient"]], "Independence and Identically Distributed (IID)": [[210, "independence-and-identically-distributed-iid"]], "Independence of Normal Vector from Plane Vectors\u2019 Position": [[79, "independence-of-normal-vector-from-plane-vectors-position"]], "Independent Processing": [[55, "independent-processing"], [57, "independent-processing"]], "Independent and Identically Distributed (IID)": [[101, "independent-and-identically-distributed-iid"], [152, null]], "Independent and Identically Distributed (i.i.d.)": [[73, "independent-and-identically-distributed-i-i-d"], [175, "independent-and-identically-distributed-i-i-d"]], "Index-to-String Mapping": [[55, "index-to-string-mapping"]], "Inductive Bias (Distribution Assumptions)": [[73, "inductive-bias-distribution-assumptions"]], "Inefficient Space Usage": [[17, "inefficient-space-usage"]], "Inequality Bounds": [[130, "inequality-bounds"]], "Inference Story": [[52, "inference-story"]], "Inference with 2D Data": [[52, "inference-with-2d-data"]], "Inference/Prediction": [[73, "inference-prediction"]], "Influential Ideas and Papers": [[77, null]], "Information Theory": [[210, "information-theory"]], "Infrastructure as Code (IaC)": [[93, "infrastructure-as-code-iac"]], "Init vs New": [[236, null]], "Initial Book Relation": [[97, "ml-lifecycle-032-initial-book-relation"]], "Initial Condition of Conditional Probability Distribution": [[56, "initial-condition-of-conditional-probability-distribution"]], "Initial Configuration": [[93, "initial-configuration"]], "Initializer": [[236, "initializer"]], "Initializing Criterion With Composer": [[58, "initializing-criterion-with-composer"]], "Input Sequence": [[55, "input-sequence"], [57, "input-sequence"]], "Input Space": [[13, "input-space"], [19, "input-space"], [43, "input-space"]], "Input Space Complexity": [[20, "input-space-complexity"], [20, "id7"], [27, "input-space-complexity"], [27, "id10"], [29, "input-space-complexity"], [30, "input-space-complexity"]], "Input and Target": [[58, "input-and-target"]], "Inputs and Labels": [[95, "inputs-and-labels"]], "Inputs and Targets": [[58, "inputs-and-targets"]], "Inspect All Members": [[116, "inspect-all-members"]], "Instantiating": [[216, "instantiating"]], "Integers as a Subtype of Real Numbers": [[4, "integers-as-a-subtype-of-real-numbers"]], "Integration": [[125, "integration"]], "Integration Test vs Acceptance Test": [[93, "integration-test-vs-acceptance-test"]], "Integration Testing": [[93, "integration-testing"]], "Integration and Probability": [[125, "integration-and-probability"]], "Intentional Use Of Mutable Default To Cache": [[235, "intentional-use-of-mutable-default-to-cache"]], "Interpretability vs. Accuracy": [[101, "interpretability-vs-accuracy"]], "Interpretating the Generalization Bound": [[65, "interpretating-the-generalization-bound"]], "Interpretation of Hoeffding\u2019s Inequality": [[202, "interpretation-of-hoeffding-s-inequality"]], "Interpreting Dot Product as Matrix Multiplication": [[84, "interpreting-dot-product-as-matrix-multiplication"]], "Interview Tips for Array Problems": [[11, "array-interview-tips"]], "Interview Tips for Hash Map Problems": [[17, "hashmap-interview-tips"]], "Introducing Infinity": [[125, "introducing-infinity"]], "Introduction": [[11, "introduction"], [16, "introduction"], [17, "introduction"], [27, "introduction"], [29, "introduction"], [30, "introduction"], [32, "introduction"], [51, "introduction"], [56, "introduction"], [78, "introduction"], [94, "introduction"], [95, "introduction"], [176, "introduction"], [178, "introduction"], [181, "introduction"], [184, "introduction"]], "Introspection Is Not Preserved": [[228, "introspection-is-not-preserved"]], "Intuition": [[19, "intuition"], [20, "intuition"], [20, "id1"], [20, "id2"], [27, "intuition"], [30, "intuition"], [32, "intuition"], [36, "intuition"], [43, "intuition"], [43, "id1"], [44, "intuition"], [44, "id1"], [52, "intuition"], [57, "intuition"], [60, "intuition"], [67, "intuition"], [93, "intuition"], [93, "id6"], [93, "id8"], [93, "id9"], [93, "id10"], [98, "intuition"], [98, "id5"], [98, "id9"], [109, "intuition"], [125, "intuition"], [172, "intuition"]], "Intuition (Conditional Probability)": [[131, "intuition-conditional-probability"]], "Intuition (Independence)": [[132, "intuition-independence"]], "Intuition (What comes before Data Extraction?)": [[96, "intuition-what-comes-before-data-extraction"]], "Intuition and Interpretation (Law of Total Probability)": [[133, "intuition-and-interpretation-law-of-total-probability"]], "Intuition of Attention Mechanism": [[57, "intuition-of-attention-mechanism"]], "Intuition through Convolutions": [[185, "intuition-through-convolutions"]], "Invariance": [[7, "invariance"], [7, "id3"]], "Invariance, Covariance and Contravariance": [[7, null]], "Is Learning Feasible?": [[65, "is-learning-feasible"]], "Is The Learning Problem Solvable?": [[64, null]], "Is vs Equality": [[232, null]], "Iterative Process Through L Decoder Blocks": [[55, "iterative-process-through-l-decoder-blocks"]], "Iterators Are Lazy But Not All Iterables Are Lazy": [[233, "iterators-are-lazy-but-not-all-iterables-are-lazy"]], "JSON": [[96, "json"]], "Jensen\u2019s Inequality": [[202, "jensen-s-inequality"]], "Join == Barrier": [[215, "join-barrier"]], "Joint CDF": [[175, "joint-cdf"]], "Joint Distribution Fully Determines the Model": [[52, "joint-distribution-fully-determines-the-model"]], "Joint Expectation": [[177, "joint-expectation"]], "Joint Expectation and Correlation": [[178, null]], "Joint PDF (Continuous Random Variables)": [[175, "joint-pdf-continuous-random-variables"]], "Joint PMF (Discrete Random Variables)": [[175, "joint-pmf-discrete-random-variables"]], "Joint PMF and PDF": [[176, null]], "K-Means": [[61, null], [62, "k-means"]], "K-Means Algorithm on IRIS": [[61, "k-means-algorithm-on-iris"]], "K-Means Algorithm on MNIST": [[61, "k-means-algorithm-on-mnist"]], "K-Means Converges in Finite Steps": [[60, "k-means-converges-in-finite-steps"]], "K-Means and Hard Assignments": [[52, "k-means-and-hard-assignments"]], "K-Means++": [[60, "k-means"]], "K-Medoids": [[60, "k-medoids"]], "Key 1. Byte Pair Encoding (BPE) (1,2,3)": [[56, "key-1-byte-pair-encoding-bpe-1-2-3"]], "Key 1. Competent Generalists over Narrow Experts (1)": [[56, "key-1-competent-generalists-over-narrow-experts-1"]], "Key 1. GPT-2 is a Continuation of GPT-1 with Self-Attention Mechanisms (1)": [[56, "key-1-gpt-2-is-a-continuation-of-gpt-1-with-self-attention-mechanisms-1"]], "Key 1. Modeling Language Models over Joint Probability Distributions (1)": [[56, "key-1-modeling-language-models-over-joint-probability-distributions-1"]], "Key 1. Rejection of CommonCrawl (1,2)": [[56, "key-1-rejection-of-commoncrawl-1-2"]], "Key 2. Construction of WebText Dataset": [[56, "key-2-construction-of-webtext-dataset"]], "Key 2. Decompose Joint Distributions as Conditional Distributions via Chain Rule (2)": [[56, "key-2-decompose-joint-distributions-as-conditional-distributions-via-chain-rule-2"]], "Key 2. IID Assumption Fails in Real World (2, 3)": [[56, "key-2-iid-assumption-fails-in-real-world-2-3"]], "Key 2. Modifications from GPT-1 and Model Stability (1)": [[56, "key-2-modifications-from-gpt-1-and-model-stability-1"]], "Key 3. Conditional on Task (3)": [[56, "key-3-conditional-on-task-3"]], "Key 3. Multi-Task Learning is Nacent (4)": [[56, "key-3-multi-task-learning-is-nacent-4"]], "Key 4. From Word Embeddings to Contextual Embeddings (5,6)": [[56, "key-4-from-word-embeddings-to-contextual-embeddings-5-6"]], "Key 4. Optimizing Unsupervised is the same as Optimizing Supervised (4)": [[56, "key-4-optimizing-unsupervised-is-the-same-as-optimizing-supervised-4"]], "Key 5. Large Language Models has Capacity to Infer and Generalize (5)": [[56, "key-5-large-language-models-has-capacity-to-infer-and-generalize-5"]], "Key 5. Zero Shot Learning and Zero Shot Transfer (7)": [[56, "key-5-zero-shot-learning-and-zero-shot-transfer-7"]], "Key Characteristics": [[215, "key-characteristics"], [215, "id1"]], "Key Components": [[95, "key-components"]], "Key Components of Framing a Machine Learning Problem": [[95, "ml-lifecycle-02-project-scoping-key-components"]], "Key Differences Between Structured And Unstructured Data": [[97, "ml-lifecycle-032-structured-vs-unstructured-data"]], "Key-Value Pairs": [[17, "key-value-pairs"]], "Koko Eating Bananas": [[29, null]], "Kronecker Delta": [[123, "kronecker-delta"]], "Kurtosis": [[170, "kurtosis"]], "LICENSE": [[93, "license"]], "L^{p} Norm": [[83, "l-p-norm"]], "L_1 Norm (Manhattan Norm)": [[83, "l-1-norm-manhattan-norm"]], "L_2 Norm (Euclidean Norm)": [[83, "l-2-norm-euclidean-norm"]], "Labeling": [[100, "labeling"]], "Labels": [[95, "labels"]], "Last Token has Full Context": [[57, "last-token-has-full-context"]], "Late Binding Closures": [[234, null]], "Late Fusion": [[95, "late-fusion"]], "Latency": [[93, "latency"]], "Law of Large Numbers": [[207, null]], "Law of Total Probability": [[133, "law-of-total-probability"]], "Layer Norm Stabilises Activation Distributions": [[57, "layer-norm-stabilises-activation-distributions"]], "Layer Normalization": [[55, "layer-normalization"], [57, "layer-normalization"]], "Layer Normalization Before Projection": [[55, "layer-normalization-before-projection"]], "LayerNorm and Residual Connection": [[57, "layernorm-and-residual-connection"]], "Learing Outside the Training Set \\mathcal{S} (Deterministic Case)": [[65, "learing-outside-the-training-set-mathcal-s-deterministic-case"]], "Learing Outside the Training Set \\mathcal{S} (Probabilistic Case)": [[65, "learing-outside-the-training-set-mathcal-s-probabilistic-case"]], "Learnable Affine Transformation": [[57, "learnable-affine-transformation"]], "Learning Curves": [[105, "learning-curves"]], "Learning Objectives": [[29, "learning-objectives"], [32, "learning-objectives"], [78, "learning-objectives"], [81, "learning-objectives"], [82, "learning-objectives"], [181, "learning-objectives"]], "Learning Problem (Conditional Maximum Likelihood Estimation)": [[86, "learning-problem-conditional-maximum-likelihood-estimation"]], "Learning Rate Scheduler": [[58, "learning-rate-scheduler"]], "Lebesgue Integral": [[125, "lebesgue-integral"]], "Lemma 1: Stirling Numbers of the Second Kind": [[60, "lemma-1-stirling-numbers-of-the-second-kind"]], "Lemma 2: Cost Function of K-Means Monotonically Decreases": [[60, "lemma-2-cost-function-of-k-means-monotonically-decreases"]], "Lemma 3: Monotone Convergence Theorem": [[60, "lemma-3-monotone-convergence-theorem"]], "Lies": [[125, "lies"]], "Lifecycle": [[93, "lifecycle"]], "Likelihood": [[210, "likelihood"]], "Likelihood and Log-Likelihood of Marginal Distribution": [[52, "likelihood-and-log-likelihood-of-marginal-distribution"]], "Likelihood in the Context of Machine Learning": [[210, "likelihood-in-the-context-of-machine-learning"]], "Likelihood in the Context of Supervised Learning": [[210, "likelihood-in-the-context-of-supervised-learning"]], "Linear Algebra": [[77, null]], "Linear Projections": [[57, "linear-projections"]], "Linear Regression": [[66, null]], "Linear Search": [[31, null]], "Linear Transformation of Gaussian Distribution": [[169, "linear-transformation-of-gaussian-distribution"]], "Linear Transformation of Mean and Covariance": [[189, "linear-transformation-of-mean-and-covariance"]], "Linear in Parameters": [[67, "linear-in-parameters"]], "Linearity": [[67, "linearity"]], "Link to Unit Testing": [[93, "link-to-unit-testing"]], "Linking Plane and Hyperplane Equations to Linear Regression": [[79, "linking-plane-and-hyperplane-equations-to-linear-regression"]], "Linting": [[93, "linting"]], "Liskov Substitution Principle": [[4, "liskov-substitution-principle"]], "List is Invariant": [[7, "list-is-invariant"]], "List vs Immutable List": [[7, "list-vs-immutable-list"]], "List/Array": [[12, null]], "Lloyd\u2019s Algorithm": [[60, "lloyds-algorithm"]], "Lloyd\u2019s K-Means Clustering Algorithm": [[59, null]], "LoRA Implementation": [[71, "lora-implementation"]], "Load and Read the Image": [[62, "load-and-read-the-image"]], "Local And Global Rank": [[87, "local-and-global-rank"]], "Local And Global World Size": [[87, "local-and-global-world-size"]], "Local Minima": [[60, "local-minima"]], "Local Pre-Commit Checks (Local Continuous Integration)": [[93, "local-pre-commit-checks-local-continuous-integration"]], "Local and CI Environment Consistency": [[93, "local-and-ci-environment-consistency"]], "Lock": [[213, "lock"]], "Logging into the Head Node": [[89, "logging-into-the-head-node"]], "Logistic Regression": [[142, "logistic-regression"]], "Lookup": [[55, "lookup"], [57, "lookup"]], "Loop Invariant": [[30, "loop-invariant"]], "Loop Invariant and Induction": [[30, "loop-invariant-and-induction"]], "Loss Computation": [[58, "loss-computation"]], "Loss Function": [[56, "loss-function"], [60, "loss-function"], [67, "loss-function"]], "Loss, Cost, Objective and Performance Metrics": [[95, "loss-cost-objective-and-performance-metrics"]], "Low Level and High Level Modules": [[220, "low-level-and-high-level-modules"]], "Low-Rank Adaptation Of Large Language Models": [[69, null]], "M-Step": [[52, "m-step"], [52, "id22"]], "MLE estimates the conditional expectation of the target variable given the input": [[67, "mle-estimates-the-conditional-expectation-of-the-target-variable-given-the-input"]], "Machine Learning Notations": [[86, null], [86, "id2"]], "Machine Learning Objective (Establishing Metrics)": [[95, "machine-learning-objective-establishing-metrics"]], "Machine Learning Tasks": [[95, "machine-learning-tasks"]], "Main Profiling Code": [[111, "main-profiling-code"], [113, "main-profiling-code"]], "Maintainability and Scalability": [[93, "maintainability-and-scalability"]], "Managing Dependencies with pyproject.toml": [[93, "managing-dependencies-with-pyproject-toml"]], "Managing Dependencies with requirements.txt": [[93, "managing-dependencies-with-requirements-txt"]], "Managing Project Dependencies": [[93, "managing-project-dependencies"]], "Marginal PMF and PDF": [[175, "marginal-pmf-and-pdf"]], "Marginal of One Single Data Point \\boldsymbol{x}^{(n)}": [[52, "marginal-of-one-single-data-point-boldsymbol-x-n"]], "Marginal of the Entire Dataset \\boldsymbol{X}": [[52, "marginal-of-the-entire-dataset-boldsymbol-x"]], "Marginalizing Out the Latent Variable": [[52, "marginalizing-out-the-latent-variable"]], "Markov Assumption": [[56, "markov-assumption"]], "Markov\u2019s Inequality": [[202, "markov-s-inequality"]], "Masked Multi-Head Attention for Decoder Layer \\ell": [[55, "masked-multi-head-attention-for-decoder-layer-ell"]], "Masked/Causal Self-Attention": [[57, "masked-causal-self-attention"]], "Masking and Ignore Index": [[58, "masking-and-ignore-index"]], "Master Port and Master Address": [[88, "master-port-and-master-address"]], "Master Theorem": [[27, "master-theorem"]], "Master Theorem 1": [[16, null]], "Master Theorem Case 2 Extensions": [[16, "master-theorem-case-2-extensions"]], "Master Theorem Cases": [[16, "master-theorem-cases"], [57, "self-attention-complexity"]], "Mathematical Convenience": [[210, "mathematical-convenience"]], "Mathematical Formulation": [[29, "mathematical-formulation"]], "Mathematical Induction": [[30, "mathematical-induction"]], "Mathematical Intuition": [[122, "mathematical-intuition"]], "Mathematical Notations": [[86, "mathematical-notations"]], "Mathematical Representation": [[29, "mathematical-representation"], [30, "mathematical-representation"]], "Mathematical Representation (Iterative)": [[27, "mathematical-representation-iterative"]], "Mathematical Representation (Recursive)": [[27, "mathematical-representation-recursive"]], "Matrix Multiplication Primer": [[55, "matrix-multiplication-primer"]], "Matrix Representation": [[67, "matrix-representation"]], "Maximum Likelihood Estimate for Likelihood (Continuous Feature Parameters)": [[73, "maximum-likelihood-estimate-for-likelihood-continuous-feature-parameters"]], "Maximum Likelihood Estimation": [[67, "maximum-likelihood-estimation"], [73, "maximum-likelihood-estimation"], [210, "maximum-likelihood-estimation"], [211, null]], "Maximum Likelihood Estimation for Common Distributions": [[210, "maximum-likelihood-estimation-for-common-distributions"]], "Maximum Likelihood Estimation for Multivariate Gaussian": [[210, "maximum-likelihood-estimation-for-multivariate-gaussian"]], "Maximum Likelihood Estimation for Priors (Categorical Distribution)": [[73, "maximum-likelihood-estimation-for-priors-categorical-distribution"]], "Maximum Likelihood for Continuous Variables": [[210, "maximum-likelihood-for-continuous-variables"]], "Maximum Likelihood for Univariate Gaussian": [[210, "maximum-likelihood-for-univariate-gaussian"]], "Maximum Path Length": [[57, "maximum-path-length"]], "Maximum Variance": [[143, "maximum-variance"]], "Mean": [[166, "mean"]], "Mean Squared Error (MSE)": [[67, "mean-squared-error-mse"]], "Mean Squared Error estimates the Conditional Expectation": [[67, "mean-squared-error-estimates-the-conditional-expectation"]], "Mean Squared Error is an Unbiased Estimator of the Variance of the Error": [[67, "mean-squared-error-is-an-unbiased-estimator-of-the-variance-of-the-error"]], "Mean, Median and Mode": [[166, null]], "Measure Zero Sets": [[129, "measure-zero-sets"]], "Measuring Success": [[94, "measuring-success"]], "Median": [[166, "median"]], "Medical Diagnosis": [[179, "medical-diagnosis"]], "Medical Diagnosis Favours Recall": [[94, null]], "Memory Efficiency": [[212, "memory-efficiency"]], "Memory Mapping": [[57, "memory-mapping"]], "Memory Sharing and Synchronization": [[215, "memory-sharing-and-synchronization"]], "Memory Wastage": [[11, "memory-wastage"]], "Merge - No Additional Inference Latency": [[70, "merge-no-additional-inference-latency"]], "Merge And Quantize": [[71, "merge-and-quantize"]], "Merge And Unload": [[71, "merge-and-unload"]], "Merge Padding and Future Masks": [[58, "merge-padding-and-future-masks"]], "Mermaid Diagram Of Deep Learning Tasks": [[95, null]], "Mermaid Diagram Of Machine Learning Tasks": [[95, null]], "Metadata Management": [[217, "metadata-management"]], "Method Resolution Order": [[116, "method-resolution-order"]], "Metric Selection": [[102, "metric-selection"]], "Metrics": [[71, "metrics"]], "Min Stack": [[34, null]], "Miniconda": [[89, "miniconda"]], "Minimum Viable Product (MVP)": [[95, "minimum-viable-product-mvp"]], "Minimum and Maximum Variance of Coin Toss": [[143, "minimum-and-maximum-variance-of-coin-toss"]], "Missing": [[9, "missing"]], "Mixed Features (Discrete and Continuous)": [[73, "mixed-features-discrete-and-continuous"]], "Mixture Models": [[51, null]], "Mocks": [[93, "mocks"]], "Mode": [[166, "mode"]], "Model": [[58, "model"]], "Model Architecture": [[119, "model-architecture"]], "Model Calibration": [[106, "model-calibration"]], "Model Complexity": [[65, "model-complexity"]], "Model FLOPs Utilization (MFU)": [[117, "model-flops-utilization-mfu"]], "Model Fitting": [[60, "model-fitting"], [73, "model-fitting"]], "Model Fitting via Least Squares": [[67, "model-fitting-via-least-squares"]], "Model Fitting via Maximum Likelihood Estimation": [[67, "model-fitting-via-maximum-likelihood-estimation"]], "Model Inference": [[60, "model-inference"], [67, "model-inference"]], "Model Promotion": [[107, "model-promotion"]], "Model Registry and Promotion (MLOps)": [[107, "model-registry-and-promotion-mlops"]], "Model Selection": [[101, "model-selection"]], "Model Versioning, Code Versioning, and Data Versioning": [[103, "model-versioning-code-versioning-and-data-versioning"]], "Modern Row and Columnar Formats": [[96, "modern-row-and-columnar-formats"]], "Modifications from GPT-1 and Model Stability": [[57, "modifications-from-gpt-1-and-model-stability"]], "Modifying GPT-2 Head For Classification": [[118, "modifying-gpt-2-head-for-classification"]], "Moment Generating Function": [[199, null]], "Moment Generating and Characteristic Functions": [[198, null]], "Moments": [[141, "moments"], [164, "moments"], [199, "moments"]], "Moments and Variance": [[141, null], [164, null]], "Monitoring Dashboard In Practice": [[109, "monitoring-dashboard-in-practice"]], "Monitoring and Alerting": [[99, "monitoring-and-alerting"]], "Monitoring and Optimizing": [[98, "monitoring-and-optimizing"]], "Monotonicity": [[29, "monotonicity"]], "Monotonicity of k-means Updates": [[63, "monotonicity-of-k-means-updates"]], "More Intuition in Andrej Karpathy\u2019s Video": [[57, null]], "Motivation": [[8, "motivation"], [9, "motivation"], [56, "motivation"], [58, "motivation"], [58, "id4"], [70, "motivation"], [79, "motivation"], [93, "motivation"], [116, "motivation"], [122, "motivation"], [169, "motivation"]], "Multi-Head Attention": [[57, "multi-head-attention"]], "Multi-Head Attention for Layer \\ell": [[55, "multi-head-attention-for-layer-ell"]], "Multi-Node Setup With CUDA": [[88, "multi-node-setup-with-cuda"]], "Multi-Stage and Multi-Modal Paradigms": [[95, null]], "MultiThreading": [[215, "multithreading"]], "Multicollinearity among Predictors": [[67, "multicollinearity-among-predictors"]], "Multimodal Deep Learning (Yes ChatGPT Is Multimodal)": [[95, "multimodal-deep-learning-yes-chatgpt-is-multimodal"]], "Multiprocessing": [[215, "multiprocessing"]], "Multivariate Gaussian": [[190, "multivariate-gaussian"]], "Multivariate Gaussian Distribution": [[193, null]], "Multivariate Linear Model": [[67, "multivariate-linear-model"]], "Murphy\u2019s Plots": [[52, "murphy-s-plots"]], "Mutation!": [[35, null]], "Mutually Exclusive Events": [[130, "mutually-exclusive-events"]], "MyPy: Static Type Checking": [[93, "mypy-static-type-checking"]], "Naive Bayes": [[72, null]], "Naive Bayes Application (MNIST)": [[76, null]], "Naive Bayes Application: Penguins": [[75, null]], "Naive Bayes Setup": [[73, "naive-bayes-setup"]], "Naive Way To Handle Future Mask": [[57, null]], "Naives Bayes Implementation": [[74, null]], "Named Constructor": [[224, null]], "Narrowing Values, Widening Functions": [[4, "narrowing-values-widening-functions"]], "Negative Scaling": [[82, "negative-scaling"]], "Next Method": [[212, "next-method"]], "No Autocorrelation between Error Terms": [[67, "no-autocorrelation-between-error-terms"]], "No Closed-Form Solution": [[52, "no-closed-form-solution"]], "No Dependency Injection vs Dependency Injection": [[93, "no-dependency-injection-vs-dependency-injection"]], "No Direct Support for Data Manipulation Functions": [[11, "no-direct-support-for-data-manipulation-functions"]], "No Direct Support for Sorting": [[17, "no-direct-support-for-sorting"]], "No Distributed Barrier": [[90, "no-distributed-barrier"]], "No Free Lunch Theorem": [[101, "no-free-lunch-theorem"]], "No Order of Elements": [[17, "no-order-of-elements"]], "No Special Operations": [[11, "no-special-operations"]], "NoSQL": [[97, "nosql"]], "Nodes": [[87, "nodes"]], "Nominal Subtyping - Class Hierarchy Determines Subtypes": [[2, "nominal-subtyping-class-hierarchy-determines-subtypes"]], "Nominal vs. Structural Subtyping": [[2, "nominal-vs-structural-subtyping"]], "Non-Fields": [[78, "non-fields"]], "Non-Functional Metrics": [[95, "non-functional-metrics"]], "Non-Negativity": [[123, "non-negativity"]], "None Is A Singleton Object": [[232, "none-is-a-singleton-object"]], "Norm": [[83, "norm"]], "Normality of the Error Terms": [[67, "normality-of-the-error-terms"]], "Normalization": [[97, "normalization"], [123, "normalization"], [138, "normalization"], [175, "normalization"]], "NotGiven": [[9, "notgiven"]], "NotGiven vs. MISSING": [[9, "notgiven-vs-missing"]], "Notation": [[141, "notation"], [141, null], [164, null]], "Notation Abuse": [[55, null], [57, null]], "Notations": [[55, null], [65, "notations"], [73, "notations"], [77, null], [87, null], [209, "notations"]], "Note": [[129, null], [173, null]], "Notebooks": [[59, "notebooks"], [72, "notebooks"]], "Number of Bits needed for a Positive Integer": [[62, "number-of-bits-needed-for-a-positive-integer"]], "Number of items left after k-th comparison": [[27, "items-left-binary-search"]], "Numerical Instability of the Softmax Function": [[123, "numerical-instability-of-the-softmax-function"]], "Numerical Optimization and the Negative Log-Likelihood": [[210, "numerical-optimization-and-the-negative-log-likelihood"]], "Numerical Stability and Gradient Saturation": [[57, "numerical-stability-and-gradient-saturation"]], "Numerical Underflow": [[210, "numerical-underflow"]], "Objective": [[30, "objective"]], "Objective Function": [[60, "objective-function"], [67, "objective-function"]], "Objective Function Re-defined": [[60, "objective-function-re-defined"]], "Objective Function for Fine-Tuning": [[56, "objective-function-for-fine-tuning"]], "Offline Metrics": [[95, "offline-metrics"]], "Offline Validation": [[107, "offline-validation"]], "Offline Validation Steps": [[107, "offline-validation-steps"]], "Omniverse": [[77, null]], "On Dynamic vs Static Type Checking": [[3, "on-dynamic-vs-static-type-checking"]], "On-Device Inference": [[108, "on-device-inference"]], "One Categorical Feature": [[75, "one-categorical-feature"]], "One Quantitative Predictor": [[75, "one-quantitative-predictor"]], "One-Hot Encoding Process": [[55, "one-hot-encoding-process"], [57, "one-hot-encoding-process"]], "One-Hot Representation of Input Sequence \\mathbf{x}": [[55, "one-hot-representation-of-input-sequence-mathbf-x"], [57, "one-hot-representation-of-input-sequence-mathbf-x"]], "Online Metrics": [[95, "online-metrics"]], "Online Resources": [[59, "online-resources"], [72, "online-resources"]], "Online Validation": [[107, "online-validation"]], "Online Validation Techniques": [[107, "online-validation-techniques"]], "Operations": [[32, "operations"], [77, null]], "Optical Character Recognition": [[76, "optical-character-recognition"]], "Optimizer": [[58, "optimizer"]], "Optimizing Unsupervised is the same as Optimizing Supervised": [[56, "optimizing-unsupervised-is-the-same-as-optimizing-supervised"]], "Orchestration": [[93, "orchestration"]], "Order in Pipeline": [[93, "order-in-pipeline"]], "Ordered Linear Search: Efficiency in Sorted Arrays": [[30, "ordered-linear-search-efficiency-in-sorted-arrays"]], "Ordered and Probabilistic Linear Search": [[30, "ordered-and-probabilistic-linear-search"]], "Other Methods": [[60, "other-methods"]], "Outer Product": [[84, "outer-product"]], "Output Of The Embedding Layer": [[57, "output-of-the-embedding-layer"]], "Outputs": [[95, "outputs"]], "Outputs (Predictions)": [[95, "outputs-predictions"]], "Overloading with Container": [[8, "overloading-with-container"]], "Overriding the __new__ Method": [[226, "overriding-the-new-method"]], "Overview Of Concurrency, Parallelism, and Asynchronous Execution": [[215, null]], "P-Values": [[67, "p-values"]], "PAC Framework": [[65, "pac-framework"]], "PDF is Derivative of CDF": [[165, "pdf-is-derivative-of-cdf"]], "PDF is not Probability": [[173, "pdf-is-not-probability"]], "PDF of Functions of Random Variables": [[172, "pdf-of-functions-of-random-variables"]], "PDF of Random Vectors": [[187, "pdf-of-random-vectors"]], "PE: Positional Encoding Layer": [[55, "pe-positional-encoding-layer"]], "PMF and CDF": [[155, "pmf-and-cdf"]], "PMF and CDF Conversion": [[139, "pmf-and-cdf-conversion"]], "PMF and CDF of Bernoulli Distribution": [[143, "pmf-and-cdf-of-bernoulli-distribution"]], "PMF and CDF of Binomial Distribution": [[146, "pmf-and-cdf-of-binomial-distribution"]], "PMF and CDF of Discrete Uniform Distribution": [[159, "pmf-and-cdf-of-discrete-uniform-distribution"]], "PMF and CDF of Poisson Distribution": [[154, "pmf-and-cdf-of-poisson-distribution"]], "Pair Problem Revisited": [[5, "pair-problem-revisited"]], "Palindrome Checker": [[25, null]], "Parameter Estimation (Mixture Model Perspective)": [[52, "parameter-estimation-mixture-model-perspective"]], "Parameter Estimation (The Necessary Conditions)": [[52, "parameter-estimation-the-necessary-conditions"]], "Parameter Vector": [[73, "parameter-vector"]], "Parameters": [[209, "parameters"]], "Parameters Reduction In LoRA": [[70, "parameters-reduction-in-lora"]], "Parametric Equation of a Plane": [[79, "parametric-equation-of-a-plane"]], "Partition and Voronoi Regions": [[60, "partition-and-voronoi-regions"]], "Patch Composer Configuration with Model Config": [[57, "patch-composer-configuration-with-model-config"]], "Peek": [[36, "peek"]], "Performance": [[94, "performance"]], "Performance Metrics": [[67, "performance-metrics"]], "Permutation Invariance": [[57, "permutation-invariance"]], "Permutations and Combinations": [[124, null]], "Perplexity": [[56, "perplexity"]], "Phase 1. Planning": [[93, "phase-1-planning"]], "Phase 2. Development": [[93, "phase-2-development"]], "Phase 3. Build": [[93, "phase-3-build"]], "Phase 4. Scan and Test": [[93, "phase-4-scan-and-test"]], "Phase 5. Continuous Deployment": [[93, "phase-5-continuous-deployment"]], "Phase 6. Continuous Monitoring and Observability": [[93, "phase-6-continuous-monitoring-and-observability"]], "Phase 7. Continuous Learning and Training": [[93, "phase-7-continuous-learning-and-training"]], "Pinning DevOps Tool Versions": [[93, "pinning-devops-tool-versions"]], "Plain": [[237, "plain"]], "Plane Equation in Normal Form (Vector Form)": [[79, "plane-equation-in-normal-form-vector-form"]], "Planes": [[79, "planes"]], "Plane\u2019s Equations": [[79, "plane-s-equations"]], "Playbook": [[77, null]], "Plotting PMF and CDF of Bernoulli Distribution": [[143, "plotting-pmf-and-cdf-of-bernoulli-distribution"]], "Plotting PMF and CDF of Binomial Distribution": [[146, "plotting-pmf-and-cdf-of-binomial-distribution"]], "Plotting PMF and CDF of Poisson Distribution": [[154, "plotting-pmf-and-cdf-of-poisson-distribution"], [159, "plotting-pmf-and-cdf-of-poisson-distribution"]], "Poisson Approximation of Binomial Distribution": [[155, "poisson-approximation-of-binomial-distribution"]], "Poisson Approximation to Binomial Distribution": [[154, "poisson-approximation-to-binomial-distribution"]], "Poisson Distribution": [[156, null]], "Pop": [[36, "pop"]], "Positional Embeddings": [[57, "positional-embeddings"]], "Positional Encodings Via Embeddings": [[57, "positional-encodings-via-embeddings"]], "Positionwise Feed-Forward Networks": [[55, "positionwise-feed-forward-networks"], [57, "positionwise-feed-forward-networks"]], "Positive Scaling": [[82, "positive-scaling"]], "Posterior of One Single Data Point \\boldsymbol{x}^{(n)}": [[52, "posterior-of-one-single-data-point-boldsymbol-x-n"]], "Posterior of the Entire Dataset \\boldsymbol{X}": [[52, "posterior-of-the-entire-dataset-boldsymbol-x"]], "Potential Confusion": [[206, "potential-confusion"]], "Pre-Commit Hooks": [[93, "pre-commit-hooks"]], "Pre-Merge Checks": [[93, "pre-merge-checks"]], "Preliminaries": [[80, null]], "Preventing Race Conditions with Locks": [[215, "preventing-race-conditions-with-locks"]], "Prior Distribution of the Entire Dataset \\mathcal{S}": [[52, "prior-distribution-of-the-entire-dataset-mathcal-s"]], "Prior is a Latent Variable": [[52, "prior-is-a-latent-variable"]], "Probabilistic Interpretation": [[123, "probabilistic-interpretation"]], "Probabilistic Search: Harnessing Data to Optimize Searches": [[30, "probabilistic-search-harnessing-data-to-optimize-searches"]], "Probability Axioms": [[130, null]], "Probability Density Function": [[162, null], [173, "probability-density-function"]], "Probability Inequalities": [[202, null], [203, null]], "Probability Law and Function \\mathbb{P}": [[129, "probability-law-and-function-mathbb-p"]], "Probability Law is a Measure": [[129, "probability-law-is-a-measure"]], "Probability Mass Function": [[138, null]], "Probability Measure \\P": [[136, "probability-measure-p"]], "Probability Space": [[129, null]], "Probability Theory": [[77, null]], "Probability at a Point in a Small Neighborhood": [[173, "probability-at-a-point-in-a-small-neighborhood"]], "Probability at a Point is Zero": [[173, "probability-at-a-point-is-zero"]], "Probability of Complements": [[130, "probability-of-complements"]], "Probability of the Empty Set": [[130, "probability-of-the-empty-set"]], "Problem": [[19, "problem"], [20, "problem"], [25, "problem"], [26, "problem"], [35, "problem"], [36, "problem"], [37, "problem"], [41, "problem"], [43, "problem"], [44, "problem"], [183, null]], "Problem 1": [[149, "problem-1"]], "Problem Formulation": [[52, "problem-formulation"], [60, "problem-formulation"], [67, "problem-formulation"], [123, "problem-formulation"]], "Problem Intuition": [[29, "problem-intuition"]], "Problem Scenario: Optimized Product Search in an Online Store": [[30, "problem-scenario-optimized-product-search-in-an-online-store"]], "Problem Statement": [[29, "problem-statement"], [62, "problem-statement"], [65, "problem-statement"], [75, "problem-statement"]], "Process": [[87, "process"], [215, "process"]], "Process Group Initialization": [[88, "process-group-initialization"]], "Process ID": [[215, "process-id"]], "Process vs Thread": [[215, "process-vs-thread"]], "Production Layer": [[99, "production-layer"]], "Profile GPT Small Time And Memory": [[113, null]], "Profiling": [[115, null]], "Profiling Code With Timeit": [[111, null]], "Profiling Generator Performance": [[212, "profiling-generator-performance"]], "Profiling Square Operation": [[112, "profiling-square-operation"]], "Project Structure Overview": [[226, "project-structure-overview"]], "Projection to a Higher Dimension Space": [[55, "projection-to-a-higher-dimension-space"], [57, "projection-to-a-higher-dimension-space"]], "Projections Lead to Dynamic Context Vectors": [[57, "projections-lead-to-dynamic-context-vectors"]], "Proof": [[29, null], [43, "proof"], [44, "proof"]], "Proof of Algebraic and Geometric Equivalence of Dot Product": [[84, "proof-of-algebraic-and-geometric-equivalence-of-dot-product"]], "Proof of Geometric Definition and The Law of Cosines": [[84, "proof-of-geometric-definition-and-the-law-of-cosines"]], "Properties": [[139, "properties"], [150, "properties"], [154, "properties"], [199, "properties"]], "Properties of 2D-Planes": [[79, "properties-of-2d-planes"]], "Properties of CDF": [[165, "properties-of-cdf"]], "Properties of Dot Product": [[84, "properties-of-dot-product"]], "Properties of Expectation": [[140, "properties-of-expectation"], [163, "properties-of-expectation"]], "Properties of Moments and Variance": [[141, "properties-of-moments-and-variance"]], "Properties of Transpose": [[81, "properties-of-transpose"]], "Propositions": [[131, "propositions"]], "Pros": [[216, "pros"], [216, "id1"]], "Pros and Cons": [[227, "pros-and-cons"]], "Pros and Cons of Nominal and Structural Subtyping": [[2, "pros-and-cons-of-nominal-and-structural-subtyping"]], "Pros and cons of Row-major vs Column-major order": [[96, "pros-and-cons-of-row-major-vs-column-major-order"]], "Protecting Reference Counts with Locks": [[230, "protecting-reference-counts-with-locks"]], "Pseudocode": [[27, "pseudocode"], [27, "id4"], [29, "pseudocode"], [30, "pseudocode"]], "Publisher Relation": [[97, "ml-lifecycle-032-publisher-relation"]], "Purpose and Behavior": [[9, "purpose-and-behavior"], [9, "id1"]], "Push": [[36, "push"]], "Putting it all Together to form the GPT": [[57, "putting-it-all-together-to-form-the-gpt"]], "PyTorch": [[75, "pytorch"]], "PyTorch\u2019s CosineAnnealingLR vs. Composer\u2019s CosineAnnealingScheduler": [[122, "pytorch-s-cosineannealinglr-vs-composer-s-cosineannealingscheduler"]], "PyTorch\u2019s Event And Profiler": [[112, null]], "Pydantic": [[216, "pydantic"]], "Pydantic And Hydra": [[216, null]], "Pydantic Is All You Need - Jason Liu": [[237, null]], "Pydantic Schema": [[216, "pydantic-schema"]], "Pydra": [[216, "pydra"]], "Python": [[231, null]], "Python Implementation": [[22, "python-implementation"], [23, "python-implementation"]], "Python is Strongly and Dynamically Typed": [[93, "python-is-strongly-and-dynamically-typed"]], "Queries, Keys, and Values": [[57, "queries-keys-and-values"]], "Queries, Keys, and Values in Attention Mechanism": [[57, "queries-keys-and-values-in-attention-mechanism"]], "Query, Key and Values": [[55, "query-key-and-values"]], "Question 10: Birthday Paradox": [[127, "question-10-birthday-paradox"]], "Question 6": [[127, "question-6"]], "Question 9": [[127, "question-9"]], "Questions": [[14, null], [21, null], [38, null], [40, null]], "Questions Asked": [[157, "questions-asked"]], "Queue": [[24, null]], "R-Squared": [[67, "r-squared"]], "RAG System Components": [[221, "rag-system-components"]], "README": [[93, "readme"]], "README, LICENSE and CONTRIBUTING": [[93, "readme-license-and-contributing"]], "Random Initialization": [[52, "random-initialization"]], "Random Variables": [[136, null]], "Random Vectors": [[187, "random-vectors"], [188, null]], "Rank And Low-Rank Decomposition Via Matrix Factorization": [[70, "rank-and-low-rank-decomposition-via-matrix-factorization"]], "Ranking, Detection, Pairwise, Retrieval And Other Metrics": [[102, "ranking-detection-pairwise-retrieval-and-other-metrics"]], "Reading Large Files, Generator vs Iterator": [[212, "reading-large-files-generator-vs-iterator"]], "Reading a Big File into a List": [[212, "reading-a-big-file-into-a-list"]], "Real Analysis": [[207, "real-analysis"]], "Real World Examples": [[145, null]], "Real World Examples of Covariance and Contravariance": [[7, "real-world-examples-of-covariance-and-contravariance"]], "Real-Time Prediction And Computational Resources": [[101, "real-time-prediction-and-computational-resources"]], "Real-Time Serving/Inference (Online with only Batch Features)": [[108, "real-time-serving-inference-online-with-only-batch-features"]], "Real-World Use Case": [[32, "real-world-use-case"]], "Real-time Ingestion (Stream Ingestion)": [[100, "real-time-ingestion-stream-ingestion"]], "Reconstruction": [[62, "reconstruction"]], "Recovering a run": [[103, "recovering-a-run"]], "Recursive Method Overview": [[30, "recursive-method-overview"]], "Reducing Technical Debt": [[93, "reducing-technical-debt"]], "Reducing the Search Space": [[29, "reducing-the-search-space"]], "Reduction": [[58, "reduction"]], "Refactoring with Confidence": [[93, "refactoring-with-confidence"]], "Reference Counting in Python": [[230, "reference-counting-in-python"]], "References": [[2, null], [55, null], [55, "references"], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [57, null], [57, null], [57, null], [57, null], [57, null], [58, null], [69, "references"], [73, "references"], [89, "references"], [93, null], [93, null], [93, null], [122, null], [125, null]], "References And Further Readings": [[70, "references-and-further-readings"], [74, "references-and-further-readings"], [111, "references-and-further-readings"], [112, "references-and-further-readings"], [113, "references-and-further-readings"], [119, "references-and-further-readings"], [120, "references-and-further-readings"], [125, "references-and-further-readings"], [213, "references-and-further-readings"], [215, "references-and-further-readings"], [218, "references-and-further-readings"], [221, "references-and-further-readings"], [224, "references-and-further-readings"], [225, "references-and-further-readings"], [226, "references-and-further-readings"], [227, "references-and-further-readings"], [229, "references-and-further-readings"], [232, "references-and-further-readings"], [234, "references-and-further-readings"], [236, "references-and-further-readings"]], "References and Further Readings": [[2, "references-and-further-readings"], [3, "references-and-further-readings"], [4, "references-and-further-readings"], [5, "references-and-further-readings"], [6, "references-and-further-readings"], [7, "references-and-further-readings"], [8, "references-and-further-readings"], [9, "references-and-further-readings"], [11, "references-and-further-readings"], [12, "references-and-further-readings"], [15, "references-and-further-readings"], [16, "references-and-further-readings"], [17, "references-and-further-readings"], [18, "references-and-further-readings"], [20, "references-and-further-readings"], [27, "references-and-further-readings"], [28, "references-and-further-readings"], [29, "references-and-further-readings"], [30, "references-and-further-readings"], [31, "references-and-further-readings"], [32, "references-and-further-readings"], [33, "references-and-further-readings"], [36, "references-and-further-readings"], [43, "references-and-further-readings"], [44, "references-and-further-readings"], [51, "references-and-further-readings"], [52, "references-and-further-readings"], [56, "references-and-further-readings"], [57, "references-and-further-readings"], [58, "references-and-further-readings"], [59, "references-and-further-readings"], [60, "references-and-further-readings"], [61, "references-and-further-readings"], [62, "references-and-further-readings"], [66, "references-and-further-readings"], [67, "references-and-further-readings"], [78, "references-and-further-readings"], [79, "references-and-further-readings"], [80, "references-and-further-readings"], [81, "references-and-further-readings"], [82, "references-and-further-readings"], [83, "references-and-further-readings"], [84, "references-and-further-readings"], [85, "references-and-further-readings"], [87, "references-and-further-readings"], [88, "references-and-further-readings"], [91, "references-and-further-readings"], [92, "references-and-further-readings"], [93, "references-and-further-readings"], [93, "id12"], [93, "id13"], [94, "references-and-further-readings"], [95, "references-and-further-readings"], [96, "references-and-further-readings"], [97, "references-and-further-readings"], [98, "references-and-further-readings"], [99, "references-and-further-readings"], [100, "references-and-further-readings"], [101, "references-and-further-readings"], [103, "references-and-further-readings"], [104, "references-and-further-readings"], [105, "references-and-further-readings"], [106, "references-and-further-readings"], [108, "references-and-further-readings"], [109, "references-and-further-readings"], [114, "references-and-further-readings"], [115, "references-and-further-readings"], [116, "references-and-further-readings"], [117, "references-and-further-readings"], [122, "references-and-further-readings"], [123, "references-and-further-readings"], [126, "references-and-further-readings"], [140, "references-and-further-readings"], [141, "references-and-further-readings"], [142, "references-and-further-readings"], [143, "references-and-further-readings"], [162, "references-and-further-readings"], [163, "references-and-further-readings"], [164, "references-and-further-readings"], [165, "references-and-further-readings"], [166, "references-and-further-readings"], [167, "references-and-further-readings"], [168, "references-and-further-readings"], [169, "references-and-further-readings"], [170, "references-and-further-readings"], [172, "references-and-further-readings"], [173, "references-and-further-readings"], [210, "references-and-further-readings"], [212, "references-and-further-readings"], [216, "references-and-further-readings"], [217, "references-and-further-readings"], [220, "references-and-further-readings"], [230, "references-and-further-readings"]], "References, Resources and Roadmap": [[77, null]], "Reflexivity, Transivity and Antisymmetry": [[4, "reflexivity-transivity-and-antisymmetry"]], "Registry": [[225, null]], "Regression": [[102, "regression"]], "Relation of MFU and TFLOPS": [[117, "relation-of-mfu-and-tflops"]], "Relational Model": [[97, "relational-model"]], "Relationship to Business Objectives": [[95, "relationship-to-business-objectives"]], "Release": [[93, "release"]], "Release and Versioning": [[93, "release-and-versioning"]], "Remove Duplicates from Sorted Array": [[44, null]], "Removing Duplicates from a Sorted Array": [[47, "removing-duplicates-from-a-sorted-array"]], "Repeated Substitution": [[27, "repeated-substitution"]], "Representing Derivative of Softmax as a Jacobian Matrix": [[123, "representing-derivative-of-softmax-as-a-jacobian-matrix"]], "Reproducibility": [[57, "reproducibility"], [58, "reproducibility"], [70, "reproducibility"], [103, "reproducibility"], [118, "reproducibility"]], "Residual Connection": [[57, "residual-connection"]], "Resolution": [[235, "resolution"], [238, "resolution"]], "Retrieve All Methods of a Class": [[116, "retrieve-all-methods-of-a-class"]], "Reverse String": [[37, null]], "Reverse String using Stack": [[34, "reverse-string-using-stack"]], "Row Wise Interpretation": [[84, "row-wise-interpretation"]], "Row and Columnar Formats": [[96, "row-and-columnar-formats"]], "Row-major order": [[96, "row-major-order"]], "Running Core": [[226, "running-core"]], "Running Example": [[52, "running-example"]], "Runtime Behavior": [[8, "runtime-behavior"]], "SLURM Status": [[89, "slurm-status"]], "Sales Data and Probabilities": [[30, "sales-data-and-probabilities"]], "Sample Average": [[205, "sample-average"]], "Sample Complexity": [[65, "sample-complexity"]], "Sample Run": [[89, "sample-run"]], "Sample Space \\mathbf{\\Omega}": [[129, "sample-space-mathbf-omega"]], "Sampling": [[100, "sampling"]], "Sampling from the Softmax Distribution": [[123, "sampling-from-the-softmax-distribution"]], "Sanity Check": [[61, "sanity-check"], [74, "sanity-check"]], "Sanity Check with Palm Paper\u2019s FLOPs Calculation": [[117, "sanity-check-with-palm-paper-s-flops-calculation"]], "Satisfies Narrowing Values, Widening Functions": [[4, "satisfies-narrowing-values-widening-functions"]], "Saturation": [[93, "saturation"]], "Sauer\u2019s Lemma and Bounding the Growth Function": [[65, "sauers-lemma-and-bounding-the-growth-function"]], "Scalar projections": [[84, "scalar-projections"]], "Scalar-Product Equation of a Plane": [[79, "scalar-product-equation-of-a-plane"]], "Scalar-Vector Multiplication": [[82, "scalar-vector-multiplication"]], "Scale": [[94, "scale"]], "Scaled Dot-Product Attention": [[57, "scaled-dot-product-attention"]], "Scaling Down the Dot Product of Query and Key Vectors": [[57, "scaling-down-the-dot-product-of-query-and-key-vectors"]], "Scaling and Shifting Random Variables": [[172, "scaling-and-shifting-random-variables"]], "Schema 1. Basic Schema": [[237, "schema-1-basic-schema"]], "Schema 2. User Schema With Nested Properties": [[237, "schema-2-user-schema-with-nested-properties"]], "Scope of Generic Methods and Functions": [[5, "scope-of-generic-methods-and-functions"]], "Search Algorithm Implementation": [[30, "search-algorithm-implementation"]], "Section 2. Approach": [[56, "section-2-approach"]], "See Also": [[93, null], [97, null], [102, null], [102, null], [105, null], [108, null], [166, null], [215, null]], "Seeding": [[103, "seeding"]], "Self-Attention": [[57, "self-attention"]], "Self-Attention Enables Parallelism": [[57, "self-attention-enables-parallelism"]], "Semantic Representation": [[55, "semantic-representation"], [57, "semantic-representation"]], "Sentinel Types": [[9, null]], "Sequential Operations": [[57, "sequential-operations"]], "Service Locator And Dependency Injection": [[218, "service-locator-and-dependency-injection"]], "Serving Strategies": [[108, "serving-strategies"]], "Set CUDA Device": [[88, "set-cuda-device"]], "Set Over List For Frequent Membership Tests": [[238, null]], "Set Up Main Directory in Integrated Development Environment (IDE)": [[93, "set-up-main-directory-in-integrated-development-environment-ide"]], "Setting Up": [[71, "setting-up"], [88, "setting-up"], [119, "setting-up"], [120, "setting-up"]], "Setting Up Identity and Access Management (IAM) Role": [[89, "setting-up-identity-and-access-management-iam-role"]], "Setting Up Pre-Commit": [[93, "setting-up-pre-commit"]], "Setting Up a New Repository": [[93, "setting-up-a-new-repository"]], "Setting up a Batch Serving System": [[108, "setting-up-a-batch-serving-system"]], "Setup Python Environment": [[89, "setup-python-environment"]], "Shadow Deployment/Mirrored Deployment": [[93, "shadow-deployment-mirrored-deployment"]], "Shared File System": [[89, "shared-file-system"]], "Sharpening and Dampening the Softmax Distribution": [[123, "sharpening-and-dampening-the-softmax-distribution"]], "Shuffling and Discrete Uniform Sampling": [[57, "shuffling-and-discrete-uniform-sampling"]], "Sign of the Dot Product is Determined by the Angle in between Two Vectors": [[84, "sign-of-the-dot-product-is-determined-by-the-angle-in-between-two-vectors"]], "Simple Bi-Modal Distribution": [[52, "simple-bi-modal-distribution"]], "Simple Binary Classification Example": [[58, "simple-binary-classification-example"]], "Simple Form": [[73, "simple-form"]], "Simple Styling Practices": [[93, "simple-styling-practices"]], "Simplified Probit Model": [[179, "simplified-probit-model"]], "Single Dispatch": [[8, "single-dispatch"]], "Singleton": [[225, "singleton"], [226, null], [236, "singleton"]], "Singularity": [[89, "singularity"]], "Size Limitation": [[11, "size-limitation"]], "Size of the Image": [[62, "size-of-the-image"]], "Skewness": [[170, "skewness"]], "Skewness and Kurtosis": [[170, null]], "Sliding Window": [[42, null], [46, null]], "Slurm Commands": [[89, "slurm-commands"]], "Smoothness (Chaoticity)": [[101, "smoothness-chaoticity"]], "Softmax": [[57, "softmax"]], "Softmax Function": [[123, "softmax-function"]], "Softmax Function via Exponential Family": [[123, "softmax-function-via-exponential-family"]], "Softmax Head": [[57, "softmax-head"]], "Softmax Is Not Invariant Under Scaling": [[123, "softmax-is-not-invariant-under-scaling"]], "Softmax Is Smooth, Continuous and Differentiable": [[123, "softmax-is-smooth-continuous-and-differentiable"]], "Softmax Is Translation Invariance": [[123, "softmax-is-translation-invariance"]], "Softmax Layer": [[55, "softmax-layer"]], "Softmax Obeys The Three Axioms of Probability (Kolmogorov Axioms)": [[123, "softmax-obeys-the-three-axioms-of-probability-kolmogorov-axioms"]], "Softmax Preserves Order (Monotonicity)": [[123, "softmax-preserves-order-monotonicity"]], "Softmax Preserves Order, Is Translation Invariant But Not Invariant Under Scaling.": [[123, null]], "Softmax as a Vector Function": [[123, "softmax-as-a-vector-function"]], "Software Engineering": [[77, null]], "Solution": [[19, "solution"]], "Solution (Categorize by Count)": [[20, "solution-categorize-by-count"]], "Solution (Categorize by Sorted String)": [[20, "solution-categorize-by-sorted-string"]], "Solution (Two-Pointers Moving In Different Directions)": [[43, "solution-two-pointers-moving-in-different-directions"]], "Solution (Two-Pointers Moving In The Same Direction)": [[44, "solution-two-pointers-moving-in-the-same-direction"]], "Solution (Using Two Stacks)": [[36, "solution-using-two-stacks"]], "Solution 1 (Not Optimal)": [[46, "solution-1-not-optimal"]], "Solution 2 (Optimal)": [[46, "solution-2-optimal"]], "Solution Intuition": [[29, "solution-intuition"]], "Solution Space in 2D (Lines)": [[79, "solution-space-in-2d-lines"]], "Solution Space in 3D (Planes)": [[79, "solution-space-in-3d-planes"]], "Solution: Binary Search": [[29, "solution-binary-search"]], "Solving for 1-Dimensional Case": [[67, "solving-for-1-dimensional-case"]], "Solving for D-Dimensional Case": [[67, "solving-for-d-dimensional-case"]], "Some Abuse of Notations": [[65, "some-abuse-of-notations"]], "Some Common Metrics to Track in Experiment Tracking": [[103, "ml-lifecycle-experiment-tracking-metrics"]], "Some Derivatives Tips So Far\u2026": [[123, null]], "Some Intuition": [[52, "some-intuition"], [52, "id17"], [52, "id20"], [210, "some-intuition"]], "Some Key Stages In Model Development and Training": [[105, "ml-lifecycle-model-development-training-some-key-stages"]], "Some Motivation, Simple Length Comparison": [[6, "some-motivation-simple-length-comparison"]], "Some Motivation, The Problem With Unconstrained Type Variable": [[6, "some-motivation-the-problem-with-unconstrained-type-variable"]], "Some Practical Considerations for FLOPs in Deep Learning": [[117, "some-practical-considerations-for-flops-in-deep-learning"]], "Some Useful Commands": [[89, "some-useful-commands"]], "Some intuition on the difference between a-priori and a-posteriori:": [[65, "some-intuition-on-the-difference-between-a-priori-and-a-posteriori"]], "Space Complexity": [[11, "space-complexity"], [13, "space-complexity"], [13, "two-sum-space-complexity-nested-loops"], [17, "space-complexity"], [19, "space-complexity"], [19, "two-sum-space-complexity-hash-map"], [20, "space-complexity"], [20, "id6"], [22, "space-complexity"], [23, "space-complexity"], [26, "space-complexity"], [27, "space-complexity"], [27, "id9"], [29, "space-complexity"], [30, "space-complexity"], [32, "space-complexity"], [34, "space-complexity"], [35, "space-complexity"], [36, "space-complexity"], [36, "id3"], [37, "space-complexity"], [43, "space-complexity"], [46, "space-complexity"], [229, "space-complexity"], [238, "space-complexity"]], "Space Complexity of Dictionary": [[17, "dict-space-complexity"]], "Space Complexity of K-Means": [[60, "space-complexity-kmeans"]], "Space Complexity of List": [[11, "list-space-complexity"]], "Space Complexity of Naive Bayes": [[73, "space-complexity-naive-bayes"]], "Space Complexity of Pop Operation": [[36, "pop-space-complexity"]], "Space Complexity of Push Operation": [[36, "push-space-complexity"]], "Space Complexity of Two-Sum Sorted Function Using Two-Pointer Approach": [[43, "two-sum-sorted-space-complexity-two-pointer"]], "Space-Time Tradeoff": [[13, "space-time-tradeoff"], [19, "space-time-tradeoff"], [29, "space-time-tradeoff"], [43, "space-time-tradeoff"]], "Space-Time Tradeoff with Arrays": [[11, "space-time-tradeoff-with-arrays"]], "Split to Train-Valid-Test": [[58, "split-to-train-valid-test"]], "Stack": [[33, null]], "Stack List Dunder Methods": [[32, "stack-list-dunder-methods"]], "Stack List Operations": [[32, "stack-list-operations"]], "Stack List Time Complexity": [[32, "stack-list-time-complexity"]], "Stack with List as Underlying Data Structure": [[32, "stack-with-list-as-underlying-data-structure"]], "Stage 1. Problem Formulation": [[94, null]], "Stage 10. Continuous Integration, Deployment, Learning and Training (DevOps, DataOps, MLOps)": [[93, null]], "Stage 2. Project Scoping And Framing The Problem": [[95, null]], "Stage 3. Data Pipeline (Data Engineering and DataOps)": [[99, null]], "Stage 3.1. Data Source and Formats": [[96, null]], "Stage 3.2. Data Model and Storage": [[97, null]], "Stage 3.3. Extract, Transform, Load (ETL)": [[98, null]], "Stage 4. Data Extraction (MLOps), Data Analysis (Data Science), Data Preparation (Data Science)": [[100, null]], "Stage 4.1. Data Extraction (MLOps)": [[100, "stage-4-1-data-extraction-mlops"]], "Stage 4.2. Data Analysis (Data Science)": [[100, "stage-4-2-data-analysis-data-science"]], "Stage 4.3. Data Preparation (MLOps)": [[100, "stage-4-3-data-preparation-mlops"]], "Stage 5. Model Development and Training (MLOps)": [[105, null]], "Stage 5.1. Model Selection": [[101, null]], "Stage 5.2. Metric Selection": [[102, null]], "Stage 5.3. Experiment Tracking And Versioning": [[103, null]], "Stage 5.4. Model Testing": [[104, null]], "Stage 6. Model Evaluation (MLOps)": [[106, null]], "Stage 7. Model Validation, Registry and Pushing Model to Production (MLOps)": [[107, null]], "Stage 8. Model Serving (MLOps)": [[108, null]], "Stage 9. Model Monitoring (MLOps)": [[109, null]], "Staging/Experiment/Development": [[99, "staging-experiment-development"]], "Standard Cases": [[29, "standard-cases"]], "Standard Deviation": [[141, "standard-deviation"]], "Standard Error": [[67, "standard-error"]], "Standard Gaussian Distribution": [[169, "standard-gaussian-distribution"]], "Standard Test Cases": [[27, "standard-test-cases"]], "Starting Small": [[125, "starting-small"]], "State": [[58, "state"]], "State And Metadata Management": [[217, null]], "State Management": [[217, "state-management"]], "Static Type Checking": [[3, "static-type-checking"]], "Step 0. Project Scope": [[98, "step-0-project-scope"]], "Step 1.": [[62, "step-1"]], "Step 1. Corpus": [[55, null]], "Step 1. Data Extraction": [[99, "step-1-data-extraction"]], "Step 1. Extract (Data Extraction and Defining the Data Source)": [[98, "step-1-extract-data-extraction-and-defining-the-data-source"]], "Step 1. Triggering the Production Deployment Pipeline": [[99, "step-1-triggering-the-production-deployment-pipeline"]], "Step 10. Deploy the DAG (Staging Environment)": [[99, "step-10-deploy-the-dag-staging-environment"]], "Step 10. Layer Normalization Before Projection": [[55, null]], "Step 10. Position-wise Feed-Forward Network": [[55, null]], "Step 11. Residual Connection": [[55, null]], "Step 11. Trigger the DAG as part of a CI/CD pipeline": [[99, "step-11-trigger-the-dag-as-part-of-a-ci-cd-pipeline"]], "Step 1: Derivative of \\mathcal{L} with respect to \\mathbf{z}": [[123, "step-1-derivative-of-mathcal-l-with-respect-to-mathbf-z"]], "Step 1: Identify Integration Points": [[93, "step-1-identify-integration-points"]], "Step 2.": [[62, "step-2"]], "Step 2. CI/CD: Deploy Image to Production Environment": [[99, "step-2-ci-cd-deploy-image-to-production-environment"]], "Step 2. Data Loading to Staging Lake": [[99, "step-2-data-loading-to-staging-lake"]], "Step 2. Load (Data Ingestion and Destination)": [[98, "step-2-load-data-ingestion-and-destination"]], "Step 2. Vocabulary and Tokenization": [[55, null]], "Step 2: Derivative of \\mathbf{z} with respect to \\boldsymbol{\\theta}": [[123, "step-2-derivative-of-mathbf-z-with-respect-to-boldsymbol-theta"]], "Step 2: Design Integration Tests": [[93, "step-2-design-integration-tests"]], "Step 3.": [[62, "step-3"]], "Step 3. Loading Data to Staging Warehouse": [[99, "step-3-loading-data-to-staging-warehouse"]], "Step 3. One Hot Encoding": [[55, null]], "Step 3. Transform (Data Processing and Transformation)": [[98, "step-3-transform-data-processing-and-transformation"]], "Step 3: Derivative of \\mathcal{L} with respect to \\boldsymbol{\\theta}": [[123, "step-3-derivative-of-mathcal-l-with-respect-to-boldsymbol-theta"]], "Step 4. Data Validation After Extraction and Load": [[99, "step-4-data-validation-after-extraction-and-load"]], "Step 4. Token Embedding": [[55, null]], "Step 5. Data Transformation": [[99, "step-5-data-transformation"]], "Step 5. Positional Embedding": [[55, null]], "Step 6. Data Validation After Transformation": [[99, "step-6-data-validation-after-transformation"]], "Step 6. Pre-Layer Normalization For Masked Multi-Head Attention": [[55, null]], "Step 7. Load Transformed Data to Staging GCS and BigQuery": [[99, "step-7-load-transformed-data-to-staging-gcs-and-bigquery"]], "Step 7. Masked Multi-Head Self-Attention": [[55, null]], "Step 7.1. Linear Projections, Query, Key, and Value Matrices": [[55, null]], "Step 7.2. Reshaping and Transposing Query, Key, and Value Matrices": [[55, null]], "Step 7.3. Scaled Dot-Product Attention and Masking": [[55, null]], "Step 7.4. Concatenation and Projection": [[55, null]], "Step 8. (Optional) Writing a DAG to Automate the Pipeline": [[99, "step-8-optional-writing-a-dag-to-automate-the-pipeline"]], "Step 8. Residual Connection": [[55, null]], "Step 9. Containerize the DAG": [[99, "step-9-containerize-the-dag"]], "Step 9. Pre-Layer Normalization For Position-wise Feed-Forward Network": [[55, null]], "Step-By-Step Code Implementation": [[62, "step-by-step-code-implementation"]], "Steps to Compress an Image": [[62, "steps-to-compress-an-image"]], "Steps to Identify and Scope the Data Source": [[96, "steps-to-identify-and-scope-the-data-source"]], "Stop EC2 Instances": [[89, "stop-ec2-instances"]], "Strategy": [[227, null]], "Streaming Inference": [[108, "streaming-inference"]], "String-to-Index Mapping": [[55, "string-to-index-mapping"]], "Strong Law of Large Numbers": [[205, "strong-law-of-large-numbers"]], "Structural Subtyping": [[2, "structural-subtyping"]], "Structured Config": [[216, "structured-config"]], "Structured vs Unstructured Data": [[97, "structured-vs-unstructured-data"]], "Stubs": [[93, "stubs"]], "Stubs and Mocks": [[93, "stubs-and-mocks"]], "Sturges\u2019 Rule and Cross Validation": [[138, "sturges-rule-and-cross-validation"]], "Styling, Formatting, and Linting": [[93, "styling-formatting-and-linting"]], "Subsequent Decoder Blocks (\\ell > 1)": [[55, "subsequent-decoder-blocks-ell-1"]], "Subset of Problem": [[35, "subset-of-problem"]], "Subsumption": [[4, null], [4, "id1"]], "Subtypes": [[2, null]], "Sum of Common Distribution": [[185, "sum-of-common-distribution"]], "Sum of Common Distributions": [[185, "table-sum-of-common-distributions"]], "Sum of Common Distributions via MGFs": [[200, "sum-of-common-distributions-via-mgfs"]], "Sum of Independent Random Variables": [[200, "sum-of-independent-random-variables"]], "Sum of Random Variables": [[186, null]], "Summary": [[30, "summary"], [52, "summary"], [75, "summary"], [76, "summary"], [78, "summary"], [99, "summary"], [135, null], [136, "summary"]], "Summary:": [[215, "summary"]], "Summing to one": [[125, "summing-to-one"]], "Super important": [[157, "super-important"]], "Supervised Fine-Tuning": [[56, "supervised-fine-tuning"]], "Symptom and Cause": [[93, "devops-ci-concept-monitoring-observability"]], "Synchronize CUDA To Time CUDA Operations": [[110, null]], "System Health": [[109, "system-health"]], "System Testing": [[93, "system-testing"]], "System of Linear Equations (Algebraic Form)": [[79, "system-of-linear-equations-algebraic-form"]], "System of Linear Equations (Geometric Interpretation)": [[79, "system-of-linear-equations-geometric-interpretation"]], "Systems of Linear Equations": [[79, null]], "T-Distributions": [[67, "t-distributions"]], "T-Statistics": [[67, "t-statistics"]], "Table of Contents": [[10, "table-of-contents"], [12, "table-of-contents"], [14, "table-of-contents"], [15, "table-of-contents"], [18, "table-of-contents"], [21, "table-of-contents"], [24, "table-of-contents"], [28, "table-of-contents"], [31, "table-of-contents"], [33, "table-of-contents"], [38, "table-of-contents"], [39, "table-of-contents"], [40, "table-of-contents"], [42, "table-of-contents"], [45, "table-of-contents"], [54, "table-of-contents"], [59, "table-of-contents"], [66, "table-of-contents"], [80, "table-of-contents"], [85, "table-of-contents"], [91, "table-of-contents"], [92, "table-of-contents"], [99, "table-of-contents"], [105, "table-of-contents"], [115, "table-of-contents"], [121, "table-of-contents"], [128, "table-of-contents"], [134, "table-of-contents"], [144, "table-of-contents"], [148, "table-of-contents"], [151, "table-of-contents"], [153, "table-of-contents"], [156, "table-of-contents"], [160, "table-of-contents"], [174, "table-of-contents"], [196, "table-of-contents"], [208, "table-of-contents"], [209, "table-of-contents"], [214, "table-of-contents"], [219, "table-of-contents"], [223, "table-of-contents"], [231, "table-of-contents"]], "Table of Notations": [[55, "table-of-notations"]], "Table of Steps to Identify and Scope the Data Source": [[96, "ml-lifecycle-03-steps-identify-scope-data-source"]], "Target Drift": [[109, "target-drift"]], "Target Padding Mask": [[58, "target-padding-mask"]], "Target Variable is Normally Distributed": [[67, "target-variable-is-normally-distributed"]], "Targets (Categorical Distribution)": [[73, "targets-categorical-distribution"]], "Task Specific Fine-Tuning": [[70, "task-specific-fine-tuning"]], "Technical Debt is Beyond Bad Code": [[93, "technical-debt-is-beyond-bad-code"]], "Techniques for Integration Testing": [[93, "techniques-for-integration-testing"]], "Temperature": [[123, "temperature"]], "Template": [[98, "template"], [98, "id7"], [98, "id11"]], "Terminology (Posterior and Conditional Probability)": [[133, "terminology-posterior-and-conditional-probability"]], "Test": [[46, "test"]], "Test Cases": [[19, "test-cases"], [27, "test-cases"], [29, "test-cases"], [36, "test-cases"], [43, "test-cases"]], "Testing Data": [[65, "testing-data"]], "Testing In Production": [[93, "testing-in-production"]], "Tests": [[20, "tests"], [20, "id4"], [27, "tests"], [27, "id7"], [29, "tests"], [30, "tests"], [30, "id3"], [41, "tests"], [43, "tests"], [44, "tests"], [93, "tests"]], "Text vs Binary Formats": [[96, "text-vs-binary-formats"]], "The Autoregressive Self-Supervised Learning Paradigm": [[56, "the-autoregressive-self-supervised-learning-paradigm"], [70, "the-autoregressive-self-supervised-learning-paradigm"]], "The Categorical Distribution": [[52, "the-categorical-distribution"]], "The Cauchy-Schwarz Inequality": [[202, "the-cauchy-schwarz-inequality"]], "The Chain Rule (Matrix Calculus)": [[52, "the-chain-rule-matrix-calculus"]], "The Compliant And The Violation": [[227, "the-compliant-and-the-violation"]], "The Concept of Generative Pre-trained Transformers (GPT)": [[56, null]], "The Conditional Distribution of y Given \\mathbf{x} is Normally Distributed": [[67, "the-conditional-distribution-of-y-given-mathbf-x-is-normally-distributed"]], "The Connection of Mutability and Variance": [[7, "the-connection-of-mutability-and-variance"]], "The Context, Strategy, Concrete Strategy, Business Logic, Client, And Factory": [[227, "the-context-strategy-concrete-strategy-business-logic-client-and-factory"]], "The Counting Principles": [[124, "the-counting-principles"]], "The Covariances \\boldsymbol{\\Sigma}": [[52, "the-covariances-boldsymbol-sigma"]], "The Data Points \\boldsymbol{x}^{(n)} is the Likelihood": [[52, "the-data-points-boldsymbol-x-n-is-the-likelihood"]], "The Definitions": [[7, "the-definitions"]], "The Distinction Between Finite and Unbounded Feature Space": [[108, "the-distinction-between-finite-and-unbounded-feature-space"]], "The ETL/ELT Framework": [[98, "the-etl-elt-framework"]], "The Empirical vs Theoretical Distribution Setup": [[157, "the-empirical-vs-theoretical-distribution-setup"]], "The Estimator Function is Smooth with Respect to the Parameters": [[56, "the-estimator-function-is-smooth-with-respect-to-the-parameters"]], "The Evolution of Data Engineering (Don\u2019t Quote Me On This!)": [[98, "the-evolution-of-data-engineering-don-t-quote-me-on-this"]], "The Expectation Step (Posterior Inference and Responsibilities)": [[52, "the-expectation-step-posterior-inference-and-responsibilities"]], "The Expectation-Maximization (EM) Algorithm": [[52, "the-expectation-maximization-em-algorithm"]], "The Four Golden Signals": [[93, "the-four-golden-signals"]], "The Full Problem": [[35, "the-full-problem"]], "The Fundamental Theorem of Calculus": [[125, "the-fundamental-theorem-of-calculus"]], "The Gaussian Mixture Model": [[52, "the-gaussian-mixture-model"], [52, "id9"]], "The Gaussian Mixture Model and the Marginal Distribution": [[52, "the-gaussian-mixture-model-and-the-marginal-distribution"]], "The Generalization Gap": [[65, "the-generalization-gap"]], "The Generative Process": [[52, "the-generative-process"]], "The Geometry of Multivariate Gaussians": [[192, null]], "The Global Interpreter Lock (GIL) in Python": [[230, "the-global-interpreter-lock-gil-in-python"]], "The Growth Function": [[65, "the-growth-function"]], "The Hypothesis Space": [[60, "the-hypothesis-space"], [67, "the-hypothesis-space"]], "The Implementation of Generative Pre-trained Transformers (GPT)": [[57, null]], "The Importance of Generic Types": [[32, "the-importance-of-generic-types"]], "The Importance of a Field in Vector Spaces and Deep Learning": [[78, "the-importance-of-a-field-in-vector-spaces-and-deep-learning"]], "The Iterator Protocol": [[233, null]], "The Jacobian Matrix of Softmax": [[123, "the-jacobian-matrix-of-softmax"]], "The Latent Clusters": [[52, "the-latent-clusters"]], "The Latent Variable Perspective": [[52, "the-latent-variable-perspective"], [52, "id5"]], "The Law of Large Numbers": [[65, "the-law-of-large-numbers"]], "The Law of Total Expectation": [[182, "the-law-of-total-expectation"]], "The Law of Total Probability": [[135, "the-law-of-total-probability"]], "The Lifecycle of an AIOps System": [[92, null]], "The Likelihood of One Single Data Point \\boldsymbol{x}^{(n)}": [[52, "the-likelihood-of-one-single-data-point-boldsymbol-x-n"]], "The Likelihood of the Entire Dataset \\boldsymbol{X}": [[52, "the-likelihood-of-the-entire-dataset-boldsymbol-x"]], "The Log-Likelihood Function": [[210, "the-log-likelihood-function"]], "The Loss Function": [[67, "the-loss-function"]], "The Loss/Cost/Objective Function": [[60, "the-loss-cost-objective-function"]], "The Low-Rank Adaptation (LoRA) Algorithm": [[70, "the-low-rank-adaptation-lora-algorithm"]], "The Marginal Distribution": [[52, "the-marginal-distribution"]], "The Maximization Step (Parameter Estimation)": [[52, "the-maximization-step-parameter-estimation"]], "The Means \\boldsymbol{\\mu}": [[52, "the-means-boldsymbol-mu"]], "The Mixture Model Perspective": [[52, "the-mixture-model-perspective"], [52, "id3"]], "The Mixture Weights \\boldsymbol{\\pi}": [[52, "the-mixture-weights-boldsymbol-pi"]], "The Model, Loss and Data Paradigm": [[105, "the-model-loss-and-data-paradigm"]], "The Motivation": [[5, "the-motivation"], [7, "the-motivation"]], "The Multiplication Principle (MP)": [[124, "the-multiplication-principle-mp"]], "The Naive Bayes Assumptions": [[73, "the-naive-bayes-assumptions"]], "The Naive Bayes Classifier": [[76, "the-naive-bayes-classifier"]], "The Naive Bayes Form": [[73, "the-naive-bayes-form"]], "The Necessary Conditions to Minimize the Objective Function": [[60, "the-necessary-conditions-to-minimize-the-objective-function"]], "The Normal Distribution, Gaussian Noise and the Mean Squared Error": [[67, "the-normal-distribution-gaussian-noise-and-the-mean-squared-error"]], "The Notion of Experiments and Defining the Probability Space": [[129, "the-notion-of-experiments-and-defining-the-probability-space"]], "The Notion of Similarity and Closeness": [[60, "the-notion-of-similarity-and-closeness"]], "The PEP8 Standard": [[93, "the-pep8-standard"]], "The PMF (Ideal Histogram)": [[142, "the-pmf-ideal-histogram"], [147, "the-pmf-ideal-histogram"]], "The Pandora Box of Confidence Intervals, P-values and Hypothesis Testing": [[67, "the-pandora-box-of-confidence-intervals-p-values-and-hypothesis-testing"]], "The Perpectives": [[52, "the-perpectives"]], "The Posterior Distribution": [[52, "the-posterior-distribution"]], "The Precondition for Binary Search": [[29, "the-precondition-for-binary-search"]], "The Prior": [[75, "the-prior"]], "The Prior Distribution of \\boldsymbol{z}": [[52, "the-prior-distribution-of-boldsymbol-z"]], "The Probabilistic Model for Classification": [[76, "the-probabilistic-model-for-classification"]], "The Problem": [[157, "the-problem"]], "The Problem: Synchronous Execution In Single Process And Single Thread": [[215, "the-problem-synchronous-execution-in-single-process-and-single-thread"]], "The Properties of Covariance Matrix": [[194, "the-properties-of-covariance-matrix"]], "The Queue Abstract Data Type": [[22, "the-queue-abstract-data-type"], [23, "the-queue-abstract-data-type"]], "The Recursive Counterpart": [[30, "the-recursive-counterpart"]], "The Responsibilities": [[52, "the-responsibilities"]], "The Setup": [[142, "the-setup"], [147, "the-setup"], [158, "the-setup"]], "The Singleton Pattern in Detail": [[226, "the-singleton-pattern-in-detail"]], "The Sliding Window Technique": [[46, "the-sliding-window-technique"]], "The Space-Time Tradeoff": [[17, "the-space-time-tradeoff"]], "The Testing Pyramid": [[93, "the-testing-pyramid"]], "The Three Axioms of Probability (Kolmogorov Axioms)": [[130, "the-three-axioms-of-probability-kolmogorov-axioms"]], "The Training Phase": [[55, "the-training-phase"]], "The Two Pointers Technique": [[47, "the-two-pointers-technique"]], "The Update Weights Of Fine-Tuning Has A Low Intrinsic Rank": [[70, "the-update-weights-of-fine-tuning-has-a-low-intrinsic-rank"]], "The VC Dimension": [[65, "the-vc-dimension"]], "The Vectorized Parameters": [[52, "the-vectorized-parameters"]], "The What and The Why": [[93, "the-what-and-the-why"]], "The ticket model and what is a r.v": [[157, "the-ticket-model-and-what-is-a-r-v"]], "The yield Statement": [[212, "the-yield-statement"]], "Theoretical Best Space Complexity": [[13, "theoretical-best-space-complexity"], [19, "theoretical-best-space-complexity"], [29, "theoretical-best-space-complexity"], [43, "theoretical-best-space-complexity"]], "Theoretical Best Time Complexity": [[13, "theoretical-best-time-complexity"], [19, "theoretical-best-time-complexity"], [29, "theoretical-best-time-complexity"], [43, "theoretical-best-time-complexity"]], "Theoretical Best Time/Space Complexity and Space-Time Tradeoff": [[29, "theoretical-best-time-space-complexity-and-space-time-tradeoff"]], "Theoretical FLOPs in Transformer Models": [[117, "theoretical-flops-in-transformer-models"]], "Theoretical Foundations and Practical Implications": [[29, "theoretical-foundations-and-practical-implications"]], "Theoretical Model FLOPs Utilization (MFU) Indicates a Rough Benchmark of Efficiency": [[117, "theoretical-model-flops-utilization-mfu-indicates-a-rough-benchmark-of-efficiency"]], "Thread": [[215, "thread"]], "Thread ID": [[215, "thread-id"]], "Thread Safety": [[213, null]], "Thread Safety Considerations": [[226, "thread-safety-considerations"]], "Threading": [[215, "threading"]], "Threads and Race Conditions": [[230, "threads-and-race-conditions"]], "Three Predictors": [[75, "three-predictors"]], "Tikz Code": [[30, null], [32, null]], "Time Complexity": [[11, "time-complexity"], [13, "time-complexity"], [17, "time-complexity"], [19, "time-complexity"], [20, "time-complexity"], [20, "id5"], [22, "time-complexity"], [23, "time-complexity"], [23, "dequeue"], [26, "time-complexity"], [27, "time-complexity"], [27, "id8"], [29, "time-complexity"], [30, "time-complexity"], [32, "time-complexity"], [34, "time-complexity"], [34, "stack"], [35, "time-complexity"], [36, "time-complexity"], [36, "id2"], [37, "time-complexity"], [43, "time-complexity"], [46, "time-complexity"], [67, "time-complexity"], [229, "time-complexity"]], "Time Complexity Table": [[30, "time-complexity-table"], [30, "id4"]], "Time Complexity Using Big O Notation \\mathcal{O}(g(N))": [[30, "time-complexity-using-big-o-notation-mathcal-o-g-n"]], "Time Complexity of Dictionary Operations": [[17, "dict-time-complexity"]], "Time Complexity of K-Means": [[60, "time-complexity-kmeans"]], "Time Complexity of Linear Search": [[30, "linear-search-time-complexity-linear-search-iterative"]], "Time Complexity of Linear Search (Recursive)": [[30, "linear-search-time-complexity-recursive"]], "Time Complexity of List Operations": [[11, "list-time-complexity"]], "Time Complexity of Naive Bayes": [[73, "time-complexity-naive-bayes"]], "Time Complexity of Pop Operation": [[36, "pop-time-complexity"]], "Time Complexity of Push Operation": [[36, "push-time-complexity"]], "Time Complexity of Queue Implemented using List": [[22, "queue-list-time-complexity"]], "Time Complexity of Two-Sum Function Using Hash Map": [[19, "two-sum-time-complexity-hash-map"]], "Time Complexity of Two-Sum Function Using Nested Loops": [[13, "two-sum-time-complexity-nested-loops"]], "Time Complexity of Two-Sum Sorted Function Using Two-Pointer Approach": [[43, "two-sum-167-two-sum-ii-input-array-is-sorted-two-pointers"]], "Time Complexity: Inefficient Membership Testing": [[238, "time-complexity-inefficient-membership-testing"]], "Time Efficiency": [[212, "time-efficiency"]], "Time and Space Complexity": [[60, "time-and-space-complexity"], [73, "time-and-space-complexity"]], "Timeit Profiler": [[111, "timeit-profiler"]], "Token Embedding and Positional Encoding": [[55, "token-embedding-and-positional-encoding"]], "Token Embedding and Vector Representation Process": [[57, "token-embedding-and-vector-representation-process"]], "Token Embeddings": [[57, "token-embeddings"]], "Token to Index, and Index to Token Mappings": [[55, "token-to-index-and-index-to-token-mappings"]], "Tokenization": [[58, "tokenization"]], "Tokenization and Vocabulary": [[57, "tokenization-and-vocabulary"]], "Tokenizer": [[119, "tokenizer"]], "Tools": [[93, "tools"], [93, "id11"]], "Top-Down Testing": [[93, "top-down-testing"]], "Torch Cuda Event": [[112, "torch-cuda-event"]], "Torch Profiler": [[112, "torch-profiler"]], "Total Space": [[13, "total-space"], [19, "total-space"], [43, "total-space"]], "Total Space Complexity": [[20, "total-space-complexity"], [20, "id9"], [27, "total-space-complexity"], [27, "id12"], [29, "total-space-complexity"], [30, "total-space-complexity"]], "Total Trainable Parameters": [[117, "total-trainable-parameters"]], "Trace": [[112, "trace"]], "Tractability": [[101, "tractability"]], "Traffic": [[93, "traffic"]], "Train LoRA": [[71, "train-lora"]], "Trained Attention Heatmaps": [[58, "trained-attention-heatmaps"]], "Trainer": [[58, "trainer"]], "Training": [[76, "training"], [118, "training"], [119, "training"]], "Training Chronicles": [[105, "training-chronicles"]], "Training Dynamics And Tricks": [[121, null]], "Training Paradigm": [[58, "training-paradigm"]], "Training a Mini-GPT to Learn Two-Digit Addition": [[58, null]], "Transactional And Analytical Processing Databases": [[97, "transactional-and-analytical-processing-databases"]], "Transactional Databases Are Row-Major": [[97, "transactional-databases-are-row-major"]], "Transactional Processing": [[97, "transactional-processing"]], "Translating to a First True in a Sorted Boolean Array Problem": [[29, "translating-to-a-first-true-in-a-sorted-boolean-array-problem"]], "Transpose Property": [[84, "transpose-property"]], "Transpose of a Vector": [[81, "transpose-of-a-vector"]], "Troubleshooting": [[89, "troubleshooting"]], "Truth Table for 6 samples": [[65, "truth-table-1"]], "Two (Continuous) Predictors": [[75, "two-continuous-predictors"]], "Two Pointers": [[45, null], [47, null]], "Two Pointers And Sliding Window": [[39, null]], "Two Pointers Opposite Direction": [[47, "two-pointers-opposite-direction"]], "Two Pointers Same Direction": [[47, "two-pointers-same-direction"]], "Two Sum": [[13, null], [19, null]], "Two Sum II - Input Array Is Sorted": [[43, null], [47, "two-sum-ii-input-array-is-sorted"], [47, null]], "Type Argument": [[5, "type-argument"]], "Type Binding": [[6, "type-binding"]], "Type Safety": [[3, null], [3, "id1"]], "Type Theory, A Very Rudimentary Introduction": [[10, null]], "Type Variable and Type Parameter": [[5, "type-variable-and-type-parameter"]], "Type Variables And Substitution": [[6, "type-variables-and-substitution"]], "TypeGuard: Runtime Type Checking": [[93, "typeguard-runtime-type-checking"]], "Types Of Data Analysis": [[100, "ml-lifecycle-04-data-analysis"]], "Types are Sets": [[2, "types-are-sets"]], "Types of Data Inputs for Machine Learning": [[95, "ml-lifecycle-02-types-of-data-inputs"]], "Types of Inputs": [[95, "types-of-inputs"]], "Understanding Closures and Late Binding": [[234, "understanding-closures-and-late-binding"]], "Understanding GPU Memory 1: Visualizing All Allocations over Time": [[114, "understanding-gpu-memory-1-visualizing-all-allocations-over-time"]], "Understanding Integration Testing in Practice": [[93, "understanding-integration-testing-in-practice"]], "Understanding Model And Data Assumptions": [[101, "understanding-model-and-data-assumptions"]], "Understanding the Connection: Business Goals and Corresponding Machine Learning Tasks": [[95, "understanding-the-connection-business-goals-and-corresponding-machine-learning-tasks"]], "Uniform Distribution of X": [[30, "uniform-distribution-of-x"]], "Union Bound": [[65, "union-bound"], [202, "union-bound"]], "Union Type": [[6, "union-type"]], "Union Type versus Constrained Type Variable": [[6, "union-type-versus-constrained-type-variable"]], "Uniquely determines the distribution": [[199, "uniquely-determines-the-distribution"]], "Unit Test As Documentation": [[93, "unit-test-as-documentation"]], "Unit Testing": [[93, "unit-testing"]], "Unit vs Integration vs System vs E2E Testing": [[93, "unit-vs-integration-vs-system-vs-e2e-testing"]], "Univariate Linear Model": [[67, "univariate-linear-model"]], "Unnormalized Logits": [[123, "unnormalized-logits"]], "Unordered Sequential Search": [[30, "unordered-sequential-search"]], "Unsafe Overloading Variants": [[8, "unsafe-overloading-variants"]], "Update Covariance Matrix of Running Example": [[52, "update-covariance-matrix-of-running-example"]], "Update Mean of Running Example": [[52, "update-mean-of-running-example"]], "Update Weight/Prior of Running Example": [[52, "update-weight-prior-of-running-example"]], "Updated Book Relation": [[97, "ml-lifecycle-032-updated-book-relation"]], "Updated Matrix Description Table with Batch and Head Dimensions": [[55, "updated-matrix-description-table-with-batch-and-head-dimensions"]], "Upgrade pip, setuptools and wheel": [[93, "upgrade-pip-setuptools-and-wheel"]], "Upper Bounding Type Variables": [[6, "upper-bounding-type-variables"]], "Use Case 1. Timeouts in HTTP Requests": [[9, "use-case-1-timeouts-in-http-requests"]], "Using HuggingFace": [[119, "using-huggingface"]], "Using Processes": [[215, "using-processes"]], "Using PyTorch\u2019s Dataset and Dataloader": [[57, "using-pytorch-s-dataset-and-dataloader"]], "Using Threads": [[215, "using-threads"]], "Using Two-Sample t-Tests for Data Drift": [[109, "using-two-sample-t-tests-for-data-drift"]], "Using __dict__": [[116, "using-dict"]], "Using a Generator Function": [[212, "using-a-generator-function"]], "Using dir": [[116, "using-dir"]], "Using functools.wraps": [[228, "using-functools-wraps"]], "Using inspect.getmembers": [[116, "using-inspect-getmembers"]], "Using vars": [[116, "using-vars"]], "Utilities": [[57, "utilities"], [142, "utilities"], [145, "utilities"], [147, "utilities"], [155, "utilities"], [158, "utilities"]], "VC-Analysis": [[65, "vc-analysis"]], "Valid Parentheses": [[35, null]], "Validates Functional Coherence": [[93, "validates-functional-coherence"]], "Variable Window Size Sliding Window Technique": [[46, "variable-window-size-sliding-window-technique"]], "Variable vs Random Variable": [[136, "variable-vs-random-variable"]], "Variance": [[141, "variance"], [157, "variance"], [164, "variance"]], "Vector Addition and Subtraction": [[82, "vector-addition-and-subtraction"]], "Vector Addition is Commutative": [[82, "vector-addition-is-commutative"]], "Vector Database (A High-dimensional Playground for Large Language Models)": [[97, "vector-database-a-high-dimensional-playground-for-large-language-models"]], "Vector Norm and Distance": [[83, null]], "Vector Orientation": [[81, "vector-orientation"]], "Vector Quantization": [[62, "vector-quantization"]], "Vector and Its Definition": [[81, null]], "Vector and Its Operations": [[82, null]], "Vector is Invariant under Coordinate Transformation": [[81, "vector-is-invariant-under-coordinate-transformation"]], "Vector-Scalar Multiplication is Commutative": [[82, "vector-scalar-multiplication-is-commutative"]], "Vector-Scalar Multiplication is Invariant under Rotation": [[82, "vector-scalar-multiplication-is-invariant-under-rotation"]], "Vectors": [[85, null]], "Verbatim": [[93, null]], "Version Control": [[93, "version-control"]], "Violating Type Safety": [[3, "violating-type-safety"]], "Virtual Environment": [[89, "virtual-environment"], [93, "virtual-environment"]], "Visualisation": [[43, "visualisation"], [44, "visualisation"]], "Visualising Positional Encodings": [[57, "visualising-positional-encodings"]], "Visualization": [[27, "visualization"], [29, "visualization"], [108, "visualization"]], "Visualization (Batch Features only)": [[108, "visualization-batch-features-only"], [108, "id3"]], "Visualization (Online Features)": [[108, "visualization-online-features"]], "Visualization of Process and Thread": [[215, "visualization-of-process-and-thread"]], "Visualizing Likelihood and Maximum Likelihood Estimation as N Increases": [[210, "visualizing-likelihood-and-maximum-likelihood-estimation-as-n-increases"]], "Visualizing Variance of Dot Product": [[57, "visualizing-variance-of-dot-product"]], "Visualizing the Convergence": [[206, "visualizing-the-convergence"]], "Visualizing the Likelihood Function": [[210, "visualizing-the-likelihood-function"]], "Vocabulary": [[55, "vocabulary"], [58, "vocabulary"]], "Walkthrough / Whiteboarding": [[19, "walkthrough-whiteboarding"], [43, "walkthrough-whiteboarding"]], "Warmup": [[58, "warmup"], [122, "warmup"]], "Warning": [[173, null]], "We Adhere To Good Design Principles": [[221, "we-adhere-to-good-design-principles"]], "Weak Law of Large Numbers": [[205, "weak-law-of-large-numbers"]], "Weight Sharing": [[55, null]], "Weighted Likelihood": [[52, "weighted-likelihood"]], "Weighted Likelihood of One Single Data Point \\boldsymbol{x}^{(n)}": [[52, "weighted-likelihood-of-one-single-data-point-boldsymbol-x-n"]], "Weighted Likelihood of the Entire Dataset \\boldsymbol{X}": [[52, "weighted-likelihood-of-the-entire-dataset-boldsymbol-x"]], "Weights And Embeddings": [[55, "weights-and-embeddings"]], "What (raw) data do I need to extract (relevant to my project)?": [[98, "what-raw-data-do-i-need-to-extract-relevant-to-my-project"], [98, "id1"]], "What Are The Key Elements?": [[221, "what-are-the-key-elements"]], "What Is An Iterable?": [[233, "what-is-an-iterable"]], "What Is An Iterator?": [[233, "what-is-an-iterator"]], "What We Did Not Handle?": [[237, "what-we-did-not-handle"]], "What are Constraints for?": [[19, "what-are-constraints-for"], [36, "what-are-constraints-for"], [43, "what-are-constraints-for"]], "What are my budget constraints?": [[98, "what-are-my-budget-constraints"]], "What are my project requirements?": [[98, "what-are-my-project-requirements"], [98, "id12"]], "What are the data processing techniques and tools I should use?": [[98, "what-are-the-data-processing-techniques-and-tools-i-should-use"]], "What are the data security and compliance requirements?": [[98, "what-are-the-data-security-and-compliance-requirements"]], "What are the performance requirements?": [[98, "what-are-the-performance-requirements"], [98, "id14"]], "What are the scalability and flexibility requirements?": [[98, "what-are-the-scalability-and-flexibility-requirements"], [98, "id15"]], "What considerations should I keep in mind when loading the data?": [[98, "what-considerations-should-i-keep-in-mind-when-loading-the-data"]], "What format is the data in? Is it in a format that I can use?": [[98, "what-format-is-the-data-in-is-it-in-a-format-that-i-can-use"], [98, "id3"]], "What is Nominal Subtyping?": [[2, "what-is-nominal-subtyping"]], "What is Structural Subtyping?": [[2, "what-is-structural-subtyping"]], "What is get_origin and get_args?": [[237, "what-is-get-origin-and-get-args"]], "What is the Difference between Linting and Formatting?": [[93, "what-is-the-difference-between-linting-and-formatting"]], "What is the Singleton Pattern?": [[226, "what-is-the-singleton-pattern"]], "What tools do I need to extract the data?": [[98, "what-tools-do-i-need-to-extract-the-data"], [98, "id4"]], "What type of data am I dealing with?": [[98, "what-type-of-data-am-i-dealing-with"], [98, "id13"]], "When can K-Means Fail?": [[60, "when-can-k-means-fail"]], "When to Use K-Means?": [[60, "when-to-use-k-means"]], "Where Is The MLOps?": [[105, "where-is-the-mlops"]], "Where can I find this data? This means finding all potential data sources": [[98, "where-can-i-find-this-data-this-means-finding-all-potential-data-sources"], [98, "id2"]], "Where did these Assumptions come from?": [[154, null]], "Where should I store the extracted data?": [[98, "where-should-i-store-the-extracted-data"]], "Where to Start?": [[93, "where-to-start"]], "Whiteboarding": [[29, "whiteboarding"]], "Why Characteristic Function?": [[197, "why-characteristic-function"]], "Why DAG?": [[99, "ml-lifecycle-03-why-dag"]], "Why Does Calibration Matter?": [[102, "why-does-calibration-matter"]], "Why Does Cosine Annealing With Warmup Stabilize Training?": [[122, null]], "Why Does This Happen?": [[213, "why-does-this-happen"]], "Why Eigenvalues and Eigenvectors defined the shape of Multivariate Gaussian?": [[192, "why-eigenvalues-and-eigenvectors-defined-the-shape-of-multivariate-gaussian"]], "Why GMM has no Closed-Form Solution": [[52, "why-gmm-has-no-closed-form-solution"]], "Why Is This Safer?": [[215, "why-is-this-safer"]], "Why It\u2019s CPU-Bound": [[215, "why-it-s-cpu-bound"]], "Why It\u2019s I/O-Bound": [[215, "why-it-s-i-o-bound"]], "Why Left + Right // 2 May Cause Overflow?": [[27, "why-left-right-2-may-cause-overflow"]], "Why Nominal Subtyping?": [[2, "why-nominal-subtyping"]], "Why Not Use Constraints?": [[6, "why-not-use-constraints"]], "Why Structural Subtyping?": [[2, "why-structural-subtyping"]], "Why Use a List for Stack Implementation?": [[32, "why-use-a-list-for-stack-implementation"]], "Why Use a Singleton?": [[226, "why-use-a-singleton"]], "Why Use the Factory Method Pattern?": [[221, "why-use-the-factory-method-pattern"]], "Why data points are considered random variables": [[157, "why-data-points-are-considered-random-variables"]], "Why do you multiply probabilities?": [[124, "why-do-you-multiply-probabilities"], [135, "why-do-you-multiply-probabilities"]], "Why is it Useful in the Context of Machine Learning?": [[207, "why-is-it-useful-in-the-context-of-machine-learning"]], "Why is it useful?": [[199, "why-is-it-useful"]], "Why is the Joint Distribution the Product of the Likelihood and Prior?": [[52, "why-is-the-joint-distribution-the-product-of-the-likelihood-and-prior"]], "Why mask our target in Adder?": [[58, "why-mask-our-target-in-adder"]], "Why must h be fixed and defined before generating the dataset \\mathcal{S}?": [[65, "why-must-h-be-fixed-and-defined-before-generating-the-dataset-mathcal-s"]], "Why the Unexpected Output Occurs": [[234, "why-the-unexpected-output-occurs"]], "Why \u201cFactory Method\u201d?": [[221, "why-factory-method"]], "With Distributed Barrier": [[90, "with-distributed-barrier"]], "Workarounds": [[234, "workarounds"]], "Workflow": [[96, "workflow"], [98, "workflow"], [98, "id8"], [98, "id16"]], "Worst Case": [[30, "worst-case"]], "Wrap": [[237, "wrap"]], "YAML Driven Configuration": [[216, "yaml-driven-configuration"]], "Yield": [[212, "yield"]], "Your specific questions": [[65, "your-specific-questions"]], "Your specific setup": [[65, "your-specific-setup"]], "\\mathbf{W}_{e}: Embedding Matrix": [[55, "mathbf-w-e-embedding-matrix"]], "\\mathbf{X}: Output of the Embedding Layer": [[55, "mathbf-x-output-of-the-embedding-layer"]], "\\tilde{\\mathbf{X}}: Output of the Positional Encoding Layer": [[55, "tilde-mathbf-x-output-of-the-positional-encoding-layer"]], "a. Encapsulation of Object Creation": [[221, "a-encapsulation-of-object-creation"]], "a. Single Responsibility Principle (SRP)": [[221, "a-single-responsibility-principle-srp"]], "b. Adherence to the Open/Closed Principle": [[221, "b-adherence-to-the-open-closed-principle"]], "b. Dependency Inversion Principle (DIP)": [[221, "b-dependency-inversion-principle-dip"]], "c. Open/Closed Principle (OCP)": [[221, "c-open-closed-principle-ocp"]], "c. Promoting Loose Coupling": [[221, "c-promoting-loose-coupling"]], "d. Enhancing Scalability and Maintainability": [[221, "d-enhancing-scalability-and-maintainability"]], "d. Interface Segregation Principle (ISP)": [[221, "d-interface-segregation-principle-isp"]], "e. Facilitating Testing and Mocking": [[221, "e-facilitating-testing-and-mocking"]], "e. Liskov Substitution Principle (LSP)": [[221, "e-liskov-substitution-principle-lsp"]], "e. Overriding the __init__ Method": [[226, "e-overriding-the-init-method"]], "failureCode is HeadNodeBootstrapFailure with failureReason Cluster creation timed out": [[89, "failurecode-is-headnodebootstrapfailure-with-failurereason-cluster-creation-timed-out"]], "\u21e2 AsyncIO": [[215, "id2"]], "\u21e2 Multiprocessing": [[215, "id4"]], "\u21e2 Threading": [[215, "id3"]]}, "docnames": ["bibliography", "citations", "computer_science/type_theory/01-subtypes", "computer_science/type_theory/02-type-safety", "computer_science/type_theory/03-subsumption", "computer_science/type_theory/04-generics", "computer_science/type_theory/05-typevar-bound-constraints", "computer_science/type_theory/06-invariance-covariance-contravariance", "computer_science/type_theory/07-pep-3124-overloading", "computer_science/type_theory/08-pep-661-sentinel-values", "computer_science/type_theory/intro", "dsa/array/concept", "dsa/array/intro", "dsa/array/questions/01-two-sum", "dsa/array/questions/intro", "dsa/complexity_analysis/intro", "dsa/complexity_analysis/master_theorem", "dsa/hash_map/concept", "dsa/hash_map/intro", "dsa/hash_map/questions/01-two-sum", "dsa/hash_map/questions/49-group-anagrams", "dsa/hash_map/questions/intro", "dsa/queue/concept", "dsa/queue/dequeue", "dsa/queue/intro", "dsa/queue/questions/125-valid-palindrome", "dsa/queue/questions/hot-potatoes", "dsa/searching_algorithms/binary_search/concept", "dsa/searching_algorithms/binary_search/intro", "dsa/searching_algorithms/binary_search/problems/875-koko-eating-bananas", "dsa/searching_algorithms/linear_search/concept", "dsa/searching_algorithms/linear_search/intro", "dsa/stack/concept", "dsa/stack/intro", "dsa/stack/questions/155-min-stack", "dsa/stack/questions/20-valid-parentheses", "dsa/stack/questions/232-implement-queue-using-stacks", "dsa/stack/questions/344-reverse-string", "dsa/stack/questions/intro", "dsa/two_pointers/intro", "dsa/two_pointers/questions/intro", "dsa/two_pointers/questions/sliding_window/438-find-all-anagrams-in-a-string", "dsa/two_pointers/questions/sliding_window/intro", "dsa/two_pointers/questions/two_pointers/167-two-sum-ii-input-array-is-sorted", "dsa/two_pointers/questions/two_pointers/26-remove-duplicates-from-sorted-array", "dsa/two_pointers/questions/two_pointers/intro", "dsa/two_pointers/sliding_window", "dsa/two_pointers/two_pointers", "influential/empirical_risk_minimization/01_intro", "influential/empirical_risk_minimization/02_concept", "influential/empirical_risk_minimization/03_bayes_optimal_classifier", "influential/gaussian_mixture_models/01_intro", "influential/gaussian_mixture_models/02_concept", "influential/gaussian_mixture_models/03_implementation", "influential/generative_pretrained_transformer/01_intro", "influential/generative_pretrained_transformer/02_notations", "influential/generative_pretrained_transformer/03_concept", "influential/generative_pretrained_transformer/04_implementation", "influential/generative_pretrained_transformer/05_adder", "influential/kmeans_clustering/01_intro", "influential/kmeans_clustering/02_concept", "influential/kmeans_clustering/03_implementation", "influential/kmeans_clustering/04_image_segmentation", "influential/kmeans_clustering/05_conceptual_questions", "influential/learning_theory/01_intro", "influential/learning_theory/02_concept", "influential/linear_regression/01_intro", "influential/linear_regression/02_concept", "influential/linear_regression/03_implementation", "influential/low_rank_adaptation/01_intro", "influential/low_rank_adaptation/02_concept", "influential/low_rank_adaptation/03_implementation", "influential/naive_bayes/01_intro", "influential/naive_bayes/02_concept", "influential/naive_bayes/03_implementation", "influential/naive_bayes/04_example_penguins", "influential/naive_bayes/05_application_mnist", "intro", "linear_algebra/01_preliminaries/01-fields", "linear_algebra/01_preliminaries/02-systems-of-linear-equations", "linear_algebra/01_preliminaries/intro", "linear_algebra/02_vectors/01-vector-definition", "linear_algebra/02_vectors/02-vector-operation", "linear_algebra/02_vectors/03-vector-norm", "linear_algebra/02_vectors/04-vector-products", "linear_algebra/02_vectors/intro", "notations/machine_learning", "operations/distributed/01_notations", "operations/distributed/02_basics", "operations/distributed/03_how_to_setup_slurm_in_aws", "operations/distributed/04_ablation", "operations/distributed/intro", "operations/machine_learning_lifecycle/00_intro", "operations/machine_learning_lifecycle/010_continuous_integration_deployment_learning_and_training", "operations/machine_learning_lifecycle/01_problem_formulation", "operations/machine_learning_lifecycle/02_project_scoping", "operations/machine_learning_lifecycle/03_dataops_pipeline/031_data_source_and_format", "operations/machine_learning_lifecycle/03_dataops_pipeline/032_data_model_and_storage", "operations/machine_learning_lifecycle/03_dataops_pipeline/033_etl", "operations/machine_learning_lifecycle/03_dataops_pipeline/03_dataops_pipeline", "operations/machine_learning_lifecycle/04_mlops_data_pipeline", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/051_model_selection", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/052_metric_selection", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/053_experiment_tracking", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/054_model_testing", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/05_ml_training_pipeline", "operations/machine_learning_lifecycle/06_model_evaluation", "operations/machine_learning_lifecycle/07_model_validation_registry_and_pushing_model_to_production", "operations/machine_learning_lifecycle/08_model_deployment_and_serving", "operations/machine_learning_lifecycle/09_model_monitoring", "operations/profiling/01_synchronize", "operations/profiling/02_timeit", "operations/profiling/03_time_profiler", "operations/profiling/04_small_gpt_profile", "operations/profiling/05_memory_leak", "operations/profiling/intro", "playbook/how_to_inspect_function_and_class_signatures", "playbook/training/how_to_calculate_flops_in_transformer_based_models", "playbook/training/how_to_finetune_decoder_with_cross_attention", "playbook/training/how_to_finetune_decoder_with_last_token_pooling", "playbook/training/how_to_teacher_student_knowledge_distillation", "playbook/training/intro", "playbook/training/why_cosine_annealing_warmup_stabilize_training", "playbook/why_softmax_preserves_order_translation_invariant_not_invariant_scaling", "probability_theory/01_mathematical_preliminaries/01_combinatorics", "probability_theory/01_mathematical_preliminaries/02_calculus", "probability_theory/01_mathematical_preliminaries/03_contours", "probability_theory/01_mathematical_preliminaries/exercises", "probability_theory/01_mathematical_preliminaries/intro", "probability_theory/02_probability/0202_probability_space", "probability_theory/02_probability/0203_probability_axioms", "probability_theory/02_probability/0204_conditional_probability", "probability_theory/02_probability/0205_independence", "probability_theory/02_probability/0206_bayes_theorem", "probability_theory/02_probability/intro", "probability_theory/02_probability/summary", "probability_theory/03_discrete_random_variables/0301_random_variables", "probability_theory/03_discrete_random_variables/0302_discrete_random_variables", "probability_theory/03_discrete_random_variables/0303_probability_mass_function", "probability_theory/03_discrete_random_variables/0304_cumulative_distribution_function", "probability_theory/03_discrete_random_variables/0305_expectation", "probability_theory/03_discrete_random_variables/0306_moments_and_variance", "probability_theory/03_discrete_random_variables/bernoulli/0308_bernoulli_distribution_application", "probability_theory/03_discrete_random_variables/bernoulli/0308_bernoulli_distribution_concept", "probability_theory/03_discrete_random_variables/bernoulli/intro", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_application", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_concept", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_implementation", "probability_theory/03_discrete_random_variables/binomial/intro", "probability_theory/03_discrete_random_variables/exercises", "probability_theory/03_discrete_random_variables/geometric/0310_geometric_distribution_concept", "probability_theory/03_discrete_random_variables/geometric/intro", "probability_theory/03_discrete_random_variables/iid", "probability_theory/03_discrete_random_variables/intro", "probability_theory/03_discrete_random_variables/poisson/0311_poisson_distribution_concept", "probability_theory/03_discrete_random_variables/poisson/0311_poisson_distribution_implementation", "probability_theory/03_discrete_random_variables/poisson/intro", "probability_theory/03_discrete_random_variables/summary", "probability_theory/03_discrete_random_variables/uniform/0307_discrete_uniform_distribution_application", "probability_theory/03_discrete_random_variables/uniform/0307_discrete_uniform_distribution_concept", "probability_theory/03_discrete_random_variables/uniform/intro", "probability_theory/04_continuous_random_variables/0401_continuous_random_variables", "probability_theory/04_continuous_random_variables/0402_probability_density_function", "probability_theory/04_continuous_random_variables/0403_expectation", "probability_theory/04_continuous_random_variables/0404_moments_and_variance", "probability_theory/04_continuous_random_variables/0405_cumulative_distribution_function", "probability_theory/04_continuous_random_variables/0406_mean_median_mode", "probability_theory/04_continuous_random_variables/0407_continuous_uniform_distribution", "probability_theory/04_continuous_random_variables/0408_exponential_distribution", "probability_theory/04_continuous_random_variables/0409_gaussian_distribution", "probability_theory/04_continuous_random_variables/0410_skewness_and_kurtosis", "probability_theory/04_continuous_random_variables/0411_convolve_and_sum_of_random_variables", "probability_theory/04_continuous_random_variables/0412_functions_of_random_variables", "probability_theory/04_continuous_random_variables/from_discrete_to_continuous", "probability_theory/04_continuous_random_variables/intro", "probability_theory/05_joint_distributions/0501_joint_pmf_pdf/concept", "probability_theory/05_joint_distributions/0501_joint_pmf_pdf/intro", "probability_theory/05_joint_distributions/0502_joint_expectation_and_correlation/concept", "probability_theory/05_joint_distributions/0502_joint_expectation_and_correlation/intro", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/application", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/concept", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/intro", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/concept", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/exercises", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/intro", "probability_theory/05_joint_distributions/0505_sum_of_random_variables/concept", "probability_theory/05_joint_distributions/0505_sum_of_random_variables/intro", "probability_theory/05_joint_distributions/0506_random_vectors/concept", "probability_theory/05_joint_distributions/0506_random_vectors/intro", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/application_transformation", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/concept", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/eigendecomposition", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/geometry_of_multivariate_gaussian", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/intro", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/psd", "probability_theory/05_joint_distributions/from_single_variable_to_joint_distributions", "probability_theory/05_joint_distributions/intro", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/characteristic_function", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/intro", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/moment_generating_function", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/moment_generating_function_application_sum_of_rv", "probability_theory/06_sample_statistics/0602_probability_inequalities/application", "probability_theory/06_sample_statistics/0602_probability_inequalities/concept", "probability_theory/06_sample_statistics/0602_probability_inequalities/intro", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/application", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/concept", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/convergence", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/intro", "probability_theory/06_sample_statistics/intro", "probability_theory/08_estimation_theory/intro", "probability_theory/08_estimation_theory/maximum_likelihood_estimation/concept", "probability_theory/08_estimation_theory/maximum_likelihood_estimation/intro", "software_engineering/concurrency_parallelism_asynchronous/generator_yield", "software_engineering/concurrency_parallelism_asynchronous/insights/locks_for_thread_safety", "software_engineering/concurrency_parallelism_asynchronous/intro", "software_engineering/concurrency_parallelism_asynchronous/overview", "software_engineering/config_management/01-pydra", "software_engineering/config_management/02-state", "software_engineering/config_management/concept", "software_engineering/config_management/intro", "software_engineering/design_patterns/dependency_inversion_principle", "software_engineering/design_patterns/factory_method", "software_engineering/design_patterns/god_object_pattern", "software_engineering/design_patterns/intro", "software_engineering/design_patterns/named_constructor", "software_engineering/design_patterns/registry", "software_engineering/design_patterns/singleton", "software_engineering/design_patterns/strategy", "software_engineering/python/decorator", "software_engineering/python/generators_over_lists", "software_engineering/python/gil", "software_engineering/python/intro", "software_engineering/python/is_vs_equality", "software_engineering/python/iterator_protocol", "software_engineering/python/late_binding_closures", "software_engineering/python/mutable_default", "software_engineering/python/new_vs_init", "software_engineering/python/pydantic", "software_engineering/python/set_vs_list"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["bibliography.md", "citations.md", "computer_science/type_theory/01-subtypes.md", "computer_science/type_theory/02-type-safety.md", "computer_science/type_theory/03-subsumption.md", "computer_science/type_theory/04-generics.md", "computer_science/type_theory/05-typevar-bound-constraints.md", "computer_science/type_theory/06-invariance-covariance-contravariance.md", "computer_science/type_theory/07-pep-3124-overloading.md", "computer_science/type_theory/08-pep-661-sentinel-values.md", "computer_science/type_theory/intro.md", "dsa/array/concept.md", "dsa/array/intro.md", "dsa/array/questions/01-two-sum.ipynb", "dsa/array/questions/intro.md", "dsa/complexity_analysis/intro.md", "dsa/complexity_analysis/master_theorem.md", "dsa/hash_map/concept.md", "dsa/hash_map/intro.md", "dsa/hash_map/questions/01-two-sum.ipynb", "dsa/hash_map/questions/49-group-anagrams.md", "dsa/hash_map/questions/intro.md", "dsa/queue/concept.ipynb", "dsa/queue/dequeue.ipynb", "dsa/queue/intro.md", "dsa/queue/questions/125-valid-palindrome.ipynb", "dsa/queue/questions/hot-potatoes.ipynb", "dsa/searching_algorithms/binary_search/concept.md", "dsa/searching_algorithms/binary_search/intro.md", "dsa/searching_algorithms/binary_search/problems/875-koko-eating-bananas.md", "dsa/searching_algorithms/linear_search/concept.md", "dsa/searching_algorithms/linear_search/intro.md", "dsa/stack/concept.md", "dsa/stack/intro.md", "dsa/stack/questions/155-min-stack.ipynb", "dsa/stack/questions/20-valid-parentheses.ipynb", "dsa/stack/questions/232-implement-queue-using-stacks.md", "dsa/stack/questions/344-reverse-string.ipynb", "dsa/stack/questions/intro.md", "dsa/two_pointers/intro.md", "dsa/two_pointers/questions/intro.md", "dsa/two_pointers/questions/sliding_window/438-find-all-anagrams-in-a-string.md", "dsa/two_pointers/questions/sliding_window/intro.md", "dsa/two_pointers/questions/two_pointers/167-two-sum-ii-input-array-is-sorted.md", "dsa/two_pointers/questions/two_pointers/26-remove-duplicates-from-sorted-array.md", "dsa/two_pointers/questions/two_pointers/intro.md", "dsa/two_pointers/sliding_window.md", "dsa/two_pointers/two_pointers.md", "influential/empirical_risk_minimization/01_intro.md", "influential/empirical_risk_minimization/02_concept.md", "influential/empirical_risk_minimization/03_bayes_optimal_classifier.md", "influential/gaussian_mixture_models/01_intro.md", "influential/gaussian_mixture_models/02_concept.md", "influential/gaussian_mixture_models/03_implementation.ipynb", "influential/generative_pretrained_transformer/01_intro.md", "influential/generative_pretrained_transformer/02_notations.md", "influential/generative_pretrained_transformer/03_concept.md", "influential/generative_pretrained_transformer/04_implementation.ipynb", "influential/generative_pretrained_transformer/05_adder.ipynb", "influential/kmeans_clustering/01_intro.md", "influential/kmeans_clustering/02_concept.md", "influential/kmeans_clustering/03_implementation.ipynb", "influential/kmeans_clustering/04_image_segmentation.ipynb", "influential/kmeans_clustering/05_conceptual_questions.md", "influential/learning_theory/01_intro.md", "influential/learning_theory/02_concept.md", "influential/linear_regression/01_intro.md", "influential/linear_regression/02_concept.md", "influential/linear_regression/03_implementation.ipynb", "influential/low_rank_adaptation/01_intro.md", "influential/low_rank_adaptation/02_concept.md", "influential/low_rank_adaptation/03_implementation.ipynb", "influential/naive_bayes/01_intro.md", "influential/naive_bayes/02_concept.md", "influential/naive_bayes/03_implementation.ipynb", "influential/naive_bayes/04_example_penguins.ipynb", "influential/naive_bayes/05_application_mnist.ipynb", "intro.md", "linear_algebra/01_preliminaries/01-fields.md", "linear_algebra/01_preliminaries/02-systems-of-linear-equations.md", "linear_algebra/01_preliminaries/intro.md", "linear_algebra/02_vectors/01-vector-definition.md", "linear_algebra/02_vectors/02-vector-operation.md", "linear_algebra/02_vectors/03-vector-norm.md", "linear_algebra/02_vectors/04-vector-products.md", "linear_algebra/02_vectors/intro.md", "notations/machine_learning.md", "operations/distributed/01_notations.md", "operations/distributed/02_basics.md", "operations/distributed/03_how_to_setup_slurm_in_aws.md", "operations/distributed/04_ablation.md", "operations/distributed/intro.md", "operations/machine_learning_lifecycle/00_intro.md", "operations/machine_learning_lifecycle/010_continuous_integration_deployment_learning_and_training.md", "operations/machine_learning_lifecycle/01_problem_formulation.md", "operations/machine_learning_lifecycle/02_project_scoping.md", "operations/machine_learning_lifecycle/03_dataops_pipeline/031_data_source_and_format.md", "operations/machine_learning_lifecycle/03_dataops_pipeline/032_data_model_and_storage.md", "operations/machine_learning_lifecycle/03_dataops_pipeline/033_etl.md", "operations/machine_learning_lifecycle/03_dataops_pipeline/03_dataops_pipeline.md", "operations/machine_learning_lifecycle/04_mlops_data_pipeline.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/051_model_selection.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/052_metric_selection.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/053_experiment_tracking.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/054_model_testing.md", "operations/machine_learning_lifecycle/05_model_development_selection_and_training/05_ml_training_pipeline.md", "operations/machine_learning_lifecycle/06_model_evaluation.md", "operations/machine_learning_lifecycle/07_model_validation_registry_and_pushing_model_to_production.md", "operations/machine_learning_lifecycle/08_model_deployment_and_serving.md", "operations/machine_learning_lifecycle/09_model_monitoring.md", "operations/profiling/01_synchronize.ipynb", "operations/profiling/02_timeit.ipynb", "operations/profiling/03_time_profiler.ipynb", "operations/profiling/04_small_gpt_profile.ipynb", "operations/profiling/05_memory_leak.ipynb", "operations/profiling/intro.md", "playbook/how_to_inspect_function_and_class_signatures.ipynb", "playbook/training/how_to_calculate_flops_in_transformer_based_models.ipynb", "playbook/training/how_to_finetune_decoder_with_cross_attention.ipynb", "playbook/training/how_to_finetune_decoder_with_last_token_pooling.ipynb", "playbook/training/how_to_teacher_student_knowledge_distillation.ipynb", "playbook/training/intro.md", "playbook/training/why_cosine_annealing_warmup_stabilize_training.md", "playbook/why_softmax_preserves_order_translation_invariant_not_invariant_scaling.md", "probability_theory/01_mathematical_preliminaries/01_combinatorics.md", "probability_theory/01_mathematical_preliminaries/02_calculus.md", "probability_theory/01_mathematical_preliminaries/03_contours.ipynb", "probability_theory/01_mathematical_preliminaries/exercises.ipynb", "probability_theory/01_mathematical_preliminaries/intro.md", "probability_theory/02_probability/0202_probability_space.md", "probability_theory/02_probability/0203_probability_axioms.md", "probability_theory/02_probability/0204_conditional_probability.md", "probability_theory/02_probability/0205_independence.md", "probability_theory/02_probability/0206_bayes_theorem.md", "probability_theory/02_probability/intro.md", "probability_theory/02_probability/summary.md", "probability_theory/03_discrete_random_variables/0301_random_variables.md", "probability_theory/03_discrete_random_variables/0302_discrete_random_variables.md", "probability_theory/03_discrete_random_variables/0303_probability_mass_function.md", "probability_theory/03_discrete_random_variables/0304_cumulative_distribution_function.md", "probability_theory/03_discrete_random_variables/0305_expectation.md", "probability_theory/03_discrete_random_variables/0306_moments_and_variance.md", "probability_theory/03_discrete_random_variables/bernoulli/0308_bernoulli_distribution_application.ipynb", "probability_theory/03_discrete_random_variables/bernoulli/0308_bernoulli_distribution_concept.md", "probability_theory/03_discrete_random_variables/bernoulli/intro.md", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_application.ipynb", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_concept.md", "probability_theory/03_discrete_random_variables/binomial/0309_binomial_distribution_implementation.ipynb", "probability_theory/03_discrete_random_variables/binomial/intro.md", "probability_theory/03_discrete_random_variables/exercises.md", "probability_theory/03_discrete_random_variables/geometric/0310_geometric_distribution_concept.md", "probability_theory/03_discrete_random_variables/geometric/intro.md", "probability_theory/03_discrete_random_variables/iid.md", "probability_theory/03_discrete_random_variables/intro.md", "probability_theory/03_discrete_random_variables/poisson/0311_poisson_distribution_concept.md", "probability_theory/03_discrete_random_variables/poisson/0311_poisson_distribution_implementation.ipynb", "probability_theory/03_discrete_random_variables/poisson/intro.md", "probability_theory/03_discrete_random_variables/summary.md", "probability_theory/03_discrete_random_variables/uniform/0307_discrete_uniform_distribution_application.ipynb", "probability_theory/03_discrete_random_variables/uniform/0307_discrete_uniform_distribution_concept.md", "probability_theory/03_discrete_random_variables/uniform/intro.md", "probability_theory/04_continuous_random_variables/0401_continuous_random_variables.md", "probability_theory/04_continuous_random_variables/0402_probability_density_function.md", "probability_theory/04_continuous_random_variables/0403_expectation.md", "probability_theory/04_continuous_random_variables/0404_moments_and_variance.md", "probability_theory/04_continuous_random_variables/0405_cumulative_distribution_function.md", "probability_theory/04_continuous_random_variables/0406_mean_median_mode.md", "probability_theory/04_continuous_random_variables/0407_continuous_uniform_distribution.md", "probability_theory/04_continuous_random_variables/0408_exponential_distribution.md", "probability_theory/04_continuous_random_variables/0409_gaussian_distribution.md", "probability_theory/04_continuous_random_variables/0410_skewness_and_kurtosis.md", "probability_theory/04_continuous_random_variables/0411_convolve_and_sum_of_random_variables.md", "probability_theory/04_continuous_random_variables/0412_functions_of_random_variables.md", "probability_theory/04_continuous_random_variables/from_discrete_to_continuous.md", "probability_theory/04_continuous_random_variables/intro.md", "probability_theory/05_joint_distributions/0501_joint_pmf_pdf/concept.md", "probability_theory/05_joint_distributions/0501_joint_pmf_pdf/intro.md", "probability_theory/05_joint_distributions/0502_joint_expectation_and_correlation/concept.md", "probability_theory/05_joint_distributions/0502_joint_expectation_and_correlation/intro.md", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/application.md", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/concept.md", "probability_theory/05_joint_distributions/0503_conditional_pmf_pdf/intro.md", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/concept.md", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/exercises.md", "probability_theory/05_joint_distributions/0504_conditional_expectation_variance/intro.md", "probability_theory/05_joint_distributions/0505_sum_of_random_variables/concept.md", "probability_theory/05_joint_distributions/0505_sum_of_random_variables/intro.md", "probability_theory/05_joint_distributions/0506_random_vectors/concept.md", "probability_theory/05_joint_distributions/0506_random_vectors/intro.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/application_transformation.ipynb", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/concept.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/eigendecomposition.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/geometry_of_multivariate_gaussian.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/intro.md", "probability_theory/05_joint_distributions/0507_multivariate_gaussian/psd.md", "probability_theory/05_joint_distributions/from_single_variable_to_joint_distributions.md", "probability_theory/05_joint_distributions/intro.md", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/characteristic_function.md", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/intro.md", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/moment_generating_function.md", "probability_theory/06_sample_statistics/0601_moment_generating_and_characteristic_functions/moment_generating_function_application_sum_of_rv.md", "probability_theory/06_sample_statistics/0602_probability_inequalities/application.md", "probability_theory/06_sample_statistics/0602_probability_inequalities/concept.md", "probability_theory/06_sample_statistics/0602_probability_inequalities/intro.md", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/application.md", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/concept.md", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/convergence.ipynb", "probability_theory/06_sample_statistics/0603_law_of_large_numbers/intro.md", "probability_theory/06_sample_statistics/intro.md", "probability_theory/08_estimation_theory/intro.md", "probability_theory/08_estimation_theory/maximum_likelihood_estimation/concept.md", "probability_theory/08_estimation_theory/maximum_likelihood_estimation/intro.md", "software_engineering/concurrency_parallelism_asynchronous/generator_yield.md", "software_engineering/concurrency_parallelism_asynchronous/insights/locks_for_thread_safety.md", "software_engineering/concurrency_parallelism_asynchronous/intro.md", "software_engineering/concurrency_parallelism_asynchronous/overview.md", "software_engineering/config_management/01-pydra.md", "software_engineering/config_management/02-state.md", "software_engineering/config_management/concept.md", "software_engineering/config_management/intro.md", "software_engineering/design_patterns/dependency_inversion_principle.md", "software_engineering/design_patterns/factory_method.md", "software_engineering/design_patterns/god_object_pattern.md", "software_engineering/design_patterns/intro.md", "software_engineering/design_patterns/named_constructor.md", "software_engineering/design_patterns/registry.ipynb", "software_engineering/design_patterns/singleton.md", "software_engineering/design_patterns/strategy.md", "software_engineering/python/decorator.ipynb", "software_engineering/python/generators_over_lists.ipynb", "software_engineering/python/gil.ipynb", "software_engineering/python/intro.md", "software_engineering/python/is_vs_equality.ipynb", "software_engineering/python/iterator_protocol.ipynb", "software_engineering/python/late_binding_closures.ipynb", "software_engineering/python/mutable_default.ipynb", "software_engineering/python/new_vs_init.ipynb", "software_engineering/python/pydantic.ipynb", "software_engineering/python/set_vs_list.ipynb"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 41, 43, 44, 46, 47, 49, 53, 55, 56, 58, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 175, 177, 178, 179, 180, 183, 189, 190, 192, 197, 199, 200, 203, 205, 206, 209, 212, 213, 216, 217, 218, 220, 221, 222, 224, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237], "0": [2, 6, 7, 8, 11, 16, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 41, 43, 44, 46, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 96, 97, 100, 101, 102, 106, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 132, 133, 135, 136, 138, 139, 142, 143, 145, 146, 147, 149, 150, 154, 155, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 173, 175, 177, 179, 180, 183, 185, 187, 189, 190, 191, 192, 194, 199, 200, 202, 203, 205, 206, 209, 210, 212, 213, 215, 216, 217, 220, 221, 225, 227, 228, 229, 230, 233, 234, 237, 238], "00": [52, 53, 57, 58, 61, 74, 76, 89, 111, 112, 113, 215, 216, 237], "000": [43, 57, 58, 62, 65, 67, 68, 70, 75, 76, 86, 96, 114, 202, 210, 212, 213, 229], "0000": [57, 62, 75], "000000": 75, "0000000000000429": 52, "00000001": [173, 216], "00000002": 173, "000001": 216, "0000212": 75, "00002296180803007320": 58, "000022962": 58, "0000230073928833": 57, "000045924": 58, "000056": 111, "00005645197712961995": 111, "000068885": 58, "00007591251522123026": 111, "000076": 111, "000091847": 58, "0000e": 57, "0001": [62, 65, 67], "000108": 111, "00010837518017815013": 111, "000114809": 58, "000117": 111, "00011720387667794871": 111, "00011999999999999999": 122, "00012318090522739773": 145, "000137771": 58, "00013780312900865102": 111, "000138": 111, "00014655353377531386": 111, "000147": 111, "00015573308791388857": 111, "000156": 111, "000160733": 58, "00017999999999999998": 122, "000183694": 58, "0001934": 75, "0002": 75, "000201": 111, "00020125986010833822": 111, "000206656": 58, "000229618": 58, "00023999999999999998": 122, "00024817627457812105": 122, "000252580": 58, "00025268062760848447": 111, "000253": 111, "0002690838939219355": 122, "000275542": 58, "000278": 111, "0002783071457913188": 111, "00028567627457812104": 122, "0002963292387221365": 122, "000298504": 58, "0003": [75, 110, 122, 179, 216], "000321465": 58, "0003337215379814711": 111, "000344427": 58, "000367389": 58, "000390351": 58, "0003956739992645453": 110, "000413313": 58, "000436274": 58, "000459236": 58, "000482198": 58, "000505160": 58, "000528122": 58, "000551083": 58, "000574045": 58, "000597007": 58, "0006117052461950424": 111, "000612": 111, "0006176728557486812": 117, "000619969": 58, "0006335017983123325": 145, "000642931": 58, "000665892": 58, "00066589243287212298": 58, "000686556815682806": 111, "000687": 111, "000688854": 58, "000711816": 58, "000734778": 58, "000757740": 58, "000773": 111, "000773164099660496": 111, "000780701": 58, "000786432": 147, "000803663": 58, "000826625": 58, "000849587": 58, "000872549": 58, "0008809659262803036": 111, "000881": 111, "000895511": 58, "000918472": 58, "000941434": 58, "000964396": 58, "000987358": 58, "000e": 147, "000u": [112, 113], "001": [52, 67, 76, 111, 112, 113, 115, 123, 210, 212, 216, 225, 229], "0010": 62, "001010320": 58, "001033281": 58, "001036": 111, "0010361814617577633": 111, "0010535790334329838": 111, "001054": 111, "001056243": 58, "001079205": 58, "001102167": 58, "001113589": 58, "001115805": 58, "001118034": 58, "001120277": 58, "001122533": 58, "001124803": 58, "001125129": 58, "001127087": 58, "001129385": 58, "001131697": 58, "001134023": 58, "001136364": 58, "001138719": 58, "001141089": 58, "001143473": 58, "001145873": 58, "001148090": 58, "001148288": 58, "001150718": 58, "001153164": 58, "001155625": 58, "001158103": 58, "001160596": 58, "001163105": 58, "001165631": 58, "001168173": 58, "001170732": 58, "001171052": 58, "001173308": 58, "001175901": 58, "001178511": 58, "00117851130197757937": 58, "001181139": 58, "001183784": 58, "001186447": 58, "001189129": 58, "001191828": 58, "001194014": 58, "001194546": 58, "001197283": 58, "001200038": 58, "001202813": 58, "001205607": 58, "001208421": 58, "001211254": 58, "001214107": 58, "001216976": 58, "001216981": 58, "001219875": 58, "001222790": 58, "001225726": 58, "001228683": 58, "001231662": 58, "001234662": 58, "001237684": 58, "001239938": 58, "001240729": 58, "001241": 75, "001243796": 58, "001246887": 58, "001250000": 58, "001253137": 58, "001256297": 58, "00125948180464969628": 58, "001259482": 58, "001262691": 58, "001262899": 58, "001265924": 58, "001269183": 58, "001272466": 58, "001275776": 58, "001279111": 58, "001282473": 58, "001285861": 58, "001289277": 58, "001292719": 58, "001296190": 58, "001299688": 58, "001303215": 58, "001306771": 58, "001308823": 58, "00130882305771417282": 58, "001310356": 58, "001313971": 58, "001317616": 58, "001321291": 58, "0013218201389535288": 111, "001322": 111, "001324997": 58, "001328735": 58, "001331785": 58, "001332504": 58, "001336306": 58, "001340141": 58, "001344008": 58, "001347910": 58, "001351845": 58, "001354747": 58, "001355815": 58, "00135982073305105332": 58, "001359821": 58, "001363862": 58, "001367939": 58, "001372053": 58, "001376205": 58, "001377708": 58, "001380394": 58, "001384622": 58, "001388889": 58, "001393196": 58, "001397542": 58, "001400670": 58, "001401930": 58, "001406360": 58, "001410832": 58, "001415346": 58, "001419905": 58, "001423632": 58, "001424507": 58, "001429155": 58, "001433848": 58, "001435": 111, "001435256951747305": 111, "001438588": 58, "001443376": 58, "001446594": 58, "001448211": 58, "001453095": 58, "001458030": 58, "001463014": 58, "001468051": 58, "001469556": 58, "001473139": 58, "001474": 111, "0014744814187987805": 111, "001478281": 58, "001483477": 58, "001488728": 58, "00148872833543853430": 58, "001492518": 58, "001494036": 58, "001499400": 58, "0015": 179, "001504823": 58, "001510305": 58, "001515479": 58, "001515848": 58, "001521452": 58, "001527118": 58, "001532848": 58, "001538441": 58, "001538644": 58, "001544505": 58, "001550434": 58, "001556432": 58, "001561403": 58, "001562500": 58, "001568640": 58, "001574852": 58, "001581139": 58, "001584365": 58, "001587502": 58, "001593942": 58, "001600461": 58, "001607061": 58, "001607327": 58, "001610": 111, "0016100557130809725": 111, "001613743": 58, "001620509": 58, "001627361": 58, "001630288": 58, "001634301": 58, "001641330": 58, "001648451": 58, "001653250": 58, "001655665": 58, "001662975": 58, "00166297526309434830": 58, "001670383": 58, "001676212": 58, "001677890": 58, "001685500": 58, "001693214": 58, "001699174": 58, "001701035": 58, "001708965": 58, "001717007": 58, "001722136": 58, "001725164": 58, "001733438": 58, "001741833": 58, "001745097": 58, "001750350": 58, "001758994": 58, "001767767": 58, "001768059": 58, "00176955": 179, "001776673": 58, "001785714": 58, "001791021": 58, "001794895": 58, "001804220": 58, "001813691": 58, "001813983": 58, "001823312": 58, "001833089": 58, "001836945": 58, "001843024": 58, "001853123": 58, "001859906": 58, "001863390": 58, "001873829": 58, "001882868": 58, "001884446": 58, "001895245": 58, "001905830": 58, "001906232": 58, "001917412": 58, "00191741247211842623": 58, "001928792": 58, "002": 123, "0021": 123, "002163735205972857": 111, "002164": 111, "0022265049091528": 111, "002227": 111, "002828659192464365": 145, "002m": 113, "003": 58, "0032607856453568743": 111, "003261": 111, "00360": 58, "00368": 119, "0037": 57, "00397773": 52, "003e": 147, "004": [58, 118], "0040": 57, "0048": [57, 119], "005": 58, "00504": 58, "0052": 75, "005505024000000005": 147, "006": 58, "00635da5926ac5242": 89, "007": [58, 212], "007358": 111, "007358246850183679": 111, "0078": 58, "0079": 119, "008": [52, 58], "0083": 123, "0085": 123, "009": 58, "0092": 123, "0093926": 52, "0095": 123, "00it": 58, "01": [3, 52, 53, 57, 58, 65, 68, 70, 71, 76, 81, 111, 112, 113, 119, 123, 147, 158, 179, 189, 202, 216, 237], "010": 58, "0100": 57, "01034": 58, "0105": 58, "01073": 58, "010800335098500296": 145, "011": [52, 58], "01100100": 62, "01113741": 74, "011485": 179, "01154": 58, "0116": 123, "0117": [58, 119, 123], "0117797851562": 57, "0119": 57, "01190": 58, "012": 58, "0123": 119, "01268460e": 52, "0128": 123, "01296468e": 52, "013": 58, "0131": 123, "01326592e": 147, "0133": 75, "0134": 57, "01348": 117, "0139": 57, "014": [58, 230], "01414": 58, "015": [58, 173], "0154": 123, "0155": 123, "01573031": 52, "016": [57, 58, 202], "0161": 123, "01680719": 52, "017": [58, 75], "018": [52, 58], "01813": 58, "0183": 154, "019": 58, "01903": 58, "01989888e": 147, "01_demo_start_mast": 88, "01_demo_start_work": 88, "01it": 58, "01t00": 237, "02": [52, 53, 57, 58, 71, 76, 82, 111, 112, 113, 118, 119, 147, 179], "020": [1, 10, 58, 75, 229], "0200": 57, "02031558": 74, "02051282": 74, "02077184": 52, "020m": 113, "021": [58, 230], "0213": 57, "0216": 58, "021837805972314456": 71, "021837813003862862": 71, "021838": 71, "021u": 113, "022": 58, "0220": 119, "02212": 58, "022951": 71, "023": 58, "0230": 57, "02311": 117, "02348": 58, "0237": [119, 123], "023u": 113, "024": 58, "0240000000000006e": 147, "02400000e": 147, "0243": 123, "024319": 71, "02481475": 52, "025": [58, 67], "02531": 120, "026": 58, "02610394": 52, "02634": 58, "026424115199999983": 147, "02686654": 52, "026965": 71, "027": 58, "02727": 58, "02728274": 52, "0273": 58, "027700": 71, "028": 58, "02804": 58, "02820": 58, "0287": 119, "029": 58, "0290": 57, "029624": 119, "02978723": 61, "02982": 58, "02cc9a3a21eecdc77": 89, "02e": 147, "02it": 58, "03": [3, 52, 53, 58, 75, 88, 111, 112, 113, 119, 147, 179, 229, 238], "030": [58, 212], "0300": 57, "03001556": 68, "0302": 57, "030300": 71, "030542": 71, "0307_discrete_uniform_distribut": 157, "031": [58, 75, 212], "03102": 58, "031093": 119, "0311": 75, "0312": [119, 123], "0317": 123, "03181818": 74, "032": 58, "0320": 57, "03265": [0, 1, 54, 56, 122], "032m": 113, "033": 58, "03320": 58, "033271": 119, "03333333333333333": 74, "03368": 58, "034": 58, "03400": 0, "0344": 119, "03456107231520094": 145, "035": 58, "0352": 58, "0358": 123, "03591285": 52, "036": 58, "03639": 58, "0365": 119, "0366": 154, "0369": 119, "037": 58, "03762": 0, "038": [58, 67], "0385": 57, "038522": 119, "0387": 57, "0387310738": 0, "039": [58, 111, 212], "0397": 123, "0398": 57, "03983": [0, 1, 122], "04": [52, 53, 58, 62, 90, 112, 113, 119, 145, 147, 229], "040": [58, 229], "0400": 57, "04005": 58, "04029": 58, "04075968": 74, "040u": 113, "041": [58, 111, 229], "04108": 58, "04199": 58, "042": [58, 111, 229], "0423": 123, "04238": 58, "042384711361475": 117, "042m": 113, "042u": 113, "043": [58, 111], "0430": 58, "0431": 58, "04374": 58, "044": [58, 111], "04407": 58, "044715": [55, 57], "045": [58, 111], "04541": 58, "04554": 75, "04557": 58, "04572": 58, "04581": 58, "04588": 58, "04590306": 52, "046": [58, 111], "04615385": 61, "04650": 58, "0469": 58, "047": [58, 67], "0473": 0, "0479": 123, "047m": 113, "048": 58, "0488": 75, "048m": 113, "049": 58, "04it": 58, "05": [0, 30, 52, 53, 57, 58, 61, 65, 67, 74, 75, 88, 89, 90, 110, 111, 112, 113, 114, 116, 118, 119, 122, 123, 145, 147, 155, 173, 216], "050": 58, "0500": [57, 68], "05012": 58, "05029": 58, "0504aa": [142, 147, 158, 173], "05074": 58, "0508": 58, "050m": 113, "051": 58, "05101": [0, 1, 54, 56], "05111": 58, "05137": 0, "0517": 58, "052": [52, 58], "05235": 58, "05245375": 68, "05295": 58, "053": 58, "054": 58, "0549": 75, "054911": 75, "054e": 147, "055": 58, "055036514621123e": 145, "0553": 123, "05541": 75, "05579": 75, "056": 58, "05611": 58, "0566": 123, "05660": 58, "057": [52, 58], "0576": 57, "057m": 113, "058": [52, 58, 119], "0580": 57, "0582": 123, "05893": 58, "059": [52, 57, 58], "05930": 58, "0596": 57, "05it": 58, "05t07": 89, "06": [52, 53, 58, 71, 111, 113, 119, 145, 147, 158, 173, 179, 216], "060": 58, "0600": 57, "06027": 58, "0604": 123, "0605": 57, "06064": 58, "06065": 58, "061": 58, "0611e": [57, 123], "061714": 75, "06183": 58, "061u": 113, "062": 58, "0623": 57, "0625": 65, "0629": 57, "06291": 58, "062u": 113, "063": 58, "0631": 58, "06352": 58, "06375": 58, "063954498667164e": 145, "064": 58, "0642": 57, "064411": 71, "06444215": 74, "064466": 71, "0648": 68, "065": 58, "06506": 58, "065888": 71, "066": [52, 58], "06666667": 126, "067": 58, "0671": 68, "0672": 57, "0674": 119, "0677": 57, "068": 58, "0680": 123, "069": 58, "0690": 58, "06934": 58, "0699": 57, "06it": 58, "06x": 230, "07": [52, 53, 58, 71, 75, 110, 111, 113, 114, 118, 119, 127, 145, 147, 210], "070": [58, 111], "0703": 58, "07043": 58, "0709589389998655": 111, "070959": 111, "070m": 113, "071": [58, 111], "07112360400060425": 111, "071131": 111, "07113105599910341": 111, "07117068199986534": 111, "071171": 111, "07128997600011644": 111, "0713498349996371": 111, "071350": 111, "07186": 58, "07193": 58, "072": [58, 75, 111, 230], "07201": 58, "07217": 58, "072292": 111, "07229203399947437": 111, "07239872597": 68, "07290069700047752": 111, "073": [58, 111], "07313682499989227": 111, "073137": 111, "07318": 58, "07319": 58, "0732": 119, "0734": 123, "07369880799979": 111, "073699": 111, "07374182e": 147, "07376415900034772": 111, "0737714920005601": 111, "07379378780005937": 111, "073794": 111, "0738": 111, "07382289199995284": 111, "073823": 111, "07382382700052403": 111, "073859": 111, "07385925299968221": 111, "074": 58, "074113": 111, "07411301600022853": 111, "07416": 58, "07416739": 52, "07425473500006774": 111, "074255": 111, "07425991700074519": 111, "0744": 57, "074693272212485": 117, "075": [58, 111, 230], "075171": 111, "07517127899973275": 111, "0756": 57, "0759": 75, "076": 58, "077": [58, 111], "0770235424421242": 111, "0774": 57, "077u": 113, "078": [58, 111], "07837": 58, "07841499799997109": 111, "07844": 58, "078464": 111, "07846403200073837": 111, "07899": 58, "079": [58, 111], "0791": 57, "079124": 111, "07912403600003018": 111, "07924": 58, "0794": 123, "07965": 58, "07it": 58, "08": [52, 53, 57, 58, 62, 75, 82, 90, 110, 111, 112, 113, 114, 116, 142, 145, 169, 173, 216], "080": 58, "080725": 71, "0808": 123, "08080724e": 52, "081": 58, "08107823": 52, "081857": 75, "082": 58, "0827": 57, "082m": 113, "083": [52, 58], "083u": 113, "084": 58, "08465": 58, "085": 58, "08556": 58, "086": 58, "0861": 123, "0869": 123, "087": 58, "08730": 0, "0876": 57, "087u": 113, "088": 58, "0880803839999999": 147, "089": 58, "08966": 58, "0898": 58, "08d41f68bf12ca54b": 89, "08it": 58, "09": [52, 53, 57, 58, 110, 111, 113, 118, 123, 145, 216, 230], "090": 58, "09015931908313288": 145, "0904": 76, "0909": 76, "091": 58, "0915": 58, "092": 58, "09206": 58, "09214": 58, "0927": 57, "093": 58, "09317": 75, "09336": 58, "093519": 111, "0935192509996341": 111, "0937": 75, "093725": 75, "0938": [57, 58], "094": [52, 58], "0945": 123, "095": 58, "0958": 57, "095999999999997e": 147, "096": 58, "09600000e": 147, "096400": 71, "0967": 76, "09685": [0, 69, 70], "097": 58, "0974": 76, "0975": 76, "0977": 123, "0978": 57, "098": [58, 237], "0986": [57, 76], "0987": [57, 76], "0987654321": 237, "099": 58, "0992": 76, "0993": 76, "09it": 58, "0a0": 113, "0b3": 99, "0d": 79, "0d3": 58, "0e": 216, "0m": 113, "0mnote": 113, "0pt": 30, "0x": 236, "0x102258670": 221, "0x1023d53a0": 221, "0x1023d5700": 221, "0x1023d58b0": 221, "0x1023d5b80": 221, "0x107dfab80": 236, "0x10c214040": 236, "0x10c214310": 236, "0x110569740": 229, "0x1181f8e50": 234, "0x1181f8ee0": 234, "0x1181f8f70": 234, "0x118202040": 234, "0x1182020d0": 234, "0x29a6b1430": 62, "0x56509baa4940": 116, "0x56509d071a70": 116, "0x56509d073eb0": 116, "0x7f30303f5450": 116, "0x7f303040a040": 116, "0x7f303040a0d0": 116, "0x7f303040a160": 116, "0x7f303040a1f0": 116, "0x7f303040a280": 116, "0x7f303040a310": 116, "0x7f303040a3a0": 116, "0x7f303040a430": 116, "0x7f303040a4c0": 116, "0x7f303040a550": 116, "0x7f303040a5e0": 116, "0x7f303040a670": 116, "0x7f303040a700": 116, "0x7f303040a790": 116, "0x7f303040a820": 116, "0x7f303040a8b0": 116, "0x7f303040a940": 116, "0x7f303040a9d0": 116, "0x7f303040aa60": 116, "0x7f303040aaf0": 116, "0x7f303040ab80": 116, "0x7f303040ac10": 116, "0x7f303040aca0": 116, "0x7f303040ad30": 116, "0x7f303040adc0": 116, "0x7f303040ae50": 116, "0x7f3030412040": 116, "0x7f30304120d0": 116, "0x7f3030412160": 116, "0x7f30304121f0": 116, "0x7f3030412280": 116, "0x7f3030412310": 116, "0x7f30304123a0": 116, "0x7f3030412430": 116, "0x7f30304124c0": 116, "0x7f3030412550": 116, "0x7f30304125e0": 116, "0x7f3030412670": 116, "0x7f3030412700": 116, "0x7f3030412790": 116, "0x7f3030412820": 116, "0x7f30304128b0": 116, "0x7f3030412940": 116, "0x7f30304129d0": 116, "0x7f3030412a60": 116, "0x7f3030412af0": 116, "0x7f3030412b80": 116, "0x7f3030412c10": 116, "0x7f3030412ca0": 116, "0x7f3030412d30": 116, "0x7f3030412dc0": 116, "0x7f3030412e50": 116, "0x7f3030412ee0": 116, "0x7f3030412f70": 116, "0x7f30304155e0": 116, "0x7f3030415670": 116, "0x7f3030415700": 116, "0x7f3030415790": 116, "0x7f3030415820": 116, "0x7f30304158b0": 116, "0x7f3030415940": 116, "0x7f30304159d0": 116, "0x7f3030415a60": 116, "0x7f3030415af0": 116, "0x7f3030415b80": 116, "0x7f3030415c10": 116, "0x7f3030415ca0": 116, "0x7f3030415d30": 116, "0x7f3030415dc0": 116, "0x7f3030415e50": 116, "0x7f3030415ee0": 116, "0x7f3030415f70": 116, "0x7f303041d040": 116, "0x7f303041d0d0": 116, "0x7f303041d280": 116, "0x7f303041d3a0": 116, "0x7f303041d430": 116, "0x7f303041d4c0": 116, "0x7f303041d550": 116, "0x7f30304216d0": 116, "0x7f3030421940": 116, "0x7f3031bb61f0": 116, "0x7f3031c6a1f0": 116, "0x7f304da8b3a0": 116, "0x7f304da8bc10": 116, "0x7f304da8bca0": 116, "0x7f304da8bd30": 116, "0x7f304da8bdc0": 116, "0x7f304daff040": 116, "0x7f304daff160": 116, "0x7f304daff1f0": 116, "0x7f304daff280": 116, "0x7f304daff310": 116, "0x7f304daff3a0": 116, "0x7f304daff4c0": 116, "0x7f304deb9820": 116, "0x7f304deb9f70": 116, "0x7f304df53e50": 116, "0x7f304df53ee0": 116, "0x7f304df53f70": 116, "0x7f304df58040": 116, "0x7f304df580d0": 116, "0x7f304df58280": 116, "0x7f304df58310": 116, "0x7f304df583a0": 116, "0x7f304df58430": 116, "0x7f304df584c0": 116, "0x7f304df58550": 116, "0x7f304df585e0": 116, "0x7f304df58670": 116, "0x7f304df588b0": 116, "0x7f304df58940": 116, "0x7f304df589d0": 116, "0x7f304df58e50": 116, "0x7f304df58ee0": 116, "0x7f304df58f70": 116, "0x7f304df5a040": 116, "0x7f304df5a1f0": 116, "0x7f304df5a280": 116, "0x7f304df5a310": 116, "0x7f304df5a3a0": 116, "0x7f304df5a430": 116, "0x7f304df5a4c0": 116, "0x7f304df5a550": 116, "0x7f304df5a5e0": 116, "0x7f304df5a670": 116, "0x7f304df5a700": 116, "0x7f304df5a790": 116, "0x7f304df5a820": 116, "0x7f304df5a8b0": 116, "0x7f304df5a940": 116, "0x7f304df5a9d0": 116, "0x7f304df5aa60": 116, "0x7f304df5aaf0": 116, "0x7f304df5ac10": 116, "0x7f304df5ad30": 116, "0x7f304df5adc0": 116, "0x7f304df5ae50": 116, "0x7f304df5aee0": 116, "0x7f304df5af70": 116, "0x7f304df5d160": 116, "0x7f304df5d1f0": 116, "0x7f304df5d310": 116, "0x7f304df5d3a0": 116, "0x7f304df5d430": 116, "0x7f304dfa0280": 116, "0x7f304dfa0310": 116, "0x7f304dfa03a0": 116, "0x7f304dfa0430": 116, "0x7f304dfa04c0": 116, "0x7f304dfa0550": 116, "0x7f304dfa05e0": 116, "0x7f304dfa0670": 116, "0x7f304dfa0700": 116, "0x7f304dfa0820": 116, "0x7f304dfa08b0": 116, "0x7f304dfa0940": 116, "0x7f304dfa09d0": 116, "0x7f304dfa0a60": 116, "0x7f304dfa0af0": 116, "0x7f304dfa0b80": 116, "0x7f304dfa0c10": 116, "0x7f304dfa0ca0": 116, "0x7f304dfa0d30": 116, "0x7f304dfa0e50": 116, "0x7f304dfa0f70": 116, "0x7f304dfa3040": 116, "0x7f304dfa30d0": 116, "0x7f304dfa3160": 116, "0x7f304dfa31f0": 116, "0x7f304dfa3280": 116, "0x7f304dfa3310": 116, "0x7f304dfa33a0": 116, "0x7f304dfa3430": 116, "0x7f304dfa3b80": 116, "0x7f304dfa3c10": 116, "0x7f304dfa3ca0": 116, "0x7f304dfa3d30": 116, "0x7f304dfa3dc0": 116, "0x7f304dfa3e50": 116, "0x7f304dfa3ee0": 116, "0x7f304dfa3f70": 116, "0x7f304dfa6040": 116, "0x7f304ff043a0": 116, "0x7f30501be040": 116, "0x7f30501be0d0": 116, "0x7f30501be160": 116, "0x7f31148eaee0": 116, "0x7f31148eaf70": 116, "0x7f31148ed040": 116, "0x7f31148ed0d0": 116, "0x7f31148ed160": 116, "0x7f31148ed1f0": 116, "0x7f31148ed280": 116, "0x7f31148ed310": 116, "0x7f31148ed3a0": 116, "0x7f31148ed430": 116, "0x7f31148ed4c0": 116, "0x7f31148ed550": 116, "0x7f31148ed670": 116, "0x7f31148ed700": 116, "0x7f31148ed790": 116, "0x7f31148ed820": 116, "0x7f31148ed8b0": 116, "0x7f31148ed9d0": 116, "0x7f31148edaf0": 116, "0x7f31148edb80": 116, "0x7f31148edca0": 116, "0x7f31148edd30": 116, "0x7f31148eddc0": 116, "0x7f31148ede50": 116, "0x7f31148edee0": 116, "0x7f31148edf70": 116, "0x7f31148f0040": 116, "0x7f31148f00d0": 116, "0x7f31148f0160": 116, "0x7f31148f01f0": 116, "0x7f31148f0280": 116, "0x7f31148f0310": 116, "0x7f31148f03a0": 116, "0x7f31148f0430": 116, "0x7f31148f04c0": 116, "0x7f31148f0550": 116, "0x7f31148f05e0": 116, "0x7f31148f0670": 116, "0x7f31148f0700": 116, "0x7f31148f0790": 116, "0x7f31148f0820": 116, "0x7f31148f08b0": 116, "0x7f31148f0940": 116, "0x7f31148f09d0": 116, "0x7f31148f0a60": 116, "0x7f31148f0af0": 116, "0x7f31148f0b80": 116, "0x7f31148f0c10": 116, "0x7f31148f0ca0": 116, "0x7f31148f0d30": 116, "0x7f31148f0dc0": 116, "0x7f31148f0e50": 116, "0x7f31148f0ee0": 116, "0x7f31148f0f70": 116, "0x7f31148f5040": 116, "0x7f31148f50d0": 116, "0x7f31148f5160": 116, "0x7f31148f51f0": 116, "0x7f31148f5280": 116, "0x7f31148f5310": 116, "0x7f31148f53a0": 116, "0x7f31148f5430": 116, "0x7f31148f54c0": 116, "0x7f31148f5550": 116, "0x7f31148f55e0": 116, "0x7f31148f5670": 116, "0x7f3138ff8af0": 116, "0x7f3140376670": 116, "0x7f31403dd2e0": 116, "0x7f31403dd520": 116, "0x7f3140419280": 116, "0x7f3140419b80": 116, "0x7f31428d2b30": 116, "0x7f31434d8820": 116, "0x7f31438e11f0": 116, "0x7f31438f4b80": 116, "0x7f31456d6c10": 116, "0x7f31456d8040": 116, "0x7f3146365960": 116, "0x7f3146370840": 116, "0x7f3b82b86d00": 225, "0x7f3b82c300a0": 225, "0x7f3b8c4a6640": 225, "0x7f7d29e12d00": 75, "0x7f7d317f51f0": 75, "0x7f7d31967040": 75, "0x7fb63a4129d0": 58, "0x7fb63a412c10": 58, "0x7fb63a413340": 58, "1": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 17, 19, 20, 22, 23, 25, 26, 27, 30, 32, 34, 35, 36, 37, 41, 43, 44, 47, 49, 50, 51, 53, 54, 58, 59, 61, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90, 92, 95, 97, 102, 105, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 154, 155, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 182, 185, 187, 189, 190, 191, 192, 194, 195, 197, 200, 202, 205, 206, 209, 210, 212, 213, 216, 217, 218, 220, 221, 225, 227, 228, 229, 230, 232, 233, 234, 236, 238], "10": [0, 1, 4, 5, 8, 10, 11, 16, 17, 19, 20, 27, 29, 30, 35, 43, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 82, 84, 86, 88, 89, 92, 94, 96, 97, 102, 105, 107, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 126, 129, 139, 142, 145, 146, 147, 149, 152, 154, 155, 157, 158, 167, 168, 169, 173, 177, 189, 202, 206, 210, 212, 213, 216, 221, 225, 229, 230, 233], "100": [3, 6, 8, 11, 17, 20, 29, 36, 52, 53, 57, 58, 61, 62, 67, 68, 71, 73, 75, 76, 79, 93, 94, 96, 97, 102, 112, 113, 114, 117, 118, 122, 123, 126, 142, 143, 145, 146, 147, 152, 155, 157, 158, 171, 179, 189, 206, 210, 212, 221, 225, 234, 237], "1000": [16, 43, 52, 53, 58, 61, 65, 67, 68, 71, 73, 96, 102, 117, 119, 122, 123, 127, 142, 143, 147, 155, 157, 158, 169, 170, 177, 206, 209, 216, 221, 230, 232], "10000": [27, 52, 55, 57, 58, 61, 65, 67, 68, 111, 112, 118, 127, 142, 145, 147, 155, 170, 171, 215], "100000": [17, 75, 114, 117, 155, 212, 215, 238], "1000000": [11, 17, 96, 127], "100000000": 229, "1000000000": 210, "1000000000000": 67, "10000001": [11, 17], "100000076": 229, "1000001": 17, "100001": 212, "100005": 212, "10001": 237, "10005": 119, "1001": 16, "100253": 113, "10029": 120, "1005": 123, "100e": 147, "100m": 113, "100th": 103, "101": [5, 52, 58, 113, 142, 162], "1010": 62, "1012": 57, "101200": 119, "1016": [1, 10], "10165": [1, 123], "101694": 111, "1016942249998465": 111, "1017": 57, "102": [52, 58, 113], "1020": 113, "1022": [76, 123], "1024": [56, 57, 71, 111, 114, 117, 119], "1024568889997681": 111, "102457": 111, "1025": 123, "1029353620": 229, "102975": 215, "102m": 113, "103": [52, 58, 117], "1033807330004493": 111, "10341": 58, "10368073345018": 117, "1039": 57, "1039737": 74, "10397816e": 52, "104": [11, 52, 58, 162], "1043404643013807e": 145, "1044": [57, 67, 76], "10464": 58, "105": [58, 61, 113], "1054": 57, "1055": [57, 58], "1057": 123, "106": [58, 113], "107": [52, 58, 113, 147], "10737418240000003": 147, "10737418240000006": 147, "10782541": 74, "108": [11, 52, 58, 113], "1082": 67, "10895": 58, "108m": 113, "109": 58, "1095": 113, "1097": 123, "10_000": [111, 113], "10_13": 58, "10cm": 158, "10it": 58, "10m": [11, 17], "10pt": [30, 32], "10x": 230, "11": [0, 1, 19, 27, 29, 43, 46, 51, 52, 53, 54, 56, 57, 58, 61, 65, 68, 71, 73, 74, 75, 76, 79, 82, 93, 110, 111, 112, 113, 117, 119, 122, 126, 145, 147, 149, 155, 158, 189, 190, 210, 212, 215], "110": [58, 61, 113], "1100": 68, "1102": 57, "1103": 57, "11047": 58, "1109": 58, "111": [52, 58, 61, 82, 93, 112, 113], "1111": [57, 62, 215], "111111": 215, "1114": 123, "1119": 57, "112": [52, 58, 75, 113, 212], "1124": 76, "113": [58, 167], "11305118925439782": 71, "113055": 111, "1130551600008403": 111, "1133": 123, "1134": 61, "11340": 58, "113814": 119, "113m": 113, "114": [58, 76, 113, 229], "114418": 67, "115": [58, 168], "11503": 57, "11511": 58, "11518": 58, "1155": 57, "1159": 120, "115902369059602": 117, "116": [58, 230], "1160": 123, "11627": 58, "11678": 58, "117": [52, 58, 61, 67, 75], "11706": 58, "11721": 58, "1176": 52, "11764": 120, "11777": 58, "117m": [56, 57], "118": 58, "11842": 58, "1184635700001309": 111, "118464": 111, "1185": 229, "11855": 58, "119": [58, 61, 113], "1190": 57, "1197": 57, "11am": 215, "11m": 76, "12": [0, 1, 6, 27, 32, 46, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 67, 68, 71, 73, 74, 76, 79, 81, 82, 83, 84, 86, 93, 111, 112, 113, 114, 117, 119, 122, 123, 126, 145, 146, 149, 154, 155, 159, 167, 169, 170, 171, 177, 189, 190, 199, 210, 212, 215, 216], "120": [58, 74, 93, 97, 102, 113, 127, 143, 147, 168, 169, 173, 189, 206, 210], "1200": 68, "12008": 58, "1201": 229, "12032": 58, "1205213247": 58, "1207959552": 117, "121": [58, 111, 112, 113], "1215": 229, "121601": 111, "1216013510002085": 111, "121720": 111, "1217202600000746": 111, "121846": 67, "121951": 75, "12196": 58, "122": [57, 58, 61, 71, 113, 230], "12200": 58, "122484": 57, "1229": 57, "123": [5, 58, 61, 75, 96, 111, 229, 237], "1232": 57, "12330": 58, "12345": [5, 215, 237], "1234567890": 237, "1234567890abcdef0": 89, "12346": 215, "1235": 57, "123m": 113, "124": [51, 57, 58, 75, 111, 119, 229], "12418": 58, "12430": 58, "124337664": 117, "12435": 58, "124439808": 117, "124m": 117, "125": [58, 61, 67, 111, 113, 119, 140, 143, 146, 154, 159, 179], "12500": 58, "1252": 123, "1253": 57, "125537": 67, "12571": 58, "12580756501576662": 71, "126": [58, 75, 113, 230], "1260": 57, "126720": 58, "127": [56, 58, 67], "1275": 119, "1277": 71, "1277818483567122": 71, "128": [52, 57, 58, 62, 71, 76, 93, 111, 113, 118, 212], "1280": [56, 57, 117], "1285": 119, "1287": 57, "129": [58, 61], "12926": 58, "12932281": 74, "129371140494332e": 145, "12938": 58, "12943": 58, "1294382": 230, "12971": 58, "12988579352203838": 145, "1298857935220386": 145, "12it": 58, "12lhq": 117, "12x10": 52, "12xlarg": 89, "13": [0, 1, 30, 43, 52, 53, 57, 58, 61, 62, 67, 68, 71, 74, 75, 76, 79, 86, 90, 93, 111, 113, 118, 145, 179, 210, 212], "130": [58, 67], "1300": 68, "1302": 57, "13059": 58, "1306": 179, "131": [58, 111], "1316": 68, "131894": 75, "13190": 58, "132": [58, 71, 113, 117], "13254": 58, "133": [58, 113, 119, 140, 141, 177], "1332": 57, "1335": 112, "1337": 58, "133m": 113, "134": [58, 113, 119], "134256": 71, "1348": 52, "1349": 57, "135": [58, 62, 67, 71, 119], "13523": 58, "13551": 58, "13594": 58, "136": [57, 58, 71, 113, 141], "1365": 113, "1368": 57, "136885": 71, "1369": 68, "136m": 113, "137": [58, 113, 119, 143], "1370": 57, "137562": 62, "137634": 62, "1377": 112, "138": [58, 61, 71], "1381": [57, 68], "13818": 58, "138639285402722e": 145, "13878": 58, "139": [58, 67, 112], "139018": 71, "13901817798614502": 71, "13901824007066116": 71, "139018252491951": 71, "13901830174555815": 71, "1391": 119, "13917": 58, "1393": 57, "13952593e": 52, "13992": 58, "139x_1": 67, "13it": 58, "13m": 76, "13px": 75, "14": [0, 1, 5, 7, 27, 46, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 65, 67, 71, 75, 76, 93, 111, 113, 117, 122, 126, 145, 165, 180, 210, 212, 229, 230], "140": [58, 61, 67, 71, 143], "1400": 68, "140150035": 58, "140255848348544": 215, "1409": 0, "14096916299559473": 71, "141": [58, 62, 67], "1411": 57, "1412": [0, 1, 54, 56], "14173": 58, "1417883": 74, "142": [58, 143], "1420": 113, "142215": 73, "1427": 57, "142m": 113, "143": [58, 67, 112, 146], "14383": 58, "144": [58, 62, 113], "14464": 58, "1448": 57, "144e": 67, "145": [58, 113], "146": [58, 67, 187], "1467": 123, "14697": 58, "147": 58, "1473": 112, "1474": 112, "147786": 111, "14778646800004935": 111, "14790": 58, "148": [58, 61], "14855": 57, "14864": 58, "14886": 58, "149": [58, 75, 146, 150], "14902": 58, "14906": 58, "1492051968": 117, "14932": 58, "1494": 71, "14943": 58, "14960491599958914": 111, "149605": 111, "14981": 58, "14986462840006426": 111, "149865": 111, "14995777100011765": 111, "149958": 111, "15": [0, 13, 19, 27, 29, 30, 43, 52, 53, 57, 58, 59, 60, 61, 62, 65, 67, 68, 71, 75, 76, 82, 93, 97, 111, 113, 119, 126, 127, 145, 169, 183, 189, 212, 216, 229], "150": [5, 58, 61, 67, 74, 102, 113], "1500": 68, "15001": 58, "15016293000007863": 111, "15019284299978608": 111, "150193": 111, "15019696000035765": 111, "1502": 57, "150206": 111, "15020622800057026": 111, "15025364100001753": 111, "150254": 111, "1503": 120, "15043866700034414": 111, "15047101199979807": 111, "15051599399976112": 111, "150516": 111, "150528": [187, 195], "1506": 75, "150630": 75, "150662": 111, "1506624739995459": 111, "151": [58, 61, 67, 75, 113, 187], "151141": 111, "15114111419989057": 111, "151170": 75, "151385": 111, "15138537599978008": 111, "15140369100026874": 111, "151430": 111, "15143018500020844": 111, "15144059900012508": 111, "151467": 111, "15146724180012824": 111, "151482": 111, "15148220399987622": 111, "15148427300027834": 111, "1515": 71, "151533": 113, "15155341100035002": 111, "15156354600003397": 111, "151564": 111, "15169357899958413": 111, "151694": 111, "1518": 57, "151936": 71, "152": [58, 75, 150, 154], "1521": 123, "1525": 119, "15265": 58, "153": 58, "15334": 58, "15369": 58, "154": 58, "15412": 58, "1542470366": 117, "15429": 58, "1542m": [56, 57], "1543": 57, "1547": 57, "154u": 113, "155": [58, 126], "1555": 57, "1558m": 117, "156": [58, 113], "157": 58, "15709": 58, "15721": 58, "15797": 58, "158": [58, 67], "158000": 119, "15832": 58, "1587": 179, "159": [58, 67, 111, 113, 229], "1596": 57, "15967": 58, "15it": 58, "15mb": 76, "15mm": 30, "16": [0, 5, 27, 51, 52, 53, 56, 57, 58, 61, 62, 65, 69, 70, 71, 75, 81, 82, 83, 84, 90, 93, 102, 111, 113, 117, 118, 119, 145, 149, 173, 175, 182, 202, 212, 221, 229, 235], "160": [58, 67, 71], "1600": [56, 57, 68, 117], "1601": [119, 120], "16025": 58, "160583": 71, "1608": [0, 1, 122], "161": [58, 61, 111, 113], "1610612736": 117, "16112": 58, "162": [58, 111, 113], "16246": 120, "1626": 57, "16299": 58, "163": [58, 76, 111], "163161": 67, "16319": 58, "163336342344337e": 68, "16337": 58, "16345": 58, "163551": 67, "1639": 57, "163u": 113, "164": [5, 58, 154, 229], "1645": 52, "164500": 71, "16458": 58, "16492": 58, "165": 58, "1650744": 62, "16515": 58, "1656": 123, "16573": 58, "16593": 58, "166": [58, 61, 67, 113], "1662": 57, "16641": 58, "1666": 68, "16663": 58, "167": [58, 61, 230], "16703": 58, "1674": 57, "16749": 58, "16789": 58, "16791": 58, "167u": 113, "168": 58, "16825": 58, "169": 58, "16967": 58, "16e9": 117, "16gb": 120, "16it": 58, "17": [0, 5, 30, 43, 52, 53, 55, 57, 58, 61, 62, 65, 69, 70, 71, 75, 78, 93, 111, 112, 113, 118, 145, 149, 176, 212], "170": [58, 67, 75, 112], "1700": 68, "1703": 0, "1705": 57, "170572": 67, "1706": 0, "170m": 113, "171": [58, 67, 112, 117], "17104": 58, "1711": [0, 1, 54, 56], "17113": 58, "1713": 123, "1715": 57, "171542": 67, "172": [52, 58, 72, 73, 75, 162, 173, 229], "17233": 58, "173": [58, 112], "1730": 57, "17312": 58, "173m": 113, "174": [58, 113, 136, 210, 230], "1740": 57, "17467": 58, "17470": 58, "17483": 58, "175": [58, 70, 113, 157], "1750": 57, "175000000000": 70, "17553": 58, "17554": 58, "1756": 57, "17592": 58, "175_000_000_000": 70, "175b": 70, "175cm": 157, "176": 58, "1762": [57, 123], "17649": 58, "17669": 58, "17684": 58, "17687": 57, "17687862": 52, "1769472": 117, "177": 58, "17716740096": 117, "17726": 58, "17748": 58, "1775": 88, "17750": 58, "17756": 58, "1777": 52, "17774": 58, "178": [58, 61, 75], "17812": 58, "1784": 76, "1785": 119, "17890": 58, "179": [58, 119, 142], "17940": 58, "1797": 61, "179m": [112, 113], "17_21": 118, "17a": [59, 60, 67], "17it": 58, "18": [0, 1, 5, 10, 43, 46, 50, 52, 53, 57, 58, 61, 65, 71, 75, 76, 78, 82, 83, 84, 88, 93, 111, 113, 122, 123, 145, 164, 172, 173, 178, 199, 212, 230], "180": [52, 58, 72, 73, 82, 84, 102, 113, 123, 145, 157, 162, 163, 173], "1800": [68, 116], "18000": 145, "18049": 58, "1805": 76, "1806": 0, "18084": 58, "18091": 58, "180m": 113, "181": [58, 75, 113], "18105": 58, "18127": 58, "181376": 71, "18142": 58, "1816": 57, "182": [52, 58], "18216": 58, "1824": 57, "18280": 58, "18283": 58, "183": [58, 68, 82], "1832": 57, "18325": 58, "1837010324217706e": 145, "184": [58, 113, 123, 163, 164], "18415520493576068": 145, "184352": 67, "18446": 58, "18472": 58, "185": [58, 164, 165], "18510": 58, "1854": 57, "1859": 57, "185m": 113, "186": [58, 75], "18672": 58, "186793": 67, "18694": 58, "186992": 75, "186m": 113, "187": 58, "1870": [57, 75], "18728": 58, "1874": 57, "18750": 58, "1877": 57, "18799": 58, "188": 58, "18800": 58, "18810": 58, "1882": 57, "1883946428808775e": 145, "18864": 58, "18872": 58, "189": [58, 61, 75], "18926": 58, "18988": 58, "189m": 112, "18it": 58, "18m": 76, "19": [0, 30, 53, 57, 58, 60, 61, 68, 71, 75, 79, 93, 111, 112, 113, 117, 145, 181, 184, 212, 229, 230], "190": [58, 75, 82, 229], "1900": 68, "1908": [0, 1, 54, 56, 57, 122], "190853": 67, "19086": 58, "191": [58, 62, 83], "1910": 68, "19145": 58, "1915": 57, "19173": 58, "19176": 58, "19188": 58, "19189": 58, "192": [58, 71, 112], "1920929e": 210, "19235": 58, "19277": 58, "19299": 58, "193": [58, 65, 75, 76], "1930": 68, "19314": 58, "19326": 58, "19327": 58, "19344": 58, "19359": 58, "19368": 58, "1937": 57, "193731": 67, "193m": 113, "194": [58, 75], "19402": 58, "19404179e": 52, "19415": 58, "19451": 58, "195": [58, 75, 83], "1951": 76, "19511": 58, "19542": 58, "196": [57, 58, 75, 165, 166], "19606": 58, "19611": 58, "19634": 58, "19635": 58, "196406": 57, "19650": 58, "19657": 58, "19677": 58, "19680": 58, "197": [58, 75, 113], "1970": [57, 97], "19712": 58, "19767": 58, "197674": 75, "1977": 52, "198": [57, 58, 75], "1980": 16, "19802": 58, "1982": 142, "19833": 58, "19841": 58, "1988": 75, "198830": 75, "19892": 58, "198m": 113, "199": [58, 140], "1990": 237, "1992": [52, 53, 57, 58, 61, 70, 74, 103, 127, 142, 155, 173, 216], "1997": [65, 72, 73, 81, 82], "1998": 76, "19981": 58, "1999": [52, 237], "19999749": 52, "199m": 113, "19e": 67, "19it": 58, "19th": 10, "1_": 50, "1_000_000": [113, 117], "1_loss": 106, "1cm": [30, 32, 158], "1d": [52, 53, 57, 61, 62, 73, 79, 175, 190, 210], "1e": [53, 57, 58, 61, 67, 74, 111, 113, 114, 116, 118, 119, 123, 210, 229, 238], "1e6": 119, "1f": 169, "1f88c7c765d2532fd57d8ee719a751b3_mit18_05s14_reading5b": 0, "1introduct": [22, 23], "1j": 55, "1k": 60, "1m": [11, 17], "1mb": 76, "1n": [55, 79, 117], "1p": [55, 117], "1st": [52, 57, 65, 118, 132, 206], "1x7": 58, "1x7x18": 58, "2": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 17, 19, 20, 22, 26, 30, 32, 34, 36, 43, 44, 47, 48, 49, 50, 51, 53, 54, 58, 59, 61, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90, 92, 94, 96, 101, 105, 110, 111, 112, 113, 114, 115, 116, 119, 120, 124, 125, 126, 127, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 154, 155, 157, 158, 159, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 185, 189, 190, 191, 192, 193, 194, 195, 197, 200, 202, 203, 205, 206, 209, 210, 212, 213, 216, 220, 225, 227, 228, 229, 230, 232, 233, 234, 236, 238], "20": [0, 5, 29, 30, 52, 53, 56, 57, 58, 61, 62, 67, 68, 71, 74, 75, 79, 82, 84, 88, 89, 93, 97, 102, 111, 112, 113, 116, 117, 118, 119, 122, 123, 126, 127, 142, 145, 154, 155, 158, 173, 176, 179, 180, 212, 215, 225, 229, 230, 237], "200": [58, 61, 68, 75, 93, 94, 95, 102, 117, 122, 145, 147, 173, 189, 230], "2000": [52, 57, 58, 68, 86, 118, 123, 142, 145, 147], "20000": [27, 110, 145], "200000": 215, "20003": 58, "2001": [59, 60, 67], "2003": [52, 57, 237], "20030": 58, "2006": [1, 123], "2007": [0, 1, 10, 52, 67, 73, 123], "20071": 58, "20077778": 142, "2008": 93, "2009": 76, "20095": 58, "200u": 113, "201": [58, 113, 140, 166, 167], "2010": 57, "2012": [1, 10, 65], "2013": [1, 10], "20132659199999992": 147, "2013265920000001": 147, "2014": [0, 1, 54, 56, 57, 58, 65, 75, 83, 139, 140, 141, 167, 168, 169, 172, 173, 197, 199, 200, 202, 203, 205], "2015": 120, "2016": [0, 1, 51, 52, 58, 59, 60, 62, 66, 67, 72, 73, 122, 123, 192, 193], "20162": 58, "201654": 67, "20167": 58, "2017": [0, 1, 49, 50, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 70, 72, 73, 92, 94, 96, 97, 99], "2018": [0, 56, 67, 86], "2018fa": 73, "2019": [0, 1, 54, 55, 56, 57, 58, 70, 122, 145], "202": [52, 58, 61, 141], "2020": [0, 51, 52, 56, 57, 75, 78, 79, 83], "20201207": 52, "2021": [0, 1, 48, 52, 54, 56, 67, 69, 70, 72, 73, 75, 120, 122, 123, 129, 132, 140, 141, 142, 143, 146, 150, 152, 154, 155, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 192, 194, 195, 197, 199, 200, 202, 203, 205, 206, 207, 209, 210], "20216": 58, "2022": [0, 30, 49, 51, 52, 59, 60, 62, 66, 67, 72, 73, 75, 86, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109, 117, 142, 154, 216, 236], "20221": 58, "2023": [0, 1, 27, 48, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 86, 113, 122, 123, 210], "20230310": [111, 113], "2024": [52, 53, 57, 58, 61, 67, 68, 71, 74, 88, 89, 90, 110, 111, 112, 113, 114, 118, 119, 120, 216, 230], "20240509_155331": 216, "20255": 58, "203": [58, 180], "20334": 58, "20363": 58, "20368": 58, "20388": 57, "204": [58, 180], "20437": 58, "2047": 57, "204m": 113, "205": [58, 61, 62, 113, 167, 168, 179], "20529": 58, "205386853706048e": 145, "20556": 58, "20597": 58, "206": [58, 76, 141], "2061": 57, "206343": 62, "20641": 58, "20647": 90, "206487": 62, "20682": 58, "20696": 58, "207": [58, 113, 190, 194], "20714893e": 52, "2072": 57, "20785": 58, "208": 58, "20811": 58, "2083": 120, "209": [58, 126], "20924": 58, "20941894": 52, "2095": 123, "20950": 58, "20952": 58, "20_000_000": 230, "20it": 58, "21": [0, 27, 51, 52, 53, 57, 58, 59, 60, 61, 62, 65, 67, 71, 73, 75, 76, 79, 93, 111, 113, 117, 119, 131, 145, 189, 190, 212, 215], "210": [58, 61], "2100": 68, "21026": 58, "2103": 57, "2106": [0, 1, 69, 70, 123], "211": [58, 168, 169], "21100": 58, "21120": 57, "2118": 229, "212": [58, 61, 75], "21214": 58, "212272604": 70, "21260": 58, "212600881152": 117, "212625": 119, "212800": 119, "213": [54, 56, 58, 65, 75, 113, 205], "21306": 58, "21339": 58, "21360": 58, "21371": 58, "21373": 58, "21375": 58, "2139551385": 116, "214": [58, 75, 113], "21412": 58, "21428": 58, "215": [58, 61, 75, 111], "21544": 58, "21582": 58, "215m": 113, "216": [58, 170], "21621622": 74, "21637": 58, "21644": 58, "21660": 58, "21666": 58, "2168": [58, 67], "21694": 58, "216m": 113, "217": [58, 75, 111], "2174": 67, "21747": 58, "21750": 58, "21789": 58, "217m": 113, "218": [58, 76, 88, 111], "21822": 58, "21832664599969576": 111, "218327": 111, "21856": 58, "2188": 58, "21898": 58, "219": [58, 111, 113, 206], "219012": 119, "21922": 58, "21946": 58, "21it": 58, "22": [0, 1, 52, 53, 54, 56, 57, 58, 60, 61, 67, 71, 72, 73, 74, 79, 93, 111, 113, 117, 136, 138, 145, 172, 189, 190, 210, 212, 230], "220": [58, 76, 170, 206], "2200": 68, "22008085299967206": 111, "2201": 119, "22015970299980836": 111, "220160": 111, "22016962399993645": 111, "22020937799970852": 111, "220236": 111, "22023602300032508": 111, "2203": 123, "2203388449999693": 111, "220339": 111, "2204": 117, "2204785499998252": 111, "220479": 111, "22048294700016413": 111, "220491": 111, "22049137779995362": 111, "22050": 58, "22057815300013317": 111, "22060177200000908": 111, "2206222049999269": 111, "22067": 58, "22067614660008986": 111, "22077888900003018": 111, "22078104100000928": 111, "220830": 111, "22083036900039588": 111, "22087210900008358": 111, "22097": 58, "221": [58, 74], "22100": 58, "22108890900017286": 111, "221089": 119, "22120609100056754": 111, "22177": 58, "221m": 113, "222": [58, 74, 75, 113, 210], "222001509455": 68, "22200150945545": 68, "22226": 58, "22227": 58, "22234672700051306": 111, "222347": 111, "22247255000002042": 111, "222473": 111, "22247573399999965": 111, "222476": 111, "22253749899937247": 111, "22256": 58, "22256395700060239": 111, "222564": 111, "22257933899982163": 111, "222611": 111, "22261103200016805": 111, "22269292600049084": 111, "222693": 111, "2227": [0, 57], "22273382500043226": 111, "222744": 111, "2227441450004335": 111, "22283626599983108": 111, "223": [1, 10, 58, 61, 169, 172], "22307": 57, "22339": 58, "22344": 58, "22360": 58, "22369271400002616": 111, "223693": 111, "224": [58, 114, 187, 195, 216], "22404": 58, "224073": 111, "22407326100073988": 111, "22411": 58, "22419899699980306": 111, "224199": 111, "22421371400014323": 111, "22424623200004135": 111, "224320": 111, "2243202702000417": 111, "224344": 111, "22434405200001492": 111, "2243646639999497": 111, "224365": 111, "224382": 111, "22438234299988835": 111, "224439366000297": 111, "22444049899968377": 111, "22447669499979384": 111, "224477": 111, "22448583999994298": 111, "224486": 111, "2245766099995308": 111, "224577": 111, "225": [58, 210, 216], "225000": 75, "2252": [57, 68], "2255011379993448": 111, "22584": 58, "22588": 58, "226": [58, 173], "2260": 57, "2264": 119, "2267129073316": 76, "22681": 58, "227": [58, 62], "22734": 58, "2275": 65, "227551": 119, "2279": 119, "228": 58, "228008": 111, "22800831199947424": 111, "22808": 58, "229": [58, 172, 216], "2291029060015717": 111, "229103": 111, "22934": 58, "22it": 58, "23": [0, 27, 29, 53, 57, 58, 60, 61, 67, 71, 79, 88, 93, 97, 111, 112, 113, 138, 145, 147, 187, 190, 212], "230": [58, 173], "2300": 68, "2300073": 74, "2305": [57, 58], "23076": 58, "231": [58, 71, 75, 113], "23103": 58, "23106": 58, "2313": 68, "2314": 119, "231u": 113, "232": [58, 112], "23207": 58, "2323": 57, "23274": 58, "232_queue_using_stacksapop": 36, "233": [27, 58], "23306": 58, "234": [27, 58], "2341": 123, "23415": 58, "234320807092859e": 145, "2345": 58, "234u": 113, "235": [58, 61], "235053": 75, "235313": 75, "2359296": 117, "236": [58, 172], "2360064": 117, "23606797749979": 81, "236458": 75, "2365": 68, "237": [6, 58, 79, 113], "23729": 58, "23749": 58, "23786125": 68, "238": [58, 62, 79], "23831": 58, "239": [58, 79, 113], "2399": [57, 119], "23it": 58, "24": [0, 1, 53, 56, 57, 58, 61, 62, 67, 71, 93, 97, 111, 113, 117, 123, 145, 173, 212, 229], "240": [58, 62, 75, 149], "2400": 68, "2401": 119, "2403": 57, "240309": 75, "2407": [57, 120], "241": [27, 54, 56, 58, 79], "24102564": 74, "2411": 68, "24115": 58, "2415": 58, "24164": 58, "242": [58, 79, 112, 172], "2425508965889174": 117, "24296": 58, "243": [58, 79, 112], "24302": 58, "2435": 57, "244": [58, 113, 176], "2442": 67, "2443": 57, "244672": 111, "24467239400019025": 111, "24475": 58, "2447970040002474": 111, "244915": 111, "24491532199990615": 111, "24495568000020285": 111, "244956": 111, "244981": 111, "2449814139999944": 111, "245": [58, 76, 79], "24501344400050584": 111, "24505015699924115": 111, "24507564099985757": 111, "245076": 111, "245088": 111, "2450883880001129": 111, "2451": 0, "24528420900060155": 111, "24582058120031433": 111, "245821": 111, "24588": 58, "2458e": 75, "246": [58, 61, 79], "24691": 58, "247": [58, 113], "2471": 57, "24723": 58, "24732": 58, "2474": 123, "24759": 58, "2476": 57, "24788": 58, "248": [58, 71, 167], "24876": 58, "248761": 111, "24876118500014854": 111, "24884": 58, "24893": 58, "249": [58, 168], "2499": 123, "24it": 58, "24n": 62, "24x": 230, "25": [0, 30, 52, 53, 56, 57, 58, 60, 61, 62, 65, 67, 68, 71, 75, 97, 102, 112, 113, 114, 117, 119, 127, 135, 138, 139, 145, 173, 206, 212, 229, 235], "250": [52, 58, 61, 74, 83, 117], "2500": 68, "25016": 58, "2502265868963244e": 68, "250u": 113, "251": [58, 113, 119], "2518": 57, "25193": 58, "252": [58, 168], "25269": 58, "2529": 68, "253": [58, 152, 169], "25315": 58, "25394": 58, "254": [58, 113, 152], "25471": 58, "25473": 58, "2548": 68, "255": [58, 61, 62, 76, 212], "2551": 57, "255440": 62, "255488": 62, "25557": 58, "256": [58, 65, 114, 118, 216, 230, 232], "25602": 58, "2561": 112, "256172436538177e": 145, "25618": 58, "2562": 112, "256245": 210, "2563": 112, "25658": 58, "257": [56, 57, 176, 178], "2579": 57, "25818": 58, "2586369978069964e": 145, "2588": 57, "259": [177, 230], "2594": 119, "259m": 113, "259u": 113, "26": [0, 1, 20, 54, 56, 57, 58, 61, 67, 71, 111, 112, 113, 114, 122, 127, 138, 145, 175, 202, 212, 229], "260": [58, 169], "2600": 68, "26029": 58, "2603": 57, "2604": [57, 68], "2604872299998533": 111, "261": [177, 229, 230], "26100": 70, "26121": 58, "26123": 58, "26145": 70, "2615": 123, "26158": 58, "2616": 57, "2618": 57, "26188": 58, "26188341": 61, "261m": 113, "262": [57, 58, 119, 120], "2621": 57, "263": 74, "26320804e": 52, "2636": 57, "26387144": 74, "264": [61, 74], "2643": 57, "26452": 58, "265": [65, 74, 113], "26580": 58, "265m": 112, "266": [58, 74, 178, 181], "2669": 57, "267": 58, "2672": 58, "2675": 68, "2676506002282307e": 145, "26785": 58, "267u": 113, "268": [76, 147], "26828": 58, "26843545599999996": 147, "2685": 68, "268u": 113, "269": [58, 113], "26camp": 0, "26creativ": 0, "26creativeasin": 0, "26it": 58, "26linkcod": 0, "26tag": 0, "27": [0, 5, 29, 57, 58, 61, 68, 71, 73, 112, 113, 117, 119, 145, 175, 212], "270": 58, "2700": [68, 75], "2702": 57, "270226": 58, "2705954031709139": 145, "2707": 57, "27081": 58, "2711": 68, "272": 58, "27247": 58, "27272": 58, "272m": 113, "273": [61, 113], "27317": 58, "27339": 58, "27352": 58, "27398": 58, "274": 58, "2740": 57, "274u": 113, "275": [58, 61, 120, 181, 184], "275124": 62, "2754": 68, "275508": 62, "27568": 58, "275u": 113, "276": [58, 113], "27622": 58, "27623280740364115": 145, "2764": 57, "27652": 58, "277": 58, "27705": 58, "2776829": 233, "278": [61, 112], "278037351314524e": 145, "27832": 58, "2784": 120, "2787": 68, "27874": 58, "279": [74, 89, 184], "2794": 57, "27940": 58, "28": [0, 5, 52, 57, 58, 60, 61, 67, 76, 90, 119, 145, 157, 202, 212], "280": [61, 70, 74, 186], "2800": 68, "28029": 58, "2803": 57, "280302738926063": 71, "280u": 113, "281": 74, "2814": 57, "2816": [58, 71], "2816445108714582": 71, "282": 58, "28266": 58, "28294": 58, "283": 74, "2837": 57, "284": 113, "28423": 58, "28427": 58, "28463": 58, "2847": 57, "2849976037296673": 67, "285": [52, 58, 113], "2852": 58, "28551": 58, "28583": 58, "286": 186, "2860": 57, "2861": 57, "28650": 58, "287": 112, "287084": 75, "288": 113, "28872": 58, "289": 58, "2890644827": 58, "28985": 58, "2899": [57, 119], "289u": 113, "29": [0, 52, 57, 58, 60, 61, 90, 111, 112, 113, 145, 212, 230], "290": [57, 113], "2900": 68, "29009": 58, "2907": 57, "291": [57, 58], "29109": 58, "29119": 58, "291648307200": 117, "29178": 58, "292": [58, 61, 68, 76], "29251": 58, "292u": 113, "293": 58, "2931": 57, "2935": 57, "294": [52, 58, 119], "2940": 119, "294118": 75, "2943": 57, "29448": 57, "29451963": 74, "29468": 68, "29479": 58, "295": 58, "29500": [58, 88, 89, 90, 118], "29504": 58, "29527": 58, "2959": 57, "2961808030073203e": 58, "2969": 58, "29692": 58, "297": [58, 113], "29716": 58, "29746": 58, "2975": 57, "2979": 57, "29809": 58, "29841614058046384": 67, "2985": 57, "299": [58, 61], "2993": 57, "2997": 123, "29it": 58, "2a": 16, "2b": 16, "2c": [16, 233], "2cm": [32, 158], "2d": [11, 53, 57, 61, 62, 68, 73, 75, 82, 83, 126, 127, 175, 179, 190, 206, 209], "2d3233": 127, "2e": [65, 119, 120], "2f": [62, 67, 68, 75, 117, 170, 177, 215, 229, 230], "2fa": 93, "2j": 55, "2k": 60, "2m": 65, "2mb": 76, "2mn": 67, "2mn\u00b2": 67, "2n": [16, 19, 30, 36, 58, 79, 117], "2nd": [52, 57, 75, 114], "2nkd": 73, "2p": [117, 125], "2t": 117, "2x": [7, 79, 96, 136, 172], "2x2": 52, "2x_1": 7, "2x_2": 7, "2y": 79, "3": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 26, 27, 29, 30, 32, 34, 36, 43, 46, 51, 53, 54, 57, 58, 59, 61, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 86, 87, 88, 90, 92, 102, 105, 111, 112, 113, 114, 116, 117, 118, 119, 120, 124, 125, 126, 127, 129, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 154, 155, 157, 158, 164, 165, 167, 169, 170, 171, 172, 173, 177, 179, 180, 181, 184, 185, 187, 189, 192, 193, 195, 197, 199, 200, 205, 206, 210, 212, 213, 216, 218, 220, 221, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238], "30": [0, 1, 3, 9, 29, 30, 32, 43, 52, 54, 56, 57, 58, 60, 61, 62, 63, 65, 68, 73, 74, 75, 76, 79, 96, 97, 102, 111, 112, 113, 117, 119, 123, 127, 145, 149, 155, 170, 173, 212, 225, 229, 230, 237], "300": [52, 62, 68, 113, 117, 173, 230], "3000": [68, 123], "30000": [27, 114], "300000": 75, "3000285877644368": 71, "30005": 58, "30046": 58, "3006": 123, "300b": 117, "300e9": 117, "300m": 113, "301": [52, 57, 58, 76], "301029995": 210, "3017": 119, "301958": 57, "301966": 57, "30198988800000004": 147, "3024361499992665": 111, "30280": 58, "30291978655031": 61, "303": [62, 119], "3032": 57, "304": [58, 61], "30400": 58, "305": 58, "3053": 57, "30570": 58, "305m": 113, "30607": 58, "30609": 58, "3072": [56, 57, 117], "307620": 75, "308": 61, "30833333": 74, "308m": 113, "308u": 113, "309": 58, "3095": 57, "3097": 58, "309715571000197": 111, "309716": 111, "309u": 113, "30d963e": [111, 113], "30it": 58, "31": [0, 13, 27, 57, 58, 61, 73, 79, 97, 117, 145, 202, 212, 216], "310": 113, "3100": 68, "3103": 57, "31064": 58, "311": 119, "31121": 58, "3117": 57, "312": [112, 113, 114, 117], "31202": 58, "31219": 58, "3124": 8, "3126": 57, "31261": 58, "312e12": 117, "313": [58, 61], "3132": 57, "3134690575704466": 117, "31353": 58, "313600": 71, "31369": 58, "31384": 58, "314": 61, "31429": 58, "31459": 58, "3146": 57, "315": [58, 60, 75], "31519": 58, "3161": 75, "3167": 57, "3169": 58, "316u": 113, "317617745567845e": 145, "31783": 58, "318": [112, 113, 114], "31853": 58, "31859": 58, "31884": [58, 119, 120], "31908": 58, "319450": 75, "31966": 58, "3198": 57, "31m": 113, "31merror": 113, "32": [0, 19, 27, 30, 52, 54, 56, 57, 58, 61, 62, 68, 71, 73, 75, 76, 79, 89, 90, 96, 112, 113, 117, 118, 119, 120, 145, 169, 210, 212, 216], "320": 96, "3200": 68, "32013901": 68, "32090": 58, "321066": 111, "3210660050017395": 111, "322": [112, 113, 114], "3223057644110276": 71, "32292": 58, "3230": 127, "32313": 58, "323292": 127, "3237": 57, "3237948": 62, "323m": 112, "324": [58, 199], "32432432": 74, "3244176": 61, "32450061149613": 117, "325": [74, 113, 199], "3250": 75, "325785": 75, "326": [57, 74, 199], "327": [58, 74], "32703": 58, "328": [73, 74, 113], "3285": 57, "32874": 58, "32879": 58, "329": [73, 74], "32e9": 117, "33": [0, 5, 52, 57, 58, 61, 79, 113, 145, 210, 212], "330": 70, "3300": 68, "3309": 58, "331": [58, 113], "3313": 76, "33166": 58, "33167": 58, "332": 58, "3322": 123, "332666429276160": 119, "3327": 120, "3328": 57, "333": 75, "33333": 58, "33333333": 126, "33375": 58, "333u": 113, "334": [58, 61], "3340": 112, "33472": 58, "33504": 58, "335m": 112, "336": 113, "33623": 58, "3363": 57, "336676": 75, "337": 75, "3370": 57, "33759": 58, "338": [58, 75], "33837": 58, "338386": 75, "339": [58, 75, 114], "3390": 0, "3392": 57, "339256": 75, "33947": 58, "339u": 113, "33it": 58, "34": [0, 52, 57, 58, 60, 61, 75, 76, 90, 97, 112, 113, 114, 119, 145, 212, 215], "340": [58, 75], "3400": [57, 68], "34011": 58, "3406": 57, "340m": 112, "341": [52, 75], "3419": 57, "342": 75, "3422": 57, "343": 75, "3430": 123, "34349": 58, "34355": 58, "3439": 68, "344": 75, "3440": 61, "34409": 58, "34425": 58, "3443": 57, "3450": 75, "345m": [56, 57, 112], "346": 58, "34602": 58, "34643": 58, "348": [58, 67], "34842": 58, "34847": 58, "3488": 71, "34882": 58, "348m": 112, "349": 58, "34902": 58, "34997": 58, "35": [0, 13, 52, 57, 58, 60, 61, 93, 111, 113, 145, 147, 209, 212], "350": [52, 58], "3500": 68, "35019933": 52, "3504": 61, "35042648": 52, "350m": 117, "351": [61, 119], "35146": 58, "3526": 57, "35289": 58, "353": [61, 74, 113], "35333": 58, "3536": 68, "354": 74, "35407": 58, "35433": 58, "35457": 58, "355": 113, "3550": 75, "35534": 58, "35534775": 61, "35546": 58, "355853": 111, "3558534099993267": 111, "3559": 58, "35592011": 61, "356": [52, 57], "35605": 58, "357": 58, "35754": 58, "35758": 58, "3577977121694196e": 145, "358": [73, 111], "3581": 120, "358m": 113, "359": [58, 75, 111], "35914": 58, "3596": 75, "3596197342614926": 71, "359649": 75, "3598617398414237e": 145, "35mb": 76, "36": [56, 57, 58, 61, 67, 75, 90, 111, 113, 117, 124, 132, 135, 136, 138, 145, 173, 212], "360": [111, 113], "3600": [68, 117], "36034": 58, "360465": 75, "3605": [57, 75], "36051": 57, "361": [58, 111, 113], "36132": 58, "36171": 58, "362": [57, 58, 61, 111], "3623878656": 117, "36270": 58, "363": [58, 111], "363u": 113, "364": [58, 111], "36462": 58, "365": [75, 111, 113, 127, 145], "3650": 75, "36506": 58, "36552": 58, "3659": 57, "36594": 58, "366": 111, "36618": 58, "3665": 57, "36660": 58, "36666667": 74, "367": 111, "3672": 123, "36730": 58, "368": [52, 57], "36868": 58, "3689689390002968": 111, "368969": 111, "369": 58, "36981": 58, "369m": 113, "36it": 58, "37": [57, 58, 61, 67, 74, 88, 113, 117, 119, 145, 212], "3700": 68, "370565": 111, "37056508000114263": 111, "3706": 57, "370740459995136": 71, "370u": 113, "37132": 58, "37148195211411106": 117, "37177": 58, "372": [58, 61], "37216339": 61, "372800000000001e": 147, "37280000e": 147, "37286": 57, "37288": 58, "373": [57, 74], "3730": 57, "3732": 119, "37393606": 52, "374": [52, 61, 74], "37414": 58, "37434": 58, "37436": 58, "375": [61, 111], "3750": 75, "37519": 58, "375972": 75, "376": [57, 61], "3761": 112, "376m": 113, "377": 111, "37764": 58, "3777": 215, "377m": 113, "378": 111, "379": [58, 111], "3791314968461": 117, "3792": 57, "37943855": 62, "379456": 119, "3797": 57, "37988": 58, "37it": 58, "38": [19, 27, 57, 58, 61, 63, 67, 75, 76, 112, 113, 145, 212], "380": 58, "3800": [68, 75], "38012": 58, "381": [58, 119], "38107": 58, "3811": 57, "38136": 58, "38145": 58, "382": 58, "3821": 57, "38225": 58, "38226": 58, "38233697": 52, "3831": 57, "38357": 58, "38366": 58, "38393": 58, "384": [58, 62], "385": 58, "3854": 57, "38549307": 61, "3857": 57, "38597376": 117, "38599": 58, "386": 58, "38622": 58, "38643": 58, "387": [58, 110], "3870": 57, "38728": 58, "38753": 58, "3879": 123, "388": 113, "38808": 58, "38890481": 52, "389": [57, 110], "38918905": 74, "389420": 61, "389m": 113, "38cm": 158, "39": [57, 58, 61, 63, 67, 74, 75, 111, 113, 145, 212], "3900": 68, "390332": 61, "390419142823334e": 145, "39087": 58, "390m": 113, "391492": 75, "39155155": 52, "391m": 113, "3921": 57, "392cm": 158, "392m": 113, "39328": 58, "39383808": 117, "39394": 58, "39417": 58, "394u": 113, "3950": 57, "395620": 111, "39562018000015087": 111, "3957": 58, "3960": 68, "39607": 58, "3961": 68, "3962": 68, "3963": 68, "3964": 68, "3965": [68, 112], "3966": 68, "3967": 68, "3968": 68, "3969": 68, "397": 113, "3971": 68, "3972": 68, "3974": [68, 112], "39757": 58, "3976": 68, "39770": 58, "3978": 68, "39785786": 52, "3979669969222125": 119, "39799": 58, "398": 52, "3980": 68, "398093": 75, "3983": 68, "398364459428767e": 145, "39838": 58, "3985": 68, "39869": 58, "3987": 57, "3988": 68, "3990295": 52, "3992": [68, 75], "39940": 58, "3995": 68, "3998124": 52, "39983": 58, "3999": 68, "3_1_5_special_discrete_distr": 142, "3cm": 158, "3d": [52, 53, 62, 75, 82, 83, 126, 179, 189], "3d0387310738": 0, "3d13ct5cvb80yfwjepws02": 0, "3d165953": 0, "3d2025": 0, "3dw": 0, "3dxm2": 0, "3e": [58, 122, 123, 216], "3f": [75, 123, 126, 189], "3fsubscriptionid": 0, "3n": [13, 19, 29, 43], "3rd": [1, 52, 54, 56, 57, 123, 227], "3x": 67, "3x1": 52, "3x2": 96, "3x4x2": 74, "4": [0, 1, 2, 5, 6, 11, 13, 16, 19, 20, 22, 23, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 48, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 86, 87, 88, 89, 90, 92, 95, 96, 97, 102, 105, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 125, 126, 127, 129, 132, 135, 136, 138, 139, 140, 141, 143, 145, 147, 149, 154, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 184, 189, 193, 197, 205, 210, 212, 216, 220, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238], "40": [8, 30, 57, 58, 61, 62, 65, 67, 75, 102, 112, 113, 117, 145, 212], "400": 68, "4000": [52, 68, 123], "40000": 27, "40013007": 52, "40019011": 52, "4003": 68, "40053": 58, "4008": 68, "4013": 68, "40157": 58, "4016": 57, "4016769020687333e": 145, "40178591009753": 71, "4018": 68, "40225": 58, "4024": 68, "4025": 57, "4025641": 74, "40265": 58, "403": [61, 76], "4031": 68, "4033": 68, "40348": 58, "4037": 68, "4038": 68, "404": 93, "40420": 58, "40443": 58, "4046": 68, "4050": 75, "40536": 58, "4054": 68, "4055": 68, "406": [57, 216], "4064": 68, "4066": 57, "4068": 68, "4071": 57, "4071274942": 61, "4075": 68, "408": 71, "4080": 68, "4082": 57, "4086": 68, "409": 52, "4096": [56, 57, 70, 103], "4099": [57, 68], "409m": 113, "40e9": 117, "40gb": [56, 117], "41": [57, 58, 67, 71, 73, 79, 112, 113, 145, 212], "410": [61, 111], "4100": 68, "41026743": 68, "4103": 57, "41076": 58, "41085": 58, "411": [58, 111], "4112": 68, "4113": 119, "411400": 71, "41144": 58, "411u": 113, "412": 61, "41208": 58, "4127": 68, "412m": 112, "412u": 113, "413": 111, "4130": 57, "41332": 58, "41341": 58, "41369606": 61, "4137": 68, "41381": 58, "414": [172, 173, 176, 178, 181, 184], "41418363219630583": 117, "4143": 57, "4144": 68, "4144910469995011": 111, "4156278679993193": 111, "415628": 111, "4161": 57, "4162": 68, "4164": 57, "41648": 58, "41672": 58, "41683": 58, "41768": 58, "418": [61, 70], "4181": 68, "4184": 57, "4185": 57, "418m": 113, "419": [58, 61, 113], "4190616449996014": 111, "419062": 111, "419068941002479": 111, "419069": 111, "4192": 57, "4195425559992145": 111, "419543": 111, "41986": 58, "419u": 113, "41it": 58, "41m": 76, "42": [1, 6, 8, 10, 30, 52, 53, 57, 58, 61, 62, 67, 71, 75, 93, 111, 112, 113, 114, 116, 118, 119, 120, 145, 147, 158, 170, 189, 206, 210, 212, 236], "420": [113, 229], "4200": [68, 75], "4201": 75, "4203": 68, "4208": 57, "421": 52, "4210": 57, "42113": 58, "4217562": 62, "4218": 57, "422": [52, 68], "4224": 58, "4225": 68, "42258": 58, "4226": 68, "42261": 58, "42285238": 61, "4231182596449616": 117, "42318": 58, "42328": 58, "423m": 112, "424": 61, "4243": 119, "42434": 58, "42485": 58, "425": 113, "425197": 75, "4252": 68, "42522": 58, "42526": 58, "4257": 119, "4259": 57, "425m": 113, "42602": 57, "42604197": 62, "42669": 58, "4267": 57, "42671": 58, "42683": 58, "427": [58, 113], "42703": 58, "4276138693308093": 118, "42768": 58, "428": 58, "4280": 68, "428587": 71, "42860": 58, "42945": 58, "42it": 58, "43": [52, 53, 57, 58, 61, 71, 73, 75, 112, 113, 145, 212, 229], "430": [5, 113], "4300": 68, "43008": 58, "431": 61, "431046962738037": 71, "4311": 68, "43123": 58, "43130": 58, "43146": 58, "432": [57, 113], "4321": 237, "43277": 58, "432m": 113, "433": [58, 113], "43312883": 61, "4334": 57, "43378": 58, "43382": 58, "434": 75, "4345": 68, "434704371920785e": 145, "4348": 68, "435": 61, "43536": 58, "43546": 58, "436": 52, "43602": 58, "4364": 123, "437": [58, 75], "4379880944": 226, "438": [58, 113], "4382": 68, "4383": 57, "43856": 58, "439": [57, 58], "43978": 58, "44": [52, 57, 58, 61, 67, 71, 74, 75, 112, 113, 126, 145, 212], "440": [58, 113], "4400": 68, "4404918486533809e": 145, "441": 61, "4412": 112, "44139": 58, "4414": 58, "44140": 58, "4415": 75, "441520": 75, "441860": 75, "44187": 58, "442": 113, "442112": 119, "4423": [68, 112], "44242": 58, "4426": 123, "442u": 113, "443": 230, "44347": 58, "44477": 58, "44500": 58, "44511": 58, "44528": 58, "4467": 68, "44693": 58, "446u": 113, "447": 58, "4476": 57, "448": 71, "4483": 119, "4485": 57, "448506": 75, "449": 58, "44910": 58, "44934": 58, "4498473744": 236, "449m": 113, "44iter": 53, "45": [32, 52, 56, 57, 58, 61, 67, 68, 73, 74, 75, 90, 102, 111, 112, 119, 120, 145, 157, 212], "450": 58, "4500": 68, "450000": 75, "45009": 58, "45026": 58, "45029": 58, "4503311258278": 117, "45056539": 68, "4512": 57, "45132940": 57, "4516": 68, "452": 52, "452473": 57, "45398": 58, "454": 58, "45402": 58, "454m": 112, "455": 58, "4551": 57, "455431": 111, "4554312190002747": 111, "456": [58, 216, 237], "456120704485886e": 145, "4564365": 230, "4569": 68, "457": [58, 229], "4570": 76, "45728": 58, "4576": 123, "458": [58, 111, 113], "458u": 113, "459": 111, "459584": 75, "4598": 88, "459k": 76, "46": [57, 58, 61, 67, 71, 73, 75, 111, 113, 117, 119, 145, 212], "460": 111, "4600": 68, "460m": 113, "461": [57, 58, 111], "46153846": 74, "46192": 58, "461943": 111, "4619431142000394": 111, "4620": 88, "46246": 58, "4627": 68, "462u": 113, "463": [71, 111], "46323080499951175": 111, "46335": 58, "463462": 111, "4634621249997508": 111, "46350148": 61, "463649": 111, "46364944700053456": 111, "4636755310002627": 111, "4636971440004345": 111, "46372856899961334": 111, "463729": 111, "463939": 111, "46393922600054793": 111, "464": [71, 112, 113], "4640383700007078": 111, "464213": 111, "4642132010003479": 111, "464_07": 184, "465": 112, "46557": 58, "46559": 58, "4659": 68, "465929": 111, "4659291400002985": 111, "4665": 119, "46661": 58, "46671": 58, "466m": 113, "467": 58, "46804": 58, "46812": 58, "468202": 75, "46843": 58, "46844444": 61, "46848": 58, "4691": 68, "4695": 57, "46967": 58, "469u": 113, "46iter": 53, "47": [57, 58, 61, 68, 73, 75, 88, 112, 113, 119, 145, 212], "470": 73, "4700": 68, "470u": 113, "471": 210, "47107": 58, "47117": 119, "471607": 75, "47172": 58, "47178546": 68, "471916": 75, "4719360": 117, "472": 210, "47276": 58, "47295": 58, "473": [61, 113], "4730964467005076": 71, "4732": 57, "47334": 58, "4734": 119, "47415": 58, "47437275321498723": 117, "4747": 123, "474m": [112, 113], "4750": 75, "4761": 68, "47612": 58, "47626": 58, "47681": 58, "476m": 112, "477": 229, "47736": 58, "47777": 58, "477m": 112, "4780": 73, "478300": 119, "479": 58, "47971": 58, "48": [8, 56, 57, 58, 61, 62, 73, 75, 88, 111, 113, 117, 145, 173, 212], "4800": [68, 123], "480336": 111, "4803364019999208": 111, "480672001838684": 112, "48071": 58, "4808292051985": 67, "481": [58, 67], "482": 58, "48205128": 61, "483": [3, 4, 5, 7, 10, 58], "48312557359986386": 111, "483126": 111, "48316": 58, "4831838208": 117, "48341351999988547": 111, "483475": 111, "4834751440002947": 111, "48351270700004534": 111, "483513": 111, "48362178600018524": 111, "4837": 68, "483791": 111, "48379133800062846": 111, "483812": 111, "48381232899992027": 111, "48389172999941366": 111, "483k": 58, "484": [5, 7, 57, 58, 61, 111], "48418703799961804": 111, "4842157639996003": 111, "484216": 111, "484244": 111, "4842440839993287": 111, "48476": 58, "484976": 75, "485": [61, 113, 216], "4850": 75, "485k": 58, "486": 120, "48624": 58, "4864": 57, "4873": 58, "48736": 58, "4879": 123, "488": 61, "48827": 58, "48850": 120, "48873": 58, "489": [58, 111], "48925": 58, "48979592": 61, "48987": 58, "48it": 58, "49": [58, 61, 75, 83, 111, 112, 113, 127, 145, 212], "4900": 68, "491": 111, "491445663235104e": 145, "49158": 58, "49179": 58, "492": 111, "492051968": 117, "4921": 68, "4922": 58, "4925": 75, "49292": 58, "49296": 58, "49298": 58, "493": 111, "4934": 58, "49372": 58, "494": [52, 61], "49428": 58, "49447": 58, "49505": 58, "49576": 58, "49703": 58, "49705": 58, "4973": 57, "4973441634": 61, "4978": 75, "497845": 75, "49829": 58, "4984": 57, "4986": 57, "49860": 58, "49895": 58, "499": [61, 67], "4995": [57, 61], "49it": 58, "49iter": 53, "4b71eb3c8dc7": 127, "4c0333854cb905966f8cc4e9a74068c1e507c7b7": 71, "4cm": 32, "4d": [58, 79], "4e": 118, "4f": [61, 68, 96, 117, 119, 120], "4mb": 76, "4n": [36, 117], "4p": 65, "4th": 58, "4x": 79, "4x2": 74, "4xlarg": 87, "4y": 79, "5": [0, 1, 2, 3, 4, 5, 6, 7, 11, 16, 17, 19, 26, 27, 29, 30, 32, 36, 43, 46, 51, 52, 53, 54, 57, 58, 60, 61, 62, 65, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 92, 94, 96, 100, 107, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 132, 135, 136, 138, 139, 142, 143, 145, 146, 147, 149, 150, 152, 154, 155, 158, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 181, 184, 185, 186, 189, 202, 206, 210, 212, 213, 216, 227, 229, 230, 232, 233, 234, 235, 237, 238], "50": [30, 52, 56, 57, 58, 61, 68, 73, 74, 75, 79, 88, 102, 111, 112, 113, 119, 127, 143, 145, 146, 155, 157, 212, 230, 237], "500": [52, 53, 58, 61, 68, 74, 93, 96, 116, 147, 158, 202, 206, 230], "5000": [68, 96, 123, 142, 146, 155, 167, 168, 169, 206], "50000": [61, 118], "500000": 75, "5000000": 230, "500853903912116e": 145, "500u": [112, 113], "50115": 58, "5013": 68, "5017": 58, "50186": 58, "502": 57, "50256": [57, 119], "50257": [57, 117, 119], "503": 52, "50316": 58, "50370": 58, "50377": 58, "5039": 68, "504": [58, 113], "5041": 57, "5044": 57, "504878": 75, "5049": 75, "50491": 58, "50502400e": 147, "507": [61, 113], "5071": 119, "50796": 58, "507m": 112, "508": 111, "5083": 119, "50961": 58, "509m": 113, "50mm": 75, "51": [58, 61, 67, 71, 73, 78, 112, 113, 119, 145, 212], "510": [111, 113, 230], "5100": 68, "510880": 62, "5109": 57, "510952": 62, "511": [52, 111, 113], "51113": 58, "5113": 68, "512": [52, 56, 57, 111, 117], "5120": [56, 57], "512m": 113, "513": 113, "513638": 75, "514": 58, "51407": 58, "51408752": 68, "515": 58, "5154": 57, "51553": 58, "51582": 58, "516": [52, 58, 113], "5161": 57, "51642": 58, "51661": 58, "5174": 120, "51752": 58, "51771": 58, "518": 93, "518792": 127, "51940": 58, "51iter": 53, "52": [58, 67, 68, 71, 73, 76, 110, 111, 112, 113, 182, 212], "520": 59, "5200": [68, 75], "52016": 58, "52034": 58, "5207": 68, "521": [52, 113, 229, 230], "5211807202738746e": 145, "522": [58, 230], "5223": 68, "5226": 76, "5227443557760843e": 145, "52291": 58, "523": 230, "5232": 58, "52357": 58, "52363": 58, "5248": 57, "525": 61, "525228869166441e": 145, "52557": 58, "52605": 58, "52657": 58, "527": 61, "52777778": 61, "528": 67, "52858": 58, "52941176": 61, "5296": 57, "53": [52, 58, 67, 71, 73, 112, 113, 145, 212, 216], "530": 58, "5300": 68, "5304": 57, "53091": 58, "53166227": 61, "53183": 58, "53197": 58, "5319817168701279": 71, "5323": 68, "5326": 68, "53270": 58, "532m": 112, "532u": 113, "53345": 58, "533576": 75, "533m": 113, "534023": 67, "5343": 68, "534m": 112, "534u": 113, "53545161e": 52, "536": 57, "53617": 58, "5362": 57, "5380": 57, "53925": 58, "5394": 57, "539457": 75, "5395": 57, "5397": 57, "5398e": [57, 123], "53it": 58, "53iter": 53, "54": [58, 75, 112, 113, 212, 213, 230], "5400": [68, 75], "54003": 58, "54022": 58, "5403": 57, "541111111111111cm": 158, "54178": 58, "542470366": 117, "542u": 113, "543": 58, "5432": [68, 224], "544": [2, 113], "544u": 113, "545": 111, "54518": 58, "54578": 58, "5459": 68, "54592": 58, "54678": 58, "5475": 68, "547m": 113, "548": 229, "5486": 57, "5487": 57, "548866": 75, "54894": 157, "54965": 58, "54976875": 118, "549u": 113, "54iter": 53, "54k": 76, "54m": 76, "55": [52, 58, 67, 71, 73, 90, 110, 112, 113, 118, 145, 212], "5500": 68, "5502": 57, "55048": 58, "551": [113, 119], "5510": 123, "55185": 58, "552": 58, "5522448429284077": 117, "55309364": 230, "55409": 58, "5547": 58, "55473": 58, "555": 113, "55591": 58, "555m": 113, "55610225252113": 71, "55620": 58, "556291": 75, "5566": 57, "55758": 58, "55890": 58, "55921": 58, "55933": 58, "5598": 68, "5599587203302373": 71, "55iter": 53, "55mb": 76, "56": [27, 58, 61, 73, 110, 111, 113, 212], "560": 75, "5600": 68, "5611": 119, "56111": 58, "56120": 58, "5613": 57, "56174": 58, "56177": 58, "5619": 68, "562582205430263e": 145, "5628899835796387": 71, "563": 229, "56350": 58, "5639": 57, "565": 75, "56535": 58, "56590909": 74, "565u": 113, "566": 58, "567": 52, "5670": 120, "56744": 58, "5677": 57, "56823": 58, "56857": 58, "56889605": 61, "569": [52, 61], "56it": 58, "56iter": 53, "57": [16, 58, 71, 111, 113, 145, 212], "570": 119, "5700": 68, "5715": 57, "5720": 57, "57233727e": 52, "57245": 58, "5725": 57, "574": 61, "57499": 58, "575": 52, "5750": 75, "575435": 119, "576": 113, "576138": 75, "57636": 58, "57706": 58, "5777": 68, "578": 52, "5780": 72, "5786": 61, "579": 52, "57947": 58, "5799": 57, "57it": 58, "57iter": 53, "58": [53, 58, 61, 89, 111, 113, 145, 212, 230], "580": 71, "5800": 68, "580143": 75, "5807": 57, "581": 58, "58105": 58, "58128": 58, "5819": 57, "5821": 119, "58239": 58, "583296614400": 117, "583851": 75, "584": 52, "5847": 119, "584m": 113, "585": [52, 120], "586": 58, "5865": 57, "587": 58, "5872": 68, "588": [58, 113], "58801": 58, "58844": 58, "5886": 120, "589": [52, 58, 113], "58919": 58, "58920": 58, "5893": 120, "58960": 58, "589824": [71, 117], "589m": 113, "58b6fa859eda": 236, "58it": 58, "58iter": 53, "59": [36, 54, 56, 58, 61, 75, 89, 111, 212], "5900": 68, "5902": 57, "590792": [0, 157], "590m": 112, "591": 58, "591m": 113, "592": [58, 71], "5920": 58, "59221756": 52, "5925": 120, "593": 58, "593079": 157, "593084": 157, "59447": 58, "59473": 58, "595110": 75, "5955": 57, "5962": 57, "596449": 119, "5968": 57, "597": [57, 58], "5972173617868683e": 145, "59749": 58, "598": 52, "59851": 58, "5988": 61, "599": 52, "5998": [1, 54, 56, 69, 70], "599999": 119, "59iter": 53, "59x": 230, "5_1_3_conditioning_independ": 184, "5_1_5_conditional_expect": 184, "5b": [0, 71], "5cm": [32, 142, 158], "5e": 116, "5e12": 117, "5f": [75, 117], "5mb": 76, "5mm": 30, "6": [0, 1, 5, 6, 7, 11, 19, 27, 29, 30, 32, 36, 41, 43, 46, 52, 53, 54, 57, 58, 60, 61, 62, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 87, 92, 96, 101, 102, 103, 105, 111, 112, 113, 114, 117, 118, 119, 122, 123, 124, 125, 129, 132, 135, 136, 138, 141, 145, 147, 149, 152, 155, 158, 159, 167, 169, 170, 171, 173, 179, 180, 197, 199, 200, 202, 203, 205, 206, 210, 212, 213, 227, 229, 230, 234], "60": [30, 58, 61, 67, 73, 75, 76, 102, 112, 113, 127, 145, 146, 149, 212], "600": [68, 89], "6000": [68, 110], "60000": 61, "600000": 75, "60037": 58, "6005": 68, "6006": 75, "6008": [1, 54, 56, 69, 70], "600m": 113, "601": 65, "60138": 58, "601m": 113, "603": [61, 119], "60395": 58, "603u": 113, "604498": 75, "6047": 58, "60471": 58, "60503967351663e": 145, "6060": 57, "6063": 119, "60693": 58, "607": 71, "6077": 57, "608": [61, 71], "60857": 58, "608643": 119, "608m": 113, "60981": 58, "60iter": 53, "61": [58, 75, 113, 158, 212], "6100": 68, "611246350448613e": 145, "6116": 119, "612724": 119, "612m": 113, "61301": 58, "6130560": 62, "6132": 57, "613m": 113, "6144": 57, "61472122": 57, "61567": 58, "61576": 58, "6159": 68, "615u": 113, "6164": 68, "6167": 120, "616u": 113, "617": 58, "6178": 57, "61806": 58, "61858": 58, "618m": 113, "619": 113, "61903": 58, "61969": 58, "61it": 58, "61iter": 53, "62": [58, 73, 74, 110, 112, 113, 122, 145, 212, 225, 230], "6200": 68, "620201745890709e": 145, "6216": 58, "62181": 58, "623": 112, "6232": 57, "62352941": 61, "62402": 58, "62428": 58, "62466": 58, "6253": 57, "6257": 76, "6258": 57, "625829189863": 70, "626": 229, "62689": 58, "6271": 57, "627m": 113, "62801": 58, "62823": 58, "6285": 119, "62865": 58, "628m": 113, "62914": 58, "62it": 58, "62iter": 53, "63": [58, 61, 111, 112, 113, 114, 119, 120, 212, 229], "6300": [68, 75], "630039458606517e": 145, "630194235588974": 61, "6302": 119, "63084": 58, "631": 52, "6312": 57, "63124": 58, "63179": 58, "632": 113, "6324970042866496": 117, "63403": 58, "6340956189978897": 111, "634096": 111, "6349": 120, "635": 111, "6353": 57, "6362": 57, "6364": 123, "63667": 58, "637": 111, "6379": 224, "638": [61, 111], "63863636": 74, "63888889": 61, "639": 58, "63996": 58, "63it": 58, "63iter": 53, "64": [16, 27, 57, 58, 61, 62, 71, 79, 93, 113, 118, 119, 120, 212], "640": 229, "6400": [56, 57, 68], "6400553": 62, "640220": 111, "6402201920000152": 111, "64037": 58, "6406": 68, "64146": 58, "641559": 75, "64169": 58, "64241152e": 147, "6428": 120, "643": [52, 113], "643384": 75, "64347": 58, "6435": 120, "644": 61, "64465": 58, "64480": 58, "644u": 113, "645": 229, "6450": 57, "6455": 57, "646": 58, "6469": 68, "64694": 58, "6474": 57, "647m": 112, "648": 112, "6482e": 75, "649": 113, "6492525648321494": 71, "64966443": 61, "64iter": 53, "64mb": 229, "65": [58, 61, 68, 74, 81, 90, 102, 112, 113, 145, 212], "650": 62, "6500": 68, "650u": 113, "65115": 58, "6513": 57, "652": [52, 58, 75], "65208": 58, "6528": 75, "653": 58, "6535": 68, "653536": 75, "6536": 57, "654": 58, "65422": 58, "654800": 119, "654u": 113, "65535": 88, "65536": [58, 118], "655613": 75, "65563": 58, "656": 113, "656181": 75, "6567345287852233": 117, "6570": 57, "65714286": 61, "65759": 58, "6581": 57, "6582": 68, "65957447": 61, "65it": 58, "65iter": 53, "65m": 76, "66": [57, 58, 61, 71, 74, 75, 82, 112, 113, 117, 119, 212], "6600": 68, "661": 9, "661162": 75, "662": 58, "66206": 58, "662u": 113, "663": 61, "6632": 57, "663405": 75, "665": 58, "66529492": 61, "66589": 58, "666": 58, "66644": 58, "6666": 68, "6666666666666666": 61, "6667": 29, "66689": 58, "667": 58, "667u": 113, "668": 58, "66881829": 68, "66886954": 68, "669166": 75, "6693280": 70, "66970": 58, "66it": 58, "66iter": 53, "67": [58, 82, 113, 145, 212], "6702": 57, "67030705e": 52, "67047": 58, "670m": 112, "67117": 58, "6713": 57, "672": 111, "67292": 58, "673m": 113, "674": [52, 111], "6741": 57, "674881715648123": 117, "674m": 112, "675": [71, 111], "67510": 58, "6752": 123, "676": 111, "677": 229, "6774e": 75, "6784": 58, "67it": 58, "68": [58, 61, 75, 83, 113, 117, 136, 212], "680": 119, "6802": 68, "6807": 57, "68127": 58, "6815": 57, "682": 52, "682084": 111, "6820840510008566": 111, "68255": 58, "68339": 111, "683391": 111, "6833910059995105": 111, "6835393290002685": 111, "6835425659992325": 111, "683543": 111, "6837199530000362": 111, "6838137882004958": 111, "683814": 111, "68381571899954": 111, "6839085111998429": 111, "683909": 111, "683922": 111, "6839223050010332": 111, "684006079000028": 111, "68421053": 61, "68435456e": 147, "68450": 58, "684m": 113, "6852539360006631": 111, "685254": 111, "68529412": 61, "6853": 111, "6853365530005249": 111, "685337": 111, "68538": 58, "68581": 58, "685866328816647e": 145, "68599": 157, "6866": 58, "6868": 119, "68693": 58, "68761": 58, "6878": 57, "68781": 62, "68782": 157, "6879": 68, "688": 113, "68804": 58, "68815": 58, "68826": 58, "68829": 62, "68877005": 61, "689": [52, 67, 229], "689371": 75, "6898": 57, "69": [58, 68, 74, 83, 113, 212], "69078947": 61, "691": 113, "69163": 58, "69168": 58, "692": 61, "69247": 58, "692u": 113, "693": 70, "6935": 119, "6937": 120, "693708384291344": 117, "69437951": 68, "6945": 57, "695": 58, "695558": 71, "6957": 57, "69589": 58, "6966": 119, "69680874e": 52, "696m": 112, "698": 71, "6980": [0, 1, 54, 56], "69830": 58, "69895": 58, "698m": 113, "69it": 58, "6cm": 158, "6e": 71, "6lhq": 117, "6n": 117, "6nd": 117, "6x": 96, "7": [0, 1, 2, 6, 13, 19, 27, 29, 30, 36, 43, 46, 52, 53, 54, 57, 58, 61, 62, 65, 71, 72, 73, 75, 76, 77, 78, 82, 84, 87, 88, 92, 96, 102, 108, 111, 112, 113, 118, 122, 126, 127, 129, 132, 141, 145, 147, 149, 158, 171, 172, 173, 189, 202, 205, 206, 210, 212, 215, 227], "70": [30, 49, 52, 58, 61, 65, 67, 74, 90, 102, 112, 113, 145, 147, 212], "700": [56, 68], "7000": [58, 68], "700000": 75, "700e": 147, "700m": 113, "70135": 58, "7017": 68, "702": 229, "702005": 71, "702667": 75, "702m": 113, "703m": 113, "7040": 67, "7044": 76, "705": 52, "706": 61, "7063": 119, "706563": 75, "707": 61, "7070": 57, "70788": 58, "7079424": 117, "70854": 58, "7086": 68, "709": 230, "70it": 58, "70iter": 53, "71": [58, 67, 113, 175, 212, 229, 230], "71012": 58, "7115": 57, "713": [216, 229], "714": 52, "71423": 58, "715": 216, "71552": 58, "715684": 75, "7159": 68, "71604": 58, "71638": 58, "71657": 58, "7167": 71, "7168": 57, "71696": 58, "718m": 113, "719": [58, 67], "71907": 58, "719085": 75, "7193": 120, "7194": 57, "7196": 119, "71it": 58, "72": [27, 58, 62, 73, 113, 117, 212], "720": 58, "72008": 58, "72041": 88, "72042": 88, "72043": 88, "72044": 88, "7205": 120, "72062": 58, "720m": 113, "721": 58, "7210": 68, "72105": 58, "722": [52, 57], "72219": 58, "72236": 58, "72283": 58, "722m": 113, "723": 113, "724": 68, "7253e": 57, "7257": 119, "726": [68, 111, 113], "7260": 57, "726191": 111, "7261910039997019": 111, "7264139199996862": 111, "7264165149990731": 111, "726417": 111, "726529": 111, "7265293540003768": 111, "7266": 111, "7266143320002811": 111, "72670": 58, "726819": 111, "7268191237995779": 111, "72687": 58, "727164707999691": 111, "727165": 111, "7272930130002351": 111, "72772": 58, "727781": 111, "7277811669991934": 111, "727m": 112, "728": 229, "728044": 111, "7280440384000031": 111, "7287": 57, "7294365609996021": 111, "729m": 113, "729u": 113, "72it": 58, "73": [58, 83, 113, 117, 212, 230], "730000": 145, "73022": 58, "730475": 111, "7304752370000642": 111, "731369": 75, "732": [52, 112], "7320": 120, "733": 68, "7334": 57, "734": 68, "735": 68, "735m": 113, "736": 68, "737": 53, "737m": 113, "73815": 58, "739": 58, "7390": 0, "73940": 58, "739m": 113, "73it": 58, "74": [58, 74, 112, 113, 149, 212], "740": 229, "740088": 119, "74036": 58, "74083": 58, "741": 58, "742": 58, "74243": 58, "742e": 147, "744": 62, "74403": 58, "744076": 75, "7453": 57, "7457": 58, "74644": 58, "74652523": 68, "747": 58, "7472": 120, "748": 229, "74875": 58, "749323": 111, "7493231420003212": 111, "74990": 58, "74it": 58, "75": [17, 52, 58, 75, 76, 113, 137, 149, 158, 161, 212], "7500": 58, "750491": 75, "75073": 58, "750u": 113, "751268": 111, "7512682050000876": 111, "751428467252": 68, "75277": 58, "752m": 113, "75311": 58, "75372": 58, "75378": 58, "7539": 57, "753u": 113, "75435": 58, "754386": 75, "755": 117, "7553": 57, "7557055709994529": 111, "755706": 111, "756": 71, "7568": 57, "757": 113, "757336": 111, "7573362090006412": 111, "75778": 58, "7578": 58, "7579": 57, "758m": 112, "759": 229, "7590": 57, "759u": 113, "75it": 58, "76": [58, 73, 112, 113, 136, 212], "76046437346437": 61, "76091554e": 52, "760u": 113, "761": 58, "7612242146420387": 117, "761m": 112, "762": 58, "76216216": 74, "762945": 75, "762m": [56, 57], "763": 58, "76364276": 68, "764": 58, "76402": 58, "7645": 75, "764503": 75, "76483": 58, "76484561": 61, "76494": 58, "765": 237, "76514": 58, "76575": 58, "766320": 62, "766464": 62, "766m": 113, "767m": 113, "768": [56, 57, 111, 113, 117], "7680": 113, "7694444444444445": 61, "769u": 113, "76it": 58, "77": [52, 58, 73, 112, 113, 212, 229], "77026": 58, "77051": 58, "77149": 58, "771983": 222, "77249": 58, "77260": 58, "77303": 58, "77357": 58, "7737": 68, "774m": 117, "775": 229, "7754": 57, "77565": 58, "775m": 113, "77689": 58, "777": 89, "77700": 58, "77726": 58, "7773": 58, "778": 61, "77818": 58, "77846": 58, "77971": 58, "77991": 58, "77it": 58, "78": [58, 61, 73, 74, 113, 138, 161, 212], "7807": 57, "78079": 58, "78082": 58, "7809": 57, "780e": 147, "781": 61, "78149": 58, "782": 229, "78282208": 52, "78287": 58, "78299": 58, "783": 113, "78328": 58, "784": [52, 61, 71, 76], "7841": 119, "7845": 58, "78469": 58, "78539": 58, "7856": 57, "786": 57, "786432": 117, "78699": 58, "787": 58, "788": [57, 58], "78832": 58, "78847": 58, "788u": 113, "789": 58, "7890": 237, "78952": 58, "78it": 58, "79": [58, 67, 93, 113, 158, 212], "79013": 58, "79047426048": 117, "790760979727912e": 145, "790760979727948e": 145, "79083": 58, "790e": 147, "791": 58, "791391": 75, "7914": 75, "792": 113, "79201": 58, "7923": 68, "7928": 57, "7930": [58, 119], "79352": 58, "79370": 58, "79396": 58, "794": 52, "79465": 58, "795": 142, "795599698575646": 117, "7956": 68, "797": [57, 117], "7973": 119, "7974": 119, "798": 61, "79853": 58, "79922222": 142, "79982": 58, "79it": 58, "7cm": 158, "7f": 75, "7mb": 76, "8": [0, 1, 16, 19, 22, 23, 27, 29, 30, 36, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 87, 88, 92, 93, 102, 103, 109, 111, 113, 116, 117, 118, 119, 120, 122, 123, 126, 127, 129, 132, 142, 143, 145, 146, 147, 149, 155, 158, 167, 173, 189, 202, 210, 212, 221, 227, 229, 234], "80": [30, 57, 58, 93, 102, 113, 142, 173, 212], "800": [68, 76, 147], "8000": 142, "80015": 58, "80057": 58, "8008": 58, "800984": 212, "800u": 113, "801": [75, 229], "8018": [120, 142], "8034": 58, "803m": 113, "804": [52, 113], "8044": 68, "8045": 57, "80527": 58, "8053063680": 117, "80536": 58, "80544": 58, "805m": 113, "805u": 113, "80716": 58, "807322219562096e": 145, "807u": 113, "808": 57, "80803840e": 147, "80it": 58, "81": [58, 67, 102, 112, 113, 119, 139, 212, 229], "81116": 58, "811883582334536": 61, "812": 52, "81213": 58, "81233": 58, "81266": 58, "813": 111, "81303": 58, "81348": 58, "8140": 57, "8145": 57, "815": 111, "8150": 120, "8156": 120, "816": [61, 111], "81609": 58, "8169": 57, "817": 67, "81741692793702": 67, "8182": 57, "819": 71, "8192": 57, "81940": 58, "81e": 67, "81mb": 76, "81x_3": 67, "82": [58, 113, 212], "820": 61, "820m": 113, "821": [52, 142, 230], "82129": 58, "82204807e": 52, "8225": 68, "823": 61, "8231": 68, "8235": 75, "823529": 75, "8238": 120, "82396": 58, "823m": 112, "824": 110, "82437": 58, "825284": 119, "825m": 113, "82608": 58, "82648": 58, "827": 68, "82721": 58, "8286": 58, "828u": 113, "82903": 58, "82it": 58, "83": [58, 62, 74, 112, 113, 212], "83003": 58, "83064": 58, "8307": 179, "831": 68, "832": [52, 68], "83208": 58, "833": 68, "83311": 58, "8338": 75, "833824": 75, "8344": 75, "83459": 58, "83595": 58, "836": 68, "8373": 68, "83777": 58, "83780": 58, "83783784": 61, "839": 68, "83981": 58, "83it": 58, "84": [58, 67, 113, 141, 143, 212], "8401": 57, "841": 52, "84106": 58, "8413": 179, "8415": 57, "841m": 113, "842": [67, 68, 229], "8421": 57, "8423": 68, "8427": 76, "842u": 113, "8439": 68, "844": 67, "84434023e": 52, "84455": 58, "845": [67, 68, 111], "84502": 58, "845211452439884": 67, "84571": 58, "845815": 71, "846u": 113, "847": 111, "84766": 58, "84767": 58, "8478": 57, "848": [52, 68, 111], "84814": 58, "84828": 58, "8483": 75, "84833": 58, "848750": 71, "849": [111, 229], "84953088": 117, "8495507137248904e": 145, "84it": 58, "85": [52, 58, 112, 113, 212], "8501": 71, "851": 68, "8510": 57, "85167": 58, "851748": 75, "85178": 58, "85190": 58, "851m": 113, "85294415": 52, "853": 229, "854": 68, "854307": 75, "854553600": 117, "85474": 58, "85542": 58, "85636": 58, "85648915": 52, "857": 68, "85712": 58, "85750": 58, "85777": 58, "858": 111, "8582": 57, "85830": 58, "8585": 68, "858u": 113, "85905225": 61, "85922": 58, "8594": 58, "85981": 58, "85it": 58, "85mb": 76, "86": [58, 73, 112, 113, 212, 229], "860": [61, 68], "860237": 119, "86035845": 52, "86075": 58, "86082": 58, "86100": 58, "86145": 58, "8616": 57, "8621": 67, "8621x_2": 67, "86281": 58, "863": 68, "8639": 75, "863916": 75, "864": 113, "86432000e": 147, "86438": 58, "86508": 58, "866": 68, "86610": 58, "867": 113, "86705": 58, "867180": 71, "8675309": 210, "86825596": 61, "86860": 58, "86864": 58, "8688": 120, "869": 68, "86it": 58, "87": [58, 73, 113, 212], "871202": 75, "8714": 57, "87166": 58, "872": 68, "87216": 58, "8722": 119, "87294": 58, "8738": 76, "873m": 113, "87433": 58, "87445": 58, "87446": 58, "87479": 58, "874944921600": 117, "874m": 113, "875": 68, "875062886400": 117, "87506288640000": 117, "87517": 58, "8753": 57, "87537": 58, "87599": 58, "876": 58, "876099": 119, "87619": 58, "877": 58, "877m": 112, "878": [58, 67, 68], "87807": 58, "8789": 58, "87898": 58, "879": 58, "8793": 58, "87943": 58, "87it": 58, "88": [58, 73, 93, 113, 212], "880": [57, 58, 113], "88089": 58, "880m": 113, "880u": 113, "881": 68, "88121": 58, "881m": 113, "882": 113, "8830": 58, "8833333333333333": 61, "88388": 58, "884": [52, 68], "88485": 58, "886": [58, 111], "88602": 58, "88648649": 74, "88653": 58, "88654": 58, "887": [61, 68], "8874175820001255": 110, "88789": 58, "888": 111, "88840": 58, "88858774": 68, "88879": 58, "8896": 57, "889m": 113, "88it": 58, "88mb": 76, "89": [58, 73, 113, 212], "890": [52, 68, 111], "8901731489346717e": 126, "8901731489346794e": 126, "89017341": 61, "89074": 58, "890u": 113, "891": 61, "89162011": 61, "892": 68, "89257": 58, "89285714": 61, "893": 68, "89395": 58, "89429": 58, "8943": 119, "8955": 119, "89572": 58, "895753": 71, "89585889": 62, "896": [68, 71], "89631926654981": 117, "89655": 58, "897": [52, 61], "8971": 75, "897491012859949": 117, "898": [58, 61], "8981086857156975": 117, "8986519194402697e": 127, "899": 68, "89it": 58, "8cm": 158, "8xa100": 117, "9": [0, 1, 2, 3, 6, 7, 11, 13, 19, 27, 29, 32, 36, 43, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 65, 67, 68, 71, 72, 73, 75, 76, 77, 81, 82, 83, 88, 89, 92, 93, 100, 102, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 129, 143, 145, 146, 147, 158, 167, 173, 189, 202, 210, 212, 216, 225, 227, 229, 230, 233], "90": [30, 57, 58, 65, 84, 95, 102, 112, 113, 143, 145, 212], "900": [68, 142, 147, 158], "9000": [61, 142], "9006": 57, "9007": 58, "90081522": 61, "90094": 58, "901": 58, "901044": 119, "902": [58, 68], "903": 58, "9031": 119, "90319": 58, "903625": 119, "903m": 113, "90443": 58, "904508": 122, "90469": 58, "9047619": 61, "905": [61, 68], "90561": 58, "906788": 119, "90697": 58, "9070": 57, "907315629326824e": 68, "908": 111, "90804": 58, "909": [68, 111], "9093": 57, "9095": 57, "909526": 119, "909733": 71, "90it": 58, "90y": 145, "91": [27, 52, 58, 74, 113, 212, 238], "910": 111, "91018": 58, "910443": 71, "9116": 119, "91183": 58, "912": [52, 68], "91210": 58, "912348": 71, "91241": 58, "9125": 68, "91310488": 52, "91357": 58, "913684": 71, "9137": 71, "91378": 58, "914": 61, "91408": 58, "91431": 58, "91459": 58, "914779": 119, "915": 68, "915205": 75, "915999": 119, "916m": 113, "91756": 58, "917u": 113, "918": 68, "91843": 58, "919": 52, "91it": 58, "91m": 76, "92": [49, 57, 58, 61, 67, 73, 74, 75, 113, 145, 190, 212], "920": 68, "92005989": 52, "920098": 61, "92018": 58, "9204": 57, "920468": 71, "920626": 71, "921": 113, "92107": 58, "92125": 58, "92155660e": 52, "921905": 119, "921930": 75, "922": 68, "92289442": 61, "923062": 119, "92335": 58, "923m": 113, "923u": 113, "924": [61, 68, 112], "92402": 58, "924157": 71, "92451": 67, "92473": 58, "925": 113, "9258": 58, "926": [52, 68], "9261": 71, "92679": 58, "92686": 58, "9269": 58, "92700": 58, "92714": 58, "927157": 71, "92760181": 61, "9277": 57, "927814": 119, "928": 68, "92808": 58, "928109": 67, "929": [52, 68], "9293": 120, "929515": 119, "92967186547287": 61, "92it": 58, "93": [52, 58, 74, 76, 89, 212], "9305": 57, "93065": 58, "930785": 119, "931": 68, "93115": 58, "9315789473684211": 71, "931579": 71, "93181818": 61, "932": 61, "93217": 58, "933": 68, "933540": 119, "933m": 113, "933u": 113, "934": [52, 111], "934282": 71, "9343": 57, "935": [67, 68, 110], "93542": 58, "935628": 119, "936": 111, "936106": 71, "936106070735046": 71, "93650": 58, "937": [61, 68, 111], "93719589e": 52, "93793": 58, "938": [58, 68, 111], "938326": 119, "93879": 58, "939": [52, 58, 68], "93969849": 61, "93990": 58, "93it": 58, "94": [58, 74, 112, 113, 212], "940": 58, "94008": 58, "941": 68, "941042": 71, "941155": 71, "9411551411551411": 71, "94206": 58, "942398": 119, "942731": [71, 119], "942775": 119, "9427876863479427e": 145, "94284": 58, "943": [52, 68], "94439": 58, "9445": 119, "944542635210379e": 145, "944779": 119, "945": 68, "945m": 113, "94623": 58, "94638": 58, "94681": 58, "9471012658228": 61, "947137": 71, "94740": 58, "94758": 58, "947m": 113, "949336": 119, "949m": 113, "94it": 58, "95": [52, 58, 61, 65, 67, 71, 74, 75, 102, 112, 113, 212], "950": [68, 102], "951": 230, "95125": 58, "951m": 112, "952": 68, "952219": 71, "952987": 119, "95306": 58, "9536": 75, "953642": 75, "954": [61, 68], "954536": 75, "95474": 58, "954921": 71, "954u": 113, "955": 111, "95540": 58, "9559": 68, "955947": 71, "955u": 113, "956": 68, "95612": 58, "95613": 58, "957": 111, "9571": 68, "9573": 57, "958": [68, 111], "95841": 58, "9589": 57, "959": 230, "9592": 215, "959318": 119, "95995": 58, "959u": 113, "95it": 58, "96": [52, 57, 58, 67, 71, 74, 112, 113, 145, 212, 238], "960": [68, 230], "960062": 119, "9602": 57, "960352": 71, "960352422907489": 71, "96057": 58, "9607": 119, "961": 67, "96152": 58, "961750": 119, "961793": 119, "962": [67, 68], "962396": 119, "9626068376068373": 117, "962x_1": 67, "963399": 119, "964": 68, "96424": 58, "96524": 58, "966": [57, 68], "96622": 58, "96631": 58, "9663676416": 117, "96647": 58, "96766": 58, "967851": 71, "968": [58, 68], "9683": 57, "969": 58, "9692": 120, "9693": 127, "96949": 58, "9696": 127, "9696603103": 61, "96a5ecabf65b": [0, 145, 147], "96it": 58, "97": [58, 61, 67, 74, 112, 113, 127, 179, 212], "970": [58, 68], "970182": 71, "9704": 57, "97076": 58, "9713101437659449": 210, "9713101437890875": 210, "971857": 71, "971m": 113, "972": 68, "9720": 57, "97209": 58, "972136": 119, "9725": 76, "97321": 58, "974": 68, "9747298715068023": 71, "974730": 71, "974793": 75, "975": 67, "975164": 71, "97534": 58, "975445": 122, "976": [61, 68], "97672": 58, "976m": 113, "977": 52, "977165": 71, "97742": 58, "977606": 119, "977963": 71, "978": 68, "978308342070981e": 145, "97835049": 52, "9791": 123, "97948": 58, "979735": 119, "97it": 58, "97k": 58, "97mb": 229, "98": [52, 58, 67, 74, 112, 118, 179, 212], "980": 68, "9800": 57, "9802e": 57, "980495": 119, "981": [67, 113], "9812046605398257": 71, "981205": 71, "982": 68, "98225": 58, "982279": 71, "98277": 58, "983136": 71, "98357806e": 52, "984": [68, 113], "9841": 68, "984542": 71, "9846267871943117": 67, "985": 58, "985105": 71, "9851052470652112": 71, "98513": 58, "98538": 58, "985478": 71, "985e": 147, "986": 58, "9863": 57, "986326": 119, "98659": 58, "98677": 58, "986865": 222, "986947": 222, "987": 52, "987029641": 68, "9873": 57, "98736789e": 52, "98748": 58, "987603": 119, "988": 68, "98805321": 52, "988262": 71, "98863636": 74, "989": 111, "989035": 119, "989355": 71, "989370": 71, "98it": 58, "99": [6, 52, 58, 65, 67, 70, 74, 100, 102, 112, 113, 179, 202, 212], "990": [68, 71, 102], "9900": 57, "990026": 119, "99042": 58, "990476": 71, "990863": 71, "990918": 71, "991": [93, 111], "99100159e": 52, "991196": 119, "991540": 119, "992": [67, 68, 111], "992234": 71, "99226471": 52, "992m": 113, "993": 111, "99300889e": 52, "9930856553147576": 71, "993086": 71, "993103": 119, "993395": 71, "9936": 119, "993630": 71, "993739": 119, "99375": 58, "994": 68, "9944": 75, "994530": 71, "994745": 119, "994755": 119, "994777": 71, "994828": 119, "995": 52, "995271": 119, "995431": 71, "9954314720812182": 71, "995570": 71, "9955702958862339": 71, "996": [68, 96], "9961": 119, "996175": 70, "996349": 71, "996470": 71, "996582": 119, "996616": 71, "996647": 119, "996782": 71, "996798": 71, "997": 123, "997293": 71, "9976": 57, "9976021664879227e": 68, "997689705070346": 67, "997859": 71, "997951": 71, "998": [52, 67, 68], "9981937602627258": 71, "998194": 71, "9982": 57, "99832": 58, "998358": 71, "9985": 179, "99851": 58, "998522": 71, "9988": 57, "9988615953476088": 71, "998862": 71, "998957": 71, "999": [52, 116, 216], "999064": 71, "99917348": 52, "9992": 57, "99951": 58, "9995e": [57, 123], "9996": 57, "9998": 57, "99981459e": 52, "99984269e": 52, "9999": 57, "99993093e": 52, "99995": 123, "99999": 238, "999999": 17, "9999999900000000": 229, "99999999999999": 126, "9999999999999995e": 122, "999m": 113, "99it": 58, "99th": 93, "9cm": 158, "9k": 76, "9pwqo": [145, 147], "A": [0, 1, 2, 4, 5, 7, 11, 17, 27, 30, 32, 36, 43, 44, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 102, 104, 107, 108, 109, 114, 116, 117, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 143, 145, 146, 149, 154, 157, 161, 162, 163, 172, 175, 177, 179, 184, 187, 189, 191, 194, 195, 202, 210, 214, 216, 217, 218, 221, 224, 226, 228, 230, 233, 236, 237, 238], "AND": [58, 65, 71, 122], "AS": 65, "And": [5, 7, 8, 17, 26, 27, 30, 34, 35, 36, 37, 46, 49, 52, 56, 58, 60, 62, 65, 67, 75, 77, 79, 83, 89, 92, 93, 94, 99, 104, 105, 115, 116, 117, 118, 123, 129, 142, 145, 147, 149, 157, 173, 177, 179, 180, 189, 192, 206, 219, 237], "As": [5, 6, 13, 16, 20, 27, 29, 30, 32, 36, 46, 49, 52, 55, 56, 57, 58, 60, 62, 63, 65, 67, 70, 73, 75, 76, 82, 83, 86, 94, 96, 97, 98, 99, 100, 101, 103, 114, 116, 117, 122, 123, 127, 132, 138, 139, 149, 155, 162, 163, 169, 170, 172, 173, 177, 179, 205, 206, 210, 215, 216, 220, 221, 230], "At": [27, 29, 30, 32, 44, 46, 55, 60, 65, 76, 81, 93, 95, 99, 100, 105, 108, 123, 127, 145, 212, 215, 217, 218], "BUT": 65, "BY": 97, "Be": [11, 32, 154], "Being": 30, "But": [3, 5, 6, 7, 8, 9, 27, 29, 44, 46, 52, 53, 56, 57, 58, 65, 67, 70, 71, 73, 75, 76, 77, 79, 84, 88, 89, 93, 95, 96, 102, 104, 105, 108, 109, 114, 116, 124, 125, 126, 129, 135, 142, 147, 157, 158, 169, 173, 178, 179, 201, 204, 216, 220, 228, 230, 237], "By": [2, 3, 4, 5, 9, 11, 19, 27, 29, 43, 44, 47, 51, 52, 55, 56, 57, 58, 60, 65, 67, 73, 76, 79, 81, 82, 84, 86, 92, 93, 94, 95, 96, 97, 99, 102, 103, 105, 106, 108, 116, 122, 123, 124, 126, 135, 145, 149, 162, 165, 179, 190, 192, 199, 200, 206, 213, 215, 216, 218, 220, 221, 233, 234, 235], "FOR": [65, 90], "For": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 27, 29, 30, 32, 36, 43, 46, 47, 49, 50, 52, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 114, 116, 117, 120, 121, 122, 123, 125, 126, 127, 129, 130, 135, 138, 140, 141, 142, 145, 147, 154, 157, 158, 163, 169, 170, 172, 173, 175, 177, 178, 179, 180, 181, 183, 187, 189, 195, 197, 199, 202, 203, 209, 210, 212, 215, 216, 217, 220, 221, 227, 230, 231, 232, 236, 237], "IF": 65, "IN": 57, "IT": [65, 93], "If": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 78, 79, 84, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 141, 142, 143, 145, 147, 155, 165, 167, 168, 169, 173, 175, 177, 187, 189, 190, 191, 194, 195, 197, 199, 200, 202, 205, 209, 210, 213, 215, 216, 217, 230, 233, 235, 238], "In": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 154, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 216, 217, 218, 220, 221, 226, 227, 230, 234, 235, 237], "Into": [1, 56, 57, 122, 123, 210], "It": [2, 3, 5, 6, 7, 8, 9, 10, 11, 16, 17, 19, 27, 29, 30, 35, 36, 43, 44, 46, 47, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 107, 108, 114, 117, 118, 119, 120, 122, 123, 125, 127, 129, 130, 132, 136, 140, 142, 143, 145, 149, 154, 157, 158, 159, 163, 171, 180, 183, 184, 189, 192, 197, 200, 202, 206, 207, 209, 210, 212, 213, 216, 217, 218, 220, 224, 225, 226, 227, 229, 236], "Its": [1, 10, 16, 30, 46, 76, 77, 84, 85, 220], "NO": [65, 88, 90], "NOT": [6, 61, 65, 71], "No": [2, 6, 7, 13, 19, 58, 65, 75, 84, 94, 97, 102, 122, 170, 212, 215, 216, 227, 228, 235, 237], "Not": [9, 16, 27, 60, 65, 73, 77, 84, 97, 114, 215, 231], "OF": [58, 65, 122], "ON": [58, 122], "OR": [65, 88], "Of": [17, 49, 56, 58, 61, 65, 67, 73, 75, 77, 86, 91, 93, 115, 116, 214, 229], "On": [0, 1, 2, 5, 7, 11, 27, 29, 30, 36, 43, 52, 54, 56, 57, 60, 61, 65, 72, 73, 93, 97, 101, 117, 122, 123, 152, 179, 212, 235], "One": [0, 7, 11, 27, 29, 36, 49, 51, 56, 60, 62, 67, 70, 73, 76, 79, 82, 83, 88, 93, 95, 97, 99, 100, 101, 102, 105, 108, 109, 110, 114, 123, 124, 127, 129, 130, 132, 135, 141, 142, 145, 164, 172, 173, 180, 190, 202, 210, 215, 216, 228, 234, 236], "Or": [84, 89, 108, 118], "Such": [5, 50, 55, 56, 65, 70, 75, 87], "THE": [58, 65, 122], "TO": 90, "That": [3, 6, 13, 29, 44, 47, 49, 51, 57, 64, 65, 67, 70, 73, 75, 84, 123, 135, 139, 140, 147, 149, 152, 163, 175, 179, 180, 187, 189, 192], "The": [0, 1, 2, 3, 4, 8, 9, 10, 11, 16, 18, 20, 26, 27, 28, 33, 34, 36, 37, 43, 48, 49, 50, 51, 53, 54, 58, 59, 61, 62, 66, 68, 71, 72, 74, 77, 79, 81, 82, 83, 86, 88, 89, 94, 96, 97, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 122, 126, 127, 131, 132, 133, 136, 138, 139, 141, 143, 145, 149, 152, 154, 155, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 178, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 193, 197, 199, 200, 203, 205, 206, 207, 209, 211, 213, 216, 217, 218, 220, 222, 224, 225, 228, 229, 231, 232, 234, 235, 236, 237, 238], "Their": [79, 83], "Then": [3, 6, 7, 22, 27, 29, 36, 43, 44, 49, 50, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 73, 75, 76, 83, 84, 89, 93, 95, 98, 99, 102, 105, 117, 124, 125, 126, 129, 131, 132, 133, 135, 136, 139, 140, 142, 143, 145, 146, 147, 149, 150, 152, 154, 157, 159, 163, 165, 166, 169, 172, 173, 175, 177, 178, 179, 180, 182, 183, 185, 187, 189, 190, 191, 192, 194, 200, 202, 205, 206, 210, 212, 213, 216, 220, 237], "There": [6, 19, 20, 27, 29, 43, 44, 52, 57, 58, 60, 61, 62, 65, 66, 67, 73, 75, 78, 79, 83, 88, 93, 95, 97, 99, 100, 101, 102, 103, 105, 108, 116, 120, 129, 158, 169, 191, 194, 202, 206, 210, 213, 216], "These": [4, 5, 6, 8, 10, 19, 27, 29, 36, 43, 52, 55, 56, 57, 58, 65, 71, 75, 78, 79, 81, 83, 84, 88, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 109, 114, 115, 117, 215, 220], "To": [2, 5, 6, 13, 19, 27, 29, 30, 32, 36, 43, 46, 49, 52, 54, 55, 56, 60, 62, 65, 67, 70, 73, 75, 76, 77, 78, 79, 81, 82, 86, 88, 89, 90, 93, 95, 98, 100, 103, 109, 114, 115, 116, 121, 122, 124, 125, 126, 130, 132, 141, 145, 157, 161, 166, 171, 173, 175, 179, 180, 181, 187, 189, 192, 202, 206, 210, 212, 213, 215, 216, 217, 220, 222, 226, 230, 233, 234, 237], "WITH": [57, 65], "Will": [65, 67, 96, 98, 116], "With": [0, 23, 27, 29, 52, 56, 57, 59, 60, 62, 65, 66, 67, 72, 73, 77, 79, 83, 84, 92, 93, 95, 96, 97, 98, 100, 112, 115, 121, 129, 136, 145, 149, 158, 179, 180, 213, 215, 218, 221, 225, 230], "_": [2, 3, 6, 7, 11, 16, 17, 27, 29, 30, 36, 49, 50, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 81, 84, 86, 96, 101, 110, 111, 112, 113, 114, 116, 117, 119, 120, 122, 123, 125, 127, 142, 145, 147, 155, 158, 177, 180, 182, 185, 187, 189, 190, 191, 195, 197, 199, 202, 206, 209, 210, 212, 213, 215, 221, 230, 233], "_0": [27, 30, 67, 79], "_1": [4, 27, 30, 51, 52, 55, 57, 60, 62, 63, 65, 67, 73, 79, 81, 83, 84, 86, 93, 95, 117, 123, 179, 191, 192, 206, 210], "_2": [4, 16, 52, 55, 57, 60, 62, 63, 65, 67, 73, 79, 81, 83, 84, 86, 93, 95, 117, 123, 179, 191, 206], "_3": [52, 55, 57, 60, 65, 67, 79, 81], "_4": 55, "_5": 55, "_6": 57, "__": [7, 116], "___": 116, "__add__": [5, 6, 7], "__all__": [57, 70], "__annotations__": 116, "__args__": [116, 237], "__bases__": 116, "__bool__": [9, 57], "__builtin__": 116, "__builtins__": 116, "__call__": [116, 120, 123, 229, 235, 236], "__class__": [2, 3, 4, 9, 57, 116, 220, 226], "__class_getitem__": 7, "__closure__": 116, "__code__": 116, "__constants__": 57, "__contains__": [5, 7], "__defaults__": 116, "__delattr__": [9, 57, 116], "__delitem__": 7, "__dict__": [2, 57], "__dir__": 116, "__doc__": [116, 228], "__enter__": 229, "__eq__": [7, 116, 217, 226], "__exit__": 229, "__file__": [142, 210], "__format__": 116, "__future__": [3, 6, 22, 23, 36, 53, 57, 58, 61, 62, 68, 70, 71, 74, 88, 90, 93, 110, 111, 113, 114, 118, 119, 120, 122, 127, 142, 210, 216, 217, 218, 221, 224, 225, 226, 227, 228, 233], "__ge__": [7, 116], "__get__": 116, "__getattr__": 116, "__getattribute__": 116, "__getitem__": [7, 8, 57, 118, 119, 120, 212, 220, 233], "__getstate__": 116, "__globals__": 116, "__gt__": [7, 116], "__hash__": [7, 116], "__i": 7, "__iadd__": 7, "__imul__": 7, "__index": 7, "__init__": [2, 4, 5, 7, 8, 22, 23, 34, 36, 53, 57, 61, 68, 71, 74, 93, 99, 111, 113, 114, 116, 117, 118, 119, 120, 123, 212, 213, 218, 220, 227, 229, 230, 233, 235, 236], "__init_subclass__": 116, "__item": 7, "__iter": 7, "__iter__": [7, 22, 32, 233], "__kei": 7, "__kwdefaults__": 116, "__le__": [7, 116], "__len__": [2, 6, 7, 8, 22, 23, 32, 57, 71, 118, 119, 120, 212], "__loader__": 116, "__lt__": [7, 116], "__main__": [53, 74, 88, 90, 110, 111, 112, 114, 116, 119, 155, 170, 213, 215, 216, 220, 221, 224, 225, 227, 228, 229, 230, 234, 236, 237], "__module__": 116, "__mro__": [2, 116], "__mul__": 7, "__name__": [2, 3, 4, 9, 53, 57, 74, 88, 90, 96, 110, 111, 112, 113, 114, 116, 119, 120, 170, 213, 215, 216, 220, 221, 224, 225, 226, 227, 228, 229, 230, 236, 237], "__ne__": 116, "__new__": [9, 57, 116, 225, 236], "__next__": [22, 212, 233], "__object": 7, "__origin__": [116, 237], "__package__": 116, "__post_init__": [117, 216], "__private_attr": 116, "__pycache__": 93, "__qualname__": 116, "__reduce__": 116, "__reduce_ex__": 116, "__reference__": [111, 113], "__repr__": [8, 9, 57, 116], "__reversed__": 7, "__rmul__": 7, "__setattr__": [9, 57, 116], "__setitem__": 7, "__setstate__": 116, "__sizeof__": 116, "__slots__": [2, 57], "__spec__": 116, "__start": 7, "__stop": 7, "__str__": [5, 116, 230], "__subclasshook__": [2, 116], "__tagged__": [111, 113], "__valu": 7, "__weakref__": 116, "_activ": [111, 113], "_activate_neftun": 116, "_add_positional_encod": 57, "_add_regular": 68, "_add_sm_patterns_to_gitignor": 116, "_alia": 58, "_annot": 116, "_appli": 116, "_assign_sampl": 61, "_autoset_attn_implement": 116, "_b": [16, 55, 191], "_backward_compatibility_gradient_checkpoint": 116, "_book": 157, "_c": [61, 88, 113], "_calculate_conditional_gaussian_pdf": 74, "_calculate_joint_likelihood": [73, 74], "_calculate_joint_log_likelihood": 74, "_calculate_posterior": [73, 74], "_calculate_prior": [73, 74], "_call_impl": 116, "_callback": 114, "_centroid": 61, "_check_and_enable_flash_attn_2": 116, "_check_and_enable_sdpa": 116, "_check_input_shap": 68, "_check_method": 2, "_childclass__private_attr": 116, "_compon": 52, "_compute_argmin_assign": 61, "_contain": 5, "_contour": 52, "_convert_head_mask_to_5d": 116, "_copy_lm_head_original_to_res": 116, "_count_ctxmgr": 229, "_create_grid": 53, "_create_repo": 116, "_creator": 221, "_cycl": 114, "_d": [61, 67, 73, 84, 191, 192, 210], "_deactivate_neftun": 116, "_default": 116, "_devic": [57, 114], "_dh": 116, "_dispatch_accelerate_model": 116, "_distributed_c10d": 88, "_dtype": 57, "_dump_snapshot": [113, 114], "_e": [55, 57], "_e_step": 53, "_empti": 116, "_estimate_gaussian_paramet": 53, "_estimate_likelihood_paramet": [73, 74], "_estimate_prior_paramet": [73, 74], "_estimate_respons": 53, "_estimate_weight": 53, "_expand_inputs_for_gener": 116, "_experimentalconfig": 113, "_extract_past_from_model_output": 116, "_f": 70, "_fig": [53, 61, 143, 146, 154], "_finish_current_push": 116, "_fit": 68, "_foreach_sqrt": 113, "_from_config": 116, "_gather_and_numpifi": 116, "_gener": [32, 36], "_genericalia": [116, 237], "_get_backward_hook": 116, "_get_backward_pre_hook": 116, "_get_candidate_gener": 116, "_get_collator_with_removed_column": 116, "_get_cosine_schedule_with_warmup_lr_lambda": [58, 122], "_get_decoder_start_token_id": 116, "_get_distance_metr": 61, "_get_div_term_vector": 57, "_get_eval_sampl": 116, "_get_files_timestamp": 116, "_get_generation_mod": 116, "_get_learning_r": 116, "_get_likelihood": 53, "_get_logits_processor": 116, "_get_logits_warp": 116, "_get_margin": 53, "_get_nam": 116, "_get_nk": 53, "_get_no_split_modul": 116, "_get_output_dir": 116, "_get_position_vector": 57, "_get_prior": 53, "_get_resized_embed": 116, "_get_resized_lm_head": 116, "_get_stopping_criteria": 116, "_get_train_sampl": 116, "_getitemiter": 233, "_h": [55, 57, 67], "_has_code_flag": 229, "_has_converg": [53, 61], "_hook_rss_memory_post_forward": 116, "_hook_rss_memory_pre_forward": 116, "_hp_search_setup": 116, "_i": [55, 57, 65, 67, 116, 120, 123, 191], "_i1": 116, "_i2": 116, "_i3": 116, "_i4": 116, "_i5": 116, "_i6": 116, "_ih": 116, "_ii": 116, "_iii": 116, "_inertia": 61, "_init_centroid": 61, "_init_positional_encod": 57, "_init_weight": [57, 71, 111, 113, 116, 118, 119], "_initi": 53, "_initialize_weight": [68, 116], "_inner_training_loop": 116, "_instanc": [9, 57, 225, 226, 236], "_intern": 216, "_io": 229, "_is_master_process": 229, "_issue_warnings_after_load": 116, "_j": [55, 57, 60, 123, 191], "_k": [51, 60, 61, 62, 63, 73, 123], "_kind": 116, "_label": 61, "_load_best_model": 116, "_load_from_checkpoint": 116, "_load_from_state_dict": 116, "_load_optimizer_and_schedul": 116, "_load_pretrained_model": 116, "_load_pretrained_model_low_mem": 116, "_load_rng_stat": 116, "_lock": 226, "_lora_a_init_param": 71, "_lora_b_init_param": 71, "_lrschedul": [58, 119, 122], "_lsprof": [212, 229], "_m": [27, 57, 65, 117, 206], "_m_step": 53, "_main": 230, "_maybe_initialize_input_ids_for_gener": 116, "_maybe_log_save_evalu": 116, "_maybe_warn_non_full_backward_hook": 116, "_mean": 61, "_memory_profil": 113, "_merg": 71, "_merge_criteria_processor_list": 116, "_method": 61, "_min": 34, "_miss": [9, 58], "_modul": 71, "_move_model_to_devic": 116, "_n": [30, 52, 55, 56, 61, 86, 116, 206], "_name": 116, "_name_or_path": 57, "_named_memb": 116, "_nested_gath": 116, "_notgiven": [9, 57], "_oh": 116, "_p": [83, 206], "_paramet": 58, "_plot_contour": 53, "_plot_scatter_origin": 53, "_plot_scatter_predict": 53, "_prepare_attention_mask_for_gener": 116, "_prepare_decoder_input_ids_for_gener": 116, "_prepare_encoder_decoder_kwargs_for_gener": 116, "_prepare_input": 116, "_prepare_model_input": 116, "_private_instance_attr": 116, "_profil": 113, "_protected_attr": 116, "_push_from_checkpoint": 116, "_qkv_same_embed_dim": 57, "_queue_item": [22, 23], "_recip": 228, "_record_memory_histori": [113, 114], "_register_load_state_dict_pre_hook": 116, "_register_state_dict_hook": 116, "_remove_unused_column": 116, "_reorder_cach": 116, "_replicate_for_data_parallel": 116, "_report_to_hp_search": 116, "_reset_clust": 61, "_reset_inertia": 61, "_reset_label": 61, "_resize_token_embed": 116, "_rotate_checkpoint": 116, "_save": 116, "_save_checkpoint": 116, "_save_optimizer_and_schedul": 116, "_save_rng_st": 116, "_save_to_state_dict": 116, "_save_tpu": 116, "_schedul": 225, "_schedule_flush": 229, "_self_": 216, "_set_default_torch_dtyp": 116, "_set_gradient_checkpoint": 116, "_set_num_samples_and_featur": 74, "_set_signature_columns_if_need": 116, "_slow_forward": 116, "_sorted_checkpoint": 116, "_stack_item": [32, 34], "_strategi": 227, "_supportsnextt": 233, "_t": [7, 55, 57, 123, 233], "_t_co": 7, "_target_": 216, "_temporary_reorder_cach": 116, "_tensor": 114, "_tensor_await": 114, "_tensor_s": 114, "_thread": 229, "_tie_encoder_decoder_weight": 116, "_tie_or_clone_weight": 116, "_to_copi": 112, "_trained_st": [58, 118], "_tune_save_checkpoint": 116, "_type": [32, 36, 58], "_unwrap_parti": 229, "_update_centroid": 61, "_update_model_kwargs_for_gener": 116, "_upload_modified_fil": 116, "_validate_generated_length": 116, "_validate_model_class": 116, "_validate_model_kwarg": 116, "_view_dim": 114, "_w": 55, "_wrap": 88, "_wrap_model": 116, "_wrapped_call_impl": 116, "_y": 76, "a100": 117, "a100_40gb": 117, "a100_bfloat16_flops_promis": 117, "a100_bfloat16_promised_flop": 117, "a_": [27, 30, 46, 55, 79, 117, 189, 202], "a_0": [27, 30], "a_1": [27, 30, 43, 46, 83, 84, 123, 130, 133, 135, 182, 187], "a_2": [43, 46, 83, 84, 123, 130, 133, 135, 187], "a_3": [83, 133], "a_bas": [88, 90], "a_bhl": 57, "a_d": [83, 84], "a_i": [43, 46, 123, 129, 130, 133, 135, 140, 163, 182], "a_j": [43, 133], "a_k": [43, 133, 135], "a_l": 43, "a_list": 57, "a_m": 43, "a_n": [43, 46, 123, 130, 133, 182, 187], "a_ref_count": 230, "a_setup": [88, 90], "a_tensor": 114, "aaa": 237, "aab": 20, "aaron": 0, "ab": [0, 1, 53, 55, 67, 68, 69, 70, 71, 78, 84, 117, 120, 122], "aba": 20, "abandon": 95, "abbeel": 0, "abbreiv": 57, "abbrevi": [52, 86], "abbrievi": 65, "abc": [4, 8, 35, 41, 57, 93, 99, 220, 221, 225, 227, 228, 237], "abcdef": 20, "abcdef1234567890": 89, "abcdefg": 37, "abcedf": 5, "abcmeta": 2, "abid": [5, 6], "abil": [7, 29, 56, 57, 65, 67, 86, 97, 102, 105, 106, 107, 108, 142, 179, 215, 229], "abl": [3, 5, 7, 8, 19, 27, 29, 32, 36, 52, 56, 57, 58, 65, 67, 70, 71, 76, 89, 93, 94, 95, 99, 100, 101, 108, 116, 119, 120, 129, 157, 158, 181, 210, 212, 216, 237], "ablat": [77, 91], "about": [5, 7, 8, 9, 11, 19, 27, 29, 30, 36, 43, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 65, 67, 72, 73, 75, 76, 78, 79, 81, 82, 83, 88, 89, 90, 93, 95, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 114, 117, 123, 125, 129, 132, 142, 144, 147, 148, 155, 156, 157, 158, 169, 173, 179, 180, 188, 193, 202, 205, 207, 210, 216, 220, 227, 233], "abov": [2, 3, 5, 6, 7, 9, 16, 27, 29, 30, 32, 36, 43, 46, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 75, 78, 84, 87, 88, 93, 95, 108, 116, 117, 118, 123, 125, 126, 132, 138, 145, 147, 157, 158, 162, 169, 170, 173, 179, 187, 192, 202, 210, 218, 227, 233, 236], "abrupt": 101, "absenc": [9, 17, 27, 30, 57, 67], "absent": 9, "absolut": [53, 56, 58, 64, 65, 67, 83, 84, 93, 102, 105, 106, 109, 112, 122, 140, 163], "abstract": [3, 4, 5, 17, 29, 32, 33, 57, 78, 81, 83, 99, 116, 129, 209, 212, 216, 220, 221, 227], "abstract_method": 221, "abstractmethod": [2, 4, 8, 57, 99, 220, 221, 225, 227, 228], "absurd": 157, "abu": 65, "abund": 95, "abus": [27, 29, 67, 73, 75, 86, 135, 157, 210], "ac": 84, "academ": [96, 108], "academi": [0, 17, 18, 22, 23, 27, 30, 31, 32, 33, 126], "acceler": [56, 57, 93], "accelerator_config": 116, "accept": [3, 5, 6, 7, 8, 11, 17, 19, 29, 32, 36, 43, 44, 67, 105, 108, 109, 116, 212], "access": [0, 30, 32, 52, 57, 60, 65, 70, 76, 86, 93, 94, 96, 97, 99, 122, 212, 213, 215, 216, 217, 220, 225, 226, 230, 233], "accessdeni": 215, "accid": [100, 108], "accident": 5, "accommod": [5, 56, 67, 109, 117, 221], "accomplish": [57, 62, 95], "accord": [2, 4, 8, 27, 47, 51, 52, 57, 58, 60, 65, 67, 71, 73, 74, 86, 94, 103, 116, 122, 158, 190, 228], "accordingli": [57, 58, 93, 97], "account": [17, 19, 30, 52, 56, 57, 58, 62, 65, 67, 75, 84, 86, 89, 93, 95, 97, 102, 109, 113, 116, 117, 118, 230], "account1": 230, "account2": 230, "acculum": [56, 57], "accumul": [56, 57, 58, 61, 93, 114, 117, 235], "accur": [55, 56, 58, 65, 67, 75, 86, 89, 93, 94, 98, 100, 102, 109, 111, 116, 123, 126, 142, 158, 173, 179, 229], "accuraci": [58, 60, 65, 71, 74, 76, 93, 94, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 118, 119, 120], "accuracy_scor": [71, 75, 119, 120], "accustom": 108, "acf": 67, "achiev": [19, 29, 30, 32, 50, 57, 58, 62, 65, 70, 71, 73, 76, 93, 94, 95, 97, 101, 102, 105, 106, 116, 117, 123, 202, 212, 215, 220, 221, 234], "acknowledg": [70, 82], "ackowledg": 147, "acl": 93, "acquir": [226, 230], "acquisit": 213, "acronym": 117, "across": [4, 5, 10, 17, 29, 32, 52, 53, 55, 56, 57, 58, 60, 67, 70, 73, 75, 76, 79, 86, 87, 88, 93, 95, 96, 97, 99, 105, 106, 107, 108, 111, 112, 114, 122, 158, 171, 215, 218, 221, 225, 226, 235, 236], "act": [5, 29, 32, 55, 56, 57, 88, 90, 96, 97, 98, 99, 100, 103, 225], "act_fn": 71, "action": [6, 27, 32, 57, 60, 79, 82, 87, 88, 90, 93, 95, 96, 99, 100, 109, 111, 114, 129, 142, 147, 158, 205, 210, 212, 226, 235, 237], "activ": [29, 56, 58, 70, 88, 89, 97, 100, 103, 105, 108, 111, 112, 113, 114, 117, 118, 119, 122, 123, 127, 143, 168, 169, 173, 189, 206, 210, 215, 237], "activation_funct": 57, "activation_nam": [111, 113], "active_adapt": 116, "activityprofilercontrol": [112, 113, 114], "actual": [2, 3, 5, 6, 7, 8, 29, 41, 44, 46, 49, 52, 56, 57, 58, 60, 65, 67, 69, 70, 73, 75, 79, 84, 88, 89, 93, 95, 99, 100, 101, 102, 104, 106, 109, 110, 116, 117, 118, 119, 122, 126, 135, 157, 173, 179, 202, 206, 212, 213, 215, 216, 220, 224, 234, 237], "actual_list": 46, "actual_timeout": 9, "acut": 84, "acycl": 99, "ad": [2, 3, 5, 6, 7, 11, 13, 16, 17, 23, 27, 32, 36, 43, 46, 47, 52, 55, 56, 57, 58, 62, 67, 68, 70, 71, 74, 75, 76, 79, 93, 96, 99, 100, 108, 114, 117, 122, 123, 125, 215, 217, 221, 227, 229, 235, 237], "adafactor": 116, "adam": [0, 1, 8, 54, 56, 58, 70, 118, 122], "adam_beta1": 116, "adam_beta2": 116, "adam_epsilon": 116, "adamconfig": [58, 118], "adamw": [58, 113, 116, 117, 119, 120, 216], "adamw_torch": [71, 116, 119], "adapt": [0, 1, 2, 5, 8, 30, 54, 56, 57, 58, 60, 62, 65, 67, 71, 77, 97, 99, 100, 108, 117, 122, 173, 175, 202, 206, 209, 210, 212], "add": [2, 5, 6, 7, 11, 13, 19, 27, 30, 32, 43, 46, 47, 52, 55, 57, 60, 61, 67, 68, 71, 73, 75, 76, 81, 82, 88, 89, 90, 93, 95, 97, 99, 103, 108, 113, 114, 116, 117, 122, 123, 124, 127, 129, 133, 135, 147, 173, 189, 210, 212, 213, 216, 217, 225, 227, 228, 229, 230, 237, 238], "add1": 3, "add_adapt": 116, "add_argu": [88, 90, 114], "add_artist": 52, "add_callback": [58, 116, 118], "add_const": 67, "add_front": 23, "add_funct": 229, "add_memory_hook": 116, "add_model_tag": 116, "add_modul": 116, "add_new_employee_using_list": 7, "add_norm_1": [57, 58, 118, 119], "add_norm_2": [57, 58, 118, 119], "add_norm_config_1": [57, 58, 118], "add_norm_config_2": [57, 58, 118], "add_rear": [23, 25], "add_subplot": [52, 82, 126, 189], "add_text": 81, "add_text_annot": [82, 83, 84], "add_to_list": 93, "add_to_list_and_purposely_make_the_list_very_very_very_long": 93, "add_vector": 81, "add_vectors_to_plott": [82, 83, 84], "addbackward0": 57, "added_tokens_decod": 119, "addedtoken": 119, "addend": 58, "adder_dataset": 58, "adderdataset": 58, "addertoken": 58, "addervocabulari": 58, "addhandl": [119, 120], "addit": [2, 4, 5, 8, 11, 13, 17, 19, 20, 27, 29, 30, 36, 43, 44, 52, 54, 55, 56, 57, 60, 65, 67, 71, 73, 76, 77, 78, 81, 84, 89, 92, 93, 94, 96, 97, 99, 100, 103, 107, 117, 122, 124, 149, 175, 177, 179, 210, 217, 224, 228, 237, 238], "addition": [56, 57, 67, 79, 86, 88, 94, 99], "additional_depend": 93, "additional_metadata": [96, 103], "additionalproperti": 237, "addnorm": [58, 118, 119, 120], "addnormconfig": [57, 58, 118, 119, 120], "addopt": 93, "address": [5, 11, 17, 27, 30, 57, 58, 65, 67, 89, 93, 94, 96, 97, 98, 105, 107, 216, 226, 237], "adeli": 75, "adept": [56, 95], "adeptli": 56, "adequ": [92, 93], "adher": [2, 4, 6, 7, 29, 30, 32, 58, 78, 81, 83, 93, 96, 97, 98, 99, 100, 220], "adj": 67, "adjac": [47, 97], "adject": 129, "adjust": [27, 29, 43, 46, 52, 55, 56, 57, 58, 70, 84, 89, 94, 98, 102, 105, 109, 117, 122, 229], "administ": 179, "administratoraccess": 89, "adopt": [30, 52, 67, 70, 73, 93, 98, 103, 123, 209, 217], "advanc": [1, 2, 17, 28, 29, 30, 54, 56, 58, 69, 70, 84, 97, 99, 105, 114, 115, 212, 221], "advancedchunk": 221, "advanceddoc_": 221, "advancedembedd": 221, "advancedretriev": 221, "advantag": [5, 30, 32, 46, 57, 60, 70, 93, 94, 96, 98, 139, 197, 212, 215], "advent": 100, "advers": 93, "adversari": 95, "advic": 101, "advoc": [9, 220], "aerin": 173, "aerospac": [1, 10], "affect": [2, 4, 7, 11, 27, 30, 46, 57, 58, 65, 67, 70, 75, 82, 87, 93, 94, 96, 99, 101, 107, 109, 117, 123, 129, 132, 154, 179, 190, 215, 220, 235, 236], "affili": 114, "affin": [55, 67], "affirm": 29, "afford": 94, "afforement": [58, 122], "aforement": [57, 99, 216], "afshi": [67, 86], "afshin": [0, 65], "after": [6, 8, 10, 22, 29, 30, 32, 35, 36, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 70, 71, 73, 84, 88, 89, 90, 93, 95, 97, 98, 101, 102, 103, 105, 107, 108, 111, 112, 113, 114, 117, 119, 122, 123, 127, 131, 133, 135, 142, 157, 171, 172, 177, 210, 212, 213, 216, 217, 220, 226, 228, 234], "ag": [67, 79, 86, 95, 96, 97, 109, 180, 237], "again": [5, 6, 11, 20, 27, 29, 36, 52, 55, 57, 58, 60, 65, 67, 70, 73, 75, 83, 89, 93, 95, 97, 99, 116, 120, 122, 123, 129, 147, 179, 187, 210, 212, 226, 227, 233, 235], "against": [6, 57, 60, 93, 94, 95, 99, 100, 104, 107, 135, 206, 220], "agenc": 97, "agent": [98, 116], "ageron": 52, "agg": 75, "aggreg": [5, 55, 57, 58, 95, 97, 98, 99, 108, 123], "aggregate_data": 99, "aggregated_data": 99, "aggregation_funct": 99, "aggres": 103, "agi": 95, "agil": [93, 98], "agnost": [0, 56, 70, 98, 100, 220, 221], "agre": 65, "agreement": [29, 107], "ah": [58, 65], "ahead": [57, 58, 83, 84], "ai": [0, 56, 57, 65, 66, 69, 72, 76, 83, 92, 94, 100, 105, 106, 108, 117, 126], "aic": [52, 67], "aid": [56, 57, 67, 93], "aidan": 0, "aim": [27, 29, 43, 52, 55, 56, 57, 58, 60, 62, 70, 79, 86, 93, 94, 95, 123, 211, 218, 230], "aiop": [77, 95], "airbyt": 99, "airflow": 99, "airplan": [2, 124], "ajax": 98, "aka": 57, "akin": [6, 27, 29, 32, 81, 127, 190, 212], "akra": 16, "akshatgadodia": 236, "al": [30, 52, 55, 56, 57, 58, 67, 70, 78, 79, 83, 122, 123, 210], "alammar": [56, 57], "alarm": 179, "albument": 93, "aldo": [0, 48, 51, 52], "alec": 0, "alert": [93, 95, 98, 107, 108, 109], "alex": 57, "alexand": [0, 48, 51, 52, 59, 60, 66, 67, 72, 73, 86], "algebra": [0, 57, 66, 69, 70, 78, 83, 96, 123, 125, 177, 191, 210], "algo": [28, 29], "algomonst": [27, 43, 44], "algorist": [28, 29], "algorithm": [0, 10, 11, 13, 17, 19, 20, 32, 33, 35, 36, 46, 47, 48, 49, 53, 55, 56, 57, 58, 62, 65, 67, 68, 74, 75, 76, 78, 83, 84, 86, 87, 92, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 122, 123, 190, 202, 210, 215, 227], "ali": 95, "alia": [57, 111, 113, 237], "alic": [5, 97, 237], "alicia": 75, "align": [0, 2, 4, 5, 16, 19, 20, 27, 29, 30, 32, 43, 49, 50, 51, 52, 55, 56, 57, 58, 60, 63, 65, 67, 70, 73, 75, 76, 78, 79, 81, 83, 84, 86, 93, 94, 95, 96, 101, 102, 107, 108, 122, 123, 125, 129, 136, 138, 139, 142, 143, 145, 146, 147, 149, 157, 158, 162, 169, 170, 172, 175, 177, 179, 180, 182, 183, 185, 187, 190, 192, 194, 197, 199, 200, 210], "alignat": [51, 60, 67], "aliv": 215, "all": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 47, 49, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 88, 89, 90, 93, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 138, 139, 142, 143, 145, 147, 149, 152, 157, 158, 162, 163, 173, 175, 179, 180, 183, 187, 190, 191, 194, 197, 199, 203, 206, 207, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 234, 236], "all_arg": 116, "all_config": 111, "all_lett": 127, "all_param": 169, "all_pr": 106, "all_reduc": 88, "allclos": [57, 61], "allen": [0, 69, 70], "aller": 56, "allevi": [56, 57], "alloc": [11, 27, 29, 32, 36, 65, 77, 115, 212, 215, 230, 236], "allof": 237, "allot": 29, "allow": [2, 3, 5, 6, 7, 8, 9, 11, 13, 16, 17, 29, 30, 32, 36, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 62, 65, 67, 70, 73, 75, 76, 82, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 112, 117, 122, 125, 127, 129, 142, 173, 179, 182, 183, 192, 198, 211, 212, 215, 216, 217, 218, 220, 221, 224, 225, 227, 230, 234, 236, 237], "almost": [2, 16, 52, 57, 75, 86, 123, 163, 171, 207, 230], "aloc": 127, "alon": [67, 73, 75, 95, 102, 125, 210], "along": [19, 30, 32, 46, 50, 52, 55, 56, 57, 60, 65, 67, 71, 75, 79, 82, 84, 93, 94, 95, 97, 98, 102, 105, 107, 108, 114, 116, 125, 126, 189, 192, 202, 207, 210, 216, 224], "alongsid": [52, 56, 67, 73, 105, 108, 184], "alpha": [52, 53, 55, 56, 57, 58, 61, 65, 67, 69, 70, 71, 73, 75, 82, 95, 101, 120, 122, 123, 142, 145, 147, 154, 155, 158, 167, 170, 173, 177, 206], "alpha1": 76, "alpha_": [58, 122], "alpha_1": 122, "alpha_2": 122, "alpha_3": 122, "alpha_4": 122, "alpha_5": 122, "alpha_6": 122, "alpha_7": 122, "alpha_d": 191, "alpha_f": [58, 122], "alpha_t": 122, "alphabet": [30, 127], "alphago": 95, "alreadi": [2, 19, 26, 27, 29, 30, 36, 43, 47, 52, 55, 57, 58, 60, 61, 65, 67, 71, 75, 76, 93, 94, 95, 99, 100, 103, 105, 118, 132, 136, 142, 145, 147, 157, 158, 173, 179, 180, 182, 210, 212, 226, 228, 236], "also": [2, 3, 4, 5, 6, 7, 8, 11, 13, 16, 17, 19, 23, 27, 29, 30, 32, 36, 43, 46, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 73, 75, 76, 78, 79, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 107, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 139, 140, 141, 142, 143, 145, 146, 147, 149, 154, 155, 157, 158, 161, 163, 164, 168, 169, 172, 173, 174, 177, 178, 179, 182, 187, 189, 190, 194, 200, 202, 203, 206, 207, 209, 210, 212, 216, 217, 218, 221, 224, 225, 226, 227, 233, 237, 238], "alter": [4, 7, 11, 27, 36, 70, 82, 93, 123, 212, 221], "altern": [5, 27, 30, 36, 52, 57, 60, 65, 67, 75, 82, 89, 95, 97, 98, 215, 224], "although": [8, 10, 17, 27, 30, 32, 52, 55, 56, 57, 58, 60, 62, 65, 67, 70, 95, 97, 105, 122, 147, 202, 222], "altogeth": 27, "alwai": [4, 11, 16, 17, 27, 29, 30, 36, 43, 44, 50, 55, 56, 57, 58, 62, 65, 67, 73, 75, 76, 83, 84, 87, 90, 93, 94, 98, 100, 101, 102, 103, 104, 105, 108, 116, 117, 123, 129, 136, 143, 157, 165, 172, 179, 190, 191, 210, 211, 213, 230, 232, 233], "am": [57, 58, 61, 65, 67, 99, 110, 112, 118, 173], "am_i_in_jupyt": 57, "aman": [56, 57], "amax": 61, "amazon": [0, 96, 97, 98, 108], "amazonaw": 76, "ambient": 79, "ambigu": [52, 57, 147], "ameet": [0, 65, 67, 86], "amen": 57, "ami": [89, 102], "aminian": 95, "aml": 65, "amodei": [0, 1, 54, 56], "among": [46, 49, 52, 55, 57, 60, 65, 70, 75, 79, 88, 93, 106, 123, 180, 213], "amongst": [32, 65, 67, 75, 95, 142, 158], "amount": [11, 13, 16, 17, 19, 27, 29, 32, 36, 43, 56, 62, 65, 67, 73, 76, 79, 93, 94, 95, 99, 100, 108, 109, 112, 114, 117, 123, 132, 202, 203, 215, 229, 230, 237], "amp": 58, "amplif": 70, "amplifi": [56, 57, 70, 102, 123], "amplitud": 122, "amsgrad": [58, 216], "an": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 23, 27, 29, 32, 35, 36, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84, 86, 88, 89, 90, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 116, 117, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 154, 157, 158, 159, 162, 163, 164, 166, 168, 171, 173, 175, 177, 179, 182, 183, 187, 188, 192, 194, 195, 199, 202, 206, 209, 210, 213, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238], "anaconda": 89, "anagram": [18, 21, 39, 40, 42, 77], "analog": [30, 32, 97], "analogi": [7, 93, 215], "analogu": 79, "analys": 100, "analysi": [0, 5, 10, 16, 20, 32, 55, 56, 57, 58, 59, 60, 61, 66, 67, 70, 77, 79, 83, 84, 92, 93, 94, 95, 97, 98, 99, 102, 103, 107, 108, 117, 123, 135, 170, 210], "analyt": [83, 84, 92, 98, 99, 100], "analyz": [19, 27, 29, 57, 93, 94, 95, 97, 98, 100, 107, 108, 145, 202], "ancestr": 52, "anderson": 67, "andrej": [56, 117], "andrew": 86, "angl": [52, 57, 177], "ani": [2, 3, 4, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 34, 36, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 112, 113, 114, 116, 117, 119, 120, 122, 123, 125, 126, 127, 129, 130, 133, 135, 136, 139, 140, 141, 142, 143, 145, 146, 149, 154, 157, 161, 163, 165, 167, 175, 177, 180, 182, 190, 191, 194, 197, 199, 202, 205, 206, 210, 212, 213, 215, 216, 217, 218, 220, 224, 225, 227, 228, 229, 234, 237], "anim": [2, 3, 4, 6, 56, 65, 93, 95, 97], "animaltyp": 6, "ann": [72, 73, 140, 141, 143, 146, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 197, 199, 200, 202, 203, 205, 210], "anneal": [77, 121], "annot": [3, 6, 22, 23, 36, 52, 53, 56, 57, 58, 61, 62, 67, 68, 70, 71, 74, 81, 88, 90, 93, 110, 111, 113, 114, 118, 119, 120, 122, 127, 142, 210, 216, 217, 218, 221, 224, 225, 226, 227, 228, 233, 237], "annotation_text": 81, "announc": 57, "anomali": [83, 92, 98, 100, 108], "anoth": [2, 3, 5, 6, 8, 9, 29, 30, 43, 52, 56, 57, 58, 61, 65, 67, 70, 75, 78, 84, 87, 88, 93, 95, 97, 99, 102, 105, 108, 115, 116, 119, 123, 129, 139, 154, 178, 179, 187, 202, 213, 215, 216, 228, 230, 237], "answer": [0, 5, 11, 13, 19, 20, 29, 43, 52, 56, 57, 58, 60, 64, 65, 67, 68, 75, 95, 100, 124, 127, 131, 135, 136, 142, 147, 157, 158, 173, 179, 180, 207, 210, 229], "antarct": 75, "antarctica": [75, 93], "anthoni": 5, "anti": [4, 222, 224], "anticip": [19, 36, 43, 94, 96], "antideriv": 125, "anymor": [58, 60, 125], "anyof": 237, "anyon": 83, "anyth": [16, 50, 52, 58, 65, 73, 97, 100, 118, 210, 216, 220], "anytown": 237, "anywai": [58, 67, 125, 133, 135], "anywher": 226, "ap": 89, "apach": [93, 97, 98, 99, 113], "apart": [57, 60, 61, 71, 212], "api": [9, 67, 92, 93, 96, 97, 98, 99, 107, 108, 112, 215, 230], "app": [94, 95, 99, 108], "app_config_group": 216, "app_nam": [216, 224], "appar": [47, 58, 60, 67, 84, 93, 100, 110, 131, 133, 135, 158, 194, 209, 233], "appconfig": 224, "appear": [16, 35, 44, 52, 57, 67, 75, 76, 81, 93, 95, 96, 105, 108, 124, 212], "appeas": 58, "append": [5, 7, 11, 20, 23, 32, 34, 36, 41, 52, 53, 57, 58, 61, 62, 68, 73, 74, 75, 76, 88, 90, 93, 99, 111, 116, 117, 118, 122, 123, 127, 142, 145, 147, 155, 158, 167, 168, 169, 177, 189, 206, 210, 212, 213, 215, 216, 221, 230, 234, 235, 238], "append_and_return_list": 5, "append_int_and_return_list": 5, "append_int_to_stack": 32, "append_pi": 7, "append_str_and_return_list": 5, "append_str_to_stack": 32, "append_to_list": 235, "append_to_list_mutable_default": 235, "append_to_stack": 32, "appendix": 117, "appl": [17, 76, 96], "appli": [2, 4, 5, 6, 7, 11, 16, 17, 20, 23, 27, 29, 30, 52, 55, 56, 58, 60, 65, 67, 68, 69, 70, 71, 73, 75, 76, 78, 79, 82, 83, 86, 93, 94, 98, 99, 100, 111, 112, 113, 114, 116, 118, 119, 122, 123, 125, 126, 136, 172, 177, 179, 181, 185, 191, 210, 212, 216, 220], "applic": [0, 1, 2, 6, 7, 10, 17, 27, 29, 30, 32, 46, 47, 56, 58, 59, 60, 65, 66, 67, 68, 70, 72, 73, 77, 78, 79, 81, 82, 83, 84, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 126, 144, 153, 160, 194, 198, 210, 215, 216, 218, 220, 224, 225], "apply_lora_to_base_model": 71, "apply_transform": 220, "apply_weight_decay_to_different_param_group": [58, 118], "appreci": [5, 11, 35, 62, 86, 177, 202], "apprehend": 29, "approach": [2, 5, 9, 16, 17, 19, 27, 30, 36, 44, 46, 47, 49, 52, 57, 58, 60, 65, 67, 70, 73, 75, 79, 82, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 122, 123, 125, 173, 199, 205, 206, 211, 212, 215, 220, 229, 230], "appropri": [4, 29, 55, 56, 57, 58, 60, 62, 67, 70, 71, 89, 93, 94, 95, 97, 98, 99, 100, 102, 105, 106, 108, 123, 154, 215, 220, 227], "approv": [99, 107], "approx": [13, 19, 26, 34, 35, 37, 43, 49, 55, 56, 57, 65, 70, 73, 75, 83, 111, 113, 117, 125, 149, 154, 173, 210], "approxim": [3, 13, 19, 27, 32, 36, 43, 52, 53, 56, 58, 60, 65, 67, 69, 70, 79, 101, 102, 111, 113, 117, 118, 119, 123, 125, 126, 173, 202], "apr": [1, 10], "apt": [89, 99], "aptli": [6, 93], "ar": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 16, 17, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 37, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 65, 66, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 143, 145, 146, 147, 149, 152, 154, 155, 158, 159, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237], "arang": [52, 53, 57, 75, 111, 113, 142, 145, 147, 155, 158, 173, 210], "arbitrari": [30, 55, 57, 78, 93, 108, 122, 136, 206, 237], "arbitrarili": [65, 79, 205], "arbitrary_types_allow": [57, 217, 221], "arbor": [72, 73, 140, 141, 143, 146, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 197, 199, 200, 202, 203, 205, 210], "arcfac": 86, "architect": 109, "architectur": [54, 56, 58, 70, 71, 93, 95, 96, 103, 105, 108, 116, 117, 221], "archiv": 107, "arctan": [52, 83], "arctang": 83, "area": [4, 29, 52, 57, 67, 75, 83, 86, 93, 95, 98, 99, 102, 108, 117, 125, 131, 132, 169, 173, 175, 198, 221], "aren": [7, 67, 93, 108], "arg": [3, 5, 6, 7, 8, 22, 23, 29, 32, 52, 53, 57, 58, 62, 68, 71, 73, 74, 75, 88, 90, 93, 96, 99, 111, 114, 116, 118, 119, 127, 213, 215, 228, 230, 235, 237], "arg1": 6, "arg2": 6, "argmax": [49, 50, 53, 55, 56, 58, 67, 70, 71, 73, 74, 75, 76, 118, 119, 123, 166, 210], "argmin": [49, 55, 56, 57, 60, 61, 63, 67, 70], "argpars": [88, 90, 114], "args_list": 58, "argu": [4, 9, 61, 70, 93, 99, 100], "argument": [3, 6, 8, 9, 22, 32, 43, 52, 57, 58, 62, 65, 75, 77, 116, 119, 132, 142, 199, 212, 216, 228, 231, 234, 237], "argumentpars": [88, 114], "ari": 102, "aris": [2, 5, 27, 29, 32, 55, 58, 67, 83, 86, 90, 93, 95, 99, 108, 145], "arithmet": [4, 58, 67, 117, 123, 210], "arizona": 184, "arjancod": [220, 227], "around": [7, 9, 30, 57, 58, 65, 67, 71, 75, 94, 97, 108, 110, 123, 127, 155, 157, 173, 206, 215, 216, 217, 228, 233], "arr": 62, "arrai": [5, 6, 7, 13, 17, 19, 20, 22, 23, 27, 32, 39, 40, 45, 46, 52, 53, 55, 56, 57, 61, 62, 65, 67, 68, 70, 73, 75, 77, 81, 83, 93, 95, 96, 97, 99, 109, 123, 126, 127, 139, 142, 145, 147, 175, 180, 185, 187, 189, 190, 199, 206, 209, 210, 215, 237], "arrang": [27, 30, 60, 65, 117], "arraylik": 57, "arriv": [29, 36, 52, 55, 57, 65, 73, 76, 97, 108, 154], "arrow": [30, 32, 84], "arrow_length_ratio": 82, "arrowprop": 52, "art": [56, 93], "art3d": 126, "arthur": 60, "articl": [3, 5, 27, 57, 59, 60, 62, 70, 92, 93, 95, 97, 98, 104, 108, 120, 145, 173, 222], "artifact": [71, 99, 105, 119, 216, 217], "artifact_uri": 217, "artifici": [67, 92], "artist": 147, "arxiv": [0, 1, 54, 56, 57, 69, 70, 117, 119, 120, 122, 123], "as_datafram": 61, "as_tensor": 57, "asarrai": [127, 142], "ascend": [17, 27, 30, 43, 58, 75, 98, 111, 112, 122], "ascertain": 67, "ascii_lowercas": 127, "asctim": [53, 68, 74, 110, 111, 112, 113, 114, 119, 120, 213, 216, 230], "ashish": 0, "asian": 98, "asid": [56, 157], "ask": [7, 27, 36, 52, 57, 58, 65, 67, 70, 75, 93, 95, 96, 124, 129, 136, 142, 143, 146, 149, 154, 169, 173, 179, 180, 183, 187, 190, 202, 210, 216, 230], "aspect": [2, 9, 27, 30, 52, 57, 66, 79, 81, 83, 84, 92, 93, 94, 95, 102, 103, 206, 215, 221], "aspx": 125, "assembl": 221, "assembli": 221, "assert": [2, 4, 8, 9, 27, 43, 52, 57, 58, 61, 65, 68, 74, 88, 93, 111, 112, 113, 114, 116, 117, 118, 119, 122, 216, 217, 226, 236, 237], "assert_allclos": [53, 61, 74], "assert_array_equ": 61, "assert_clos": [55, 57, 58, 123], "assert_equ": [27, 29, 30], "assess": [2, 4, 29, 52, 56, 62, 92, 94, 95, 96, 105, 107, 117], "asset": [27, 58, 62, 81, 82, 212, 237], "assets_dir": 62, "assign": [3, 5, 7, 8, 9, 30, 53, 55, 57, 58, 61, 62, 83, 87, 93, 94, 96, 97, 100, 102, 111, 113, 117, 119, 123, 125, 127, 129, 157, 210, 215, 216, 226, 230, 236, 237], "assign_project": 7, "assignment1": [111, 113], "assignment2": [111, 113, 115], "assimil": 56, "assist": 108, "assisted_decod": 116, "associ": [4, 6, 17, 30, 49, 52, 57, 60, 65, 67, 71, 73, 78, 79, 82, 84, 87, 89, 93, 94, 102, 103, 107, 108, 123, 142, 145, 147, 158, 159, 180, 210, 238], "assum": [3, 4, 5, 6, 7, 11, 13, 16, 17, 19, 20, 26, 27, 29, 30, 34, 35, 37, 43, 44, 50, 52, 55, 56, 57, 58, 60, 62, 65, 66, 67, 70, 71, 73, 75, 76, 79, 81, 84, 86, 87, 88, 93, 94, 97, 99, 101, 102, 117, 118, 122, 123, 124, 125, 127, 129, 132, 133, 145, 158, 166, 172, 173, 179, 187, 190, 191, 200, 210], "assumed_mfu": 117, "assumpiton": 75, "assumpt": [5, 30, 57, 59, 65, 72, 75, 76, 94, 119, 123, 142, 145, 149, 152, 157, 172, 179, 191, 194], "assur": [11, 30, 98], "ast": [93, 185], "aston": [0, 57, 72, 73], "astut": 179, "astyp": [57, 61, 62, 75, 206], "asymptot": [16, 29, 46, 65, 73, 202], "async": [114, 215], "async_op": 88, "asynchrn": 110, "asynchron": [77, 90, 110, 111, 112], "asyncio": [114, 229], "ate": [20, 57], "aten": [112, 113], "atm": 96, "atol": [57, 61, 74, 123], "atom": [213, 215], "attach": [89, 116], "attachment_id": 89, "attachmentid": 89, "attain": [56, 166], "attempt": [5, 29, 57, 65, 71, 73, 109, 116, 125, 129, 145, 212, 226], "attend": [55, 56, 57, 58, 118], "attent": [0, 1, 52, 54, 60, 61, 63, 65, 69, 70, 71, 77, 78, 96, 111, 113, 117, 119, 120, 121, 160], "attention_mask": [71, 118, 119, 120], "attention_matrix": [58, 118], "attention_scor": [55, 57, 111, 113, 117, 118], "attention_weight": [55, 57, 58, 111, 113, 118], "attention_weights_summed_over_sequ": 57, "attn": [55, 57, 111, 113], "attn_pdrop": [57, 111, 113], "attr": [57, 58, 111, 113], "attract": 95, "attribut": [2, 3, 5, 7, 22, 23, 36, 53, 56, 58, 61, 68, 74, 79, 83, 93, 94, 96, 97, 98, 111, 113, 114, 123, 217, 230, 236, 237], "attributeerror": [3, 5, 7, 9, 53, 57, 58, 230], "atyp": 65, "au": 56, "auc": [71, 102, 106, 107, 119, 120], "audio": [93, 95, 96, 97, 98], "audit": [98, 107], "aug": [0, 1, 54, 56, 122, 123], "augment": [16, 212, 216], "auroc": [94, 95], "authent": [56, 93, 96, 98], "author": [7, 10, 55, 56, 57, 58, 65, 67, 70, 75, 89, 92, 93, 97, 98, 99, 100, 114, 122, 132, 145, 162, 171, 172, 206, 237], "auto": [54, 55, 58, 61, 62, 71, 88, 111, 114, 116, 119, 227], "auto_exampl": 52, "auto_find_batch_s": 116, "autocal": 116, "autocast": [111, 113], "autocast_config": [58, 118], "autocast_smart_context_manag": 116, "autocomplet": [94, 108], "autoencod": [83, 95], "autofil": 95, "autograd": [88, 113, 114, 123], "autom": [92, 98, 100, 103, 105, 107, 109, 116], "automat": [2, 5, 8, 9, 32, 53, 76, 88, 93, 95, 96, 99, 103, 105, 116, 213, 227, 230, 233], "autonom": [94, 95, 108], "autoregress": [0, 57, 58, 119], "aux": 215, "auxiliari": [17, 36, 46], "avail": [3, 5, 8, 9, 11, 27, 29, 56, 69, 70, 75, 79, 88, 89, 93, 94, 95, 96, 97, 98, 103, 105, 108, 110, 112, 120, 123, 203, 212, 221, 225], "avals2": 155, "avenu": 4, "averag": [11, 17, 32, 36, 43, 49, 52, 57, 58, 60, 61, 62, 65, 67, 71, 75, 86, 94, 95, 97, 98, 99, 101, 102, 105, 106, 119, 122, 125, 140, 141, 145, 149, 154, 155, 158, 163, 164, 178, 183, 184, 207, 210, 216, 238], "average_batch_loss": 58, "average_batch_perplex": 58, "average_precision_scor": [71, 119, 120], "avg": [58, 74, 112, 113, 216, 218], "avg_bia": 217, "avg_expected_loss": 217, "avg_loss": [119, 120], "avg_val_loss": 119, "avg_vari": 217, "avoid": [2, 10, 11, 27, 29, 43, 44, 57, 70, 71, 73, 74, 86, 93, 100, 101, 102, 109, 116, 123, 187, 215, 217, 218, 229, 230, 235], "avro": 96, "aw": [77, 87, 91, 93, 95, 96, 98, 108, 109], "awai": [29, 56, 57, 65, 67, 76, 86, 93, 125, 139, 180, 209], "await": [9, 114, 215], "awaitable_leak": 114, "awaitabletensor": 114, "awaitabletensorwithviewcallback": 114, "awaken": 93, "awar": [32, 55, 96, 119], "awk": 88, "aws_access_kei": 89, "aws_secret_kei": 89, "awscli": 89, "awsec2": 89, "ax": [52, 53, 57, 58, 61, 62, 75, 76, 79, 81, 82, 83, 84, 122, 123, 126, 127, 139, 140, 142, 143, 146, 154, 158, 159, 163, 167, 169, 172, 173, 177, 189, 192, 206, 210], "ax1": 52, "ax2": 52, "ax3": 52, "ax4": 52, "ax_": 67, "ax_0": 79, "ax_1": 67, "ax_kwarg": [81, 82, 83, 84], "axes3d": [75, 126], "axesimag": 62, "axhlin": [67, 75], "axi": [52, 53, 55, 57, 58, 60, 61, 62, 68, 71, 74, 75, 76, 81, 82, 83, 84, 102, 105, 114, 119, 125, 139, 179, 187, 189, 192], "axiom": [29, 77, 83, 125, 129, 134, 173, 202], "axisgrid": 75, "axler": [81, 82], "axvlin": 75, "aznd": 210, "azur": [92, 96, 97, 98], "b": [1, 2, 4, 6, 7, 11, 16, 26, 27, 46, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 75, 76, 78, 79, 81, 82, 83, 84, 100, 102, 107, 109, 111, 113, 114, 116, 117, 118, 119, 123, 125, 127, 129, 130, 131, 132, 133, 135, 140, 141, 145, 147, 149, 154, 155, 159, 161, 162, 163, 165, 167, 169, 170, 172, 173, 175, 180, 185, 187, 189, 191, 194, 199, 202, 215, 216, 220, 230, 232, 233, 237], "b023": 234, "b101": 93, "b201": 93, "b301": 93, "b601": 93, "b_": [55, 113, 114, 117], "b_1": [65, 79, 84, 187], "b_2": [65, 79, 84, 187], "b_3": 79, "b_d": 84, "b_demo": 88, "b_h": 67, "b_i": 79, "b_m": [65, 79], "b_n": [79, 187], "ba": [0, 1, 54, 56, 58, 78], "baa": 20, "babi": 67, "back": [7, 10, 27, 29, 32, 36, 52, 55, 56, 57, 58, 60, 62, 67, 71, 75, 79, 89, 93, 94, 97, 99, 103, 108, 111, 113, 122, 126, 129, 133, 136, 157, 158, 173, 179, 182, 187, 192, 212, 213, 216, 230], "backbon": [56, 57, 62, 70, 98, 111, 113, 118, 119], "backbone_last_layer_hidden_st": 119, "backdrop": 2, "backend": [57, 58, 70, 90, 93, 103, 118], "background": [2, 56, 57, 108, 237], "backoff": 99, "backoff_factor": [58, 118], "backpropag": [57, 58, 70, 83, 117, 123], "backslash": 187, "backtest": 93, "backtick": 7, "backtrack": 105, "backup": [93, 98, 99], "backward": [7, 47, 57, 88, 111, 113, 114, 117, 119, 120, 216], "backward_pass": 113, "backward_tot": 117, "bad": [5, 58, 61, 65, 67, 70, 75, 99, 102, 118, 227], "baddest": 65, "bag": [100, 101], "baguett": 79, "bahdanau": [0, 57, 117], "bake": 79, "balanc": [11, 17, 56, 57, 58, 93, 94, 97, 100, 106, 108, 120, 230], "ball": [2, 3, 4, 129], "banach": [0, 83], "banana": [17, 28, 77, 97], "bandit": 93, "bandwidth": [29, 62, 93, 215], "bank": [56, 57, 93, 96, 97], "bankaccount": 230, "bar": [58, 65, 67, 73, 75, 123, 142, 173, 177, 202, 205, 206, 216], "bar1": 75, "bar2": 75, "bar_label": 173, "barbara": 4, "barcontain": 147, "bare": 217, "barplot": 75, "barrier": [88, 213, 230], "base": [2, 5, 7, 11, 16, 17, 20, 27, 29, 30, 32, 43, 44, 46, 47, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 75, 77, 79, 81, 82, 83, 84, 86, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 116, 118, 121, 122, 123, 126, 143, 185, 197, 200, 203, 209, 211, 212, 215, 216, 218, 220, 221, 225, 226, 227, 229, 230, 236, 237], "base_class": 116, "base_config": 216, "base_model": [71, 118, 119], "base_model_merged_and_unload": 71, "base_model_total_train": 71, "base_model_with_adapt": 71, "base_model_with_adapter_total_train": 71, "basedecod": 57, "baseestim": [8, 53, 61, 74], "basefmt": [142, 158], "baselin": [56, 92, 95, 102, 105, 107], "basemodel": [6, 57, 71, 88, 99, 111, 113, 116, 117, 216, 217, 218, 221, 224, 225, 237], "bash": [89, 99], "bashrc": 89, "basi": [3, 36, 56, 79, 81, 100, 202], "basic": [0, 2, 4, 10, 11, 16, 17, 30, 36, 48, 50, 51, 52, 55, 57, 58, 59, 60, 66, 67, 70, 71, 77, 86, 91, 93, 95, 98, 99, 105, 109, 111, 115, 116, 118, 119, 122, 123, 134, 143, 147, 212, 216, 225], "basic_launch": 216, "basic_schema": 237, "basic_sweep": 216, "basic_typ": 237, "basicconfig": [53, 68, 74, 110, 111, 112, 113, 114, 213, 230], "basicd": [22, 23], "basiclaunch": 216, "basicsweep": 216, "bat": 20, "batch": [56, 57, 68, 70, 71, 75, 92, 97, 105, 111, 113, 116, 117, 118, 119, 120, 212, 216, 217], "batch_decode_equ": 58, "batch_first": [58, 118], "batch_index": [58, 118], "batch_shap": 75, "batch_siz": [57, 58, 71, 111, 113, 117, 118, 119, 120, 212, 216, 218], "batchmean": 120, "batchnorm": 58, "bathroom": [67, 86], "bay": [48, 52, 77, 123, 134, 149, 175, 179, 180, 181, 210], "bayes_pr": 76, "bayes_pred_st": 76, "bayesian": [75, 76, 103, 105, 123], "bazzi": 16, "bbb": 55, "bbox": 52, "bc": 78, "bcheggeseth": 142, "beam": 113, "beam_sampl": 116, "beam_search": 116, "bear": [97, 143], "beast": 99, "beat": [30, 135], "beatrix": 113, "beauti": [93, 98], "becam": 158, "becaus": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 75, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 110, 112, 114, 116, 117, 118, 119, 122, 123, 125, 129, 130, 132, 142, 143, 145, 146, 147, 149, 152, 154, 157, 158, 159, 171, 172, 173, 175, 179, 180, 191, 192, 194, 195, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 224, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238], "becom": [2, 4, 5, 11, 17, 19, 27, 29, 32, 36, 43, 46, 52, 55, 56, 57, 58, 62, 65, 67, 70, 73, 75, 78, 79, 82, 94, 95, 97, 98, 99, 103, 105, 108, 109, 112, 122, 123, 129, 131, 135, 142, 147, 171, 173, 175, 179, 180, 187, 192, 194, 199, 202, 206, 207, 210, 212, 220, 221, 227, 229, 230, 235, 237], "bed": 67, "bedrock": 30, "bedroom": [67, 86], "been": [5, 9, 27, 29, 30, 36, 43, 52, 54, 57, 60, 65, 68, 71, 83, 84, 86, 87, 89, 93, 98, 99, 100, 102, 106, 107, 109, 116, 129, 189, 211, 212, 217, 226, 236, 237], "befor": [2, 3, 7, 9, 10, 13, 17, 19, 27, 29, 30, 32, 36, 43, 56, 57, 58, 60, 62, 67, 68, 70, 71, 73, 74, 75, 76, 79, 82, 84, 88, 89, 90, 93, 94, 95, 97, 99, 100, 101, 102, 105, 107, 108, 110, 111, 114, 116, 117, 119, 122, 123, 154, 171, 173, 180, 187, 206, 210, 211, 212, 213, 215, 216, 217, 226, 228, 229, 230], "beforehand": [46, 58, 60], "begin": [11, 16, 19, 20, 27, 29, 30, 32, 36, 43, 44, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 60, 62, 63, 65, 67, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 93, 95, 96, 99, 102, 105, 109, 117, 122, 123, 125, 126, 129, 136, 138, 139, 142, 143, 145, 146, 147, 149, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 177, 179, 180, 182, 183, 185, 187, 189, 190, 191, 192, 194, 197, 199, 200, 209, 210], "beginn": [58, 101, 105, 120, 129, 131, 230], "behalf": 89, "behav": [2, 4, 6, 7, 65, 79, 93, 179, 225, 232, 233, 235], "behavior": [2, 3, 4, 7, 29, 30, 32, 36, 57, 58, 65, 70, 86, 92, 93, 94, 95, 100, 101, 102, 105, 108, 109, 119, 120, 122, 198, 212, 213, 215, 216, 218, 221, 229, 232, 234, 235], "behaviour": [7, 9, 57, 58, 113], "behind": [19, 27, 29, 32, 43, 44, 55, 57, 58, 60, 82, 99, 122, 125], "beij": [92, 94, 96, 97, 99], "being": [2, 4, 6, 7, 9, 11, 16, 27, 29, 30, 32, 36, 46, 49, 52, 55, 56, 57, 58, 60, 62, 65, 67, 73, 75, 76, 78, 79, 83, 90, 93, 94, 95, 97, 98, 100, 108, 117, 119, 122, 123, 129, 130, 142, 147, 154, 158, 159, 173, 179, 180, 182, 210, 212, 215, 218, 226, 230, 237], "believ": [56, 57, 65, 75, 95, 132, 157], "bell": [97, 116, 171, 179], "belong": [2, 6, 52, 53, 55, 57, 60, 61, 73, 75, 81, 102, 105, 123, 131, 169], "below": [2, 3, 5, 6, 7, 8, 16, 17, 20, 23, 27, 29, 30, 32, 36, 44, 52, 55, 56, 57, 58, 60, 62, 65, 67, 70, 71, 73, 75, 78, 79, 83, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 103, 105, 112, 114, 117, 118, 119, 122, 123, 125, 126, 127, 129, 130, 132, 133, 136, 142, 143, 145, 146, 147, 154, 155, 157, 159, 166, 167, 168, 169, 171, 173, 175, 177, 179, 182, 187, 199, 206, 209, 210, 213, 215, 216, 217, 220, 224, 225, 228, 233, 235, 236, 237], "ben": 65, "benchmark": [56, 57, 67, 70, 94, 95, 101, 103, 105, 107, 113, 115], "bend": [30, 32], "benderski": 123, "beneath": 57, "benefici": [5, 30, 55, 56, 57, 58, 83, 93, 100, 101, 215, 217, 218], "benefit": [30, 56, 57, 99, 119, 212, 215, 229, 230, 238], "bengio": [0, 1, 76, 123], "benign": 102, "bentlei": 16, "ber": 206, "bera": 67, "bern": [143, 145, 146, 147, 185], "bernoulli": [51, 55, 73, 75, 77, 147, 148, 151, 153, 157, 179, 183], "bernoullibinomi": 142, "bert": 95, "besid": [9, 57, 73, 78, 201, 204, 217], "best": [11, 17, 36, 49, 52, 57, 58, 60, 61, 62, 65, 67, 73, 79, 86, 92, 95, 96, 97, 98, 100, 101, 105, 108, 110, 126, 135, 178, 209, 210, 215, 217, 232], "bet": 57, "beta": [55, 57, 58, 65, 67, 68, 76, 79, 95, 118, 123, 170, 177, 210, 216], "beta_": 67, "beta_0": 67, "beta_1": [58, 67], "beta_1x_1": 67, "beta_2": [58, 67], "beta_3": 67, "beta_d": [55, 57, 67], "beta_h": 67, "beta_hat": 67, "beta_k": 67, "beta_n": 67, "better": [3, 6, 11, 17, 29, 46, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 75, 76, 79, 86, 92, 93, 94, 95, 96, 97, 100, 101, 103, 105, 107, 109, 115, 118, 119, 120, 122, 129, 173, 178, 201, 204, 209, 216], "better_knowledge_distil": 120, "between": [2, 5, 6, 7, 8, 9, 11, 16, 17, 19, 27, 29, 30, 43, 47, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 68, 70, 73, 75, 76, 78, 79, 81, 82, 83, 86, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 109, 117, 118, 120, 122, 123, 125, 129, 136, 147, 154, 157, 158, 161, 169, 173, 177, 178, 179, 181, 189, 202, 205, 206, 210, 212, 215, 217, 218, 220, 221, 232, 233, 235], "bewar": [11, 17], "beyond": [0, 1, 17, 20, 27, 29, 36, 54, 56, 58, 76, 94, 101, 102, 103, 105, 107, 109, 116, 122], "bf16": [116, 117], "bf16_full_ev": 116, "bfloat16": [111, 113, 116, 117], "bgrcmyk": 53, "bi": [56, 57, 97], "bia": [55, 57, 58, 65, 71, 76, 86, 93, 105, 107, 111, 113, 117, 118, 119, 120, 122, 123], "bias": [55, 56, 57, 58, 67, 93, 100, 103, 109, 117, 143], "bibliographi": 77, "bic": [52, 67], "bidirect": [56, 57], "big": [11, 13, 16, 17, 19, 29, 43, 58, 65, 67, 69, 70, 73, 76, 94, 99, 194, 216, 228, 237], "bigcap_": 73, "bigcup": 65, "bigcup_": [55, 65, 129, 202], "bigger": [5, 65], "biggest": 101, "bigo": 67, "bigoplus_": 55, "bigqueri": [95, 97, 98], "bigsqcup_": [60, 123, 130], "biject": [55, 118, 136, 161], "bike": 100, "bilinear": 84, "bill": [26, 75, 93], "bill_depth_mm": 75, "bill_length_mean_std": 75, "bill_length_mm": 75, "billion": [67, 70, 76, 210, 222], "bin": [52, 57, 75, 88, 89, 93, 99, 102, 142, 145, 147, 155, 158, 170, 173, 206, 215], "bin_56": 173, "bin_67": 173, "bin_78": 173, "bin_89": 173, "bin_910": 173, "bin_end": 173, "bin_interv": 173, "bin_start": 173, "binari": [11, 16, 30, 47, 52, 55, 57, 65, 73, 75, 76, 77, 93, 94, 95, 97, 98, 101, 102, 105, 107, 114, 142, 143, 147], "binary_search": [11, 27], "binary_search_it": 27, "binary_search_recurs": 27, "binary_search_recursive_help": 27, "bincount": [53, 74, 123], "bind": [5, 77, 145, 220, 231], "binom": [145, 146, 147, 154, 155, 206], "binomi": [0, 75, 76, 77, 143, 147, 153, 157, 183, 185, 199, 206], "biomark": 94, "bird": [2, 3], "birth": 237, "birth_dat": 237, "bisco": 75, "bisect": 27, "bishop": [0, 1, 51, 52, 59, 60, 62, 66, 67, 72, 73, 123, 192, 193], "bit": [27, 30, 46, 56, 57, 65, 67, 69, 73, 75, 76, 88, 95, 96, 104, 105, 117, 122, 125, 145, 158, 179, 210, 216, 230], "bitbucket": 93, "bitshift": 4, "bivari": [75, 177], "bk": 65, "bla": 96, "blabber": 123, "black": [52, 57, 61, 65, 68, 75, 76, 93, 95, 106, 115, 126, 129, 142, 145, 147, 158, 170, 173, 189, 206], "blacklist": [58, 93], "blacklist_weight_modul": 58, "bloat": 221, "blob": [52, 71, 74, 96, 98, 111, 113, 213, 230], "blob_cent": 52, "blob_std": 52, "block": [11, 35, 56, 58, 84, 90, 93, 96, 110, 111, 112, 113, 117, 212, 215, 226, 227, 230], "block_siz": [57, 117], "blog": [27, 30, 56, 57, 60, 67, 69, 89, 98, 101, 109, 114, 117, 193], "blood": 95, "bloom": 0, "blostein": 16, "blue": [32, 52, 55, 62, 65, 68, 75, 79, 82, 83, 84, 107, 129, 170, 177, 189], "blur": [56, 58], "bmatrix": [52, 55, 57, 60, 62, 67, 73, 79, 81, 82, 83, 84, 86, 96, 117, 123, 126, 177, 187, 189, 190, 191, 192, 210], "bmm": 113, "bmmbackward0": 113, "bmp": 62, "bmw": 96, "bo": [52, 55, 58, 145, 147, 155], "board": 111, "bob": [5, 97, 228], "bodi": [8, 30, 75, 212], "body_mass_g": 75, "bogosort": 93, "boil": [65, 67, 228], "boilerpl": 93, "bold": [67, 73, 75, 81, 187], "boldsymbol": [49, 50, 51, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 70, 73, 74, 75, 86, 96, 122, 126, 177, 187, 189, 190, 191, 192, 194, 195, 209, 210], "bone": 180, "book": [0, 22, 23, 32, 52, 57, 63, 66, 67, 75, 79, 86, 93, 95, 101, 105, 108, 124, 146, 172, 180, 202, 210, 213, 227, 230], "bookmark": 157, "bool": [2, 5, 7, 22, 23, 25, 29, 30, 32, 35, 36, 53, 57, 58, 61, 62, 65, 68, 70, 99, 103, 110, 111, 113, 114, 116, 117, 118, 119, 122, 126, 127, 170, 173, 215, 216, 217, 218, 224, 225, 226, 237, 238], "bool_typ": 237, "boolean": [5, 9, 30, 57, 62, 65, 96, 127, 237], "booleanpair": 5, "booltensor": [57, 58, 111, 113, 118, 119], "boost": [93, 95, 101, 227], "bootstrap": 106, "border": [30, 32], "born": [5, 10, 97], "born_in": 97, "bos_token": 119, "bos_token_id": 57, "boss": [102, 178, 210], "boston": [59, 60, 66, 67, 72, 73], "bot": 57, "both": [2, 3, 4, 5, 6, 7, 8, 9, 11, 17, 20, 22, 23, 29, 30, 32, 36, 44, 46, 47, 52, 53, 55, 56, 57, 58, 60, 61, 65, 67, 70, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 88, 89, 93, 94, 95, 96, 97, 99, 100, 103, 105, 107, 108, 117, 118, 119, 123, 124, 129, 130, 131, 135, 142, 145, 158, 170, 171, 173, 175, 178, 179, 190, 209, 210, 212, 213, 215, 217, 218, 220, 224, 225, 229, 230, 232], "bother": 6, "boto3": 98, "bottleneck": [93, 98, 99, 117, 215, 230], "bottom": [36, 65, 75, 81, 82, 83, 84, 123, 126, 215], "bottom_bar": 75, "bottou": 76, "bound": [5, 9, 10, 11, 16, 27, 29, 30, 32, 36, 48, 55, 56, 57, 58, 60, 64, 77, 84, 93, 95, 101, 116, 122, 125, 159, 162, 203, 205, 206, 207, 212, 221, 228], "boundari": [6, 27, 29, 46, 52, 65, 74, 94, 100, 123], "bounded": [55, 57], "boundedfloattext": 155, "bow": 100, "bowl": 228, "box": [30, 32, 52, 95, 106, 108, 115, 157, 175, 216], "box1": 30, "box7": 30, "bpe": 57, "bracket": 35, "branch": [3, 93, 210], "brandon": [56, 57], "breach": [93, 107], "bread": 79, "break": [2, 7, 19, 27, 30, 36, 41, 43, 46, 52, 53, 57, 58, 61, 70, 71, 75, 89, 93, 95, 99, 118, 119, 120, 122, 125, 233], "breakdown": [46, 47, 75, 212, 234], "breast": 210, "breath": 29, "brent": 57, "brick": 93, "bridg": [78, 96], "brief": [3, 69, 70, 93, 95, 96, 101], "briefli": [27, 30, 57, 58, 67, 123], "brier": [71, 119], "brier_scor": [71, 119], "brier_score_loss": [71, 119, 120], "bring": [70, 73, 97], "broad": [56, 66, 99, 108, 116], "broadcast": [6, 52, 53, 55, 58, 118, 119], "broadcast_prior": 53, "broader": [5, 7, 29, 58, 82, 93, 98, 108], "broadli": 5, "broken": [29, 56, 65, 93, 95, 133, 135, 180], "broker": 96, "brows": [95, 108], "browser": [32, 93, 96], "brute": [19, 30, 43, 73], "bryan": 0, "bslatkin": [213, 230], "bson": 97, "bst": 27, "bt": 57, "bt1p5tjwn_0": 142, "bubbl": 27, "bucket": 17, "buddi": 237, "budget": [94, 96], "buffer": [88, 111, 113, 114, 116, 117], "bug": [3, 5, 27, 99, 215, 217, 230, 235], "bugbear": 93, "buggi": 235, "bui": [30, 97, 145], "build": [3, 7, 11, 44, 55, 56, 57, 58, 65, 75, 76, 79, 84, 94, 95, 97, 98, 99, 100, 102, 105, 106, 118, 125, 173, 207, 225], "build_meta": 93, "builder": [99, 225], "built": [8, 19, 32, 57, 58, 65, 70, 76, 93, 96, 97, 98, 99, 103, 107, 112, 116, 212, 216, 229, 230], "builtin": [5, 8, 93, 116, 212, 229], "bullet": [65, 93], "bump": [65, 142, 145], "bunch": [49, 117], "burden": [55, 56], "burst": 89, "busi": [65, 67, 93, 97, 98, 99, 100, 102, 105, 107, 108, 216], "buster": 99, "butter": 79, "button": [32, 210], "buyer": 97, "bwd": 117, "bxc": 117, "bxd": 117, "bxt": 58, "by_0": 79, "by_kei": 52, "bypass": [5, 27, 93, 215], "byte": [11, 57, 96, 117, 212], "bytecod": [215, 230], "byteunit": 117, "c": [0, 1, 2, 3, 4, 7, 8, 10, 11, 16, 26, 27, 29, 30, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 78, 79, 81, 82, 83, 84, 86, 96, 101, 112, 114, 116, 117, 118, 119, 122, 123, 129, 130, 131, 132, 135, 140, 141, 157, 163, 166, 172, 175, 180, 185, 187, 189, 190, 192, 199, 216, 236, 237], "c10d": [88, 89], "c3": [142, 158], "c3o": [142, 158], "c408": [111, 113], "c416": 58, "c_": [16, 27, 52, 55, 56, 61, 117], "c_1": [52, 60, 61], "c_2": [52, 60, 61], "c_3": 52, "c_k": [52, 60, 61], "c_proj": 57, "cabl": 93, "cach": [11, 71, 93, 96, 99, 108, 111, 116, 120, 215, 224], "cache_config": 224, "cache_en": [58, 118], "cache_host": 224, "cache_port": 224, "cache_typ": 224, "cacheconfig": 224, "cached_func": 235, "cachedfunc": 235, "cafe": [63, 178], "caim": 0, "caiu": 57, "cake": 178, "calc_vowel_consonant_prob": 127, "calciii": 125, "calcul": [4, 7, 11, 17, 19, 27, 29, 43, 46, 52, 53, 55, 56, 57, 58, 61, 62, 65, 67, 68, 70, 73, 74, 75, 76, 77, 79, 83, 84, 86, 93, 97, 99, 105, 106, 108, 109, 114, 121, 125, 126, 127, 129, 147, 179, 180, 181, 230], "calculate_al": 7, "calculate_checkpoint_s": 117, "calculate_fluff_ratio": 117, "calculate_memory_ratio": 117, "calculate_num_bit": 62, "calculate_same_birthday_prob": 127, "calculate_same_birthday_probability_rng_choic": 127, "calculu": [67, 77, 95, 117, 123, 128, 165, 180, 210], "calibr": [56, 95, 105], "call": [2, 3, 5, 6, 7, 8, 9, 11, 16, 17, 22, 27, 29, 30, 32, 36, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 70, 73, 74, 75, 76, 78, 79, 83, 84, 87, 88, 90, 93, 96, 97, 99, 109, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 125, 126, 133, 136, 138, 141, 142, 143, 146, 150, 154, 157, 158, 161, 177, 187, 191, 199, 212, 213, 216, 217, 218, 220, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237], "call_model_init": 116, "callabl": [2, 57, 58, 61, 68, 96, 112, 114, 116, 220, 221, 225, 227, 228, 233, 234, 237], "callback": [58, 114, 116, 117, 216, 218], "caller": [7, 154, 212, 220], "cam": 101, "cambridg": [0, 1, 48, 51, 52, 54, 56, 65, 72, 73, 78, 79, 83, 122, 123], "came": [22, 56, 57, 58, 93, 210], "camera": [30, 95, 100, 108], "campaign": 108, "can": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 23, 25, 26, 27, 29, 30, 32, 36, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 154, 155, 157, 158, 161, 162, 164, 165, 166, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237], "can_gener": 116, "can_we_fli": [2, 3], "canari": 107, "cancel": [65, 73, 84, 94, 117, 180], "cancer": [95, 102, 105, 180, 210], "candid": [29, 65, 107, 209], "cannot": [2, 3, 4, 6, 7, 11, 16, 19, 27, 29, 30, 32, 35, 36, 43, 48, 49, 52, 56, 57, 58, 60, 63, 65, 67, 70, 73, 75, 79, 83, 84, 95, 97, 116, 118, 129, 130, 132, 139, 142, 154, 173, 180, 210, 215, 216, 220, 225, 237, 238], "canon": 216, "cap": [52, 56, 65, 93, 130, 131, 132, 133, 135, 175, 179, 180, 185, 237], "capabl": [2, 5, 7, 56, 57, 76, 93, 96, 98, 99, 108, 116, 117, 215], "capac": [17, 32, 55, 57, 86, 93, 94, 98, 104, 105, 117], "capit": [97, 108, 228, 237], "capitalize_nam": 237, "captcha": 98, "caption": 95, "captiv": 29, "captur": [8, 29, 52, 55, 56, 57, 58, 65, 67, 70, 73, 92, 93, 95, 98, 100, 108, 109, 114, 123, 190, 234], "car": [2, 3, 6, 96, 100, 195], "card": [95, 96, 108], "cardin": [60, 65], "care": [4, 5, 11, 58, 61, 65, 67, 99, 105, 124, 127, 129, 135, 154, 237], "carefulli": [22, 36, 52, 55, 57, 65, 67, 73, 75, 89, 93, 94, 95, 100, 129, 136, 157, 173, 206, 210, 217, 230], "carelessli": 57, "carlo": 52, "carol": 97, "carri": [55, 56, 57, 73, 95, 99], "cart": 108, "cartesian": [56, 79, 93], "case": [2, 4, 5, 7, 8, 20, 35, 41, 44, 46, 47, 49, 50, 52, 55, 56, 58, 60, 61, 62, 63, 70, 71, 73, 75, 76, 82, 83, 84, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 116, 117, 118, 119, 122, 125, 126, 127, 130, 136, 139, 142, 143, 145, 147, 157, 158, 159, 160, 161, 165, 167, 168, 172, 173, 175, 178, 179, 182, 189, 190, 199, 203, 210, 211, 215, 216, 226, 227, 228, 230, 235, 236, 237, 238], "caskroom": [61, 229, 230], "cassandra": [96, 98], "cast": [5, 53, 57, 58, 111, 113, 120], "cat": [2, 3, 6, 23, 51, 52, 55, 56, 57, 86, 88, 89, 93, 95, 96, 97, 120], "catagor": [74, 210], "catalog": [30, 94, 96], "catch": [3, 5, 6, 67, 75, 93, 212, 233, 237], "categor": [58, 60, 65, 81, 95, 96, 100, 101, 102, 177], "categori": [2, 47, 56, 57, 58, 70, 73, 74, 75, 76, 94, 95, 96, 103, 108, 142, 145, 147, 155, 158, 221, 228], "catgor": 73, "cauchi": 197, "caught": [3, 5, 93, 212], "caus": [3, 5, 6, 11, 17, 23, 49, 52, 56, 57, 58, 61, 62, 65, 67, 70, 97, 103, 111, 113, 123, 127, 135, 143, 168, 169, 173, 180, 189, 206, 210, 212, 216, 228, 230, 233], "causal": [111, 113, 119, 120], "causal_attent": 57, "causal_mask": [111, 113, 119], "causal_mha": 57, "causalmultiheadselfattent": [111, 113], "caution": [65, 210], "caveat": 73, "cbaebabacd": 41, "cbar": [67, 75], "cc": [71, 216], "ccc": [52, 73, 190], "cccc": [55, 57, 67, 180, 187, 189], "cd": [89, 98, 105, 107], "cdf": [55, 57, 67, 142, 153, 157, 158, 161, 162, 195], "cdot": [13, 19, 20, 27, 29, 30, 43, 49, 52, 55, 56, 57, 58, 60, 62, 63, 65, 67, 70, 73, 75, 76, 79, 81, 82, 83, 84, 86, 117, 120, 123, 133, 136, 140, 141, 143, 146, 149, 150, 154, 158, 163, 164, 171, 172, 173, 175, 177, 180, 182, 185, 187, 189, 190, 191, 192, 195, 197, 199, 200, 202, 206, 210], "ce": 120, "ce_loss": 120, "ceil": [27, 62], "cell": [52, 60, 61, 71], "censu": 96, "center": [9, 30, 32, 52, 53, 57, 61, 67, 74, 86, 123, 126, 179, 189, 192], "central": [7, 75, 79, 81, 82, 93, 97, 98, 99, 103, 105, 107, 171, 177, 215, 218, 221, 224, 225], "centroid": [52, 53, 61, 62], "centroids_s": 62, "centuri": 10, "ceo": 7, "certain": [2, 6, 11, 17, 29, 30, 43, 47, 55, 56, 58, 60, 65, 67, 75, 76, 78, 79, 82, 92, 93, 95, 97, 99, 100, 102, 104, 105, 108, 122, 123, 125, 129, 158, 186, 199, 202, 203, 210, 215, 216], "certainli": 47, "certainti": [78, 95, 102], "certifi": 65, "cfg": [58, 93, 99, 216], "cfn": 89, "chadha": [56, 57], "chain": [4, 17, 55, 65, 67, 70, 73, 76, 95, 123, 125, 216], "challeng": [29, 36, 56, 57, 58, 60, 67, 70, 93, 94, 95, 108, 235], "chan": [0, 65, 67, 72, 73, 75, 129, 132, 136, 140, 141, 143, 146, 150, 152, 154, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 192, 194, 195, 197, 199, 200, 202, 203, 205, 206, 207, 209, 210], "chanc": [30, 52, 57, 64, 65, 67, 75, 93, 102, 107, 127, 129, 135, 143, 159, 179], "chang": [2, 3, 7, 11, 27, 30, 36, 43, 44, 46, 52, 56, 57, 58, 60, 61, 65, 67, 70, 73, 75, 81, 82, 89, 92, 93, 94, 97, 98, 99, 100, 101, 103, 105, 108, 109, 116, 118, 122, 123, 124, 125, 135, 141, 154, 169, 172, 179, 189, 191, 192, 210, 216, 217, 218, 220, 221, 224, 227, 229, 235, 236, 237, 238], "changer": 30, "channel": [62, 76, 175, 179, 195], "chaotic": 105, "chapman": 75, "chapter": [30, 48, 50, 51, 52, 54, 56, 57, 59, 60, 62, 65, 66, 67, 72, 73, 75, 77, 79, 81, 82, 83, 86, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109, 122, 123, 124, 129, 132, 136, 140, 141, 143, 146, 149, 150, 152, 154, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 184, 186, 189, 192, 193, 195, 197, 199, 200, 202, 203, 205, 210, 213, 215, 230], "chapter3": 142, "chapter5": 184, "chapter_appendix": 76, "chapter_linear": 65, "char": [20, 25, 35, 37, 41, 57, 191], "charact": [20, 34, 35, 37, 55, 56, 57, 58, 93, 95, 96, 97, 237], "character": [27, 32, 49, 56, 65, 73, 82, 86, 87, 192, 195, 209], "characterist": [2, 11, 19, 30, 36, 57, 58, 75, 77, 79, 93, 94, 96, 100, 102, 105, 123, 179, 208, 221], "charger": 30, "charl": 0, "charlesreid1": 225, "charli": 5, "chart": [75, 126], "chase": [29, 55], "chatbot": [94, 108], "chatgpt": [56, 57, 98, 233], "chdir": 216, "cheap": [67, 89, 96], "cheaper": 93, "cheat": 65, "check": [2, 4, 5, 6, 8, 9, 10, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 47, 52, 53, 57, 65, 67, 71, 75, 76, 89, 97, 98, 99, 103, 104, 105, 107, 119, 120, 127, 131, 135, 158, 194, 205, 210, 212, 215, 216, 217, 226, 232, 233, 235, 237, 238], "check_cod": 93, "check_output": 103, "check_palindrom": 25, "checker": [2, 3, 4, 5, 6, 7, 32, 93], "checklist": 107, "checkout": [93, 103], "checkpoint": [56, 57, 58, 71, 90, 99, 118, 119, 120, 217], "checkpoint_s": 117, "chees": [55, 178, 228], "chef": 89, "chelsea": 0, "chen": [0, 1, 54, 56, 69, 70, 79, 122], "cheng": [0, 48, 51, 52], "chervonenki": [65, 86], "chess": 29, "chicken": 57, "chief": 57, "child": [0, 1, 16, 54, 56, 215], "child_class_methods_using_dict": 116, "child_class_methods_using_dir": 116, "child_class_methods_using_getmemb": 116, "child_class_methods_using_var": 116, "childclass": 116, "children": [16, 71, 116], "chinstrap": 75, "chip": [59, 63, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109], "chloe": 97, "chmod": [89, 99], "cho": 0, "choic": [11, 29, 30, 49, 52, 53, 55, 57, 58, 60, 61, 65, 67, 73, 79, 81, 83, 94, 95, 96, 97, 98, 101, 102, 103, 105, 108, 122, 123, 124, 125, 127, 129, 132, 135, 142, 145, 147, 158, 210, 215, 216, 225], "choo": [79, 124], "choos": [8, 16, 29, 30, 52, 55, 58, 65, 67, 73, 86, 93, 96, 98, 101, 105, 108, 116, 117, 118, 123, 124, 129, 147, 202, 215], "choose_backend": 229, "choosealicens": 93, "chop": 228, "chose": [57, 65, 114, 129], "chosen": [27, 29, 51, 52, 53, 55, 57, 60, 65, 71, 79, 81, 93, 96, 100, 103, 105, 108, 127, 145, 149, 182], "chosen_lett": 127, "christian": [112, 113, 115], "christianjmil": 111, "christoph": [0, 51, 52, 59, 60, 62, 66, 67, 72, 73, 123, 192, 193], "chromadb": 7, "chrome": [112, 215], "chronolog": 30, "chunk": [57, 58, 221], "chunk_siz": 57, "chunker": 221, "chunker_typ": 221, "churn": [94, 95], "ci": [59, 98, 105, 107], "cifar10": 216, "cine": 56, "cinema": 56, "circ": [65, 73], "circl": [56, 60, 65, 127, 131, 132, 206, 230], "circle_color": 52, "circular": [4, 52], "circumv": 215, "citat": 77, "cite": [49, 56, 64, 73, 76, 93, 117, 125, 129, 157], "citet": 76, "citi": [97, 100, 237], "citizen": [7, 57], "civitai": 69, "ck": 84, "ckpt": 117, "cl": [2, 7, 9, 55, 57, 116, 119, 216, 217, 218, 221, 224, 225, 226, 227, 228, 236, 237], "cl100k_base": 57, "clabel": [126, 189], "claim": [29, 52, 58, 60, 63, 67, 122, 124, 129, 192, 201, 204], "clarifi": [11, 17, 43, 108, 212], "clariti": [2, 4, 5, 9, 27, 32, 58, 82, 84, 88, 179], "class": [3, 4, 5, 6, 7, 8, 9, 13, 19, 20, 22, 23, 25, 26, 27, 29, 32, 34, 35, 37, 41, 43, 44, 50, 52, 53, 56, 57, 58, 60, 61, 65, 67, 68, 71, 74, 75, 76, 77, 86, 88, 93, 94, 95, 99, 101, 102, 105, 111, 113, 114, 117, 118, 119, 120, 123, 125, 135, 154, 173, 195, 209, 212, 213, 216, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 235, 236, 237], "class_annot": 116, "class_attr": 116, "class_child": 116, "class_child_all_memb": 116, "class_colour": 75, "class_condit": 75, "class_field": 116, "class_id": 75, "class_idx": 61, "class_index": [71, 119], "class_method": 116, "class_nam": [74, 75], "class_par": 116, "class_prior_": 74, "classcastexcept": 5, "classes_to_inspect": 116, "classic": [7, 17, 32, 47, 72, 79, 93, 95, 100, 101, 108, 114, 125], "classif": [49, 50, 52, 56, 60, 67, 69, 71, 72, 73, 74, 75, 77, 86, 93, 95, 96, 100, 101, 105, 106, 109, 120, 121, 123, 209, 210, 220], "classifi": [2, 13, 47, 48, 56, 60, 65, 72, 73, 74, 77, 86, 95, 101, 102, 118, 120, 179], "classmethod": [2, 116, 216, 217, 218, 221, 224, 225, 227, 228, 237], "classvar": 7, "claudio": 93, "claus": [35, 97, 212], "clean": [56, 93, 98, 99, 100, 224, 227], "clean_data": 99, "clean_up_tokenization_spac": [119, 120], "cleaner": [19, 93, 218, 221], "cleanup": [111, 212], "clear": [4, 5, 6, 8, 9, 16, 32, 49, 52, 55, 56, 57, 58, 60, 61, 65, 67, 70, 76, 86, 93, 94, 97, 107, 114, 118, 130, 132, 133, 142, 179, 180, 182, 212, 220, 227], "clear_output": 118, "clearer": [9, 57, 93, 112], "clearli": [2, 29, 36, 44, 56, 57, 62, 76, 93, 94, 97, 118, 206, 210], "clerk": 57, "clever": [125, 210], "clf": 155, "click": [30, 32, 88, 94, 95, 108, 109], "client": [29, 89, 93, 96, 221], "clifford": 0, "clinic": 94, "clinician": 94, "clip_grad_norm": [58, 118], "clock": 29, "clone": [57, 58, 89, 113], "close": [4, 5, 9, 27, 29, 35, 49, 55, 56, 57, 61, 65, 67, 68, 75, 89, 95, 102, 107, 109, 117, 123, 125, 142, 158, 169, 173, 175, 177, 207, 210, 222, 227], "close_al": 76, "closer": [36, 52, 55, 57, 58, 60, 67, 83, 84, 95, 108, 123, 145, 158, 171, 207], "closest": [52, 60, 61, 62, 63, 75, 108], "closur": [77, 78, 231], "cloud": [29, 65, 89, 93, 96, 98, 99, 108, 109], "cloudwatch": 109, "clr": 30, "cls_index": 57, "clue": 179, "cluster": [17, 51, 53, 61, 62, 67, 74, 77, 83, 86, 87, 88, 95, 98, 99, 100, 101, 105], "cluster_1": 61, "cluster_2": 61, "cluster_3": 61, "cluster_assign": 61, "cluster_centers_": 62, "cluster_idx": 61, "cluster_nam": 89, "cluster_std": [52, 53, 61], "clustermgtd": 89, "clusterstatusmgtd": 89, "cm": [52, 67, 157, 158], "cmap": [52, 57, 58, 61, 67, 118, 126, 127, 189], "cmd": 99, "cmu": [60, 65, 173], "cnn": [95, 97, 101], "co": [16, 52, 55, 57, 58, 71, 75, 84, 120, 122, 177], "coars": [62, 173], "cockroachdb": 97, "codd": 97, "code": [2, 3, 4, 5, 6, 7, 8, 9, 11, 17, 20, 29, 35, 52, 55, 56, 57, 58, 60, 61, 65, 67, 73, 75, 76, 77, 82, 87, 89, 90, 97, 98, 99, 104, 110, 112, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 142, 145, 155, 157, 169, 189, 202, 203, 206, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 224, 227, 229, 230, 233, 236, 237], "code_": 237, "code_456": 237, "code_aaa": 237, "codebas": [93, 103, 116, 215, 216, 217, 218, 221, 224], "codebook": 62, "codomain": [55, 136], "coef": [67, 68], "coef_": [67, 68], "coef_valu": 67, "coeff": 74, "coeffici": [19, 43, 68, 79, 102, 157, 178, 191, 202], "coerc": [2, 5, 237], "coercion": [8, 57, 93, 216, 237], "coerciv": [1, 10], "coexist": 5, "coffe": 178, "coher": [56, 57, 62], "cohes": [8, 93, 96, 99], "cohesion_arrai": 11, "cohesion_list": 11, "coin": [65, 129, 130, 145, 147], "coincid": [36, 57, 58, 60, 62, 67, 73, 74, 79, 117, 122, 123, 127, 136, 217], "col": [81, 96, 111], "col_idx": 96, "col_v": 81, "colab": [56, 57], "cold": [111, 145], "collabor": [36, 93, 98, 99, 103, 107, 109], "collaps": 87, "collat": [52, 120, 210], "collate_fn": [58, 118, 119, 120], "collate_fn_config": 58, "collate_for_birect": 118, "collate_for_unidirect": [118, 119], "collated_batch": 118, "colleagu": 202, "collect": [2, 6, 7, 8, 11, 20, 32, 44, 52, 53, 55, 56, 60, 61, 65, 67, 70, 74, 78, 81, 86, 87, 88, 93, 94, 95, 96, 97, 99, 100, 101, 105, 106, 108, 109, 111, 112, 113, 114, 119, 120, 123, 127, 129, 173, 202, 205, 210, 212, 225, 238], "colleg": [84, 173], "collinear": 84, "colon": 78, "color": [52, 53, 55, 57, 61, 62, 65, 67, 68, 75, 79, 81, 82, 83, 84, 93, 97, 100, 114, 126, 127, 129, 136, 142, 145, 147, 155, 158, 170, 173, 177, 189], "color_bgr2rgb": 62, "color_it": 52, "colorbar": [57, 126, 127, 189], "colored_imag": 62, "colour": 75, "columbia": 30, "column": [11, 52, 53, 55, 57, 58, 61, 67, 70, 73, 74, 75, 81, 82, 86, 95, 97, 106, 111, 112, 116, 123, 179, 180, 191, 206, 210], "com": [0, 36, 52, 57, 58, 62, 68, 70, 71, 73, 75, 76, 89, 93, 111, 113, 119, 120, 125, 127, 142, 145, 147, 157, 184, 213, 215, 222, 230, 233, 236, 237], "combin": [5, 6, 8, 16, 20, 30, 51, 52, 53, 55, 56, 57, 58, 60, 63, 67, 75, 76, 77, 78, 82, 86, 88, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 120, 122, 128, 135, 141, 216, 225, 227], "combinatori": [29, 56, 60], "combo": 75, "come": [2, 3, 5, 7, 8, 11, 17, 19, 27, 29, 32, 52, 55, 57, 58, 60, 62, 65, 70, 71, 73, 75, 79, 83, 93, 94, 95, 97, 98, 99, 103, 105, 108, 117, 122, 123, 127, 129, 147, 157, 173, 179, 180, 185, 194, 210, 212, 215, 216, 217], "comm": 88, "command": [70, 93, 108, 117, 215, 216], "commenc": 122, "comment": [16, 65, 86, 93, 95, 100, 119], "comment1097323_593084": 157, "comment118259946_66886954": 68, "commerc": 108, "commerci": [93, 96], "commit": [27, 94, 97, 99, 103], "commit_hash": 103, "commitizen": 93, "common": [2, 3, 8, 9, 29, 30, 47, 49, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 75, 79, 81, 83, 84, 88, 93, 95, 97, 99, 100, 101, 102, 104, 105, 106, 108, 117, 123, 135, 153, 158, 174, 179, 180, 199, 205, 209, 215, 217, 220, 222, 233, 236], "common_ax_kwarg": 84, "common_issu": 7, "common_norm": 75, "commonli": [11, 30, 36, 46, 55, 56, 57, 58, 67, 70, 79, 86, 93, 95, 100, 117, 213], "commonsens": 56, "commun": [56, 57, 87, 88, 93, 94, 215], "commut": [4, 78, 84], "compact": [52, 67, 73, 75, 96, 123, 187], "compactli": [52, 55, 67, 73], "compani": [70, 79, 94, 95, 97, 108, 145, 237], "compar": [6, 13, 16, 17, 19, 27, 29, 30, 43, 44, 52, 53, 55, 56, 57, 58, 60, 61, 62, 67, 74, 75, 76, 83, 87, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 109, 117, 122, 123, 129, 142, 145, 158, 202, 212, 215, 217, 229, 230, 232, 238], "compare_length": 6, "compare_model": 217, "compare_test_cas": [41, 44, 46], "comparison": [13, 20, 30, 43, 47, 52, 65, 67, 75, 101, 102, 105, 114, 117, 123, 170, 230, 232], "comparison_msg": 117, "comparison_result": 117, "compass": 29, "compat": [2, 3, 4, 7, 8, 57, 58, 93, 95, 96, 98, 99, 107], "compel": 210, "compens": 70, "compet": 93, "competit": [65, 101], "compil": [3, 5, 6, 8, 10, 56, 58, 93, 102, 111, 116, 216], "complain": [8, 57, 93, 216], "complaint": 216, "complement": [13, 19, 65, 75, 98, 179], "complementari": 93, "complet": [11, 17, 27, 29, 30, 43, 47, 52, 55, 56, 57, 58, 60, 68, 73, 79, 82, 84, 93, 97, 99, 102, 103, 106, 107, 110, 112, 113, 114, 116, 117, 122, 136, 138, 142, 145, 147, 155, 158, 172, 173, 185, 206, 210, 212, 215, 234, 237], "completion_statu": 212, "complex": [2, 5, 7, 9, 16, 44, 47, 51, 52, 55, 56, 58, 59, 61, 70, 72, 76, 77, 78, 81, 83, 84, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 108, 116, 117, 197, 198, 202, 210, 215, 216, 224, 237], "complex_typ": 237, "complexus": 237, "compli": [16, 93], "complianc": [93, 95, 96, 107], "complic": [11, 73, 75, 93, 116, 172, 227], "compon": [29, 50, 51, 52, 53, 55, 57, 58, 65, 67, 70, 73, 75, 81, 82, 83, 84, 86, 89, 93, 99, 100, 103, 105, 117, 123, 126, 217, 218, 222], "componentfactori": 221, "compos": [73, 76, 117, 118, 125, 190, 216, 217, 218, 222, 227], "composer_block_s": 57, "composit": [125, 227], "comprehend": [32, 78, 81, 82], "comprehens": [9, 30, 56, 57, 70, 78, 84, 89, 93, 95, 99, 102, 105, 107, 123, 212, 229, 234], "compress": [57, 58, 59, 70, 77, 82, 98, 108, 119, 175], "compress_imag": 62, "compressed_imag": 62, "compressed_image_s": 62, "compressed_ratio": 62, "compressed_s": 62, "compression_ratio": 62, "compris": [56, 62, 79], "compromis": [4, 7, 56], "compulsori": 129, "comput": [4, 7, 10, 11, 17, 27, 29, 30, 32, 36, 46, 47, 51, 52, 53, 55, 56, 59, 60, 61, 62, 65, 67, 68, 70, 72, 73, 75, 76, 78, 79, 81, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 103, 108, 109, 111, 114, 116, 117, 120, 122, 123, 125, 138, 139, 154, 166, 169, 175, 179, 184, 187, 205, 206, 210, 212, 215, 229, 233, 234, 235], "computation": [29, 49, 57, 60, 70, 73, 94, 95, 97, 105, 108, 126], "compute_factori": 215, "compute_factorial_process": 215, "compute_lora_paramet": 70, "compute_loss": 116, "compute_loss_context_manag": 116, "compute_metr": [71, 116, 119], "compute_metrics_for_single_label_classif": [71, 119], "compute_sample_average_of_bernoulli": 206, "compute_transition_scor": 116, "computed_field": 57, "computeresourc": 89, "con": 108, "conan": 97, "concat": [55, 57, 58, 75], "concaten": [3, 11, 20, 52, 57, 58, 68, 93, 95, 173], "concav": 123, "concentr": [29, 56, 108, 123, 155], "concept": [2, 3, 4, 5, 7, 8, 9, 10, 12, 18, 23, 24, 28, 29, 31, 33, 36, 48, 51, 54, 57, 58, 59, 62, 64, 66, 69, 72, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 95, 97, 101, 105, 106, 108, 112, 122, 126, 128, 142, 144, 147, 148, 151, 153, 156, 157, 158, 160, 172, 174, 176, 194, 207, 208, 209, 220], "conceptu": [2, 27, 30, 55, 56, 58, 59, 73, 77, 82, 173, 180, 212], "concern": [2, 52, 56, 65, 79, 93, 95, 96, 116, 220, 221], "concis": [29, 36, 52, 67, 84, 97, 103, 130, 157, 195, 202, 203], "conclud": [27, 29, 30, 44, 52, 67, 73, 123, 197, 234], "conclus": [5, 27, 30, 58, 65, 67, 75, 83, 93, 102, 122], "concret": [2, 5, 6, 7, 29, 36, 49, 52, 55, 56, 57, 58, 60, 62, 64, 67, 70, 73, 75, 79, 82, 86, 87, 89, 94, 108, 109, 114, 119, 122, 123, 126, 129, 136, 141, 157, 158, 162, 164, 173, 175, 179, 183, 184, 210, 212, 220, 221], "concrete_method": 221, "concurr": [56, 77, 90, 93, 97, 98, 213], "cond": [67, 75], "cond_exp": 184, "conda": [71, 89, 114, 119, 120], "condens": 2, "condit": [4, 7, 9, 16, 27, 29, 30, 46, 47, 50, 51, 55, 57, 58, 65, 70, 71, 76, 77, 84, 90, 93, 97, 98, 101, 105, 107, 117, 118, 122, 123, 127, 134, 142, 149, 152, 175, 177, 179, 187, 190, 196, 202, 212, 213, 226, 229], "condition": [50, 56, 67, 73, 75, 76, 142, 180], "conduct": [17, 67, 93, 97, 99, 100, 103, 105, 107, 109], "conf": [99, 216], "confid": [52, 65, 95, 109, 179, 202, 206], "config": [9, 71, 77, 88, 89, 90, 93, 99, 103, 111, 113, 116, 118, 119, 120, 142, 210, 217, 221, 222, 224, 225, 237], "config_arg": 117, "config_class_str": 116, "config_data": 224, "config_dict": [216, 218], "config_manag": [58, 216], "config_nam": [111, 216], "config_obj": 216, "config_path": 216, "config_pydant": 216, "config_sourc": 216, "config_stor": 216, "configclass": 116, "configer": 114, "configstor": 216, "configur": [9, 58, 65, 70, 77, 87, 88, 96, 98, 99, 103, 105, 111, 122, 217, 219, 221, 222, 224, 226, 237], "configure_deterministic_mod": [57, 70, 103, 127, 143, 168, 169, 173, 189, 206, 210], "configure_logg": 88, "confirm": [4, 16, 17, 29, 30, 44, 57, 75, 79, 92, 93, 99, 117], "conflict": [93, 95, 113], "confluenc": 93, "conform": [4, 93, 99, 100, 212, 221, 237], "confound": 93, "confus": [9, 23, 29, 36, 49, 52, 55, 56, 57, 58, 60, 61, 67, 70, 71, 73, 75, 79, 83, 86, 93, 108, 117, 119, 122, 129, 136, 145, 147, 152, 157, 158, 179, 182, 187, 190], "confusion_matrix": [71, 119, 120], "confusiong": 52, "congest": 100, "conjectur": [56, 57], "conjunct": [93, 105], "connect": [9, 10, 27, 29, 30, 60, 88, 97, 98, 99, 108, 123, 158, 169, 173, 202, 218, 230], "connector": 98, "conquer": [27, 202], "consecut": [8, 46, 96, 118], "consensu": 93, "consequ": [2, 3, 5, 6, 7, 8, 22, 23, 27, 29, 30, 36, 52, 56, 57, 58, 60, 62, 63, 65, 67, 73, 75, 79, 81, 83, 84, 87, 88, 90, 93, 95, 100, 102, 117, 119, 122, 123, 136, 143, 145, 149, 169, 172, 173, 175, 177, 179, 180, 182, 184, 190, 209, 210, 212, 234, 235], "conserv": [3, 17, 65], "consid": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 22, 27, 29, 30, 32, 36, 43, 44, 46, 47, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 75, 76, 79, 81, 82, 83, 84, 86, 87, 88, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 108, 109, 110, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 132, 135, 136, 139, 143, 154, 170, 171, 172, 175, 178, 180, 182, 192, 199, 200, 202, 206, 209, 210, 212, 213, 215, 224, 225, 226, 234, 237], "consider": [11, 17, 27, 29, 58, 75, 93, 94, 101, 122, 123, 179], "consist": [4, 5, 6, 11, 20, 27, 29, 30, 32, 35, 44, 46, 52, 55, 56, 57, 67, 70, 73, 75, 78, 79, 81, 83, 84, 86, 98, 99, 102, 107, 117, 118, 123, 129, 142, 143, 146, 175, 184, 209, 210, 224, 225], "consol": [30, 58, 89, 118, 216], "consolid": 93, "conson": 127, "const": 67, "constaint": 27, "constant": [11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 36, 43, 46, 47, 55, 57, 58, 60, 65, 67, 70, 75, 76, 79, 101, 102, 108, 111, 118, 122, 123, 126, 127, 136, 140, 141, 143, 145, 146, 154, 163, 167, 172, 177, 192, 198, 199, 202, 210], "constant_": 57, "constantli": [95, 102, 105, 108, 131, 135], "constitu": 67, "constitut": [29, 52, 62, 108], "constrain": [36, 73, 93, 101, 215, 216], "constrained_beam_search": 116, "constraint": [5, 7, 10, 52, 56, 57, 58, 73, 77, 79, 93, 97, 101, 103, 122, 216], "constrast": 67, "construct": [2, 5, 11, 17, 29, 49, 50, 52, 53, 55, 60, 65, 67, 74, 75, 93, 94, 95, 102, 105, 113, 114, 123, 125, 126, 129, 132, 136, 142, 191, 236], "construct_dummy_batch_causal_mask": 119, "construct_dummy_batch_cross_attention_mask": 118, "construct_dummy_batch_future_mask": [57, 58, 118], "construct_dummy_batch_target_padding_mask": [57, 58, 118], "construct_target_tensor": 58, "constructor": [5, 7, 67, 77, 93, 99, 116, 218, 220, 221, 223], "consult": [9, 125], "consum": [7, 11, 17, 29, 58, 70, 96, 97, 98, 99, 108, 117, 212, 229], "consumpt": [70, 79, 109, 229], "contact": 93, "contain": [2, 3, 7, 11, 19, 27, 29, 30, 32, 35, 44, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 70, 71, 73, 75, 76, 79, 86, 93, 96, 97, 98, 99, 105, 108, 116, 117, 119, 123, 125, 127, 187, 190, 206, 209, 210, 212, 216, 218, 220, 226, 229, 233, 235, 238], "container": 93, "containsdupl": 127, "contend": 56, "content": [2, 27, 56, 57, 65, 70, 78, 93, 95, 96, 98, 100, 108, 157, 173, 197, 212, 215, 216, 232, 235], "contest": 135, "context": [2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 27, 29, 30, 36, 47, 49, 52, 55, 58, 62, 65, 67, 70, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 93, 94, 95, 98, 99, 100, 101, 102, 105, 108, 109, 111, 113, 117, 118, 119, 123, 129, 132, 133, 136, 145, 157, 190, 191, 212, 213, 217, 218, 220, 223], "context_dir": 99, "context_fc": [57, 58, 111, 113, 118, 119], "context_length": [57, 58, 111, 113, 117, 118, 119], "context_project": [55, 57, 58, 111, 113, 118, 119], "context_vector": [55, 57, 58, 111, 113, 118], "context_vector_concat": 57, "contextlib": [111, 113, 215, 229], "contextobject": 222, "contextu": [55, 57, 70, 78, 97, 108, 118, 226], "contigu": [30, 44, 46, 55, 57, 58, 96, 111, 113, 118, 119], "contin": 163, "conting": [56, 61, 78], "contingency_matrix": 61, "contingency_matrix_": 61, "continu": [0, 27, 35, 43, 46, 47, 52, 55, 57, 58, 61, 65, 67, 68, 77, 90, 92, 94, 95, 96, 98, 99, 100, 101, 102, 108, 109, 110, 116, 117, 122, 125, 129, 139, 162, 163, 164, 166, 168, 169, 172, 176, 177, 180, 182, 187, 193, 199, 212, 215], "contour": [52, 53, 75, 77, 127, 128, 192, 209], "contour_1": 189, "contour_2": 189, "contour_3": 189, "contour_plot": 75, "contourf": [52, 75, 126], "contra": 7, "contract": [5, 6, 220], "contradict": [7, 43, 65, 173], "contradictori": 65, "contraposit": 93, "contrari": 60, "contrarili": 7, "contrast": [2, 29, 52, 56, 57, 78, 93, 94, 96, 98, 104, 108, 123, 158, 172, 215], "contrastive_search": 116, "contravari": [10, 30, 77], "contribut": [20, 27, 56, 57, 58, 61, 70, 83, 117, 120, 122], "contributor": [57, 98], "control": [2, 9, 27, 47, 57, 65, 98, 99, 101, 103, 105, 116, 120, 210, 212, 215, 216, 218, 220, 221, 226, 230, 237], "conundrum": [29, 125], "conv1d": 71, "conveni": [11, 29, 52, 56, 57, 58, 60, 63, 73, 75, 76, 83, 88, 89, 101, 111, 113, 116, 125, 233], "convent": [55, 56, 57, 58, 79, 81, 93, 97, 118, 123, 143, 146, 154, 167, 168, 169, 220], "convention": [8, 81], "converg": [29, 49, 52, 53, 55, 57, 58, 59, 61, 62, 65, 67, 70, 122, 123, 125, 127, 140, 142, 155, 158, 163, 207], "converged_": 53, "convers": [2, 5, 7, 27, 29, 30, 67, 68, 70, 79, 82, 93, 94, 98, 99, 108, 123, 145, 180, 215, 233], "convert": [2, 5, 16, 17, 52, 55, 57, 58, 62, 65, 73, 74, 75, 81, 93, 95, 96, 97, 98, 100, 116, 117, 120, 126, 165, 169, 180, 216], "convex": [51, 52, 57, 60, 123, 194], "convinc": [124, 129, 173, 217], "convolut": [57, 77, 95, 97, 101, 114, 174], "cook": 210, "cookbook": [57, 93], "cooki": 98, "coolwarm": 67, "coordin": [52, 53, 61, 79, 88, 123, 169, 175, 192, 199, 226], "coordinat": 79, "copi": [7, 11, 16, 17, 32, 44, 57, 61, 71, 76, 89, 93, 96, 98, 99, 117, 122, 145, 147, 215, 217, 228, 237], "copper": 52, "copy_": 112, "coqa": 56, "core": [2, 9, 27, 29, 30, 32, 48, 57, 58, 61, 73, 75, 83, 87, 88, 90, 93, 116, 117, 118, 119, 120, 212, 215, 216, 221, 224, 230], "core_plugin": 216, "corej2eepattern": 222, "cormen": [0, 16, 30], "cornel": [72, 73], "corner": [65, 76, 126], "cornflowerblu": 52, "corollari": [49, 182], "coroutin": [212, 215, 229], "corpu": [56, 57, 58, 70, 117], "corr": [0, 1, 67, 75, 122], "corr_matrix": 67, "correct": [2, 4, 6, 7, 8, 13, 19, 35, 36, 44, 56, 57, 58, 60, 65, 67, 75, 76, 86, 93, 99, 102, 118, 122, 123, 147, 173, 180, 183, 202, 210, 221, 225, 230, 237], "correct_predict": [119, 120], "correctli": [4, 5, 6, 27, 29, 30, 44, 58, 65, 67, 86, 93, 94, 99, 102, 108, 127, 179, 210, 237], "correl": [67, 70, 75, 77, 95, 99, 100, 157, 180, 196, 202, 210], "correspond": [2, 4, 7, 16, 17, 20, 29, 30, 32, 35, 36, 46, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 74, 75, 76, 79, 81, 82, 86, 87, 88, 94, 96, 108, 118, 119, 123, 126, 127, 137, 142, 145, 147, 173, 180, 189, 191, 192, 206, 209], "correspondingli": [65, 118, 127, 129], "corrupt": 213, "cosin": [57, 71, 77, 108, 119, 121], "cosine_lr": 225, "cosine_warm_restart": 225, "cosineannealinglr": [58, 118, 119, 225], "cosineannealinglrconfig": [118, 225], "cosineannealingwarmrestart": 225, "cosineannealingwarmrestartsconfig": 225, "cosineannealingwithwarmupschedul": [58, 122], "cosinedecaywithwarmupschedul": 122, "cost": [17, 27, 29, 32, 36, 49, 56, 57, 61, 62, 65, 70, 73, 86, 94, 96, 97, 98, 99, 102, 117], "costli": [95, 96], "couchbas": 98, "could": [3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 29, 36, 52, 56, 57, 58, 65, 67, 75, 76, 79, 81, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 112, 117, 122, 123, 125, 129, 157, 179, 210, 213, 217, 229, 230], "count": [7, 29, 30, 32, 52, 58, 73, 75, 76, 79, 89, 95, 98, 102, 112, 116, 125, 127, 129, 135, 142, 173, 212, 213, 238], "count_label": 119, "count_up_to": 212, "countabl": [123, 125, 129, 130, 138, 139], "counter": [26, 29, 41, 58, 61, 119, 120, 129, 142, 212, 213, 215, 230], "counterintuit": [7, 58, 179], "counterlock": [213, 230], "counterpart": [35, 56, 93, 154, 163, 173, 180], "countri": [67, 95, 97], "coupl": [2, 57, 58, 93, 105, 122, 126, 181, 212, 220], "cours": [0, 5, 17, 27, 29, 49, 50, 56, 57, 58, 59, 60, 61, 65, 66, 67, 71, 72, 73, 75, 79, 86, 88, 93, 95, 96, 108, 115, 116, 124, 125, 126, 129, 135], "coursera": 75, "courvil": [0, 1, 123], "cov": [52, 53, 93, 177, 187, 189, 190, 194, 210], "cov_k": [52, 53], "covar": 52, "covari": [10, 30, 53, 56, 57, 60, 66, 67, 73, 74, 75, 77, 126, 192, 193, 209, 210, 212], "covariance_determin": 126, "covariance_invers": 126, "covariance_matrix": [75, 126, 189], "covariance_matrix_determin": 126, "covariance_matrix_invers": 126, "covariance_typ": 52, "covariances_": [52, 53], "cover": [4, 27, 57, 58, 60, 62, 93, 97, 99, 101, 108, 122, 175, 206, 216], "coverag": 93, "covid": [142, 146, 147], "cpp": [112, 113, 114], "cprofil": [212, 229], "cpu": [57, 58, 70, 71, 87, 89, 90, 93, 96, 103, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 216, 229, 238], "cpu_bound_task": 230, "cpu_children": 112, "cpu_count": [71, 119], "cpu_par": 112, "cpu_time_tot": [112, 113], "cpython": [215, 230], "craft": [5, 93, 95, 104], "crash": [5, 8, 97, 230], "crave": 65, "crawl": 98, "crc": 75, "creat": [4, 5, 6, 11, 16, 17, 20, 22, 23, 27, 32, 36, 43, 46, 51, 52, 53, 55, 57, 61, 67, 71, 74, 75, 82, 84, 88, 95, 96, 97, 98, 99, 100, 101, 103, 107, 109, 112, 114, 116, 118, 119, 120, 122, 123, 126, 127, 142, 147, 158, 189, 206, 209, 212, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237], "create_accelerator_and_postprocess": 116, "create_add_dataset": 58, "create_advanced_chunk": 221, "create_advanced_embedd": 221, "create_advanced_retriev": 221, "create_attention_mask": 120, "create_cmap": 53, "create_config_class_str": 116, "create_directori": 58, "create_extended_attention_mask_for_decod": 116, "create_gmm": 52, "create_incorrect_pair": 5, "create_inst": [58, 118], "create_load": 58, "create_misleading_pair": 5, "create_model": 237, "create_model_card": 116, "create_multipli": 234, "create_multipliers_inn": 234, "create_multipliers_lambda": 234, "create_optim": 116, "create_optimizer_and_schedul": 116, "create_profile_config": 111, "create_schedul": [116, 225], "create_silent_error_pair": 5, "create_simple_chunk": 221, "create_simple_embedd": 221, "create_simple_retriev": 221, "create_system": 221, "create_tabbed_svg_view": 27, "create_target_mask": [57, 58], "created_at": 99, "creation": [5, 11, 76, 88, 93, 107, 215, 218, 220, 226, 227, 229, 234], "creator": [216, 221], "credenti": [89, 93, 98, 218], "credit": [16, 52, 56, 57, 58, 65, 70, 73, 75, 83, 84, 92, 93, 94, 95, 96, 97, 99, 102, 105, 108, 109, 114, 122, 125, 158, 173, 175, 189, 192, 202, 209], "crimin": 97, "crimp": 93, "crit": [16, 27], "criteria": [2, 3, 94, 97, 98, 107], "criterion": [3, 7, 29, 52, 57, 60, 111, 113, 118, 119, 217], "criterion_config_cl": [58, 118], "criterion_pydantic_config": [58, 118], "criterion_registri": [58, 118], "critic": [3, 11, 16, 17, 27, 57, 58, 65, 73, 93, 94, 95, 96, 99, 100, 102, 103, 107, 109], "croissant": 79, "cronjob": 99, "crop": [57, 76, 111, 113], "crop_context_length": [111, 113], "cross": [56, 57, 58, 60, 65, 67, 77, 82, 84, 95, 100, 101, 106, 107, 119, 120, 121, 123, 124, 135, 206, 210], "cross_attention_mask": 118, "cross_color": 52, "crossentropyloss": [57, 58, 111, 113, 114, 118, 119, 120, 216], "crossentropylossconfig": 118, "crowdsourc": 96, "crucial": [2, 4, 5, 11, 16, 30, 32, 43, 47, 49, 52, 67, 78, 79, 81, 83, 84, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 125, 179, 215, 226, 238], "crud": 97, "crux": [29, 56], "cry": 71, "crystal": 93, "crystallographi": 60, "cs170": 27, "cs2030": [3, 4, 5, 7], "cs211": 27, "cs2112": 27, "cs324": [56, 57], "cs336": [87, 88, 111, 113], "cs4780": [72, 73], "cs70": 173, "csc412": [56, 57], "cse": 27, "cse241": 27, "css": 98, "cstride": 52, "csv": [67, 95, 96, 97, 98, 108], "ct": [96, 97], "ctr": [94, 95], "ctype": 215, "cu113": 93, "cubinlink": 113, "cubla": [58, 70, 71], "cublas_workspace_config": [57, 70, 103], "cublasapi_reproduc": 70, "cucumb": 228, "cuda": [56, 57, 58, 70, 71, 77, 93, 96, 103, 111, 113, 115, 116, 119, 120, 127, 143, 168, 169, 173, 189, 206, 210], "cuda11x": 113, "cuda_bla": 71, "cuda_dnn": 71, "cuda_fft": 71, "cuda_memory_usag": [112, 113], "cuda_time_tot": [112, 113], "cuda_visible_devic": 88, "cudadevicesynchron": [112, 113], "cudalaunchkernel": [112, 113], "cudamemcpyasync": 112, "cudastreamsynchron": 112, "cudf": 113, "cudnn": [57, 70, 71, 103], "cufft": 71, "cultiv": 56, "cultur": 93, "cumbersom": [67, 187], "cuml": 113, "cumsum": [57, 139], "cumtim": [212, 229], "cumul": [55, 57, 77, 143, 146, 153, 158, 159, 161, 162, 174, 175, 180, 229], "cumulative_prob": 57, "cup": [56, 60, 65, 130, 133, 182], "cup_": 65, "cupi": 113, "curat": 56, "curr": [5, 34], "curr_min_list": 34, "curr_val": 34, "current": [2, 19, 22, 23, 27, 29, 30, 35, 36, 46, 47, 52, 53, 55, 56, 57, 58, 61, 62, 68, 71, 74, 88, 89, 93, 101, 107, 108, 109, 113, 116, 117, 119, 122, 127, 142, 158, 210, 212, 213, 215, 216, 217, 220, 229, 234, 235, 237], "current_file_path": [58, 142, 210], "current_min": 34, "current_path": [36, 53, 58, 61, 62, 74, 127, 142, 210], "current_step": [58, 122], "current_valu": 213, "curs": [75, 100, 101], "curv": [52, 58, 60, 65, 75, 86, 102, 122, 125, 126, 169, 171, 173, 179, 202], "curvatur": [123, 127], "custom": [5, 8, 30, 57, 58, 61, 76, 93, 94, 95, 97, 98, 99, 108, 109, 116, 117, 118, 145, 183, 212, 216, 220, 232, 237], "custom_hn_exercise_count": 93, "customari": [56, 60], "customdataset": 220, "customiz": 93, "cut": [23, 29, 65, 88, 95], "cv": 95, "cv2": 62, "cvtcolor": 62, "cwd": [36, 53, 58, 61, 62, 74, 127, 142, 210, 216], "cx": [140, 163], "cxd": 117, "cycl": [47, 52, 58, 60, 63, 93, 112, 122, 212], "cyclic": [58, 122], "cz": 79, "cz_0": 79, "d": [1, 11, 13, 19, 26, 27, 46, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76, 78, 79, 81, 82, 84, 86, 88, 89, 93, 97, 101, 105, 111, 113, 114, 116, 117, 118, 119, 123, 125, 126, 129, 145, 146, 147, 152, 155, 165, 166, 169, 170, 172, 173, 176, 177, 180, 182, 185, 187, 190, 191, 192, 194, 197, 199, 200, 205, 206, 209, 210, 216, 237], "d1": [58, 71, 190, 210, 236], "d2": [58, 71, 190, 236], "d2l": [0, 65, 66, 75, 76], "d3": 58, "d_": [55, 57, 113, 114, 216], "d_1": [58, 124], "d_2": [58, 124], "d_3": 124, "d_ablat": 90, "d_ff": [56, 57, 58, 111, 113, 118, 119], "d_k": [55, 57, 58, 117], "d_model": [56, 57, 58, 111, 113, 117, 118, 119], "d_q": [55, 57, 111, 113, 117, 118], "d_qkv": 57, "d_v": [55, 57, 111, 113, 117, 118], "daemon": [88, 90], "dafriedman97": 75, "dai": [29, 79, 93, 95, 100, 102, 108, 117, 127, 149, 178, 183], "daili": [69, 100, 109], "daily_revenu": 145, "dake": [51, 59, 60, 61, 65, 72, 202, 203], "dall": 29, "dan": [72, 73], "danger": 8, "daniela": [0, 59, 60, 66, 67, 72, 73], "dario": 0, "dark": 2, "darkblu": 75, "darker": 75, "darkorang": 52, "darl": 67, "dartboard": 132, "dash": [52, 75, 126, 189], "dashboard": [99, 100], "dask": [98, 113], "data": [0, 2, 3, 5, 8, 9, 12, 13, 17, 19, 20, 27, 33, 36, 43, 47, 48, 50, 51, 53, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 72, 73, 74, 75, 76, 79, 83, 84, 86, 87, 89, 91, 92, 93, 102, 104, 106, 107, 108, 111, 116, 117, 118, 120, 123, 126, 127, 138, 140, 141, 142, 143, 145, 146, 150, 152, 154, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 181, 184, 186, 187, 189, 192, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 215, 216, 217, 220, 222, 229, 230, 233, 235, 237], "data1": [99, 220], "data2": [99, 220], "data3": 220, "data4": 220, "data5": 220, "data_col": [71, 116, 119], "data_config": 58, "data_dir": [216, 218], "data_dtyp": 57, "data_fold": 57, "data_path": 57, "data_s": 229, "data_se": [71, 116, 119], "data_shap": 57, "data_transform": 76, "data_typ": [11, 17], "databas": [27, 93, 95, 96, 98, 99, 108, 215, 218, 224], "databaseconfig": 224, "databrick": [69, 97, 98], "dataclass": [5, 9, 25, 26, 35, 37, 57, 58, 82, 116, 117, 216, 217, 222], "datacol": 116, "datacollatorwithpad": [71, 116, 119, 120], "dataconfig": [58, 118, 216, 218], "datadog": 109, "datafram": [61, 67, 75, 96, 111, 112, 117, 119], "dataload": [7, 103, 118, 120, 216, 218], "dataloader_drop_last": 116, "dataloader_num_work": 116, "dataloader_persistent_work": 116, "dataloader_pin_memori": 116, "dataloader_prefetch_factor": 116, "datamodel": 237, "datamodul": [216, 218], "dataop": [77, 92, 98, 100], "dataset": [2, 17, 27, 29, 30, 49, 53, 60, 61, 62, 67, 68, 70, 74, 75, 76, 79, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 116, 117, 122, 123, 135, 142, 158, 177, 209, 210, 212, 216, 220, 229, 238], "dataset_dir": [58, 118], "dataset_load": 93, "dataset_nam": [57, 58, 118], "dataset_path": [58, 118], "dataset_s": [58, 118], "dataset_str": 58, "dataset_tensor": 58, "dataset_test": 220, "dataset_train": 220, "dataset_url": [58, 118], "dataset_vers": 217, "datasetload": 93, "datasheet": 117, "datatyp": 2, "date": [67, 98, 99, 105, 107, 237], "datefmt": 114, "datetim": [89, 113, 114, 237], "datetime_pars": 237, "dation": 108, "daum": 0, "daum\u00e9": [50, 59, 60, 66, 67, 72, 73], "david": [0, 26, 65], "davison": 56, "db": 99, "db_config": 224, "db_host": 224, "db_name": 224, "db_password": 224, "db_port": 224, "db_usernam": 224, "dc": 157, "dd": [99, 190, 216], "ddot": [52, 55, 57, 73, 84, 117, 123, 187, 189, 190, 191, 192, 210], "ddp": [87, 88, 89, 96, 117], "ddp_backend": 116, "ddp_broadcast_buff": 116, "ddp_bucket_cap_mb": 116, "ddp_find_unused_paramet": 116, "ddp_timeout": 116, "ddp_tutori": 91, "de": [56, 57, 58, 98, 122], "deadlin": 29, "deadlock": 119, "deal": [7, 11, 17, 27, 36, 52, 57, 58, 67, 73, 75, 76, 83, 93, 96, 97, 99, 100, 105, 108, 125, 162, 187, 194, 229], "dean": 120, "debat": 215, "deberta": [71, 120], "debertav2forsequenceclassif": 120, "debertav2token": 120, "debug": [57, 58, 68, 93, 103, 104, 105, 107, 114, 116, 118, 213, 216, 218, 224, 230], "debug_sampl": [58, 118], "debug_util": 116, "debugg": 228, "debugopt": 116, "dec": [0, 1, 54, 56, 67], "decad": 76, "decai": [0, 1, 54, 56, 58, 65, 168], "decathlon": [0, 56], "decemb": 56, "decent": [93, 119], "decid": [3, 17, 29, 46, 57, 65, 79, 93, 94, 95, 96, 97, 100, 105, 106, 108, 109, 178, 179], "decim": [7, 52, 75], "decis": [8, 9, 11, 27, 29, 30, 52, 56, 65, 67, 74, 79, 86, 93, 94, 95, 96, 100, 101, 102, 103, 105, 106, 107, 108, 113, 118, 123, 227], "decision_tre": 227, "decisiontre": 227, "decisiontreestrategi": 227, "declar": [5, 6, 8, 49, 61, 93, 228, 237], "declin": 109, "decod": [54, 56, 58, 62, 77, 103, 117, 120, 121], "decode_batch": 58, "decode_equ": 58, "decoded_equ": 58, "decoded_input": 58, "decoded_sent": 58, "decoded_target": 58, "decoder_block": [56, 57, 58, 118, 119], "decoder_block_config": [57, 58, 118], "decoderblock": 56, "decoderblockconfig": [57, 58, 118, 119, 120], "decoderconfig": [57, 58, 118, 119, 120], "decoderforsequenceclassificationconfig": [118, 119], "decomp": 106, "decompos": [55, 57, 60, 67, 70, 73, 149, 182, 192, 202], "decomposit": [55, 56, 69], "decor": [2, 8, 17, 77, 93, 96, 216, 221, 225, 227, 231, 237], "decoupl": [0, 1, 54, 56, 58, 93, 99, 216, 218, 220, 221, 222], "decoupledadamw": 58, "decreas": [7, 11, 17, 29, 43, 44, 47, 56, 58, 61, 67, 70, 93, 94, 102, 104, 109, 122, 123, 139, 165, 169, 215], "decrement": [43, 47, 61, 230], "decrib": 73, "dedic": [47, 64, 99, 117], "deduc": [4, 60, 84, 133, 135], "deduct": [93, 97], "deem": [3, 56, 57, 58, 99], "deep": [0, 10, 11, 54, 55, 56, 57, 58, 62, 65, 67, 70, 71, 72, 73, 76, 81, 84, 87, 94, 97, 100, 101, 103, 105, 106, 110, 114, 115, 122, 123, 179, 180, 207, 210, 212, 217, 218, 222, 225, 237], "deepak": [92, 99], "deepcopi": 71, "deeper": [9, 17, 30, 57, 65, 67, 79, 95, 100, 122], "deeplearningbook": 0, "deepli": [81, 83, 93], "deepspe": 116, "def": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 41, 43, 44, 46, 52, 53, 55, 57, 58, 61, 62, 67, 68, 70, 71, 73, 74, 75, 76, 88, 90, 93, 96, 97, 99, 103, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 139, 140, 142, 145, 147, 155, 158, 163, 170, 173, 177, 187, 202, 206, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238], "defa": [149, 172], "default": [9, 22, 23, 35, 52, 53, 57, 58, 61, 62, 67, 68, 70, 71, 75, 77, 88, 89, 96, 105, 110, 112, 114, 116, 117, 119, 120, 123, 127, 212, 215, 216, 217, 231, 233, 234, 237], "default_data_col": 116, "default_factori": [25, 26, 35, 37, 116], "default_repr": 116, "default_rng": [57, 103, 127, 147], "default_square_trac": 112, "default_tim": [110, 111], "default_valu": [116, 237], "defaultdict": [20, 123], "defb": [149, 172], "defc": 172, "defd": 172, "defeat": 65, "defect": 93, "defeq": [136, 169], "defer": 5, "defin": [2, 3, 4, 5, 8, 9, 19, 27, 29, 32, 35, 36, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 61, 62, 63, 67, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 101, 102, 105, 107, 108, 109, 111, 113, 116, 117, 118, 120, 122, 123, 125, 126, 130, 131, 133, 136, 139, 140, 141, 142, 143, 145, 146, 147, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 175, 177, 179, 180, 182, 185, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 205, 206, 209, 210, 212, 215, 216, 218, 220, 221, 225, 234, 235, 237], "definit": [4, 5, 6, 8, 9, 11, 17, 30, 36, 49, 52, 56, 60, 62, 65, 67, 70, 73, 75, 77, 79, 83, 85, 86, 87, 88, 97, 100, 101, 105, 111, 113, 116, 120, 123, 125, 129, 135, 141, 142, 143, 145, 149, 153, 157, 158, 164, 166, 170, 172, 173, 175, 177, 179, 180, 181, 183, 187, 188, 190, 191, 200, 202, 206, 209, 211, 212, 218, 226, 233, 234, 235], "defunct": 65, "degener": 29, "degrad": [17, 56, 70, 93, 105, 107, 109], "degre": [52, 57, 67, 70, 82, 84, 101, 177, 178, 203, 210], "deisenroth": [0, 48, 51, 52, 78, 79, 83], "del": [17, 111, 114, 120, 230], "delai": [27, 93, 94, 102], "deleg": [221, 227], "delet": [17, 97, 111, 114, 120, 224, 230], "deliber": 56, "deliv": [86, 108], "deliveri": [92, 93, 105], "delta": [53, 65, 67, 70, 75, 98, 125, 154, 162, 165, 173, 177, 202], "delta_": 123, "demand": [32, 47, 93, 94, 98, 117, 210], "demarc": 46, "demo": 95, "demograph": [93, 95, 96, 107, 108], "demonstr": [2, 7, 19, 29, 30, 32, 52, 56, 57, 58, 61, 83, 88, 93, 114, 123, 166, 212, 225, 226, 227], "demonstrate_multinomial_sampling_effect": 123, "dempster": 52, "demystifi": 236, "denomin": [36, 52, 53, 57, 73, 74, 75, 76, 117, 123, 124, 135, 149, 175, 179, 180], "denot": [3, 4, 5, 6, 7, 11, 16, 17, 19, 22, 27, 29, 30, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 73, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 97, 117, 120, 122, 123, 124, 125, 129, 131, 136, 138, 141, 142, 143, 146, 147, 149, 169, 171, 179, 185, 187, 190, 206, 209, 210, 233], "dens": [55, 56, 57, 75, 117, 120, 173], "denser": 173, "densiti": [52, 53, 73, 75, 77, 86, 123, 126, 142, 145, 147, 155, 158, 161, 163, 164, 165, 167, 168, 169, 170, 174, 175, 190, 192, 197, 210], "dep": 67, "deparallel": 116, "depart": 70, "depend": [5, 8, 11, 13, 16, 19, 22, 23, 27, 29, 30, 32, 36, 43, 46, 47, 55, 56, 58, 60, 62, 65, 66, 67, 70, 76, 77, 82, 84, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 113, 117, 122, 123, 129, 132, 135, 136, 158, 175, 179, 180, 182, 192, 202, 210, 213, 215, 216, 222, 223, 230], "dependencie": 56, "depict": [29, 57], "deploi": [58, 70, 89, 92, 93, 94, 95, 98, 105, 107, 108, 109, 218], "deploy": [77, 92, 94, 95, 98, 218], "depract": [119, 120], "deprec": [57, 68, 71, 117, 119, 122, 225], "deprecationwarn": [68, 142, 145, 147, 155, 158], "depth": [10, 27, 30, 56, 57, 62, 94, 99, 105, 107, 129], "dequ": [25, 36], "dequeu": [22, 23, 26, 36], "dequeuelist": [23, 25], "deriv": [5, 7, 11, 27, 30, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 79, 84, 88, 93, 94, 99, 101, 108, 149, 168, 172, 175, 177, 199, 202, 210], "desc": [53, 97, 111, 118, 119, 120, 216], "descend": [30, 57, 75, 98, 122, 123], "descent": [0, 1, 58, 67, 68, 78, 83, 122, 210], "describ": [2, 3, 4, 7, 16, 27, 29, 30, 46, 47, 52, 56, 57, 58, 60, 67, 70, 75, 79, 81, 89, 93, 94, 95, 96, 97, 98, 122, 123, 129, 136, 139, 173, 179, 207, 209, 210, 218], "describe_anim": 3, "descript": [11, 13, 16, 17, 19, 27, 29, 30, 32, 36, 41, 43, 44, 57, 70, 71, 78, 86, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 109, 111, 114, 123, 155, 202, 210, 215, 217, 237], "description_list": 46, "deseri": 216, "deserv": 81, "design": [2, 4, 5, 6, 7, 9, 17, 29, 30, 32, 47, 49, 55, 56, 57, 58, 65, 67, 73, 77, 86, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 119, 122, 187, 209, 217, 218, 220, 222, 225, 226, 227, 229, 234, 236], "design_pattern": [221, 226], "desir": [4, 6, 11, 17, 30, 36, 52, 55, 56, 57, 65, 67, 89, 93, 95, 96, 97, 98, 101, 103, 107, 109, 116, 117, 122, 123, 216, 221, 226, 227], "desper": 67, "despit": [2, 8, 11, 47, 57, 81, 93, 96, 105, 179, 210], "desrib": 129, "dest_fold": 57, "dest_folder_path": 57, "destin": 99, "destroi": 93, "destruct": 32, "det": [52, 68, 84, 126, 177, 191], "detach": [57, 58, 76, 89, 118, 119], "detail": [2, 3, 9, 11, 17, 25, 26, 27, 29, 30, 32, 52, 56, 57, 58, 60, 65, 67, 70, 73, 76, 78, 79, 81, 89, 94, 95, 96, 97, 99, 103, 107, 108, 116, 117, 119, 120, 122, 126, 129, 132, 145, 186, 197, 201, 202, 204, 207, 210, 216, 220, 221, 227, 236], "detect": [5, 10, 47, 67, 71, 76, 83, 92, 94, 97, 98, 99, 100, 105, 108, 109, 114, 179], "detector": 114, "deteminist": 158, "determin": [3, 5, 8, 11, 17, 19, 27, 29, 30, 35, 36, 43, 46, 53, 57, 58, 60, 62, 65, 67, 68, 79, 83, 88, 93, 94, 95, 96, 98, 100, 102, 103, 105, 108, 109, 122, 123, 136, 138, 142, 145, 147, 154, 155, 158, 179, 187, 189, 190, 192, 195, 198, 206, 215, 226], "determinist": [27, 50, 57, 58, 67, 70, 93, 103, 104, 105, 109, 123, 127, 136, 140, 141, 143, 163, 164, 168, 169, 173, 175, 182, 189, 206, 210], "detour": 56, "dev": [58, 93, 99, 236, 237], "develop": [2, 3, 9, 10, 29, 56, 57, 67, 77, 92, 94, 95, 97, 100, 101, 102, 103, 106, 107, 108, 109, 115, 209, 218, 220, 224], "deviat": [52, 55, 57, 65, 67, 73, 75, 97, 102, 109, 111, 143, 158, 164, 170, 205, 206], "devic": [57, 58, 71, 92, 93, 94, 95, 96, 98, 110, 111, 112, 113, 114, 116, 118, 119, 120, 215, 216, 217, 218], "device_": 112, "device_count": 88, "device_t": 112, "device_typ": [57, 112], "devicetyp": 112, "devop": [77, 92, 100], "df": [61, 67, 75, 96, 111, 112, 117, 119, 170], "df_by_mean": 111, "df_multi": 67, "df_np": 96, "df_np_col": 96, "dfrac": [27, 55, 57, 60, 63, 67, 73, 75, 124, 129, 131, 132, 133, 135, 136, 138, 149, 157, 159, 173, 179, 210], "di": [93, 220], "diabetes_i": 68, "diabetes_x": 68, "diabetes_x_test": 68, "diabetes_x_train": 68, "diabetes_y_pr": 68, "diabetes_y_test": 68, "diabetes_y_train": 68, "diag": [52, 123], "diag_": 123, "diag_emb": 123, "diagnos": [94, 103, 105], "diagnosi": [102, 105], "diagnost": [94, 102], "diagon": [52, 55, 57, 58, 60, 67, 70, 75, 83, 102, 111, 113, 118, 119, 123, 187, 189, 190, 191, 192], "diagram": [26, 32, 46, 59, 60, 61, 75, 82, 84, 99, 102, 108, 126, 130, 139, 157, 173, 210, 215, 220], "dice": [73, 124, 125, 129, 132, 135, 157, 159, 171], "dice_1": 132, "dice_2": 132, "dichotim": 102, "dichotom": 62, "dict": [5, 17, 19, 20, 35, 41, 52, 53, 57, 58, 61, 62, 71, 74, 82, 97, 99, 111, 113, 116, 117, 119, 120, 123, 126, 215, 216, 217, 218, 221, 224, 225, 227, 228, 229, 237], "dict_": 17, "dict_access": 17, "dict_delet": 17, "dict_search": 17, "dict_set": 17, "dictat": [29, 57, 58, 82, 95, 220], "dictconfig": 216, "dictionari": [5, 6, 9, 19, 20, 52, 60, 62, 93, 96, 116, 123, 216, 217, 218, 224, 225, 235, 237, 238], "did": [7, 8, 27, 56, 57, 60, 62, 65, 67, 73, 75, 76, 83, 93, 99, 105, 111, 112, 113, 116, 118, 119, 129, 147, 149, 162, 173, 210, 212, 224], "didn": [36, 44], "die": [57, 73, 125, 129, 132], "diederik": 0, "diff": [52, 53], "differ": [2, 3, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 29, 30, 32, 36, 44, 47, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 86, 88, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 120, 122, 123, 125, 127, 136, 141, 142, 143, 145, 146, 152, 157, 158, 162, 166, 170, 172, 178, 179, 189, 205, 206, 209, 210, 212, 216, 217, 220, 224, 227, 230, 232, 233, 236, 238], "differenti": [9, 55, 56, 57, 58, 62, 81, 84, 95, 101, 125, 158, 165, 172], "difficult": [5, 52, 57, 65, 67, 76, 88, 93, 95, 97, 100, 108, 117, 175, 179, 187, 210, 222], "difficulti": [29, 47, 56, 60, 65], "dig": [99, 112, 122, 237], "digest": [67, 157], "digit": [54, 61, 76, 77, 78, 94, 95, 118, 210], "digress": 75, "dii": 220, "dilemma": 56, "dill": 113, "dim": [55, 57, 58, 70, 71, 73, 76, 111, 113, 118, 119, 120, 123], "dim0": [55, 57, 111, 113, 117, 118], "dim1": [55, 57, 111, 113, 117, 118], "dimens": [30, 52, 53, 60, 67, 70, 71, 73, 74, 76, 78, 79, 81, 82, 84, 86, 95, 105, 117, 118, 119, 123, 176, 177, 187, 192, 202], "dimension": [4, 11, 49, 52, 53, 55, 56, 58, 60, 61, 62, 65, 70, 73, 75, 76, 78, 79, 81, 82, 83, 86, 95, 96, 100, 108, 123, 126, 175, 187, 190, 191, 192, 195, 210], "dimensionality_reduct": 95, "diminish": [56, 57, 75], "dinner": 124, "dip": 220, "dir": [99, 216], "dirac": 67, "direct": [2, 7, 29, 32, 56, 57, 58, 60, 65, 67, 70, 79, 81, 82, 83, 84, 93, 94, 96, 99, 101, 102, 112, 122, 123, 126, 192, 215, 220], "directli": [2, 11, 16, 17, 29, 30, 32, 49, 52, 55, 56, 57, 58, 60, 61, 67, 75, 83, 87, 89, 93, 94, 95, 96, 97, 98, 123, 127, 172, 210, 212, 215, 216, 220, 238], "directori": [36, 53, 58, 61, 62, 74, 88, 89, 99, 103, 116, 127, 142, 210, 216, 226], "disabl": [5, 9, 55, 61, 70, 74, 155, 212, 216, 229], "disable_adapt": 116, "disable_by_count": 229, "disable_existing_logg": 216, "disable_input_require_grad": 116, "disable_tqdm": 116, "disadvantag": [93, 98], "disagre": 65, "disappear": [16, 180], "discard": [27, 29, 52], "discern": [29, 125], "disciplin": 93, "disclaim": 58, "disclos": 65, "discontinu": [94, 165], "discord": 215, "discount": 98, "discourag": 58, "discours": 57, "discov": [82, 94, 105], "discoveri": [30, 93], "discrep": [2, 5, 49, 102, 107, 123], "discret": [49, 51, 52, 56, 62, 75, 77, 83, 86, 95, 96, 123, 127, 138, 139, 140, 141, 142, 144, 148, 151, 156, 157, 158, 162, 163, 164, 165, 171, 172, 174, 176, 177, 180, 181, 182, 199, 210], "discrimin": [56, 58, 72, 100, 102, 122, 123, 210], "discuss": [2, 3, 4, 9, 17, 27, 29, 30, 52, 54, 55, 56, 57, 58, 62, 65, 66, 67, 73, 76, 78, 79, 81, 83, 84, 86, 90, 93, 94, 95, 96, 99, 117, 122, 123, 129, 153, 174, 178, 180, 188, 197, 201, 202, 204, 207, 210, 236, 237], "diseas": [94, 95, 102, 105, 142, 147, 179], "disinguish": 9, "disjoint": [52, 60, 123, 125, 133, 135, 149, 182, 202], "disk": [62, 215, 217], "dislik": 94, "dispar": [97, 107], "dispatch_batch": 116, "dispers": [57, 67], "displai": [17, 27, 36, 52, 61, 62, 67, 75, 82, 84, 93, 111, 118, 123, 142, 210], "display_contingency_and_pur": 61, "display_result": 61, "disrupt": [93, 99], "dissatisfact": 94, "dissect": [57, 220], "dissimilar": [55, 83], "dist": 215, "dist_info": 88, "dist_info_per_process": [88, 90], "dist_tuto": 91, "distanc": [57, 60, 61, 62, 77, 84, 85, 86, 96, 97], "distibut": 75, "distil": [77, 95, 101, 121], "distillation_loss": 120, "distinct": [2, 4, 5, 9, 52, 56, 57, 58, 60, 62, 65, 67, 73, 75, 79, 81, 97, 125, 136, 145, 146, 157, 158, 181, 191, 212, 218, 221, 232], "distinctli": 61, "distinfoperprocess": 88, "distinguish": [9, 30, 56, 57, 75, 78, 93, 102, 218], "distort": [61, 62], "distract": 125, "distribut": [0, 13, 17, 19, 29, 43, 48, 49, 50, 51, 53, 55, 58, 59, 60, 62, 64, 70, 72, 74, 75, 77, 78, 84, 86, 87, 89, 92, 93, 94, 98, 99, 100, 103, 105, 108, 109, 116, 117, 118, 120, 125, 126, 127, 129, 141, 149, 153, 161, 162, 164, 170, 171, 172, 173, 174, 176, 179, 181, 182, 183, 186, 188, 189, 192, 194, 197, 198, 205, 206, 208, 215, 216], "distributedconfig": [58, 118], "distributeddataparallel": [88, 116], "disturb": 32, "div": 113, "div_term": 57, "divbackward0": [113, 123], "dive": [0, 1, 9, 10, 30, 54, 56, 57, 67, 72, 73, 79, 81, 82, 99, 100, 122, 123, 179, 180, 210], "diverg": [54, 58, 103, 120, 122], "divers": [30, 56, 65, 70, 96, 97, 98, 100, 107, 108, 123, 201, 204], "divid": [8, 17, 20, 27, 30, 52, 57, 58, 61, 62, 75, 76, 86, 93, 117, 123, 127, 131, 132, 173, 202, 210, 221], "divis": [4, 8, 17, 29, 57, 74, 78, 117, 123], "divisor": [57, 215], "dk": [58, 60, 73], "dl": 95, "dload": 58, "dn": [76, 89], "dna": 96, "do": [2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 19, 22, 23, 26, 27, 29, 30, 36, 43, 44, 47, 49, 52, 54, 55, 56, 57, 58, 60, 61, 65, 70, 71, 73, 75, 76, 77, 78, 79, 81, 83, 84, 86, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 108, 111, 112, 113, 115, 116, 117, 119, 121, 122, 123, 126, 129, 132, 139, 142, 147, 157, 158, 161, 171, 173, 178, 179, 182, 183, 189, 190, 192, 194, 195, 202, 210, 211, 212, 215, 216, 217, 225, 227, 228, 230, 231, 233, 234, 237, 238], "do_division_on_int": 8, "do_ev": [71, 116, 119], "do_predict": [71, 116, 119], "do_sampl": 57, "do_train": [71, 116, 119], "doabl": 227, "doc": [5, 70, 71, 96, 120, 215, 221, 233, 234], "docker": [93, 99], "dockerfil": 99, "docstr": [93, 116, 228, 229], "doctor": [97, 179], "document": [8, 30, 32, 52, 56, 57, 61, 62, 65, 76, 88, 89, 92, 95, 96, 100, 105, 216, 221, 229, 233], "document_": 221, "documentari": 109, "documentclass": [30, 32], "doe": [2, 3, 4, 5, 6, 7, 9, 16, 17, 19, 20, 22, 27, 29, 30, 32, 35, 36, 46, 50, 52, 56, 57, 58, 60, 61, 62, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 88, 90, 93, 94, 95, 96, 97, 98, 100, 101, 105, 110, 112, 113, 114, 116, 118, 121, 123, 125, 126, 127, 129, 132, 133, 136, 141, 145, 154, 158, 172, 173, 177, 179, 190, 197, 202, 210, 215, 217, 218, 220, 225, 227, 229, 233, 234, 237, 238], "doesn": [2, 7, 16, 17, 27, 29, 32, 36, 43, 44, 58, 59, 67, 96, 97, 100, 101, 108, 113, 114, 122, 123, 133, 212, 215, 221, 227, 234], "doesnt": 3, "dog": [2, 3, 4, 6, 22, 23, 55, 57, 86, 95, 237], "doi": [0, 1, 10], "dollar": [56, 57, 67, 94, 97], "domain": [29, 30, 55, 56, 70, 83, 94, 97, 98, 107, 123, 126, 136, 138, 173], "domin": [16, 27, 29, 46, 57, 58, 60, 67, 123], "don": [2, 8, 19, 27, 29, 36, 43, 48, 52, 57, 58, 61, 67, 70, 87, 88, 89, 93, 95, 97, 99, 100, 104, 105, 108, 109, 111, 122, 123, 124, 127, 133, 135, 142, 157, 173, 179, 215, 217, 218, 221, 230], "done": [2, 6, 16, 17, 27, 29, 30, 32, 46, 52, 56, 57, 58, 60, 65, 70, 75, 81, 82, 88, 89, 93, 97, 98, 99, 102, 103, 112, 117, 118, 119, 129, 189, 192, 210, 212, 218, 220, 228], "dont": 157, "dorothea": 16, "dose": 69, "dot": [4, 52, 58, 60, 65, 67, 73, 75, 79, 82, 117, 118, 126, 129, 216], "doubl": [6, 7, 8, 24, 32, 36, 77, 81, 89, 93, 116, 117, 179, 226], "double_int_or_int": 8, "double_scalar": 61, "doubleintegr": 125, "doublepair": 5, "douglasorr": 120, "down": [5, 19, 27, 30, 36, 43, 52, 55, 56, 58, 65, 71, 75, 76, 81, 89, 95, 97, 108, 119, 120, 122, 123, 133, 135], "down_proj": 71, "downarrow": 55, "downfal": 76, "download": [57, 67, 76, 93, 98, 117, 216], "download_fil": 58, "download_sit": 215, "downright": 93, "downsid": 97, "downstream": [7, 56, 70, 97, 98, 99, 100, 107], "downtim": [92, 107], "downward": 93, "doyl": 97, "dp": [0, 125], "dpi": [52, 62, 127, 143, 146, 154, 159, 173], "drain": 228, "dramat": 52, "drastic": [58, 70, 93, 101, 102, 122], "draw": [5, 30, 32, 49, 52, 56, 57, 65, 67, 82, 93, 99, 100, 106, 127, 129, 130, 142, 145, 146, 147, 152, 157, 187, 190, 195, 206, 209], "drawback": [5, 60, 70, 93, 96, 212], "drawn": [49, 52, 56, 65, 67, 73, 86, 101, 106, 123, 127, 145, 146, 147, 150, 152, 154, 157, 158, 159, 173, 190, 195, 206, 209, 210], "dress": 228, "drew": [49, 157], "drif": 109, "drift": [92, 93, 95, 99, 107], "drill": 107, "drink": 183, "drive": [2, 3, 79, 93, 94, 95, 217], "driven": [93, 94, 98, 100], "driver": [93, 97, 98], "drone": 30, "drop": [52, 55, 65, 75, 93, 105, 109, 209, 210, 230], "drop_last": [58, 118], "dropna": 75, "dropout": [57, 58, 71, 111, 113, 116, 118, 119], "drown": 102, "dry_run_backbon": 119, "dry_run_backbone_last_layer_hidden_st": 119, "dry_run_model": 119, "dry_run_model_config": 119, "dry_run_pool": 119, "dry_run_pooler_output": 119, "ds_store": 93, "dsa": 36, "dstack": [52, 126, 189], "dt": [125, 165], "dtype": [53, 57, 58, 61, 62, 75, 76, 110, 111, 113, 118, 119, 120, 123, 127], "dub": 56, "duck": 2, "duda": 210, "dude": 90, "due": [2, 6, 11, 13, 17, 19, 27, 29, 30, 32, 43, 44, 47, 56, 57, 61, 67, 70, 71, 74, 76, 93, 95, 96, 97, 98, 100, 105, 107, 108, 114, 116, 117, 118, 123, 133, 187, 202, 206, 209, 210, 215, 217, 229, 237, 238], "dummi": [57, 67, 101, 105, 118, 220, 225], "dummy_data": 220, "dummy_model": [58, 122], "dump": [98, 216], "dunder": 233, "duo": 5, "dup_dict": 127, "duplic": [11, 17, 30, 39, 40, 45, 56, 77, 97, 98, 99, 116, 127, 209, 225], "durat": [58, 94, 98, 100, 122], "durbin": 67, "durbin_watson": 67, "durbin_watson_stat": 67, "dure": [2, 3, 5, 8, 27, 29, 30, 46, 53, 55, 56, 57, 58, 61, 65, 68, 70, 71, 73, 75, 88, 89, 93, 95, 96, 100, 103, 104, 105, 106, 108, 109, 114, 117, 122, 154, 157, 215, 216, 217, 221], "dvc": [99, 103], "dwarf": 16, "dx": [125, 161, 162, 163, 164, 165, 172, 173, 175], "dx_": 187, "dx_1": 187, "dx_2": 187, "dx_n": 187, "dxd": 57, "dy": [172, 175, 179, 182], "dynam": [2, 5, 11, 27, 29, 32, 46, 77, 212, 217, 225, 227], "dynamic_model": 237, "dynamicmodel": 237, "dzmitri": [0, 117], "e": [0, 2, 3, 4, 6, 7, 8, 9, 13, 16, 19, 27, 29, 32, 35, 36, 43, 44, 46, 47, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 83, 84, 86, 87, 90, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 114, 116, 117, 118, 122, 123, 125, 127, 130, 131, 132, 133, 136, 138, 142, 143, 145, 146, 149, 154, 157, 158, 162, 166, 168, 169, 170, 171, 172, 173, 177, 179, 180, 182, 183, 184, 185, 187, 190, 194, 197, 198, 199, 200, 202, 205, 206, 209, 210, 212, 215, 216, 218, 220, 235, 237], "e731": 58, "e_": 65, "ea": 76, "each": [2, 4, 5, 6, 8, 9, 11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 116, 117, 118, 119, 122, 123, 125, 126, 127, 129, 133, 136, 138, 141, 142, 143, 145, 146, 147, 152, 154, 157, 158, 164, 173, 175, 178, 179, 180, 183, 187, 189, 190, 192, 195, 202, 205, 206, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 229, 230, 234, 235, 237, 238], "each_dai": 145, "eager": 229, "earli": [30, 58, 94, 102, 118, 122, 157], "earlier": [2, 3, 5, 6, 7, 27, 29, 30, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 75, 79, 89, 99, 101, 105, 108, 112, 117, 118, 119, 142, 145, 147, 169, 173, 180, 182, 187, 190, 197, 200, 212, 216, 228, 230], "earn": 145, "eas": [49, 55, 70, 73, 93, 95, 96, 220], "easi": [7, 36, 49, 52, 57, 58, 60, 65, 66, 67, 73, 75, 93, 96, 97, 99, 100, 107, 114, 117, 123, 125, 130, 132, 133, 135, 136, 147, 169, 180, 212, 216, 222, 224, 227, 237], "easier": [2, 35, 57, 58, 61, 65, 73, 75, 93, 97, 98, 99, 101, 103, 108, 116, 154, 157, 175, 189, 213, 217, 220, 225, 230], "easili": [5, 11, 29, 52, 55, 57, 58, 60, 63, 65, 67, 70, 73, 83, 93, 95, 96, 98, 99, 103, 108, 109, 117, 172, 179, 190, 199, 205, 210, 215, 216, 217, 218, 220, 225, 227, 233], "east": 98, "eat": [20, 28, 32, 55, 57, 77], "eaten": 29, "ec2": 87, "ecdf": 146, "ece595": 65, "echo": [88, 89], "econom": [94, 96], "ecosystem": [99, 110], "ecr": 93, "ed": [1, 54, 56], "eda": [75, 100, 126], "edg": [92, 96, 97, 108], "edgar": 97, "edgecolor": [61, 142, 145, 147, 158, 170, 173], "edit": [0, 93], "editor": 93, "editori": [29, 36], "edu": [0, 67, 73, 125, 157, 184, 193], "educ": [56, 60, 62, 89, 96], "edunita": [2, 3, 4], "edward": 0, "ef": [89, 98], "efa": 89, "effect": [2, 4, 5, 11, 27, 29, 30, 32, 36, 47, 52, 54, 55, 56, 57, 58, 62, 65, 67, 70, 73, 78, 81, 88, 93, 94, 95, 97, 98, 99, 100, 101, 103, 107, 116, 117, 122, 123, 213, 215, 229, 230, 234, 235], "effective_batch_s": 117, "effective_batch_size_per_it": 117, "effective_flops_per_second": 117, "effectivepython": [213, 230], "effici": [3, 19, 20, 27, 29, 32, 36, 43, 44, 47, 55, 57, 58, 67, 69, 70, 73, 77, 79, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 108, 109, 116, 122, 213, 215, 230, 231, 238], "effort": [29, 56, 93, 99, 218], "efsset": 89, "eigen": 96, "eigendecomposit": [82, 192], "eigenvalu": [82, 194], "eigenvector": 82, "eigh": 52, "eighth": 58, "einsum": 55, "either": [3, 4, 6, 8, 27, 29, 30, 43, 47, 52, 53, 55, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 75, 76, 79, 82, 84, 93, 97, 98, 99, 102, 105, 112, 116, 122, 123, 127, 130, 142, 145, 154, 165, 209, 212, 216, 220, 225, 226, 230, 237], "el": 34, "elabor": [52, 95], "elaps": [58, 122], "elapsed_tim": [96, 112], "elbow": 61, "elbow_method": 61, "electr": [29, 93], "electron": [30, 96], "eleg": [5, 9], "element": [2, 5, 7, 8, 11, 13, 19, 20, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 50, 52, 55, 56, 57, 58, 59, 60, 61, 65, 67, 68, 70, 73, 74, 76, 78, 81, 84, 86, 94, 96, 99, 112, 116, 117, 118, 123, 125, 127, 129, 136, 158, 187, 191, 206, 216, 229, 233, 238], "element1": 32, "element2a": 32, "element2b": 32, "element3a": 32, "element3b": 32, "element3c": 32, "element4a": 32, "element4b": 32, "elementari": [180, 202], "elementwis": [57, 112], "elementwise_affin": [55, 57, 58, 118, 119], "elev": 93, "eli": 123, "elif": [8, 9, 27, 53, 58, 61, 68, 111, 114, 116, 170, 220, 227, 237], "elimin": [3, 26, 27, 36, 65, 73, 79, 90, 93, 99, 132, 215, 229], "ell": [27, 52, 56, 58, 86, 139, 146, 185], "ellips": [52, 189, 192], "ellipsi": [5, 8, 116], "ellipsoid": [73, 192], "ellipt": [60, 192], "elong": 189, "els": [2, 3, 6, 8, 9, 16, 19, 20, 27, 29, 34, 35, 36, 41, 46, 47, 52, 53, 55, 57, 58, 61, 62, 65, 67, 68, 71, 74, 75, 88, 90, 99, 111, 113, 114, 116, 117, 118, 119, 120, 122, 125, 126, 127, 142, 145, 170, 210, 212, 213, 217, 220, 227, 230, 233, 236, 237, 238], "elsewher": [5, 55, 57, 79], "elt": 96, "elucid": [30, 79], "elus": 29, "em": [51, 53, 59], "email": [93, 94, 95, 108, 149, 237], "eman": 79, "emb": [57, 221], "embd_pdrop": 57, "embed": [30, 58, 71, 78, 79, 81, 83, 84, 86, 92, 95, 96, 97, 98, 100, 103, 108, 111, 113, 117, 119, 221], "embed_token": 71, "embedd": [7, 221], "embedder_typ": 221, "embedding_backward": 113, "embedding_dense_backward": 113, "embedding_dim": [57, 111, 113], "embeddingbackwa": 113, "embeddingbackward0": [57, 113], "embodi": [97, 221], "emerg": [92, 93], "emit": 57, "emoji": [56, 57], "empahsi": [56, 57], "emphas": [4, 52, 55, 57, 58, 67, 75, 78, 81, 93, 97, 98, 101, 120, 122, 136, 147], "emphasi": [56, 81, 210], "emphasis": [70, 75, 179], "empir": [0, 52, 58, 60, 67, 70, 75, 77, 86, 105, 122, 145, 146, 154, 155, 159, 171, 173, 194, 206, 210], "empirc": [58, 122], "empirical_mean": 158, "empirical_pmf": [142, 145, 147, 155, 158], "empirici": 158, "emploi": [29, 32, 47, 56, 58, 83, 93, 94, 105, 107, 122, 125, 145, 215, 234], "employe": [5, 7, 145], "empow": [56, 97, 222], "empt": 213, "empti": [8, 11, 17, 19, 20, 22, 23, 27, 30, 32, 35, 52, 57, 60, 61, 79, 93, 112, 113, 116, 120, 147, 206, 230, 233, 235], "emptiv": 213, "empty_cach": [111, 114, 120], "empty_lik": [57, 113], "empty_strid": [112, 113], "emptyset": [27, 60, 129, 130, 132, 136, 145], "emul": 36, "en": [0, 7, 58, 71, 114, 120, 122, 192, 228, 237], "enabl": [2, 3, 5, 8, 11, 29, 30, 32, 54, 55, 56, 58, 70, 89, 92, 93, 96, 97, 99, 101, 103, 107, 108, 110, 113, 114, 118, 123, 199, 212, 215, 218, 221, 229], "enable_adapt": 116, "enable_backward": 113, "enable_by_count": 229, "enable_input_require_grad": 116, "enable_optim": 113, "enable_tim": 112, "enact": 233, "enc": 57, "encapsul": [5, 56, 57, 78, 79, 84, 93, 96, 99, 217, 222, 224, 227], "enclos": 234, "encod": [52, 54, 62, 70, 71, 73, 74, 75, 76, 78, 95, 97, 98, 100, 116, 119, 120, 123, 212, 221], "encode_batch": 58, "encode_equ": 58, "encode_ordinari": 57, "encoded_sent": 58, "encoder_hidden_st": 57, "encoder_hidden_states_mask": 57, "encoding_nam": 57, "encompass": [5, 8, 27, 30, 93, 94, 97, 98], "encount": [8, 17, 29, 30, 35, 36, 44, 46, 58, 61, 65, 68, 75, 93, 99, 108, 210, 212, 220], "encourag": [9, 58, 67, 83, 93, 95], "encrypt": [98, 215], "end": [2, 3, 11, 16, 19, 20, 22, 24, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 94, 95, 96, 99, 100, 101, 102, 105, 108, 109, 110, 111, 112, 117, 122, 123, 125, 126, 129, 136, 138, 139, 142, 143, 145, 146, 147, 149, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 173, 175, 177, 179, 180, 182, 183, 185, 187, 189, 190, 191, 192, 194, 197, 199, 200, 206, 209, 210, 212, 216, 217, 222, 233], "end_tim": [96, 110, 215, 217, 230], "endeavor": 29, "endoftext": 119, "endpoint": [88, 108], "endswith": [57, 58, 111, 113, 118, 119, 229], "enemi": 57, "enforc": [5, 6, 32, 65, 93, 97, 99], "engag": [93, 94, 95, 100], "engagement_loss": 95, "engagement_predict": 95, "engin": [30, 58, 92, 93, 94, 95, 96, 101, 107, 108, 109, 113, 135, 198], "english": [20, 56, 57, 95, 127], "enhanc": [3, 30, 55, 56, 57, 93, 94, 95, 98, 99, 100, 105, 108, 212, 215, 218, 220, 225, 229], "enjoi": 94, "enjoy": 95, "enlighten": [29, 182], "enorm": [100, 212], "enough": [6, 19, 27, 32, 49, 52, 56, 61, 62, 65, 67, 70, 75, 79, 89, 90, 93, 95, 96, 98, 114, 118, 119, 127, 142, 155, 158, 169, 173, 212, 216, 237], "enqueu": [22, 23, 25, 26, 36], "enrich": 98, "ensembl": [105, 178], "ensu": 6, "ensur": [2, 3, 4, 5, 6, 7, 9, 11, 17, 27, 29, 30, 32, 52, 55, 56, 57, 58, 61, 62, 65, 67, 68, 70, 71, 78, 83, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 111, 113, 116, 117, 118, 122, 123, 178, 213, 215, 221, 225, 226, 229, 230, 235], "entail": [56, 93, 98, 100, 118, 119], "enter": [26, 61, 93, 135, 210, 230], "enterpris": 99, "entertain": 56, "entir": [16, 27, 29, 30, 43, 44, 46, 55, 56, 57, 58, 67, 73, 86, 93, 96, 97, 98, 99, 105, 106, 117, 119, 122, 125, 129, 130, 173, 202, 212, 215, 229, 230, 237], "entireti": [5, 56], "entiti": [2, 3, 5, 56, 79, 81, 82, 83, 90, 96, 97, 109, 221], "entrant": 93, "entri": [17, 52, 65, 73, 75, 81, 84, 95, 105, 190, 210, 216], "entropi": [58, 60, 65, 67, 95, 120, 123, 210], "entrypoint": [99, 216], "enum": [227, 237], "enumer": [19, 52, 56, 57, 61, 62, 74, 76, 86, 108, 118, 119, 124, 127, 132, 135, 136, 138, 155, 158, 206, 215, 221, 228], "env": [57, 58, 61, 70, 88, 89, 90, 93, 99, 103, 118, 216, 229, 230], "env_copi": 216, "env_set": 216, "envelop": 206, "environ": [2, 3, 32, 52, 57, 58, 61, 70, 88, 90, 92, 94, 95, 96, 98, 100, 103, 107, 108, 116, 213, 218, 221, 224, 226], "environment": 108, "envis": 95, "eo": [55, 57, 58], "eof": 93, "eos_token": [119, 120], "eos_token_id": [57, 119, 120], "eosin": 62, "ep": [53, 55, 57, 58, 74, 111, 113, 118, 119, 210, 216], "ephemeral_gc": 114, "epoch": [58, 68, 71, 103, 104, 105, 116, 118, 119, 120, 122, 216, 217], "epoch_index": [58, 217], "epperli": 69, "epsilon": [16, 55, 57, 58, 64, 65, 67, 123, 129, 173, 186, 202, 205, 210], "epsilon_": 65, "eq": [65, 192], "eq1": 84, "eq_naive_bayes_estim": 76, "eqlabel": 76, "eqref": 76, "equal": [4, 7, 9, 16, 19, 20, 29, 30, 43, 44, 47, 49, 52, 55, 57, 58, 60, 61, 65, 67, 68, 70, 73, 74, 77, 78, 79, 83, 84, 93, 96, 97, 100, 106, 116, 122, 123, 125, 126, 129, 149, 157, 158, 159, 171, 173, 175, 179, 202, 216, 217, 218, 231], "equal_idx": 58, "equal_index": 58, "equal_token_id": 58, "equat": [27, 30, 51, 52, 55, 56, 58, 60, 62, 65, 67, 70, 73, 75, 77, 80, 83, 84, 86, 93, 117, 122, 123, 132, 135, 136, 179, 187, 191, 192, 202, 210], "equation_to_str": 58, "equidist": 60, "equip": [29, 108, 116], "equiprob": 129, "equiv": 52, "equival": [4, 7, 20, 29, 32, 46, 49, 50, 52, 53, 55, 56, 62, 65, 67, 70, 73, 75, 81, 82, 83, 87, 93, 98, 116, 122, 125, 126, 127, 136, 139, 141, 162, 164, 173, 179, 180, 187, 202, 206, 210, 212, 233], "era": 98, "erad": 93, "erasur": 5, "erf": [55, 57, 113, 169], "erfbackward0": 113, "eriklindernoren": 72, "erlang": 185, "erm": [48, 65, 67], "err": [3, 5, 7, 8, 58, 67, 89, 93, 212], "erron": 3, "error": [2, 3, 5, 6, 7, 8, 10, 11, 17, 19, 32, 36, 50, 52, 58, 60, 61, 62, 64, 68, 70, 71, 76, 79, 83, 86, 88, 89, 95, 97, 98, 99, 102, 103, 105, 106, 107, 109, 111, 114, 119, 186, 202, 216, 221, 229, 237], "error_if_nonfinit": [58, 118], "error_queu": 88, "errorn": 3, "escal": 56, "especi": [5, 9, 17, 30, 57, 58, 60, 61, 73, 78, 79, 82, 83, 84, 86, 93, 94, 96, 97, 98, 99, 100, 102, 103, 105, 115, 116, 117, 122, 157, 198, 203, 212, 215, 217, 218, 222, 232], "essenc": [2, 17, 29, 30, 56, 57, 81, 82, 225], "essenti": [3, 5, 7, 8, 10, 17, 27, 29, 30, 36, 46, 55, 56, 57, 58, 60, 65, 67, 70, 73, 78, 79, 81, 82, 83, 84, 86, 89, 93, 94, 95, 98, 99, 100, 103, 105, 108, 109, 110, 118, 123, 141, 159, 164, 173, 175, 221, 233], "essentiali": 57, "establish": [2, 3, 4, 7, 27, 29, 30, 56, 58, 60, 65, 67, 75, 81, 84, 93, 94, 97, 99, 101, 118, 119, 122, 132, 133, 136, 173, 192, 198, 220], "estim": [36, 50, 53, 55, 57, 58, 60, 61, 65, 70, 72, 74, 75, 76, 77, 79, 93, 100, 102, 105, 106, 122, 123, 142, 147, 158, 177, 179, 194], "estimate_likelihood_paramet": 75, "estimate_mfu": 117, "estimate_p_aloc": 127, "estimate_p_aloc_for_rang": 127, "estimate_prior_paramet": 75, "estimate_token": 116, "estimate_training_dai": 117, "estimated_byt": 117, "estimated_bytes_in_byt": 117, "et": [30, 52, 55, 56, 57, 58, 67, 70, 78, 79, 83, 122, 123, 210], "eta": [58, 70, 122], "eta_": [58, 122], "eta_0": [58, 122], "eta_1": 122, "eta_2": 122, "eta_3": 122, "eta_4": 122, "eta_5": 122, "eta_6": 122, "eta_7": 122, "eta_max": 122, "eta_min": [58, 118, 119, 122, 225], "eta_t": [58, 122], "etc": [4, 5, 6, 11, 17, 27, 51, 55, 57, 58, 60, 62, 65, 79, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 116, 117, 118, 119, 123, 145, 157, 210, 215, 217, 218, 220, 228], "etern": 69, "ethan": 69, "ethernet": 93, "ethic": 95, "etl": [77, 92, 96, 99], "euclidean": [57, 60, 61, 62, 79, 84, 86, 101], "euclidean_dist": 61, "eugen": [56, 57, 104], "euphoria": 102, "eval": [57, 58, 71, 116, 118, 119, 120, 216, 237], "eval_accumulation_step": 116, "eval_accuraci": [71, 119], "eval_brier_scor": [71, 119], "eval_confusion_matrix": [71, 119], "eval_dataset": [71, 116, 119], "eval_delai": 116, "eval_every_n_step": [58, 118], "eval_f1_score_macro": [71, 119], "eval_f1_score_micro": [71, 119], "eval_log_loss": [71, 119], "eval_loss": 71, "eval_pr_auc": [71, 119], "eval_pr_auc_class_": [71, 119], "eval_pr_auc_class_0": 71, "eval_pr_auc_class_1": 71, "eval_pr_auc_class_2": 71, "eval_precision_macro": [71, 119], "eval_precision_micro": [71, 119], "eval_predict": [71, 119], "eval_recall_macro": [71, 119], "eval_recall_micro": [71, 119], "eval_roc_auc": [71, 119], "eval_roc_auc_class_": [71, 119], "eval_roc_auc_class_0": 71, "eval_roc_auc_class_1": 71, "eval_roc_auc_class_2": 71, "eval_runtim": 71, "eval_samples_per_second": 71, "eval_step": [71, 116, 119], "eval_steps_per_second": 71, "eval_strategi": [71, 119], "evalpredict": [71, 116, 119, 120], "evalu": [2, 4, 13, 19, 29, 30, 36, 46, 47, 52, 55, 56, 57, 58, 65, 67, 76, 77, 86, 92, 93, 94, 95, 99, 100, 101, 103, 105, 107, 108, 109, 116, 117, 118, 123, 126, 136, 169, 180, 210, 212, 217, 229, 232, 235], "evaluate_and_generate_on_valid_epoch_end": 58, "evaluate_funct": 113, "evaluate_on_reverse_dataset": 118, "evaluation_loop": 116, "evaluation_strategi": [71, 116, 119], "even": [2, 3, 5, 6, 7, 8, 9, 11, 13, 20, 27, 29, 36, 52, 56, 57, 58, 60, 65, 67, 70, 73, 75, 76, 79, 81, 83, 86, 88, 90, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 117, 122, 123, 132, 135, 157, 158, 173, 179, 180, 206, 210, 212, 213, 215, 218, 229, 230], "evenli": [11, 17, 43, 52, 105, 123, 206], "event": [30, 49, 58, 65, 73, 75, 76, 77, 89, 93, 95, 97, 100, 102, 109, 110, 114, 115, 123, 124, 127, 131, 133, 135, 136, 143, 145, 149, 154, 156, 175, 187, 202, 215], "eventa": [175, 187], "eventa_1": 187, "eventa_2": 187, "eventa_n": 187, "eventu": [26, 27, 29, 30, 46, 60, 65, 95, 114, 173], "ever": [65, 67], "everi": [3, 4, 6, 7, 11, 13, 17, 19, 27, 29, 30, 32, 35, 36, 43, 44, 52, 55, 56, 57, 58, 60, 62, 65, 67, 70, 75, 76, 78, 79, 82, 83, 86, 90, 93, 95, 97, 100, 101, 102, 107, 108, 112, 114, 117, 118, 119, 123, 125, 141, 157, 158, 164, 206, 212, 226], "every_sav": 116, "everyon": [65, 97, 210], "everyth": [3, 52, 65, 73, 75, 88, 100, 103, 145, 177, 183, 210, 220], "everytim": [93, 145, 225], "everywher": [8, 55, 57, 67, 100, 101], "evid": [29, 52, 67, 70, 123], "evidenc": 52, "evolut": 107, "evolutionari": 103, "evolv": [30, 93, 94, 97, 105, 108, 171], "exacerb": 70, "exact": [2, 6, 8, 16, 29, 30, 32, 58, 65, 71, 73, 90, 93, 97, 103, 105, 112, 154, 210, 216, 232], "exactli": [7, 13, 19, 27, 29, 43, 47, 48, 49, 50, 55, 57, 58, 61, 65, 67, 75, 83, 84, 89, 122, 125, 129, 146, 154, 157, 173, 210, 212, 226, 237], "exam": 65, "examin": [2, 6, 11, 17, 30, 57, 58, 65, 67, 75, 79, 93, 94, 97, 100, 123, 136, 138, 210], "exampl": [2, 4, 6, 9, 10, 13, 19, 30, 35, 36, 43, 46, 47, 49, 56, 60, 61, 70, 74, 75, 76, 77, 79, 81, 83, 86, 88, 89, 99, 101, 103, 104, 105, 106, 110, 112, 114, 116, 117, 118, 119, 120, 123, 124, 125, 127, 130, 132, 135, 138, 142, 143, 147, 148, 153, 157, 158, 169, 172, 175, 178, 179, 180, 181, 182, 184, 186, 187, 189, 195, 197, 202, 209, 213, 216, 217, 218, 220, 221, 224, 227, 228, 230, 232, 234, 237], "example_attention_weight": 58, "example_cod": [213, 230], "example_input": 58, "example_logit": 58, "example_predict": 58, "example_project": 93, "example_target": 58, "exc": [111, 221, 227, 237], "exce": [17, 27, 36, 56, 84, 123, 212], "exceed": [19, 36, 65, 93, 173], "excel": [11, 32, 56, 96, 98], "except": [3, 5, 7, 8, 22, 23, 27, 32, 36, 52, 57, 58, 67, 68, 82, 88, 93, 97, 111, 114, 116, 189, 210, 212, 218, 221, 227, 233, 237], "exception": 27, "excerpt": 117, "excess": 170, "exchang": [27, 30, 56, 57, 79, 84, 96], "exclud": [29, 30, 46, 58, 67, 71, 117, 122], "exclude_dir": 93, "exclude_kei": 216, "exclus": [2, 56, 57, 58, 95, 108, 112, 129, 213], "exdb": 76, "exec": [116, 212], "execut": [3, 5, 8, 13, 17, 19, 27, 30, 32, 36, 43, 46, 55, 56, 57, 77, 87, 90, 93, 96, 97, 99, 100, 110, 111, 116, 117, 212, 213, 214, 226, 227, 230, 234], "execute_search": 27, "exemplifi": [5, 11, 17, 56], "exercis": [17, 30, 65, 77, 111, 113, 128, 153, 210], "exhaust": [27, 30, 94, 95, 105, 129, 212, 229, 233], "exhibit": [4, 8, 29, 52, 65, 67, 75, 82, 234], "exist": [2, 4, 6, 13, 17, 19, 20, 27, 29, 30, 36, 43, 47, 53, 56, 57, 58, 60, 61, 62, 64, 65, 67, 74, 75, 78, 79, 81, 82, 86, 89, 94, 99, 100, 101, 107, 116, 123, 127, 129, 142, 169, 172, 191, 194, 197, 199, 210, 215, 217, 221, 226, 227, 229, 230, 234, 236], "exist_ok": 57, "exit": [27, 116, 212, 230], "exitcod": 230, "exorbit": 56, "exp": [52, 55, 56, 57, 58, 67, 73, 74, 75, 113, 120, 123, 126, 127, 145, 158, 169, 175, 177, 185, 190, 192, 194, 199, 200, 202, 209, 210], "expand": [16, 46, 49, 56, 57, 58, 67, 73, 79, 87, 98, 111, 113, 118, 119], "expand_dim": 75, "expans": [16, 27, 52, 56, 57, 67], "expbackward0": 113, "expec": [49, 184], "expect": [2, 3, 4, 5, 6, 7, 8, 9, 27, 29, 32, 35, 36, 37, 41, 44, 49, 53, 56, 57, 58, 60, 62, 64, 65, 66, 73, 75, 77, 86, 89, 92, 93, 94, 99, 100, 104, 105, 106, 107, 108, 116, 117, 125, 126, 136, 141, 142, 147, 153, 158, 164, 166, 171, 174, 179, 183, 196, 198, 199, 202, 207, 210, 213, 226, 228, 230, 232, 234, 235, 237], "expected_list": 46, "expected_param": 117, "expected_total_convers": 145, "expected_total_profit": 145, "expected_total_revenu": 145, "expected_valu": 158, "expedit": 17, "expens": [17, 29, 36, 47, 57, 62, 70, 73, 93, 97, 104, 105, 117, 195], "experi": [10, 17, 29, 30, 58, 65, 70, 76, 77, 89, 92, 93, 94, 95, 101, 104, 105, 107, 108, 117, 122, 123, 130, 132, 136, 142, 143, 145, 146, 147, 157, 158, 169, 206, 207, 216, 218], "experienc": [29, 96], "experiment": [62, 95, 105, 113, 119, 142, 155], "experiment_id": 217, "experiment_nam": 217, "experimental_config": 113, "expert": [100, 115], "explain": [2, 5, 46, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 76, 93, 95, 98, 101, 102, 117, 180, 222, 229, 232], "explan": [20, 29, 30, 32, 36, 46, 52, 58, 67, 76, 93, 97, 107, 117, 120, 125, 132, 210, 215], "explanatori": [58, 66, 67, 79], "explicit": [2, 6, 9, 30, 55, 57, 58, 73, 76, 79, 95, 114, 122, 123, 215, 235], "explicitli": [2, 5, 9, 55, 56, 58, 60, 73, 81, 93, 97, 108, 109, 114, 122, 123, 162, 179, 190, 210, 212, 215, 232], "explod": [57, 67, 70, 103], "exploit": [52, 70, 93], "explor": [4, 9, 27, 29, 30, 56, 57, 58, 62, 79, 81, 82, 83, 84, 92, 93, 122], "exploratori": [93, 99, 100], "explos": 105, "expoenti": 173, "expon": [16, 27, 74, 76, 101, 117, 123, 168], "exponenti": [32, 52, 56, 57, 60, 65, 73, 75, 76, 77, 93, 120, 167, 174, 185, 190, 192, 194, 198, 199, 210], "export": [57, 88, 89, 108, 113, 114], "export_chrome_trac": [112, 113, 114], "export_memory_snapshot": 114, "export_memory_timelin": [113, 114], "export_stack": 113, "expos": [5, 99, 108, 109, 227], "exposur": 56, "express": [3, 4, 5, 9, 11, 13, 16, 17, 29, 30, 35, 51, 52, 55, 56, 57, 58, 60, 62, 65, 67, 73, 75, 76, 79, 81, 82, 83, 84, 93, 94, 101, 117, 122, 123, 133, 136, 179, 180, 182, 183, 194, 205, 209, 210, 229, 233], "ext": 216, "extend": [2, 4, 7, 16, 30, 56, 57, 58, 65, 82, 84, 93, 116, 123, 174, 176, 212, 225], "extens": [3, 8, 52, 55, 57, 58, 73, 79, 83, 93, 96, 99, 105, 117, 125, 188, 194, 195, 202, 221, 224], "extent": [4, 57, 84, 173], "extern": [27, 56, 57, 71, 93, 99, 116, 212, 215, 220], "extra": [13, 19, 27, 29, 30, 43, 44, 47, 57, 58, 65, 73, 93, 212, 225], "extra_repr": [57, 116], "extract": [55, 57, 58, 60, 62, 65, 68, 76, 77, 86, 92, 95, 97, 108, 116, 123, 125, 182, 202, 227, 237], "extract_from_connect": 99, "extractor": 118, "extrapol": [67, 203], "extrem": [57, 60, 67, 93, 95, 179, 216], "exxager": 65, "ey": [52, 57, 79], "f": [1, 2, 3, 4, 5, 7, 9, 16, 27, 29, 30, 32, 46, 49, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 68, 70, 71, 73, 74, 75, 81, 82, 83, 84, 88, 90, 93, 96, 97, 99, 101, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 125, 126, 127, 136, 139, 142, 145, 147, 155, 158, 161, 162, 166, 169, 170, 173, 177, 190, 191, 194, 197, 199, 206, 210, 212, 215, 216, 220, 221, 225, 226, 227, 228, 229, 230, 236, 237], "f1": [52, 71, 74, 88, 93, 94, 95, 102, 105, 106, 107, 109, 119], "f1_score": [71, 119, 120], "f2": [52, 88], "f_": [55, 56, 57, 65, 70, 73, 75, 120, 123, 126, 175, 177, 179, 180, 182, 187, 190, 192, 195, 199, 209, 210], "f_1": 4, "f_2": [4, 65], "f_4": 65, "f_c": 191, "f_n": [4, 60], "f_t": [102, 120], "f_u": 158, "f_x": [73, 145, 162, 166, 170, 172, 173, 175, 179, 185, 195, 199], "f_y": [73, 172, 175, 179, 182, 185], "f_z": 185, "fabric": 83, "face": [56, 60, 69, 89, 93, 94, 97, 125, 135], "facebook": [95, 96, 216], "facecolor": 52, "facial": 94, "facil": [93, 105, 108], "facilit": [3, 52, 55, 56, 58, 93, 94, 96, 97, 98, 99, 103, 215], "fact": [3, 4, 5, 7, 8, 9, 11, 13, 30, 43, 55, 56, 57, 58, 60, 65, 67, 70, 73, 75, 76, 81, 84, 88, 93, 108, 123, 125, 129, 133, 135, 175, 179, 180, 183, 187, 194, 200, 210, 216, 218, 227], "facto": 57, "factor": [13, 16, 17, 20, 27, 29, 32, 46, 47, 52, 55, 56, 57, 58, 65, 67, 69, 73, 82, 93, 94, 95, 96, 98, 100, 103, 108, 109, 117, 122, 123, 175, 210, 215], "factori": [71, 77, 116, 215, 223, 225], "factory_kwarg": 57, "factory_method": 221, "fail": [6, 11, 57, 65, 67, 76, 79, 89, 93, 94, 95, 97, 99, 101, 102, 109, 114, 142, 179, 212, 227, 237], "failur": [3, 19, 36, 87, 89, 93, 95, 97, 99, 108, 123, 142, 143, 145, 146, 147], "fair": [65, 73, 88, 102, 136, 143, 171, 210], "fairli": [7, 29, 52, 67, 179, 227], "faisal": [0, 48, 51, 52, 78, 79, 83], "faith": 46, "fall": [29, 60, 114], "fallback": 116, "fals": [2, 3, 5, 7, 9, 22, 23, 25, 26, 29, 30, 32, 35, 36, 37, 47, 52, 53, 55, 57, 58, 61, 68, 70, 71, 74, 75, 76, 82, 88, 90, 93, 94, 96, 99, 102, 103, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 139, 142, 145, 147, 155, 158, 170, 173, 179, 212, 215, 216, 217, 224, 225, 232, 233, 237, 238], "falsi": 9, "famili": [48, 51, 54, 55, 75, 86, 95, 97, 169, 179, 185], "familiar": [60, 67, 78, 81, 82, 83, 84, 93, 94, 97, 180, 210, 212], "famish": 57, "famou": 2, "fanci": 58, "fantat": 60, "far": [29, 30, 46, 52, 57, 58, 60, 61, 65, 67, 71, 73, 84, 93, 100, 141, 158, 164, 188, 210], "fare": 97, "fashion": [7, 47, 56, 57, 60, 61, 75, 116, 147], "fast": [0, 6, 11, 27, 29, 32, 44, 47, 56, 65, 93, 94, 96, 97, 98, 99, 101, 105, 106, 108, 110, 183, 215], "fastapi": [93, 108], "faster": [11, 17, 29, 30, 53, 56, 57, 58, 60, 67, 88, 90, 96, 97, 212, 215, 230], "fastest": [29, 230], "favor": [67, 94, 95], "favorit": [67, 93], "favour": 57, "fc": 216, "fd": 230, "fear": 6, "feasibl": [19, 36, 43, 49, 70, 94, 212], "featur": [2, 8, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 68, 70, 74, 76, 79, 83, 84, 86, 93, 96, 97, 98, 99, 103, 105, 107, 109, 116, 118, 119, 123, 177, 179, 212, 215, 216, 217], "feature_dim": [57, 58, 118, 119], "feb": [1, 10], "fed": 99, "feed": [56, 58, 65, 95, 96, 98, 99, 100, 117, 119], "feed_forward": [57, 58, 118, 119], "feed_forward_config": [57, 58, 118], "feedback": [65, 93, 94, 96, 105, 108], "feel": [55, 67, 75], "feet": [67, 86], "felin": 93, "felix": 125, "femal": [75, 184], "ferrari": [187, 195], "fetch": [2, 3, 4, 89, 108, 215, 218, 220, 221], "few": [6, 30, 52, 55, 56, 58, 60, 62, 65, 67, 73, 75, 76, 84, 88, 93, 94, 95, 96, 97, 101, 105, 108, 116, 142, 147, 158, 216], "fewer": [29, 65, 70, 93], "ff": [55, 57], "ffn": [55, 58, 111, 113, 118, 119], "ffw": 117, "ffw1": 117, "ffw2": 117, "ffw_size": 117, "fi": [89, 237], "fiat": 96, "fibonacci": 228, "field": [2, 25, 26, 29, 30, 35, 37, 56, 57, 71, 77, 80, 81, 82, 83, 84, 88, 89, 96, 99, 102, 108, 111, 116, 117, 129, 191, 202, 210, 216, 217, 218, 227], "field_info": 237, "field_metadata": 237, "field_nam": 237, "field_typ": 237, "field_valid": [57, 216, 218, 237], "fieldinfo": 237, "fiesta": 96, "fifo": 36, "fifth": 65, "fifti": 135, "fig": [16, 36, 52, 57, 58, 61, 62, 65, 75, 79, 81, 82, 83, 84, 122, 123, 126, 127, 131, 139, 142, 143, 145, 155, 158, 159, 167, 173, 175, 177, 189, 202, 206, 209, 210], "figaspect": 126, "figsiz": [52, 53, 57, 58, 61, 62, 67, 75, 76, 81, 82, 83, 84, 118, 122, 123, 126, 127, 139, 142, 143, 145, 146, 154, 155, 158, 159, 167, 169, 170, 173, 177, 189, 206, 210], "figur": [3, 35, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 71, 73, 75, 82, 83, 87, 97, 118, 119, 123, 126, 131, 133, 139, 145, 155, 170, 182, 189, 202, 209], "figure_format": [142, 210], "figure_kwarg": [57, 58], "file": [3, 6, 8, 27, 36, 53, 57, 58, 61, 62, 74, 88, 93, 95, 96, 98, 99, 100, 103, 112, 113, 114, 116, 117, 127, 142, 210, 215, 216, 217, 218, 224, 229, 230, 237], "file_download": [57, 117], "file_path": [212, 224], "file_prefix": [113, 114], "file_reader_using_gener": 212, "file_reader_using_iter": 212, "filehandl": 216, "filenam": [212, 216, 229], "filepath": [57, 217], "filipino": 98, "fill": [5, 9, 11, 30, 32, 55, 58, 75, 93, 124], "filter": [57, 89, 93, 94, 95, 97, 98, 99, 108, 114, 116, 125], "filtered_us": 97, "filterwarn": [52, 74, 139, 142, 145, 147, 155, 158, 167], "final": [8, 11, 20, 27, 32, 44, 46, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 79, 83, 93, 94, 95, 96, 98, 107, 117, 119, 122, 127, 129, 158, 179, 194, 210, 215, 216, 217, 224, 230, 234], "financi": [57, 93, 94, 96], "financial_phrasebank": [71, 119, 120], "financialdataset": 119, "financialphrasecol": 120, "financialphrasedataset": 120, "find": [3, 5, 6, 11, 13, 17, 19, 29, 30, 36, 39, 40, 42, 43, 44, 47, 49, 52, 53, 56, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 79, 83, 84, 86, 93, 94, 95, 97, 99, 100, 103, 105, 108, 122, 123, 125, 127, 129, 132, 133, 135, 142, 145, 147, 157, 165, 171, 173, 179, 180, 183, 187, 199, 206, 209, 210, 211, 215, 216, 227, 229, 235], "find_dupl": 238, "find_duplicates_effici": 238, "find_free_port": [88, 90], "find_min_max": 5, "find_prim": 215, "find_root_dir": [36, 53, 58, 61, 62, 74, 127, 142, 210], "findanagram": 41, "finder": [104, 105], "fine": [7, 8, 9, 57, 58, 62, 65, 69, 71, 75, 77, 89, 93, 114, 116, 121, 122, 125, 220], "finer": 218, "finetun": 115, "finfo": [53, 210], "finish": [26, 29, 32, 60, 63, 215, 217], "finit": [6, 11, 29, 30, 49, 52, 55, 56, 59, 65, 86, 123, 125, 129, 158, 197, 199, 203], "finn": [0, 56], "fire": [7, 102], "first": [5, 6, 7, 8, 11, 16, 19, 22, 26, 27, 30, 32, 35, 36, 43, 44, 46, 47, 49, 51, 52, 56, 57, 60, 61, 62, 63, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 85, 88, 89, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 112, 114, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 132, 133, 135, 136, 147, 158, 166, 173, 174, 179, 180, 189, 192, 199, 202, 210, 212, 213, 216, 217, 220, 221, 225, 226, 230, 233, 235, 236, 237], "first_el": 5, "first_in_q": 26, "first_row": 212, "first_sentence_norm": 57, "first_sequ": 57, "first_sequence_": 57, "first_sequence_decod": 57, "first_sequence_mean": 57, "first_sequence_var": 57, "firstli": [36, 43, 52, 56, 57, 58, 70, 75, 79, 95, 97, 118, 119, 122, 123], "firstrow": 117, "fit": [2, 8, 27, 52, 53, 55, 58, 61, 62, 65, 66, 68, 74, 79, 87, 93, 96, 97, 98, 101, 102, 105, 106, 118, 122, 123, 135, 145, 173, 189, 209, 210, 211, 218, 227], "fit_intercept": 68, "fittedvalu": 67, "five": [105, 132, 234], "fivetran": 99, "fix": [5, 6, 11, 13, 16, 17, 29, 32, 49, 52, 55, 56, 57, 58, 60, 61, 63, 67, 70, 73, 75, 76, 79, 86, 93, 97, 103, 105, 114, 117, 118, 122, 124, 136, 146, 147, 154, 156, 169, 172, 173, 179, 180, 182, 203, 210, 235], "fixer": 93, "fixm": [57, 142, 147, 217], "fixtur": 104, "flag": [8, 30, 58, 68, 70, 93, 100, 105, 216, 226], "flags_help": 216, "flake8": 93, "flamegraph": 112, "flat": [57, 96, 210], "flatten": [57, 58, 68, 76, 122, 195], "flaw": [67, 93, 132], "flexibl": [2, 3, 5, 6, 11, 17, 32, 46, 52, 67, 93, 97, 99, 215, 216, 218, 220, 221, 224], "flink": 98, "flip": [36, 52, 65, 100, 118, 147, 202, 210], "flipper": 75, "flipper_length_mean_std": 75, "flipper_length_mm": 75, "float": [2, 3, 4, 5, 6, 7, 8, 9, 30, 46, 52, 53, 55, 57, 58, 61, 62, 67, 68, 71, 74, 76, 96, 110, 111, 112, 113, 116, 118, 119, 120, 122, 123, 126, 127, 142, 145, 147, 155, 158, 170, 206, 210, 216, 217, 218, 221, 225, 227, 230, 237], "float16": [111, 117], "float32": [57, 76, 93, 110, 123, 210], "float64": [6, 61, 75], "float_valu": 2, "floatfmt": 117, "floating_point_op": 116, "floatingpointprecis": 117, "floattensor": [57, 111, 113, 119], "floor": [27, 29, 76, 93], "flop": [77, 95, 112, 121], "flops_achieved_per_second": 117, "flops_need": 117, "flops_per_iter_per_fwdbwd": 117, "flops_per_sequence_per_fwdbwd": 117, "flops_per_token_per_fwdbwd": 117, "flops_throughput": 117, "flops_tot": 117, "flour": 79, "flow": [32, 52, 55, 57, 60, 70, 93, 99, 109, 218, 228], "fluctuat": 67, "fluff_ratio": 117, "fluffi": 237, "fly": [2, 3, 30, 70, 108, 212, 229, 233], "flyabl": [2, 3], "fmt": [30, 53, 57, 58, 61, 67, 70, 103, 111, 113, 117, 118, 126, 189], "fn": [61, 88, 90, 94, 102], "fn_kwarg": [71, 119], "fname": 52, "fnr": 94, "focal": 95, "focu": [2, 13, 52, 56, 57, 58, 65, 66, 67, 70, 75, 76, 78, 93, 96, 97, 98, 99, 100, 109, 132, 209], "focus": [2, 8, 27, 29, 30, 32, 52, 56, 57, 82, 93, 117, 119, 221], "fold": [70, 93, 105, 106, 107, 127], "folder": [57, 93, 103, 216, 229], "follow": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 20, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 89, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 110, 113, 114, 116, 117, 118, 119, 122, 123, 125, 126, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 154, 158, 159, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 187, 189, 190, 194, 195, 199, 200, 202, 203, 205, 209, 210, 212, 216, 220, 221, 229, 233, 234, 236, 237], "font": [30, 75], "fontsiz": [52, 57, 81, 82, 83, 84, 126, 127, 173, 189], "foo": 216, "food": 183, "foot": 67, "footag": [67, 79], "footbal": 62, "footer": 216, "footnot": 67, "footnotes": 30, "footprint": [17, 57, 70, 101, 103, 127, 143, 168, 169, 173, 189, 206, 210, 212, 229], "foral": [2, 4, 6, 27, 29, 51, 55, 65, 73, 157, 190, 194], "forbid": 225, "forbidden": 76, "forc": [6, 19, 30, 35, 43, 57, 58, 67, 73, 93, 100, 110, 111, 112, 113, 114, 117, 119, 212], "force_download": [57, 117], "force_memory_leak": 114, "ford": 96, "foreach": [30, 58, 118], "forecast": 101, "foreign": 97, "foremost": 93, "foresight": [29, 111, 113, 119], "forest": [95, 101, 113, 227], "forget": [67, 73, 93, 95, 129], "forgiv": 118, "forgot": 114, "forgotten": 93, "fork": [93, 119, 215], "form": [2, 3, 8, 9, 17, 20, 27, 30, 35, 47, 49, 50, 51, 55, 56, 58, 60, 61, 62, 65, 67, 68, 70, 75, 78, 81, 82, 86, 89, 93, 95, 96, 99, 100, 105, 106, 108, 116, 118, 122, 127, 132, 145, 169, 179, 180, 191, 206, 207, 209, 210, 220], "formal": [2, 3, 4, 6, 9, 10, 29, 30, 43, 44, 49, 55, 56, 57, 58, 59, 60, 65, 67, 73, 75, 79, 82, 83, 86, 95, 107, 122, 123, 125, 129, 132, 157, 161, 171, 173, 177, 179, 180, 181, 182, 186, 190, 191, 202, 210, 212, 220], "format": [3, 8, 16, 27, 52, 53, 56, 57, 58, 62, 68, 74, 77, 89, 92, 94, 95, 97, 99, 100, 107, 108, 110, 111, 112, 113, 114, 117, 119, 213, 216, 224, 230, 237], "formatt": [93, 119, 120, 216], "former": [7, 57, 60, 62, 65, 73, 97, 116, 147, 237], "formul": [4, 27, 47, 49, 55, 56, 57, 58, 73, 77, 92, 95, 149, 172], "formula": [11, 16, 46, 52, 55, 57, 58, 62, 65, 67, 75, 84, 109, 117, 122, 123, 129, 131, 132, 133, 135, 149], "forth": 112, "fortran": 96, "fortun": [76, 93, 95, 109], "forum": 98, "forward": [44, 47, 56, 58, 65, 67, 70, 71, 103, 111, 113, 114, 116, 118, 119, 209], "forward_backward": 111, "forward_pass": 113, "forward_tot": 117, "forwardref": 237, "foster": [93, 221], "found": [3, 4, 5, 6, 8, 11, 19, 25, 26, 27, 29, 30, 36, 43, 44, 46, 47, 49, 52, 53, 56, 57, 58, 60, 61, 62, 63, 65, 67, 73, 74, 75, 84, 88, 89, 98, 109, 116, 127, 140, 142, 172, 179, 199, 210, 213, 225, 228, 230, 233], "foundat": [0, 3, 4, 11, 17, 56, 65, 67, 78, 79, 84, 86, 93, 97, 101, 112, 142, 169, 176], "four": [52, 58, 62, 65, 79, 87, 95, 96, 102, 108, 136, 209, 210], "fourier": 199, "fourth": [65, 170, 235], "fowler": [93, 220], "fp": [94, 102], "fp16": [116, 117], "fp16_backend": 116, "fp16_full_ev": 116, "fp16_opt_level": 116, "fp32": 117, "fp64": 117, "fpr": [71, 94, 119], "frac": [13, 16, 19, 27, 29, 30, 36, 43, 49, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 73, 75, 76, 78, 83, 84, 86, 87, 101, 102, 109, 117, 120, 122, 123, 125, 126, 127, 129, 132, 139, 149, 150, 152, 154, 157, 158, 165, 166, 167, 168, 169, 170, 172, 173, 175, 177, 179, 180, 183, 185, 190, 192, 194, 197, 199, 200, 202, 205, 206, 209, 210], "frac16": 125, "frac56": 125, "fraction": [52, 55, 58, 93, 117, 180], "fragil": 56, "frame": [27, 55, 56, 70, 73, 75, 77, 81, 92, 94, 99, 100, 108, 118], "framework": [2, 4, 29, 54, 56, 57, 58, 60, 67, 78, 93, 96, 103, 202, 203, 212], "frank": 0, "fraser": 75, "fraud": [94, 95, 97, 100, 102, 108], "fraudul": [93, 95, 108], "free": [52, 58, 70, 81, 82, 88, 93, 97, 109, 111, 114, 215, 230], "freedom": [67, 70], "freeli": [6, 95, 210], "freez": [70, 71], "french": [56, 95], "freq": 142, "freqeunci": 75, "frequenc": [57, 73, 75, 100, 102, 109, 127, 129, 142, 143, 206], "frequent": [17, 30, 32, 47, 62, 77, 93, 95, 96, 97, 98, 108, 114, 231], "fresh": [93, 100, 105, 215, 233, 235], "friction": 93, "fridai": 149, "friedman": [59, 60, 67, 76], "friend": [95, 97], "friendli": [94, 99, 195], "frighteningli": 61, "frobeniu": 70, "from": [2, 3, 4, 5, 6, 7, 9, 11, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 39, 40, 43, 45, 46, 52, 53, 54, 55, 58, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 122, 125, 126, 127, 129, 132, 133, 136, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 152, 155, 157, 158, 163, 164, 167, 168, 169, 170, 171, 174, 175, 177, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 194, 196, 199, 200, 202, 205, 206, 207, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 238], "from_account": 230, "from_dict": [216, 218, 224], "from_env": 224, "from_json": 224, "from_numpi": [57, 75], "from_par": 230, "from_pretrain": [57, 71, 116, 117, 119, 120], "from_token": 58, "from_xxx": 224, "from_yaml": 224, "fromnumer": 61, "front": [23, 25, 36, 58, 75, 93], "frost": 67, "frozen": [25, 26, 35, 37, 56, 70, 212, 217], "frozen_out": 71, "frustrat": [93, 95], "fsdp": [88, 116], "fsdp_config": 116, "fsdp_min_num_param": 116, "fsdp_transformer_layer_cls_to_wrap": 116, "fsdpoption": 116, "fsx": [89, 98], "fubini": 210, "fulfil": [2, 3, 58, 67, 84, 93, 125, 127, 147, 179], "full": [8, 17, 27, 52, 53, 56, 58, 60, 70, 76, 93, 97, 99, 104, 105, 108, 118, 120, 123, 131, 132, 215, 237], "full_determin": 116, "full_parameter_nam": 58, "fullfil": 95, "fulli": [11, 57, 61, 65, 67, 93, 94, 97, 103, 105, 117, 125, 145, 177, 230], "fun": [0, 83, 145, 147, 217], "func": [17, 68, 96, 112, 116, 228, 229, 237], "func_all_memb": 116, "func_or_class": 116, "func_or_method": [58, 116], "func_sig": 116, "function": [0, 2, 3, 6, 9, 10, 27, 30, 32, 34, 36, 37, 46, 48, 49, 50, 52, 53, 61, 62, 66, 68, 70, 74, 75, 76, 77, 83, 84, 86, 88, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 110, 112, 114, 117, 120, 122, 125, 126, 130, 131, 132, 133, 136, 140, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 157, 158, 159, 161, 163, 164, 167, 168, 174, 175, 179, 180, 181, 182, 189, 190, 192, 195, 206, 208, 211, 215, 216, 217, 220, 221, 227, 228, 229, 230, 233, 234, 237, 238], "function_with_bound": 6, "function_with_union": 6, "functionev": 112, "functool": [53, 58, 61, 68, 74, 96, 118, 122, 127, 229, 234, 237], "fundament": [2, 4, 11, 27, 29, 30, 32, 52, 58, 76, 78, 79, 81, 82, 83, 84, 86, 93, 96, 97, 99, 100, 106, 109, 119, 128, 165, 180, 202, 207, 212, 215, 236], "funtion": 60, "furri": 97, "further": [55, 73, 76, 102, 129, 132, 149, 179, 180, 182, 183, 187, 237], "furthermor": [2, 6, 7, 16, 29, 30, 32, 46, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 79, 83, 93, 95, 96, 99, 101, 103, 104, 105, 122, 123, 157, 169, 173, 179, 182, 189, 194, 206, 210, 218, 220], "fuse": [58, 95], "futil": 29, "futur": [35, 55, 56, 68, 70, 76, 79, 93, 101, 118, 119, 224, 235], "future_mask": [57, 58, 118, 119], "future_masks_expand": 58, "futurewarn": [57, 58, 71, 117, 119, 120], "fwd": 117, "g": [2, 4, 7, 8, 9, 16, 27, 29, 32, 46, 49, 51, 52, 55, 56, 57, 58, 61, 62, 65, 67, 73, 75, 76, 81, 82, 83, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 107, 108, 109, 116, 117, 120, 123, 125, 140, 155, 163, 166, 171, 172, 182, 199, 202, 206, 212, 215, 220, 221, 235, 237], "g4dn": [87, 89], "g4dn12xlarg": 89, "g4dn2x": 88, "g4dn2xlarg": [88, 89], "g_i": 123, "ga": 108, "gain": [29, 30, 56, 57, 67, 93, 108, 123, 179], "galleri": 75, "gambler": 101, "game": [30, 93, 95, 125, 135], "gamma": [55, 57, 58, 170, 177, 225], "gamma_": 57, "gamma_d": [55, 57], "gan": 95, "gao": [0, 1, 54, 56, 58, 122], "gaohn": [61, 89, 99, 215, 216], "gaohongnan": 215, "gap": [11, 78], "garbag": 212, "gareth": [0, 59, 60, 66, 67, 72, 73], "garner": 56, "gate": [55, 57, 93], "gate_proj": 71, "gatewai": 89, "gather": [94, 97, 98, 102, 199, 206, 215], "gather_backward": 113, "gatherbackward0": 113, "gaug": [67, 94, 95, 96, 105, 117], "gaussian": [51, 59, 60, 62, 70, 72, 74, 75, 77, 126, 135, 155, 158, 166, 170, 171, 172, 174, 179, 194, 196, 199, 206], "gaussian_1": 52, "gaussian_2": 52, "gaussian_3": 52, "gaussian_kd": 170, "gaussianmixtur": 52, "gaussianmixtureifittedgaussianmixtur": 52, "gaussianmixturemodel": 53, "gaussiannb": 74, "gaussiansymbol": 169, "gave": [3, 7, 97, 132, 136, 157, 171], "gb": [113, 117], "gc": [111, 114, 120], "gc_collect_interv": 114, "gc_interv": 114, "gca": [52, 58, 122], "gcp": 108, "gcr": 93, "gdpr": 98, "ge": [216, 218], "gear": [93, 95, 105, 108], "geeksforgeek": [22, 23, 31, 32, 33], "gelu": [56, 58, 111, 113, 118, 119], "gelu_new": 57, "gemini": 57, "gen": [65, 212], "gender": [95, 184], "gener": [0, 1, 2, 3, 4, 7, 8, 10, 13, 17, 22, 23, 27, 29, 36, 43, 47, 50, 51, 53, 60, 61, 62, 64, 67, 70, 71, 72, 75, 76, 77, 86, 89, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 108, 111, 113, 114, 116, 118, 119, 122, 123, 125, 126, 127, 129, 142, 145, 155, 158, 170, 172, 173, 177, 179, 180, 183, 188, 193, 194, 195, 197, 202, 206, 208, 209, 210, 211, 214, 215, 217, 221, 227, 228, 231, 237], "general_util": 58, "generalis": 57, "generaliz": 56, "generalpurpos": 89, "generate_config": 58, "generate_dynamic_model": 237, "generate_k_birthdai": 127, "generate_kurtosis_data": 170, "generate_one_random_birthdai": 127, "generate_random_birthdai": 127, "generate_skewed_data": 170, "generate_x": 52, "generated_equ": 58, "generated_token": 58, "generation_util": 71, "generational_gc_": 114, "generationmixin": 116, "generator_config": 118, "generator_express": 233, "generatorconfig": [58, 118], "generatorexit": 212, "generatortyp": 233, "generic_anim": 3, "generic_animal_sound": 3, "generic_cat": 3, "generic_cat_sound": 3, "generic_dog": [3, 4], "generic_dog_sound": 3, "genericalia": 7, "genericpath": 229, "genet": 94, "genexpr": [212, 229], "genom": 96, "genr": [109, 237], "gentl": [58, 75, 122], "gentoo": 75, "genuin": 36, "geograph": [94, 96, 107], "geometr": [32, 75, 77, 83, 153, 189, 199], "geometri": [52, 60, 62, 66, 79, 83, 84, 193], "geospati": 96, "geq": [16, 27, 29, 30, 50, 55, 58, 60, 63, 65, 67, 83, 86, 101, 122, 123, 130, 143, 162, 168, 169, 194, 202, 209], "geqslant": 52, "get": [2, 5, 6, 7, 8, 9, 11, 16, 17, 20, 22, 27, 29, 35, 36, 44, 47, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 74, 75, 76, 84, 88, 89, 92, 93, 95, 96, 97, 99, 100, 102, 104, 106, 108, 117, 118, 119, 122, 123, 125, 127, 129, 136, 142, 145, 147, 149, 151, 157, 158, 169, 171, 173, 178, 179, 182, 187, 192, 195, 201, 204, 206, 210, 212, 213, 215, 216, 218, 220, 221, 225, 227, 228, 229, 230, 235, 237], "get_adapter_state_dict": 116, "get_all_arg": 116, "get_args_pars": [88, 90], "get_base_class": 116, "get_batch": 57, "get_buff": 116, "get_compon": 221, "get_constructor_field_annot": 116, "get_context": 88, "get_cosine_annealing_with_warmup": [58, 122], "get_decay_parameter_nam": 116, "get_default": 116, "get_employe": 7, "get_encod": 57, "get_eval_dataload": 116, "get_extended_attention_mask": 116, "get_extra_st": 116, "get_field_annot": [58, 116], "get_first": 5, "get_gaussian_pdf": 52, "get_head_mask": 116, "get_height": 123, "get_hostnam": 88, "get_id": 215, "get_image_compression_ratio": 62, "get_image_compression_ratio_for_kmean": 62, "get_input_embed": 116, "get_ipython": [57, 116], "get_kei": 5, "get_last_lr": [122, 225], "get_learning_r": [58, 122], "get_linear_schedule_with_warmup": [116, 120], "get_manag": 7, "get_members_of_function_or_method": 116, "get_memory_footprint": 116, "get_meshgrid": 75, "get_optimizer_cls_and_kwarg": 116, "get_output_embed": 116, "get_paramet": 116, "get_position_embed": 116, "get_prior": 75, "get_process_id": 88, "get_random_batch": [111, 113], "get_recip": 228, "get_schedul": 225, "get_second": 5, "get_sorted_us": 97, "get_sorted_users_by_ag": 97, "get_strategi": 227, "get_string_hashmap": 41, "get_submodul": 116, "get_test_dataload": 116, "get_test_transform": 220, "get_train_dataload": 116, "get_train_transform": 220, "get_training_strategi": 227, "get_type_hint": 116, "get_valu": 5, "get_weighted_likelihood": 53, "get_width": 123, "get_with_not_given": 9, "get_x": 123, "get_xaxi": 76, "get_yaxi": 76, "getattr": [216, 229], "getcwd": 58, "getdoc": 58, "getenv": 224, "gethostnam": [113, 114], "getlogg": [110, 111, 112, 113, 114, 119, 120, 216], "getmin": 34, "getmro": 116, "getpid": [215, 229], "getrefcount": 230, "getsizeof": [62, 212], "getter": 7, "gettrac": 229, "getvalu": 229, "gfedcba": 37, "gif": [92, 93], "gigabyt": 117, "gil": [77, 231], "git": [36, 52, 53, 58, 61, 62, 74, 89, 99, 103, 127, 142, 210], "git_commit_hash": 99, "gitflow": 93, "github": [0, 9, 52, 61, 66, 69, 71, 75, 79, 89, 93, 99, 111, 113, 114, 115, 117, 119, 120, 142, 169, 193, 213, 225, 230], "githubusercont": [57, 58], "gitignor": [93, 103], "gitlab": 93, "give": [8, 13, 16, 17, 19, 20, 29, 30, 36, 43, 44, 46, 48, 52, 55, 57, 58, 59, 60, 65, 67, 70, 73, 75, 76, 79, 86, 89, 93, 98, 99, 104, 105, 106, 109, 110, 117, 120, 123, 127, 128, 129, 131, 142, 147, 162, 168, 173, 175, 178, 180, 182, 202, 210, 212], "given": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 49, 50, 53, 55, 56, 57, 58, 60, 61, 62, 65, 66, 70, 73, 74, 75, 76, 79, 81, 82, 83, 84, 88, 93, 94, 95, 97, 101, 102, 108, 112, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 129, 130, 131, 132, 135, 136, 138, 139, 142, 143, 146, 149, 150, 152, 154, 158, 159, 165, 167, 168, 169, 172, 173, 175, 177, 179, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 202, 206, 210, 213, 215], "gladli": 35, "glanc": [46, 60, 65, 93, 95, 122], "glare": 93, "glimps": 237, "global": [52, 56, 59, 67, 77, 93, 98, 103, 111, 116, 194, 216, 225, 226, 228, 231, 236], "global_": [58, 118], "global_config": 58, "global_pool": [216, 218], "global_rank": [88, 90], "global_step": [71, 119], "globaln": 116, "gloo": [58, 90, 118], "glossari": 233, "glove": 56, "gluon": 76, "gm": 52, "gm_diag": 52, "gm_full": 52, "gm_spheric": 52, "gm_ti": 52, "gmm": [53, 60], "gmm_2d_": 52, "gmm_2d_bic_vs_k": 52, "gmm_2d_cluster": 52, "gmm_2d_data": 52, "gmm_pdf": 52, "gmm_pdf_new": 52, "gmm_pdf_new2": 52, "gmm_pdf_origin": 52, "gmm_pdf_updated_mean": 52, "gmm_pdf_updated_pi": 52, "gmm_pdf_updated_sigma": 52, "gms_per_k": 52, "gnb": 74, "gnn": 95, "gnu": 93, "go": [3, 8, 11, 17, 29, 52, 56, 57, 58, 62, 65, 66, 67, 70, 73, 75, 76, 83, 89, 93, 95, 96, 97, 98, 99, 103, 105, 108, 114, 125, 126, 127, 129, 142, 155, 179, 206, 207, 210, 216, 236], "goal": [29, 30, 44, 47, 49, 52, 55, 56, 57, 60, 65, 67, 70, 73, 93, 94, 98, 99, 100, 101, 105, 116, 123, 209, 210], "god": [77, 94, 223], "goe": [22, 23, 27, 30, 56, 57, 58, 93, 102, 107, 202, 205, 206, 212, 220, 226], "goku": 98, "golang": 2, "gold": [65, 76], "gomez": [0, 1, 54, 56, 69, 70], "gone": [29, 44, 67], "good": [2, 7, 17, 27, 30, 35, 36, 49, 52, 57, 60, 65, 66, 67, 70, 71, 75, 79, 89, 93, 94, 95, 99, 100, 101, 102, 103, 105, 107, 108, 109, 111, 114, 118, 119, 125, 131, 136, 145, 154, 157, 173, 179, 206, 210, 216, 230, 237], "goodboychan": [59, 61, 66, 72, 75], "goodfellow": [0, 1, 123], "goodi": 191, "googl": [56, 57, 60, 79, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 108, 117, 215], "googleapi": 62, "gorgeou": 93, "gorman": 75, "got": [52, 57, 58, 75, 88, 119, 127, 145, 213, 230], "gotcha": 234, "gotten": [52, 75], "govern": [52, 65, 67, 90, 96, 98, 218], "gpl": 93, "gpt": [54, 55, 70, 77, 95, 99, 100, 111, 115, 119, 123, 217], "gpt2": [57, 116, 117, 119], "gpt2_checkpoint_size_estimated_in_byt": 117, "gpt2_checkpoint_size_estimated_in_gb": 117, "gpt2_checkpoint_size_measured_in_byt": 117, "gpt2_checkpoint_size_measured_in_gb": 117, "gpt2_config": 117, "gpt2_flops_using_own_flops_calcul": 117, "gpt2_flops_using_palm_flops_calcul": 117, "gpt2_larg": 117, "gpt2_medium": 117, "gpt2_params_no_bia": 117, "gpt2_params_no_bias_manu": 117, "gpt2_params_with_bia": 117, "gpt2_xl": 117, "gpt2attent": 57, "gpt2block": 57, "gpt2config": 57, "gpt2forsequenceclassif": [119, 120], "gpt2lmheadmodel": [57, 116, 117], "gpt2lmheadmodel_methods_using_getmemb": 116, "gpt2mlp": 57, "gpt2model": 57, "gpt2modeltyp": 117, "gpt2pretrainedmodel": 116, "gpt2token": [119, 120], "gpt_config": 111, "gpt_larg": 57, "gpt_medium": 57, "gpt_small": 111, "gpt_small_config": [111, 113], "gpt_with_head": 57, "gpt_xl": 57, "gptbackbon": 119, "gptblock": [111, 113], "gptconfig": [111, 113, 117], "gptdecod": [57, 58, 118], "gptdecoderblock": [57, 58, 118, 119], "gptdecoderrevers": 118, "gptforsequenceclassif": 119, "gptpretrainedmodel": 119, "gpu": [56, 57, 70, 87, 88, 93, 94, 96, 103, 107, 109, 110, 111, 112, 113, 115, 116], "gpu_flop": 117, "gpu_memori": 117, "gpu_promised_flop": 117, "gpu_usag": 217, "gpumemori": 117, "grad": [101, 114, 123], "grad_accum": 117, "grad_fn": [57, 58, 123], "grad_loss": 210, "grade": 96, "gradient": [0, 1, 52, 55, 56, 58, 67, 68, 70, 73, 78, 83, 88, 95, 101, 103, 105, 114, 117, 122, 210, 217, 227], "gradient_accumul": 117, "gradient_accumulation_step": [58, 71, 116, 118, 119], "gradient_boost": 227, "gradient_checkpoint": 116, "gradient_checkpointing_dis": 116, "gradient_checkpointing_en": 116, "gradient_checkpointing_kwarg": 116, "gradientboost": 227, "gradientboostingstrategi": 227, "gradscal": 58, "gradual": [3, 47, 58, 60, 65, 107, 122], "grafana": [93, 109], "grain": [9, 62, 114, 218], "gram": [54, 56, 75], "grammar": 57, "grand": 67, "grant": 112, "granular": [58, 93, 97, 98, 129], "grape": 17, "graph": [11, 75, 76, 95, 96, 99, 114, 170], "graph_object": 126, "graphic": [52, 67, 79, 126], "graphql": 96, "grappl": 56, "grasp": [29, 32, 62, 81, 82, 105], "grayscal": [76, 96], "great": [27, 103, 108], "greater": [3, 6, 16, 27, 29, 30, 43, 47, 60, 65, 67, 83, 97, 122, 123, 162, 169, 173, 210, 216, 218, 229], "greater_is_bett": 116, "greatli": [11, 190, 221], "greedi": [57, 58, 118], "greedili": [57, 60], "greedy_search": 116, "green": [30, 62, 65, 75, 79, 82, 83, 107, 145, 170, 173, 189], "greet": [57, 93, 228], "grep": 215, "grid": [52, 53, 61, 83, 93, 96, 103, 105, 126, 127, 139, 170], "grid_gaussian_pdf": 53, "grossli": 99, "ground": [58, 60, 65, 67, 84, 118, 179], "groundwork": 29, "group": [5, 11, 18, 21, 44, 57, 58, 59, 60, 62, 67, 75, 77, 86, 89, 90, 93, 95, 99, 104, 105, 107, 108, 127, 154, 173, 210, 216, 222], "group_beam_search": 116, "group_by_length": 116, "groupanagram": 20, "groupbi": 75, "grouping_vari": 99, "groupkfold": 105, "grow": [11, 13, 17, 19, 27, 29, 30, 32, 36, 43, 57, 65, 98, 99, 122, 195, 205, 221, 225], "growth": [29, 30, 32, 57], "growth_factor": [58, 118], "growth_interv": [58, 118], "gt": [57, 58, 61, 116, 119, 123, 212, 225, 228, 234, 237], "guarante": [3, 5, 6, 27, 29, 30, 44, 56, 57, 60, 65, 67, 70, 78, 79, 90, 93, 97, 99, 123, 145, 172, 194, 203, 205, 230, 232, 237], "guard": [29, 65, 100], "guava": 97, "gucci": 74, "guess": [6, 49, 57, 58, 60, 65, 210], "gui": [58, 143], "guid": [7, 10, 28, 29, 30, 47, 62, 75, 83, 89, 93, 94, 95, 98, 100, 102, 106, 220, 234], "guidanc": [93, 220], "guidelin": [4, 65, 93, 108], "guido": [7, 10, 93], "guru": [221, 222, 227], "guru99": [11, 12], "gut": 75, "gz": [76, 113, 114], "h": [0, 1, 7, 29, 49, 50, 54, 55, 56, 57, 58, 60, 62, 64, 67, 72, 73, 86, 95, 101, 105, 111, 113, 114, 117, 118, 119, 122, 123, 129, 140, 141, 143, 146, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 180, 181, 184, 186, 197, 199, 200, 202, 203, 205, 210, 216, 237], "h2": [79, 80, 85], "h_": [56, 57, 67, 86, 113, 114, 123], "h_0": [56, 67], "h_1": [65, 67, 95], "h_2": [65, 95], "h_3": 65, "h_i": 65, "h_j": 65, "h_k": 123, "h_m": 65, "ha": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 49, 51, 53, 54, 55, 58, 60, 61, 62, 65, 67, 68, 71, 73, 75, 76, 79, 81, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 122, 123, 126, 127, 129, 131, 132, 135, 136, 139, 140, 142, 143, 145, 146, 147, 149, 157, 158, 159, 162, 163, 166, 167, 168, 169, 171, 173, 175, 179, 180, 191, 192, 194, 197, 199, 206, 209, 210, 212, 215, 217, 221, 226, 228, 229, 230, 234, 236, 237, 238], "habit": [96, 118], "hackerllama": [56, 57], "had": [43, 52, 76, 93, 114, 202], "hadamard": [52, 55, 73], "hadoop": [96, 98, 99], "haha": 58, "haitongli": 120, "haken": 16, "hal": [0, 50, 59, 60, 66, 67, 72, 73], "half": [13, 19, 20, 27, 29, 57, 58, 87, 116, 118, 122], "half_precision_backend": [71, 116, 119], "hall": 75, "hallmark": 30, "hallucin": 116, "halt": [3, 9], "halv": [20, 27, 29], "hamadard": 52, "hame": 58, "hampton": [1, 10], "han": [0, 1, 54, 56, 122], "hand": [2, 3, 5, 6, 19, 29, 44, 52, 56, 57, 58, 60, 64, 65, 67, 75, 79, 83, 93, 95, 97, 101, 105, 108, 109, 122, 123, 132, 141, 147, 157, 179, 192, 210, 212, 220], "handbook": [11, 12, 17, 18, 32, 33], "handcraft": [100, 104], "handi": [67, 216], "handl": [2, 3, 7, 9, 11, 17, 19, 27, 29, 36, 55, 56, 58, 61, 62, 65, 75, 93, 94, 96, 97, 98, 99, 100, 101, 103, 108, 116, 117, 120, 122, 212, 213, 215, 220, 221, 224, 229], "handler": [110, 111, 112, 113, 119, 120, 216, 237], "handout": 27, "handson": 52, "handwritten": [76, 95], "hang": 212, "hanin": [1, 123], "haom": 0, "happen": [2, 3, 6, 27, 32, 36, 49, 57, 61, 65, 67, 75, 76, 86, 90, 95, 99, 109, 111, 114, 118, 123, 125, 130, 131, 132, 135, 154, 179, 180, 186, 210, 212, 230, 237], "happi": 8, "happili": [2, 3, 4, 75, 102], "har": [56, 215], "hard": [4, 6, 29, 59, 60, 67, 75, 76, 93, 116, 120, 145, 179, 216, 218, 235], "hard_loss": 120, "hardcod": [58, 93, 216], "hardcor": 115, "harder": [5, 75, 114, 125], "hardwar": [94, 96, 103, 107, 108, 109, 117], "harm": [100, 102], "harmless": 93, "harmon": 102, "harri": 97, "harsh": 65, "harvard": [56, 57], "has_coincid": 127, "has_dupl": [127, 238], "has_intercept": 68, "hasattr": [2, 57, 58, 74, 111, 113, 116, 119, 226, 233], "hash": [13, 43, 44, 60, 77, 99, 103, 238], "hash_map": 17, "hash_val": 221, "hashabl": 238, "hashlib": 221, "hashmap": [17, 19, 43], "hashtag": [92, 94], "hasn": [9, 44, 93, 105, 106, 116], "hassl": 225, "hasti": [0, 59, 60, 66, 67, 72, 73], "hat": [49, 50, 52, 55, 56, 57, 60, 62, 63, 64, 65, 67, 70, 73, 75, 76, 79, 86, 95, 123, 177, 179, 181, 194, 210], "hate": 93, "have": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 145, 146, 147, 149, 152, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 187, 188, 189, 191, 192, 195, 197, 198, 199, 200, 202, 205, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 238], "haven": [75, 109], "hazard": 108, "hazi": [97, 157, 180], "hdf": [96, 98], "he": [0, 1, 26, 52, 54, 56, 57, 60, 67, 73, 92, 93, 97, 98, 117, 122, 142, 157, 168], "head": [56, 58, 65, 67, 71, 75, 81, 82, 88, 103, 111, 113, 117, 119, 123, 129, 130, 136, 143, 147, 210], "head_attent": 57, "head_bia": 119, "head_nod": 89, "head_node_ip": 89, "head_siz": 117, "header": [62, 98, 117, 157, 216], "headnod": 89, "headphon": 30, "health": [93, 96, 98, 99], "healthcar": [94, 95, 96, 102], "healthi": [102, 179], "heap": [29, 30], "hear": 57, "heart": [27, 75, 79, 95, 194], "heat": [93, 228], "heatmap": [67, 126], "heaven": 93, "heavi": [16, 65, 215], "heavili": [30, 57, 58, 67, 97, 117, 216, 228], "hei": 118, "height": [27, 32, 52, 62, 67, 76, 125, 142, 152, 157, 158, 171, 173, 175, 195], "held": [95, 105, 107, 212, 230], "hell": 57, "hello": [3, 5, 6, 57, 93, 228, 232, 237], "helmet": [93, 95], "help": [4, 7, 10, 11, 19, 29, 30, 35, 36, 43, 47, 55, 56, 57, 58, 60, 62, 65, 67, 73, 75, 81, 86, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 114, 117, 122, 123, 126, 173, 206, 216, 230], "helper": [58, 61, 229], "helpsheet": 67, "hematoxylin": 62, "henc": [2, 11, 13, 19, 27, 29, 43, 44, 52, 56, 57, 58, 60, 61, 65, 67, 73, 75, 76, 82, 83, 86, 90, 93, 113, 117, 120, 122, 123, 129, 130, 132, 143, 173, 179, 192, 195, 212, 226, 236], "henceforth": [93, 173], "her": [29, 101, 108], "here": [2, 3, 4, 5, 7, 8, 9, 11, 13, 16, 19, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 129, 131, 132, 133, 135, 136, 138, 139, 140, 142, 143, 145, 146, 152, 157, 158, 161, 163, 166, 170, 173, 180, 182, 187, 199, 202, 205, 206, 210, 212, 215, 216, 217, 221, 226, 227, 233, 234, 236, 237], "herman": 202, "hestain": 62, "heterogen": 95, "heteroscedast": 67, "heurist": [56, 58, 60, 101, 122], "hexdigest": 221, "hh": [99, 136, 138, 216], "hhhthtthhhhht": 210, "hhttthh": 210, "hi": [3, 6, 57, 58, 72, 73, 117, 180, 202, 236], "hidden": [3, 46, 52, 55, 56, 57, 70, 73, 118, 119], "hidden_s": 57, "hide": 179, "hierarch": [6, 51, 216], "hierarchi": [4, 216], "high": [13, 17, 27, 29, 30, 43, 44, 52, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 75, 83, 86, 88, 89, 93, 94, 95, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 117, 122, 123, 126, 127, 154, 159, 170, 178, 187, 189, 195, 210, 212, 215, 221, 229], "higher": [11, 29, 30, 56, 58, 62, 65, 67, 70, 75, 79, 86, 93, 94, 95, 96, 101, 102, 117, 120, 123, 162, 173, 176, 177, 179, 215, 238], "highest": [13, 19, 30, 43, 52, 57, 61, 75, 93, 122, 123, 155, 210], "highli": [17, 29, 56, 57, 60, 65, 67, 97, 98, 99, 100, 101, 105, 126, 180, 202, 212], "highlight": [5, 30, 52, 56, 57, 61, 78, 83, 102, 104, 105, 114, 116, 123, 216], "hilbert": [0, 83], "hill": [65, 72, 73, 75], "him": [22, 57, 179], "himself": 117, "hing": [56, 58, 67, 78, 157], "hint": [3, 4, 5, 6, 7, 8, 10, 32, 93, 111, 113, 116, 212, 216, 220], "hinton": [52, 120], "hipaa": 98, "hist": [52, 75, 142, 145, 147, 155, 158, 170, 173], "histogram": [0, 52, 67, 75, 109, 143, 146, 154, 155, 159, 171, 173, 206], "histor": [30, 65, 93, 108, 145], "histori": [32, 56, 57, 58, 68, 93, 94, 95, 97, 108, 114, 118, 217], "histplot": [75, 173], "hit": [27, 65, 71, 101, 179, 212], "hiv": 179, "hline": [55, 57, 109, 126, 180, 189, 199], "hn": 68, "hobbit": 97, "hoc": [58, 76, 99], "hoef": 65, "hoefd": 65, "hold": [2, 4, 5, 7, 11, 16, 26, 27, 29, 30, 36, 44, 52, 57, 64, 65, 67, 73, 75, 78, 79, 82, 83, 84, 88, 93, 97, 101, 123, 152, 154, 157, 158, 162, 163, 175, 180, 185, 187, 202, 206, 210, 212, 218, 220, 224, 226, 229, 234], "holdout": [56, 92, 101, 106], "holdout_perform": 217, "holm": 97, "home": [58, 65, 67, 75, 89, 116, 127, 143, 158, 168, 169, 173, 189, 206, 210], "home_dir": 99, "homebrew": [61, 229, 230], "homogen": [83, 95, 102], "honestli": [90, 95], "hongnan": [56, 58, 68, 81, 82, 88, 90, 157], "hood": [111, 212, 216, 233, 237], "hook": 88, "hop": 97, "hope": [52, 101, 202, 210], "horizont": [81, 83, 98, 206], "horizontal_component_v": 83, "horribli": 76, "hors": 56, "horst": 75, "hospit": [94, 180], "hossein": [0, 140, 141, 167, 168, 169, 172, 173, 197, 199, 200, 202, 203, 205], "host": [27, 57, 93, 108, 216, 224, 226], "host_nam": [113, 114], "hostedtoolcach": [57, 116, 117, 122, 225], "hostnam": [88, 89, 90], "hot": [52, 73, 98, 100, 108, 123], "hot_potato": 26, "hour": [29, 56, 57, 93, 95, 100, 108, 149, 154], "hous": [56, 67, 79, 86, 95], "hover": 126, "how": [3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 26, 27, 29, 30, 32, 36, 43, 46, 47, 48, 52, 55, 56, 57, 58, 62, 65, 67, 70, 71, 73, 75, 76, 77, 79, 81, 82, 83, 84, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 115, 121, 122, 123, 124, 125, 127, 132, 136, 141, 142, 143, 145, 147, 157, 158, 164, 165, 166, 168, 173, 178, 179, 181, 194, 202, 206, 210, 211, 215, 216, 217, 218, 220, 222, 226, 230, 235, 237, 238], "how_many_l": [2, 3], "how_to": 120, "howev": [2, 3, 4, 5, 6, 7, 9, 11, 13, 17, 19, 27, 29, 30, 32, 36, 43, 44, 46, 49, 52, 55, 56, 57, 58, 59, 60, 61, 62, 65, 67, 70, 73, 75, 76, 79, 82, 83, 84, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 114, 116, 117, 118, 119, 122, 123, 126, 129, 136, 142, 157, 161, 169, 182, 189, 190, 191, 194, 206, 210, 212, 213, 215, 216, 217, 218, 220, 232, 234, 237, 238], "hpc": [89, 98], "hspace": 57, "hstack": 67, "ht": [136, 138], "htan": 88, "htm": 222, "html": [0, 7, 22, 23, 52, 61, 62, 65, 70, 71, 73, 75, 76, 91, 93, 96, 98, 113, 114, 120, 142, 157, 169, 210, 215, 225, 228, 233, 237], "htod": 112, "http": [0, 7, 22, 23, 36, 52, 57, 58, 62, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 89, 91, 93, 96, 111, 113, 114, 117, 119, 120, 125, 127, 142, 145, 147, 157, 169, 184, 192, 193, 213, 215, 216, 221, 222, 225, 228, 230, 233, 234, 236, 237], "hu": [0, 57, 69, 70], "hub": [99, 116], "hub_always_push": 116, "hub_model_id": 116, "hub_private_repo": 116, "hub_strategi": 116, "hub_token": 116, "hubstrategi": 116, "hudi": 98, "hue": 75, "hug": [56, 69], "huge": [57, 70, 101, 238], "huggingfac": [71, 95, 120, 122], "huggingface_hub": [57, 117], "human": [56, 76, 93, 95, 96, 99, 108], "humid": 96, "hundr": 210, "hurdl": [75, 129], "hurt": 65, "hutter": [0, 1, 54, 56, 58, 122], "huyen": [59, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109], "hybrid": [96, 98, 99], "hydra": [57, 77, 212, 219], "hydra_config": 216, "hydra_config_group": 216, "hydra_help": 216, "hydra_log": 216, "hydra_pydantic_config_manag": 216, "hydra_to_pydant": 216, "hydraconfig": 216, "hype": [97, 99], "hyper": 116, "hypermodern": 93, "hyperparamet": [53, 57, 70, 92, 95, 104, 106, 120, 122, 216, 218, 222], "hyperparameter_search": 116, "hyperplan": [65, 67, 73], "hypotenus": 83, "hypothes": [17, 49, 65, 67, 70, 86], "hypothesi": [27, 30, 49, 50, 56, 64, 70, 86, 93, 95, 100, 101, 105], "hypothet": [5, 7, 27, 52, 93, 94], "h\u00f6lder": 101, "i": [0, 1, 3, 6, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 39, 40, 44, 45, 46, 48, 50, 51, 53, 54, 58, 59, 61, 62, 63, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 86, 87, 88, 90, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198, 201, 203, 204, 205, 206, 209, 211, 213, 216, 217, 218, 220, 221, 222, 224, 225, 227, 229, 231, 234, 236, 238], "i1": [55, 79], "i2": [55, 79], "ian": 0, "ibm": 93, "ic": [1, 10], "iceberg": 97, "icl": 75, "id": [5, 17, 30, 57, 87, 88, 95, 97, 108, 111, 112, 113, 118, 119, 216, 226, 230, 236, 237], "id2label": [71, 119], "idea": [2, 9, 22, 23, 27, 29, 35, 36, 48, 49, 52, 55, 57, 58, 60, 67, 69, 70, 73, 75, 81, 88, 89, 93, 95, 97, 99, 100, 103, 105, 119, 122, 130, 131, 145, 154, 155, 157, 158, 173, 202, 215, 216, 226, 230, 238], "ideal": [5, 8, 29, 30, 32, 36, 49, 58, 67, 79, 86, 93, 96, 97, 98, 102, 108, 117, 129, 213, 215], "idempot": 7, "idenf": 89, "ident": [52, 56, 58, 67, 77, 78, 81, 83, 93, 95, 97, 116, 123, 125, 145, 147, 153, 157, 158, 166, 185, 190, 191, 200, 209, 232], "identif": [5, 94, 125], "identifi": [5, 17, 28, 29, 47, 52, 56, 57, 60, 62, 81, 84, 87, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 117, 221], "idf": [95, 100], "idiomat": 79, "idl": [89, 215], "idx": [57, 120, 212, 221], "idx1": 76, "idx3": 76, "ieee": 77, "iff": [27, 60, 65, 67, 73, 83, 132, 192, 210], "ignor": [4, 5, 7, 8, 13, 19, 29, 43, 52, 57, 61, 67, 68, 73, 74, 75, 76, 88, 90, 93, 111, 113, 118, 119, 122, 139, 142, 145, 147, 155, 158, 167, 216, 237], "ignore_data_skip": 116, "ignore_index": [57, 58, 118], "igw": 89, "igw_id": 89, "ii": [39, 40, 45, 67, 76, 77, 93], "iid": [49, 52, 57, 65, 75, 77, 86, 105, 123, 145, 153, 157, 183, 205], "iii": [0, 49, 50, 59, 60, 66, 67, 72, 73], "iinfo": 70, "ij": [55, 79, 84, 117, 123], "ik": [55, 117], "ill": [58, 84, 122], "illia": 0, "illumin": 29, "illustr": [2, 4, 5, 7, 9, 11, 17, 27, 29, 32, 46, 52, 56, 57, 65, 67, 70, 73, 75, 78, 79, 81, 82, 83, 84, 93, 94, 98, 102, 109, 122, 125, 126, 130, 131, 132, 158, 172, 182, 202, 210, 212, 230], "iloc": [75, 96], "ilya": 0, "imag": [16, 27, 29, 52, 56, 57, 58, 59, 65, 70, 73, 75, 76, 77, 79, 83, 84, 89, 92, 93, 94, 95, 96, 97, 98, 100, 101, 105, 108, 109, 114, 118, 122, 125, 133, 173, 175, 187, 189, 192, 195, 202, 209, 212, 215, 216, 220], "image_classif": 95, "image_classification_transform": 220, "image_path": 62, "image_s": [216, 218], "image_segmentation_transform": 220, "image_shap": 62, "image_size_in_bit": 62, "image_url": 96, "imagecaptioningtransform": 220, "imageclassif": 220, "imageclassificationtransform": 220, "imagedatasetload": 93, "imagenet": 187, "imageri": [59, 61], "imagesegment": 220, "imagesegmentationtransform": 220, "imagin": [2, 29, 32, 44, 57, 60, 65, 67, 73, 75, 76, 79, 88, 93, 97, 99, 100, 108, 132, 143, 145, 157, 158, 179, 195, 197], "imbalanc": [100, 102, 105], "imdb": 98, "img": 76, "immedi": [6, 8, 11, 27, 30, 35, 56, 67, 79, 93, 99, 100, 102, 108, 116, 129, 130, 131, 132, 173, 175, 177, 192, 194, 200, 212], "immut": [9, 57, 58, 88, 99, 238], "immutablelist": 7, "impact": [57, 58, 67, 70, 83, 94, 98, 99, 101, 102, 103, 105, 107, 108, 122, 123, 127, 143, 168, 169, 173, 189, 206, 210, 215, 221], "impend": 93, "imper": 30, "implement": [1, 3, 4, 5, 6, 7, 9, 10, 11, 17, 33, 38, 47, 49, 51, 52, 54, 55, 60, 66, 69, 73, 76, 77, 92, 93, 94, 97, 98, 99, 101, 107, 108, 111, 113, 118, 148, 153, 156, 213, 215, 216, 217, 220, 225, 226, 227, 228, 229, 232, 233, 236, 238], "implementingadequeinpython": 23, "impli": [2, 3, 5, 6, 7, 11, 27, 29, 30, 35, 43, 52, 56, 57, 60, 65, 67, 70, 73, 75, 81, 82, 83, 84, 87, 100, 101, 117, 123, 129, 157, 173, 177, 179, 217, 229], "implic": [3, 56, 65, 82, 84, 93, 94, 96, 102, 125, 215], "implicit": [2, 6, 29, 55, 56, 57, 58, 70, 73, 114, 194, 210], "implicitli": [2, 29, 56, 60, 73, 88, 93, 118, 190, 212], "import": [2, 3, 4, 5, 6, 7, 9, 11, 13, 17, 19, 20, 22, 23, 29, 30, 34, 35, 36, 37, 43, 44, 46, 49, 52, 53, 55, 56, 57, 58, 60, 62, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 126, 127, 129, 135, 136, 139, 142, 143, 145, 146, 147, 149, 152, 153, 154, 155, 158, 167, 168, 169, 170, 171, 177, 180, 181, 187, 188, 189, 198, 203, 206, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238], "importantli": [104, 123], "importerror": [36, 53, 57, 58, 61, 62, 74, 127, 142, 210], "impos": [7, 29, 101], "imposs": [3, 29, 65, 78, 210], "impract": 5, "impress": 27, "improp": 11, "improperli": [116, 222], "improv": [0, 1, 11, 13, 17, 27, 29, 30, 43, 53, 54, 55, 56, 57, 58, 60, 63, 65, 67, 75, 92, 94, 95, 96, 97, 98, 100, 101, 103, 105, 107, 108, 116, 120, 122, 123, 145, 179, 201, 204, 212, 218, 221], "impuls": [75, 175], "imread": 62, "imshow": [57, 62, 76], "in_chan": [216, 218], "in_channel": [216, 218], "in_dim": 71, "in_featur": [57, 58, 70, 71, 111, 113, 118, 119, 216], "in_indic": [111, 113], "in_jupyt": 57, "in_out_error_diff": 65, "in_proj_weight": 58, "inabl": 216, "inaccur": [67, 100, 112, 123], "inact": 237, "inadmiss": 16, "inadvert": [56, 57, 93, 99, 235], "inappropri": 100, "inc": [59, 60, 67, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109, 114], "incid": 93, "inclin": 79, "includ": [2, 3, 4, 5, 6, 10, 13, 16, 19, 20, 27, 29, 30, 32, 36, 43, 46, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 71, 75, 78, 79, 83, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 123, 173, 174, 178, 202, 210, 212, 215, 217, 218, 220, 224], "include_bas": 116, "include_bia": 117, "include_extra": 116, "include_inputs_for_metr": 116, "include_num_input_tokens_seen": 116, "include_self": 116, "include_tokens_per_second": 116, "inclus": [27, 62, 67, 127, 173, 210], "incom": [36, 93, 95, 108, 109, 111, 113], "incompat": [3, 5, 7, 8, 32, 113, 119], "incomplet": [58, 98, 123], "inconsist": [75, 79, 93, 97, 98, 99, 230], "incorpor": [30, 55, 56, 84, 95, 108, 115, 213, 224], "incorrect": [2, 5, 7, 67, 76, 93, 100, 102, 230, 235], "incorrect_pair": 5, "incorrectli": [5, 65, 94, 102, 230], "increas": [7, 11, 13, 17, 29, 32, 43, 47, 52, 55, 56, 57, 58, 60, 63, 65, 67, 70, 76, 82, 93, 94, 95, 96, 100, 102, 103, 108, 114, 122, 123, 127, 140, 143, 145, 163, 168, 169, 172, 173, 179, 189, 201, 204, 205, 206, 217, 229, 230], "increasingli": [11, 57, 58, 67, 103, 224], "incredibli": 11, "increment": [11, 29, 30, 43, 44, 46, 47, 61, 70, 98, 99, 125, 212, 213, 215, 217, 230], "incur": [49, 58, 94, 215], "ind": 75, "inde": [2, 4, 5, 7, 8, 27, 30, 32, 43, 49, 52, 56, 57, 58, 60, 65, 67, 73, 75, 79, 83, 89, 101, 102, 108, 117, 119, 123, 124, 126, 127, 135, 136, 142, 147, 179, 180, 189, 190, 192, 206, 210, 222, 230], "indefinit": [9, 212, 230], "indent": [88, 90, 93, 111], "indeped": [58, 73, 209], "independ": [6, 11, 17, 19, 49, 50, 56, 62, 66, 67, 70, 76, 77, 87, 90, 93, 102, 117, 123, 124, 125, 126, 134, 142, 143, 145, 146, 147, 148, 153, 157, 179, 183, 185, 189, 197, 199, 206, 215, 220, 222, 227], "indepened": 146, "index": [0, 7, 8, 11, 17, 19, 27, 30, 32, 41, 43, 44, 46, 47, 52, 57, 60, 61, 62, 65, 70, 73, 74, 84, 86, 87, 88, 89, 97, 98, 102, 118, 119, 123, 127, 133, 135, 142, 145, 147, 152, 157, 206, 212, 213, 215, 216, 217, 220, 228, 230], "index1": [43, 47], "index2": [43, 47], "index_select": 113, "index_to_token": 58, "indexerror": [11, 36], "indic": [2, 3, 4, 5, 9, 11, 13, 19, 27, 29, 30, 36, 43, 44, 46, 47, 50, 52, 55, 57, 58, 60, 61, 62, 65, 67, 68, 70, 73, 75, 81, 82, 84, 86, 93, 94, 95, 100, 102, 103, 107, 108, 109, 112, 118, 120, 123, 125, 127, 149, 167, 168, 169, 179, 183, 189, 191, 206, 212, 216, 226], "indices_logit": 123, "indices_prob": 123, "indices_to_remov": 57, "indirect": [56, 93], "indiscern": 83, "indiscrimin": 5, "indispens": 83, "indistinguish": 212, "individu": [11, 19, 29, 32, 36, 52, 55, 57, 58, 65, 67, 73, 75, 79, 84, 86, 93, 95, 96, 97, 99, 101, 108, 109, 117, 122, 123, 125, 154, 175, 187, 190, 210], "individual_test": [27, 29, 30], "indonesian": 98, "induc": [56, 57, 60, 63, 65, 83, 123], "induct": [27, 44, 76], "industri": [93, 94, 96, 98, 99], "ineffect": 94, "ineffici": [5, 11, 19, 29, 36, 57, 94, 96, 100, 117, 212, 215, 229, 230, 235], "inequ": [7, 29, 60, 63, 67, 77, 83, 208], "inertia": 61, "inertia_": 61, "inevit": [17, 70, 93], "inf": [9, 34, 46, 53, 55, 57, 58, 60, 61, 111, 113, 118], "infam": 67, "infeas": [65, 73, 126], "infer": [5, 8, 57, 65, 71, 93, 94, 95, 97, 99, 101, 107, 117, 119, 120, 123, 158, 217, 237], "inferenc": [142, 147], "inferentialthink": 157, "infin": [2, 36, 55, 56, 123, 157, 206], "infinit": [60, 67, 68, 86, 89, 108, 125, 161, 173, 183], "infinite_sequ": 212, "infinitesim": [65, 75, 173], "inflat": 67, "influenc": [55, 57, 65, 67, 83, 93, 94, 95, 96, 101, 132, 143, 146, 218], "influenci": 57, "influenti": [100, 103], "info": [5, 52, 53, 57, 58, 61, 67, 68, 74, 75, 88, 89, 90, 99, 110, 111, 112, 113, 114, 118, 119, 120, 213, 215, 216, 230, 237], "inform": [0, 1, 3, 5, 8, 10, 19, 20, 27, 29, 30, 32, 36, 43, 44, 47, 49, 52, 54, 55, 56, 57, 58, 60, 62, 65, 67, 69, 70, 75, 78, 87, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 114, 116, 117, 118, 119, 123, 125, 129, 130, 131, 173, 192, 202, 216, 218, 233, 237], "infrastructur": [99, 100, 107, 108, 109], "infrequ": 32, "infti": [2, 29, 36, 55, 57, 65, 73, 86, 118, 123, 125, 129, 130, 139, 140, 150, 154, 163, 164, 165, 166, 169, 173, 175, 177, 179, 180, 182, 183, 185, 187, 197, 199, 200, 205], "ing": 57, "ingest": [67, 99, 109], "ingrain": [83, 93], "ingredi": [52, 79, 228], "inher": [2, 3, 4, 8, 29, 30, 36, 43, 44, 55, 56, 57, 67, 70, 84, 93, 94, 96, 97], "inherit": [2, 3, 4, 5, 6, 32, 57, 71, 93, 99, 116, 119, 216, 227, 228], "ini_opt": 93, "init": [25, 26, 35, 37, 53, 57, 61, 62, 71, 77, 88, 89, 93, 111, 113, 118, 119, 231], "init_bodi": 116, "init_hf_repo": 116, "init_method": [58, 88, 90, 118], "init_param": 116, "init_process": [88, 90], "init_process_group": 88, "init_scal": [58, 118], "init_weight": 116, "initi": [11, 17, 19, 20, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 53, 55, 57, 60, 61, 63, 65, 68, 69, 70, 71, 79, 94, 95, 99, 100, 101, 103, 105, 107, 109, 114, 116, 118, 119, 120, 122, 123, 136, 147, 149, 206, 210, 212, 213, 216, 218, 226, 227, 230, 235], "initial_lr": [58, 122], "initialize_model": [111, 113], "initializer_rang": 57, "inject": [5, 70, 88, 212, 216, 222], "injector": 93, "inlin": [7, 76, 126, 142, 145, 147, 155, 158, 189, 210], "inlinebackend": [142, 210], "inner": [13, 55, 56, 83, 116, 177, 234, 237], "inner_dim": 57, "inner_typ": 237, "innov": [36, 56], "inord": 27, "inplac": [57, 58, 71, 75, 111, 113, 118, 119], "input": [4, 6, 7, 8, 9, 16, 26, 35, 36, 39, 40, 45, 46, 49, 52, 53, 60, 62, 65, 66, 68, 70, 71, 73, 76, 77, 83, 86, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 126, 158, 172, 181, 190, 209, 210, 215, 221, 234, 237], "input_id": [71, 118, 119, 120], "input_larg": 123, "input_layernorm": 71, "input_sequ": 58, "input_smal": 123, "input_token": [57, 58, 119], "input_typ": 237, "input_valu": 237, "inputs_pad": 58, "insecur": 93, "insert": [7, 17, 22, 23, 26, 27, 32, 36, 68, 93, 229, 238], "insid": [13, 19, 26, 35, 43, 65, 75, 93, 99, 115, 122, 173, 175, 212, 216, 217, 220, 226, 227, 235], "insight": [9, 29, 30, 56, 57, 79, 82, 84, 86, 88, 92, 95, 99, 100, 101, 103, 105, 106, 108, 109, 117, 123, 179, 217], "insignific": 67, "inspect": [13, 19, 30, 43, 58, 60, 67, 77, 79, 89, 93, 129, 212, 229], "inspector": 58, "inspir": [5, 9, 57, 58, 117, 122, 216, 217], "instabl": [55, 56, 70], "instagram": 95, "instal": [52, 71, 76, 89, 93, 99, 100, 103, 110, 111, 112, 113, 114, 118, 119, 120], "instanc": [2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 27, 30, 32, 36, 49, 53, 55, 56, 57, 58, 60, 61, 67, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 84, 87, 88, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 107, 108, 112, 114, 123, 129, 154, 210, 215, 216, 217, 218, 220, 221, 224, 225, 226, 232, 233, 236, 237], "instance_attr": 116, "instance_child": 116, "instance_child_all_memb": 116, "instance_method": 116, "instance_not_in_constructor_attr": 116, "instance_par": 116, "instanceid": 89, "instancetyp": 89, "instanti": [5, 6, 7, 32, 35, 52, 57, 58, 62, 67, 93, 116, 218, 220, 221, 225, 226], "instantli": [29, 108], "instead": [2, 3, 5, 7, 11, 17, 27, 29, 32, 35, 36, 43, 48, 49, 52, 53, 55, 56, 57, 58, 60, 61, 65, 67, 68, 70, 71, 73, 75, 76, 79, 88, 93, 97, 98, 99, 100, 101, 105, 108, 116, 118, 119, 123, 126, 127, 132, 136, 139, 146, 162, 164, 179, 183, 198, 210, 212, 216, 218, 220, 227, 229, 230, 234, 235, 238], "instinct": 29, "institut": [1, 10, 57, 93], "instrospect": 228, "instruct": [93, 97, 212, 215, 228], "instructgpt": [56, 57], "insuffici": [29, 93], "int": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 22, 23, 26, 27, 29, 30, 32, 34, 36, 41, 43, 44, 46, 52, 53, 57, 58, 61, 62, 68, 70, 71, 74, 75, 76, 88, 90, 93, 97, 103, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 147, 170, 173, 187, 206, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 225, 228, 229, 230, 233, 234, 237, 238], "int32": [58, 61, 76, 93, 96], "int64": [27, 57, 58, 61, 75], "int_": [49, 73, 86, 125, 162, 163, 164, 165, 166, 169, 175, 177, 179, 180, 182, 185, 187, 197, 199], "int_0": [125, 166, 169], "int_a": [125, 161, 162, 169, 173, 175], "int_c": [166, 175], "int_pars": 237, "int_valu": 2, "int_x": 173, "integ": [3, 5, 7, 8, 11, 13, 17, 19, 27, 29, 30, 32, 36, 43, 44, 46, 47, 52, 53, 55, 57, 58, 61, 67, 76, 78, 81, 88, 93, 96, 97, 118, 127, 154, 171, 199, 206, 212, 216, 232, 237], "integr": [3, 4, 49, 52, 55, 56, 57, 73, 75, 77, 78, 86, 92, 94, 95, 97, 98, 99, 103, 107, 116, 162, 163, 164, 165, 167, 168, 169, 173, 175, 179, 180, 185, 187, 215, 216], "integrand": 49, "intellig": [6, 70, 92, 93, 100], "intend": [5, 9, 30, 58, 67, 75, 93, 94, 99, 122, 235], "intens": [62, 92, 93, 94, 95, 96, 97, 99, 100, 101, 108, 215, 230], "intent": [9, 30, 56, 79, 212], "intention": [9, 95], "intenum": 117, "inter": [87, 215], "inter_param": 58, "interact": [0, 2, 27, 56, 57, 67, 82, 84, 93, 94, 97, 98, 99, 100, 108, 114, 116, 118, 155, 172, 212, 216, 221], "interactiveshel": 116, "interc": [187, 190, 192], "intercept": [65, 67, 68, 79], "intercept_": [67, 68], "interchang": [6, 27, 30, 57, 83, 86, 87, 96, 117, 125, 221], "interclass": 86, "interconnect": 97, "interdepend": 52, "interest": [6, 9, 13, 17, 19, 29, 43, 52, 56, 57, 60, 67, 73, 86, 94, 95, 97, 98, 105, 106, 108, 111, 113, 123, 129, 135, 142, 170, 171, 173, 180, 184, 203, 210], "interestingli": [65, 93, 180], "interf": 97, "interfac": [2, 3, 5, 6, 8, 89, 94, 99, 216, 220, 224, 227], "interface_id": 89, "interfer": [215, 217], "intermedi": [5, 27, 55, 57, 91, 98, 99, 117, 229], "intern": [2, 5, 17, 55, 56, 57, 65, 71, 75, 93, 97, 98, 99, 114, 116, 120, 212, 232, 236, 237], "internet": [56, 76, 89, 108, 215], "internetgatewai": 89, "internetgatewayid": 89, "interoper": [3, 99], "interplai": 29, "interpol": 216, "interpret": [0, 4, 30, 52, 56, 57, 58, 60, 66, 67, 75, 77, 81, 83, 86, 93, 95, 96, 102, 106, 109, 114, 115, 122, 125, 129, 157, 173, 180, 199, 210, 231], "interrel": 95, "interrupt": [93, 116, 212, 213, 215], "intersect": [52, 60, 79, 100, 131, 132], "intertia": 61, "intertwin": 125, "interv": [11, 27, 29, 52, 57, 58, 65, 93, 96, 99, 100, 108, 109, 114, 122, 123, 125, 137, 149, 154, 156, 167, 173, 197, 202, 206], "interva": 173, "intervalstrategi": 116, "interview": [12, 18, 32, 33, 59, 63, 67, 92, 95, 99], "intpair": 5, "intra": [60, 87], "intraclass": 86, "intract": [27, 29, 73, 76], "intric": [55, 57, 70], "intricaci": [17, 52], "intrins": [55, 56, 79, 81], "intro": [0, 157, 215], "introduc": [7, 9, 27, 29, 30, 51, 52, 55, 56, 57, 58, 65, 73, 76, 84, 93, 99, 117, 119, 122, 123, 151, 174, 175, 177, 202, 207, 208, 209, 210, 212, 215, 220, 221, 222, 227], "introduct": [0, 33, 52, 59, 60, 62, 66, 67, 72, 73, 75, 77, 79, 83, 84, 92, 93, 125, 138, 140, 141, 143, 146, 149, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 186, 197, 199, 200, 202, 203, 205, 210, 214], "introductori": [84, 115], "introspect": 116, "intuit": [6, 7, 17, 56, 58, 63, 70, 73, 75, 78, 79, 82, 88, 97, 99, 101, 104, 111, 123, 129, 130, 135, 141, 142, 143, 149, 157, 162, 168, 171, 173, 179, 183, 190, 194, 201, 204, 228, 230], "intuitiveml": 66, "intuiton": 173, "intvalu": 5, "inv": [67, 68, 126], "invalid": [5, 6, 35, 53, 61, 89, 111, 220, 227, 237], "invalid_d": 237, "invari": [10, 27, 29, 44, 77, 83, 125], "inventori": 108, "invers": [5, 17, 67, 68, 77, 78, 100, 123, 172, 194, 209, 216, 218, 223], "invert": [67, 172, 191, 194, 220], "invert_attention_mask": 116, "invest": [17, 145], "investig": [65, 95], "invit": 93, "invoc": [6, 234], "invok": [5, 6, 8, 60, 65, 67, 73, 90, 112, 114, 116, 149, 179, 216, 221, 228, 234], "involv": [2, 11, 13, 17, 19, 29, 30, 36, 43, 44, 46, 47, 52, 55, 56, 57, 58, 67, 73, 74, 82, 83, 84, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 117, 118, 123, 129, 179, 194, 215, 218, 220, 221], "inward": 47, "inx": 75, "io": [0, 7, 66, 75, 94, 114, 120, 142, 169, 193, 215, 225, 228, 229, 237], "io_bound_task": 230, "iostream": 229, "iot": [94, 96, 98], "ip": [55, 88, 89, 93], "ipc": 215, "ipex_optimize_model": 116, "ipkernelapp": 57, "ipu": 116, "ipykernel": [116, 229], "ipykernel_2820": 68, "ipykernel_3079": 116, "ipykernel_41702": 229, "ipython": [36, 57, 116, 118, 142, 210], "ipywidget": [76, 155], "iq": 93, "ir": 69, "iri": [74, 75], "ironpython": 215, "irregardless": 4, "irrelev": [81, 93, 95, 98, 117, 129], "irrespect": [2, 43, 57, 79, 81], "irrespons": 101, "is_act": 237, "is_al": 215, "is_async": 112, "is_avail": [71, 88, 110, 111, 112, 113, 114, 119, 120], "is_bf16_support": 111, "is_empti": [22, 23, 32, 34, 35, 36, 37], "is_fast": 119, "is_fit": 74, "is_flyabl": 2, "is_free_port": [88, 90], "is_in_train": 116, "is_legaci": 112, "is_local_process_zero": 116, "is_model_parallel": 116, "is_police_dog_instance_of_anim": 4, "is_police_dog_instance_of_dog": 4, "is_prim": 215, "is_remot": 112, "is_stack_empti": 36, "is_stag": 99, "is_valid": 99, "is_valid_parenthes": 35, "is_world_process_zero": 116, "isalpha": 221, "isarithm": 126, "isbn": 0, "isbuiltin": 116, "isclos": 4, "iscoroutinefunct": 229, "isfunct": [116, 229], "isgener": 212, "isin": 111, "isinst": [2, 4, 8, 9, 57, 58, 71, 75, 111, 113, 118, 119, 122, 212, 217, 220, 226, 229, 233, 236, 237], "island": 75, "ismail": 65, "ismethod": [116, 229], "ismethoddescriptor": 116, "isn": [3, 7, 29, 56, 57, 58, 67, 75, 93, 96, 97, 100, 101, 108, 109, 210, 227, 232], "isnul": 75, "isol": [67, 87, 93, 162, 215, 227], "isolin": 126, "isopleth": 126, "isort": 93, "isoton": 102, "isotrop": 60, "isqrt": 215, "isroutin": 116, "issu": [2, 3, 5, 6, 7, 9, 19, 27, 29, 43, 56, 57, 58, 60, 65, 67, 71, 74, 76, 94, 98, 99, 100, 101, 103, 105, 108, 113, 116, 117, 118, 119, 120, 123, 141, 212, 213, 215, 216, 220, 228, 233, 237], "issubclass": [58, 225, 228, 233, 237], "issubset": 127, "item": [5, 7, 11, 13, 17, 19, 20, 22, 23, 30, 32, 49, 57, 58, 61, 76, 83, 93, 97, 108, 111, 116, 117, 118, 119, 120, 123, 212, 216, 217, 220, 228, 229, 233, 235, 237], "item_54": [213, 230], "item_sep": 216, "item_to_check": 17, "item_typ": 237, "iter": [3, 7, 13, 16, 19, 20, 22, 26, 32, 35, 43, 44, 46, 52, 53, 57, 58, 60, 61, 62, 63, 65, 67, 70, 77, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 122, 210, 229, 231, 234], "iter_": 53, "iter_cont": 57, "iterabledataset": 116, "iterativebinarysearchexactmatch": 27, "itertool": [52, 111], "ito": 55, "its": [2, 4, 5, 6, 7, 9, 10, 11, 16, 17, 19, 20, 27, 29, 30, 32, 35, 36, 43, 44, 47, 48, 49, 55, 56, 57, 58, 60, 61, 62, 65, 67, 69, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 116, 117, 118, 122, 123, 125, 130, 136, 138, 142, 146, 147, 154, 157, 159, 161, 162, 163, 165, 173, 174, 177, 189, 190, 192, 194, 198, 199, 202, 205, 210, 212, 213, 215, 216, 218, 220, 221, 227, 230, 234, 235, 236, 238], "itself": [2, 4, 5, 6, 9, 16, 17, 20, 27, 29, 30, 36, 43, 46, 52, 55, 56, 57, 58, 60, 61, 65, 66, 67, 70, 76, 81, 83, 84, 93, 94, 95, 98, 108, 112, 117, 118, 123, 133, 135, 182, 185, 191, 205, 206, 210, 212, 218, 220, 221, 234, 236], "ivan": 10, "iwslt": [58, 122], "j": [0, 1, 10, 11, 13, 19, 29, 43, 44, 46, 47, 52, 54, 55, 56, 57, 60, 61, 62, 63, 67, 69, 70, 72, 73, 75, 83, 86, 89, 95, 97, 112, 113, 115, 117, 120, 122, 152, 175, 187, 190, 191, 197, 199, 237], "j_": 123, "j_f": 101, "jackpot": 101, "jacobian": 101, "jai": [56, 57], "jakob": 0, "jam": 100, "jame": [0, 16, 59, 60, 66, 67, 72, 73], "jan": [1, 54, 56], "jane": 26, "januari": [50, 59, 60, 66, 67, 72, 73], "jar": 127, "jarqu": 67, "jason": [77, 216, 231], "java": [2, 3, 5, 8, 10, 11], "javascript": [96, 98], "jax": 119, "jb": 67, "jeff": [0, 67], "jenkin": 93, "jeremi": 3, "jerom": [59, 60, 67], "jianfeng": 0, "jiang": [0, 1, 54, 56, 122], "jiawei": 0, "jibberish": 58, "jim": 67, "jimmi": 0, "jira": 93, "jit_mode_ev": 116, "jjqj299126j0gycr9kkkt9xm0000gn": 229, "jmshea": [0, 142, 169], "job": [6, 44, 58, 60, 88, 89, 93, 108, 216, 227, 237], "job_log": 216, "jobless": 99, "joe": 56, "john": [0, 93, 96, 237], "john_do": 5, "johnson": [8, 75], "join": [20, 58, 88, 90, 97, 98, 99, 116, 126, 213, 230], "join_data": 99, "joined_data": 99, "joint": [49, 51, 53, 55, 57, 67, 70, 72, 74, 75, 77, 86, 101, 123, 179, 180, 181, 188, 190, 210], "jointgrid": 75, "jointli": [0, 52, 56, 57, 60, 73], "jointplot": 75, "joke": 100, "jolli": [67, 95], "jolowicz": 93, "jon": 16, "jone": [0, 1, 54, 56, 69, 70], "joseph": 0, "joshi": [17, 18], "journei": 29, "jpeg": 96, "jpg": 96, "jq": 99, "json": [88, 89, 93, 97, 98, 108, 112, 113, 114, 216, 224, 237], "json_config": 224, "json_schema_extra": 237, "json_str": 224, "judg": 3, "jul": 0, "jump": [30, 123], "jun": [1, 69, 70, 123], "junction": 27, "junctur": [57, 81, 123], "jung": [0, 48, 49, 51, 52, 59, 60, 66, 67, 86], "junior": 173, "jupyt": [52, 61, 93, 113], "jupyterlab": 113, "jurafski": [1, 54, 56, 57, 72, 73], "just": [2, 3, 6, 7, 8, 10, 11, 17, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 49, 50, 52, 53, 55, 57, 58, 60, 61, 63, 65, 66, 67, 70, 73, 75, 76, 78, 79, 83, 84, 86, 87, 88, 89, 90, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 110, 115, 116, 117, 118, 119, 125, 126, 127, 129, 131, 133, 135, 136, 145, 147, 149, 154, 157, 158, 162, 172, 173, 177, 179, 180, 182, 184, 192, 195, 206, 210, 212, 216, 220, 227, 228, 235, 237], "justif": [52, 65, 201, 204], "justifi": [67, 95, 98, 179, 210], "justin": [56, 57], "jython": 215, "jz": 197, "k": [1, 5, 11, 16, 20, 29, 30, 43, 44, 50, 51, 53, 54, 55, 56, 57, 58, 65, 67, 70, 71, 73, 74, 75, 77, 79, 83, 86, 93, 94, 97, 101, 105, 106, 107, 111, 113, 117, 118, 120, 123, 125, 126, 127, 133, 135, 139, 141, 146, 147, 150, 154, 155, 164, 173, 185, 199, 200, 209, 210, 237], "k0": 57, "k1": [52, 73], "k11": 52, "k12": 52, "k1d": 52, "k2": [52, 73], "k21": 52, "k22": 52, "k2d": 52, "k_": [29, 57, 60], "k_1": [29, 57], "k_2": [29, 57], "k_3": 57, "k_nearest_neighbor": 227, "k_probabl": 127, "k_proj": 71, "k_t": 57, "kafka": [96, 98, 99], "kaggl": [67, 75, 96, 101, 105, 106, 110], "kaim": 71, "kaiming_uniform_": 71, "kaiser": [0, 1, 54, 56, 69, 70], "kanban": 93, "kappa": [0, 16, 140, 141, 167, 168, 169, 170, 172, 173, 197, 199, 200, 202, 203, 205], "karma": 56, "karpathi": [56, 58, 104, 105, 111, 113, 117], "karthik": 0, "karv": 8, "kb": [75, 117], "kd": [52, 60, 61, 73], "kd1": 52, "kd2": 52, "kdd": 52, "kde": [75, 170, 173], "kdeplot": 75, "keen": 84, "keep": [17, 19, 27, 32, 35, 36, 43, 44, 47, 52, 57, 70, 82, 87, 88, 93, 94, 96, 100, 103, 107, 109, 111, 114, 127, 173, 179, 212, 217, 225, 230], "keepdim": [55, 57, 74, 123], "kei": [2, 4, 5, 6, 7, 9, 11, 19, 20, 27, 29, 30, 35, 36, 46, 52, 54, 58, 60, 65, 66, 75, 79, 81, 82, 83, 84, 92, 93, 94, 96, 98, 99, 100, 103, 106, 107, 111, 112, 113, 116, 117, 118, 119, 123, 158, 162, 180, 210, 212, 217, 226, 233, 237], "kenneth": 79, "kept": [7, 35, 44, 67, 93, 210], "kera": [61, 113, 117, 120], "keras_recip": 120, "kernel": [57, 75, 101, 112, 113, 114], "keskar": 0, "kevin": [0, 51, 52, 59, 60, 62, 66, 67, 72, 73], "key_averag": [112, 113], "key_typ": 237, "keyerror": [17, 221, 228], "keymateri": 89, "keynam": 89, "keyword": [53, 57, 97, 98, 108, 119, 212], "kg": 173, "khan": 126, "khanacademi": 125, "kibana": 109, "kick": [99, 114], "kill": 57, "kilobyt": 117, "kim": 173, "kind": [5, 7, 44, 52, 75, 93, 94, 96, 97, 98, 109, 116, 139, 189, 217], "kinesi": 98, "kingma": [0, 1, 54, 56, 58], "kiv": 158, "kj": [55, 117], "kl": 120, "kldivloss": 120, "kleppmann": [92, 94, 96, 97, 99], "kmean": [52, 53, 61, 62, 74], "kmeans_compress": 62, "kmeans_kwarg": [61, 62], "kmeans_silhouett": 52, "kmeans_sklearn": 61, "kmeansifittedkmean": 61, "kmeanslloyd": [53, 61, 62], "knn": [65, 227], "knnstrategi": 227, "know": [2, 5, 6, 7, 8, 11, 17, 19, 27, 29, 36, 43, 48, 49, 50, 52, 56, 57, 58, 60, 65, 67, 70, 73, 75, 76, 79, 84, 86, 88, 90, 93, 94, 95, 96, 97, 99, 101, 105, 108, 112, 114, 115, 116, 118, 122, 123, 124, 129, 132, 135, 136, 142, 145, 147, 154, 155, 157, 158, 173, 178, 179, 183, 184, 194, 195, 202, 209, 210, 212, 216, 218, 221, 227, 230], "knowledg": [29, 30, 52, 56, 57, 70, 75, 77, 79, 95, 96, 97, 101, 121, 126, 207, 211], "knowledge_distil": 120, "knowledge_distillation_tutori": 120, "known": [2, 4, 5, 10, 11, 17, 27, 29, 30, 36, 46, 48, 52, 55, 56, 57, 58, 60, 61, 65, 67, 73, 75, 78, 82, 83, 84, 93, 96, 97, 101, 102, 103, 105, 108, 123, 125, 129, 144, 169, 172, 202, 206, 210, 213, 215], "ko": 206, "koko": [28, 77], "koller": 76, "kpi": 107, "kqv": 117, "kth": 47, "kubernet": [93, 99], "kudugunta": 117, "kumar": 69, "kurtosi": [67, 77, 174], "kurtosis_data": 170, "kurtosis_label": 170, "kuttler": 79, "kv_sep": 216, "kwarg": [58, 61, 68, 71, 96, 116, 119, 120, 122, 126, 127, 225, 228, 237], "kxd": 61, "kyunghyun": 0, "l": [0, 1, 27, 29, 43, 49, 50, 52, 54, 56, 57, 58, 60, 65, 67, 69, 70, 73, 75, 86, 87, 89, 95, 98, 101, 105, 109, 117, 118, 119, 120, 122, 185, 199, 210], "l1": 68, "l119": 71, "l2": [58, 68, 229], "l2_loss": 68, "l2_norm": 83, "l_": [29, 58, 120], "l_1": [52, 58, 124], "l_2": [52, 124], "l_b": 58, "l_hard": 120, "l_k": 52, "l_n": 58, "l_soft": 120, "l_t": 29, "lab": [94, 95], "label": [30, 32, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 93, 101, 102, 105, 106, 114, 116, 118, 119, 120, 122, 123, 126, 129, 155, 167, 169, 170, 173, 179, 189, 209, 216], "label2id": [71, 119], "label2rgb": 62, "label_count": 119, "label_id": [71, 119], "label_nam": 116, "label_propag": 95, "label_smooth": 118, "label_smoothing_factor": [71, 116, 119], "labelfont": 126, "labelleft": 52, "labels": 57, "labels_": [61, 62], "labels_allagre": 119, "labor": [99, 100], "lack": [5, 49, 57, 65, 78, 215, 229], "lag": 67, "lagrang": 52, "lagrangian": 52, "lai": [29, 65, 134], "laid": [73, 176], "lair": 65, "lake": [95, 100, 108], "lakehous": [98, 99], "lamar": [79, 125], "lambda": [52, 57, 58, 73, 76, 82, 83, 84, 97, 114, 118, 119, 125, 149, 154, 155, 168, 183, 185, 192, 199, 200, 202, 220, 234, 237], "lambda_": 155, "lambda_1": [84, 168, 173, 185, 191, 192], "lambda_2": [84, 168, 173, 185, 191, 192], "lambda_d": [191, 192, 194], "lambda_i": 154, "lambdalr": [58, 116, 120, 122, 225], "lambdalrconfig": 58, "lan": 117, "land": [6, 58, 60, 65, 122, 123, 130, 143, 147], "landscap": [57, 119, 123], "langl": 57, "languag": [0, 1, 3, 5, 7, 8, 10, 11, 17, 27, 32, 36, 54, 55, 57, 58, 62, 70, 71, 72, 73, 77, 83, 87, 88, 93, 95, 96, 98, 99, 108, 117, 122, 123, 217], "language_vers": 93, "languagemodel": 93, "lapack": 96, "laplac": [76, 199], "laptop": 30, "larg": [0, 11, 16, 17, 27, 29, 32, 46, 49, 54, 55, 57, 58, 60, 61, 67, 70, 71, 77, 83, 84, 86, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 108, 109, 116, 117, 119, 120, 122, 123, 125, 142, 154, 155, 158, 173, 177, 206, 208, 210, 215, 216, 229, 232, 238], "large_data": 229, "larger": [4, 6, 11, 27, 29, 32, 46, 47, 52, 55, 56, 57, 58, 60, 62, 64, 65, 67, 86, 93, 94, 95, 114, 120, 122, 123, 173, 212, 220, 232], "largest": [5, 19, 27, 29, 46, 47, 57, 58, 65, 67, 86, 122, 123, 192, 206], "lasso": 83, "last": [0, 1, 8, 27, 32, 34, 36, 44, 46, 52, 54, 55, 56, 58, 65, 67, 73, 74, 76, 77, 89, 95, 101, 105, 116, 117, 118, 121, 122, 123, 135, 173, 175, 179, 185, 187, 212, 230], "last_decoder_block": [58, 118], "last_epoch": [58, 118, 122, 225], "last_hidden_st": 119, "lastli": [6, 27, 57, 58, 60, 67, 70, 75, 89, 95, 119, 127], "lasttokenpool": 119, "late": [10, 77, 93, 231], "latenc": [89, 94, 97, 98, 100, 101, 107, 108, 109, 215], "latent": [51, 53, 56, 60, 101, 195], "later": [2, 5, 9, 20, 27, 29, 30, 52, 56, 57, 58, 60, 62, 65, 67, 70, 71, 73, 75, 79, 81, 83, 84, 93, 95, 96, 99, 103, 108, 112, 118, 123, 129, 139, 157, 169, 171, 173, 177, 179, 194, 210, 215, 216], "latest": [0, 89, 93, 103], "latex": 7, "latter": [7, 55, 57, 60, 62, 65, 73, 97, 102, 122, 146, 147, 237], "launch": [87, 88, 89], "launcher": [88, 216], "law": [49, 52, 67, 70, 73, 75, 77, 78, 93, 96, 97, 123, 125, 130, 134, 136, 145, 149, 158, 172, 179, 183, 199, 206, 208], "layer": [29, 30, 52, 56, 58, 70, 71, 95, 97, 103, 105, 109, 111, 113, 116, 117, 118, 119, 120, 122, 123], "layer_norm": [57, 58, 118, 119], "layer_norm_epsilon": 57, "layernorm": [55, 58, 117, 118, 119], "laymen": [65, 75, 179, 205], "layout": 83, "lazi": [58, 89, 229], "lazili": [212, 229], "lceil": [29, 62], "lcurl": 169, "lda": 73, "ldot": [4, 6, 16, 27, 29, 30, 43, 46, 49, 50, 51, 52, 55, 56, 57, 58, 60, 62, 63, 65, 67, 70, 73, 75, 76, 79, 81, 82, 83, 86, 101, 117, 120, 123, 124, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 150, 152, 154, 157, 159, 171, 175, 177, 179, 182, 187, 190, 194, 195, 197, 200, 202, 205, 206, 209, 210], "le": [125, 173], "lead": [2, 3, 5, 6, 8, 11, 16, 17, 19, 20, 26, 29, 30, 32, 36, 46, 52, 55, 56, 58, 60, 62, 65, 67, 70, 73, 74, 76, 79, 93, 94, 95, 96, 99, 100, 101, 102, 105, 109, 114, 119, 122, 123, 179, 210, 212, 213, 215, 218, 220, 229, 230, 232, 235], "leaf": 16, "leak": [57, 100, 103, 114, 230], "leakag": [56, 57, 103], "lear": 57, "learn": [0, 3, 8, 10, 30, 48, 50, 51, 52, 54, 57, 59, 60, 61, 62, 66, 67, 68, 72, 73, 74, 76, 77, 79, 84, 87, 89, 92, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 114, 115, 118, 119, 120, 123, 129, 135, 143, 152, 157, 177, 178, 179, 180, 190, 192, 193, 202, 203, 209, 212, 216, 217, 218, 222, 225], "learnabl": [55, 111, 113, 117], "learner": [0, 1, 47, 54, 56, 60, 70, 73, 86, 99, 190, 209, 210], "learning_r": [68, 71, 116, 119], "learnt": [60, 67, 86, 188], "least": [4, 7, 19, 29, 43, 49, 56, 62, 64, 65, 75, 79, 89, 93, 99, 123, 127, 130, 179, 202, 212], "leav": [16, 23, 44, 55, 65, 66, 100, 115, 118, 119, 120, 132, 179, 221], "lectur": [27, 51, 52, 60, 65, 67, 73, 111, 112, 113, 115, 126, 157, 173], "lecturenote05": 73, "lecun": 76, "led": [76, 105], "lee": [0, 56, 57], "leetcod": [20, 27, 29, 34, 35, 36, 43, 44, 47], "left": [4, 5, 6, 11, 13, 16, 17, 19, 29, 30, 32, 35, 36, 43, 46, 47, 49, 51, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 101, 111, 113, 117, 119, 120, 122, 123, 124, 125, 126, 130, 132, 145, 166, 169, 170, 172, 173, 175, 177, 179, 180, 185, 187, 189, 190, 192, 194, 195, 197, 199, 200, 202, 205, 206, 209, 210, 212], "left_index": 27, "leftarrow": [27, 52, 55, 70], "leftmost": [27, 46, 62], "leftward": 56, "legaci": [94, 118], "legal": [93, 96], "legend": [52, 58, 61, 67, 75, 99, 122, 123, 126, 155, 169, 170, 189], "legisl": 96, "legitim": [9, 75, 94, 180, 184], "legitimaci": 4, "lei": [55, 56, 57], "leimao": 193, "leiserson": [0, 16], "len": [2, 6, 8, 13, 20, 22, 23, 27, 29, 30, 32, 41, 43, 44, 46, 52, 53, 57, 58, 60, 61, 67, 71, 74, 75, 76, 79, 97, 116, 119, 120, 123, 127, 142, 145, 147, 155, 158, 173, 212, 215, 229, 237], "len_": [13, 41], "lend": [17, 29, 52], "lenght": 125, "length": [5, 11, 13, 19, 20, 26, 27, 29, 30, 32, 34, 35, 37, 43, 44, 46, 47, 55, 58, 60, 70, 73, 75, 76, 81, 82, 83, 84, 86, 93, 108, 111, 113, 116, 117, 118, 119, 125, 149, 154, 173, 197, 237], "length_column_nam": 116, "leptokurt": 170, "leq": [3, 7, 16, 19, 20, 27, 29, 30, 35, 36, 43, 44, 46, 47, 51, 55, 56, 57, 58, 60, 63, 64, 65, 67, 70, 83, 84, 86, 101, 122, 126, 130, 139, 143, 146, 150, 159, 161, 162, 163, 165, 167, 169, 172, 173, 175, 177, 180, 187, 197, 199, 202], "leqslant": 52, "less": [7, 11, 16, 17, 27, 29, 32, 43, 47, 52, 53, 55, 57, 60, 61, 62, 65, 67, 70, 75, 76, 79, 83, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 108, 110, 122, 147, 161, 175, 179, 182, 205, 210, 213, 215, 216, 218, 220], "lessen": 67, "lesser": [16, 30, 65, 114, 173], "lesson": [59, 102, 109, 139, 172, 176, 178, 181, 184, 193], "let": [2, 4, 5, 6, 7, 11, 17, 19, 27, 29, 30, 32, 36, 43, 44, 46, 47, 49, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 84, 86, 87, 88, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 108, 109, 117, 118, 122, 124, 125, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 152, 154, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 197, 199, 200, 202, 205, 206, 209, 210, 212, 213, 215, 216, 218, 220, 224, 226, 230, 232], "letter": [20, 57, 127, 237], "lettuc": 228, "level": [5, 16, 17, 20, 27, 29, 47, 52, 53, 56, 57, 58, 65, 67, 68, 74, 75, 86, 88, 89, 90, 93, 95, 97, 99, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 180, 189, 192, 212, 213, 215, 216, 218, 221, 230], "level_set_of_multivariate_gaussian_simplifi": 192, "levelnam": [53, 68, 74, 110, 111, 112, 113, 114, 119, 120, 213, 216, 230], "leverag": [11, 27, 30, 56, 57, 88, 92, 95, 96, 98, 99, 117, 123, 212, 215, 216, 229, 234], "levin": 0, "levkivskyi": 10, "lfloor": [27, 29], "lh": 65, "li": [0, 1, 27, 29, 30, 54, 56, 57, 65, 69, 70, 72, 73, 75, 79, 82, 84, 93, 122, 123, 212], "lib": [57, 61, 71, 93, 99, 114, 116, 117, 119, 120, 122, 225, 229, 230], "librari": [9, 52, 58, 62, 67, 88, 93, 96, 98, 112, 115, 116, 127, 215, 216, 217, 224, 233], "libretext": 79, "licens": [97, 98], "lie": [27, 29, 52, 57, 67, 79, 82, 102], "life": [29, 94, 168], "lifecycl": [77, 98, 99, 105, 107], "lifo": [32, 36], "lift": 65, "light": [100, 111, 113], "lightblu": [61, 75], "lightgreen": 61, "lightn": [216, 218], "lightweight": [94, 96, 215], "like": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 19, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 52, 53, 55, 56, 57, 58, 60, 61, 63, 65, 67, 70, 71, 75, 76, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 122, 123, 125, 127, 129, 132, 135, 145, 147, 149, 154, 155, 157, 158, 159, 162, 171, 173, 179, 180, 182, 197, 206, 210, 211, 213, 215, 216, 218, 221, 225, 226, 228, 230, 232, 233, 235, 237, 238], "likelihood": [30, 53, 55, 56, 58, 70, 72, 74, 75, 77, 93, 95, 123, 129, 209], "liken": 93, "likewis": 57, "lilian": [55, 56, 57], "lim": 180, "lim_": [36, 65, 101, 125, 165, 173, 205], "lim_n": 125, "limit": [3, 5, 6, 7, 9, 19, 29, 36, 56, 57, 60, 62, 65, 67, 75, 89, 93, 94, 98, 99, 101, 108, 119, 125, 126, 132, 171, 173, 198, 202, 203, 215, 216, 221, 230], "limitless": 108, "lin": 65, "linalg": [52, 67, 68, 83, 126], "line": [5, 6, 7, 13, 19, 32, 36, 43, 52, 55, 56, 57, 58, 60, 65, 67, 71, 73, 75, 81, 82, 83, 89, 93, 102, 116, 118, 125, 127, 162, 172, 173, 175, 187, 189, 190, 202, 206, 209, 212, 213, 216, 230], "lineag": [2, 10, 99, 107], "linear": [11, 17, 20, 27, 29, 32, 43, 46, 47, 49, 52, 56, 58, 61, 65, 68, 69, 70, 71, 73, 76, 78, 80, 81, 82, 84, 86, 96, 106, 111, 113, 116, 117, 118, 119, 122, 123, 149, 154, 172, 179, 191, 205, 210, 215, 216, 225, 227], "linear_model": 68, "linear_regress": 227, "linearli": [11, 19, 29, 30, 43, 52, 55, 56, 57, 58, 67, 70, 79, 84, 101, 122, 177], "linearregress": [67, 68, 227], "linearregressionstrategi": 227, "linefmt": [142, 158], "lineno": [212, 229], "lineplot": 127, "linestyl": [52, 67, 75, 82, 126, 189], "linewidth": [52, 67, 68, 75, 82, 126, 142, 145, 147, 158, 173, 189, 206], "linger": [89, 114], "lingo": [177, 179], "linguist": [72, 73], "link": [8, 27, 36, 47, 52, 55, 56, 57, 62, 65, 70, 98, 114, 123, 173, 187, 202, 222, 227], "linspac": [52, 75, 126, 127, 142, 155, 158, 167, 168, 169, 170], "lint": 99, "linter": 93, "linux": [89, 215], "lipp": [0, 57, 58, 122], "lipschitz": 101, "lipton": [0, 1, 54, 56, 57, 72, 73, 122, 123], "liskov": [2, 7], "list": [3, 5, 6, 8, 13, 17, 19, 20, 23, 26, 27, 29, 30, 34, 35, 37, 41, 43, 44, 46, 47, 52, 57, 58, 60, 61, 67, 68, 71, 76, 77, 82, 86, 89, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 108, 111, 116, 118, 119, 120, 122, 123, 127, 142, 145, 147, 170, 171, 199, 202, 206, 213, 215, 216, 217, 218, 220, 221, 227, 228, 230, 231, 232, 233, 234, 235, 237], "list1": 232, "list2": 232, "list_": [5, 8], "list_1": 93, "list_2": 93, "list_access": 11, "list_append": 11, "list_encoding_nam": 57, "list_insert": 11, "list_iter": 233, "list_of_dynamic_typ": 5, "list_of_employe": 5, "list_of_int": 5, "list_of_str": 5, "list_pop": 11, "list_search": 11, "list_sort": 11, "listcomp": [212, 229, 234], "listen": [95, 108], "listproxi": 7, "liter": [5, 6, 8, 9, 27, 53, 57, 58, 60, 61, 93, 111, 113, 116, 117, 212, 220, 225, 232, 237], "literatur": [55, 57, 79, 100], "litmu": 233, "littl": [6, 64, 73, 84, 95, 125, 129, 143, 189], "liu": [0, 1, 54, 56, 58, 77, 117, 122, 216, 231], "live": [2, 3, 65, 93, 100, 107, 108, 116, 157], "liyuan": 0, "ll": [9, 17, 36, 55, 57, 58, 65, 67, 70, 75, 79, 84, 87, 92, 93, 96, 97, 98, 101, 103, 108, 109, 123, 129, 180, 212], "llama": 69, "llc": 0, "llion": 0, "lll": [187, 209], "lllll": 199, "llm": [56, 69, 115, 216, 217], "lloyd": [52, 77], "lm": [56, 57], "lm_profiler_stack": 113, "ln": [52, 117], "ln1": 57, "ln1_pytorch": 57, "ln_1": [55, 57], "ln_2": 57, "ln_before_head": 57, "ln_f": 117, "ln_final": [111, 113], "load": [17, 52, 61, 67, 77, 87, 89, 92, 93, 95, 96, 100, 104, 107, 108, 216, 217, 224, 230], "load_adapt": 116, "load_best_model_at_end": [71, 116, 119], "load_data": 61, "load_dataset": [71, 75, 119, 120], "load_diabet": 68, "load_digit": [53, 61, 74], "load_feature_and_label": 93, "load_iri": [53, 61, 74], "load_snapshot": 217, "load_state_dict": [116, 217], "load_tf_weight": 116, "load_tf_weights_in_gpt2": 116, "load_to_product": 99, "load_to_stag": 99, "load_yaml_config": 58, "loader": [32, 96, 212], "loader_config": 58, "loadtolak": 99, "loadtowarehous": 99, "loaf": 79, "loav": 79, "loc": [52, 75], "local": [5, 11, 27, 30, 52, 58, 59, 61, 76, 88, 90, 95, 96, 97, 98, 101, 114, 122, 194, 212, 228, 234], "local_rank": [88, 90, 116], "local_world_s": [88, 90], "local_xla": 71, "localhost": [58, 88, 90, 118, 224], "localn": 116, "locat": [11, 17, 27, 30, 44, 58, 60, 65, 67, 79, 93, 95, 96, 97, 99, 222], "lock": [77, 217, 226, 231], "log": [5, 11, 16, 19, 20, 27, 29, 43, 53, 55, 56, 57, 58, 60, 61, 65, 68, 70, 71, 74, 75, 76, 88, 93, 96, 97, 98, 99, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 123, 192, 202, 206, 213, 216, 218, 226, 228, 230, 237], "log2": 62, "log_2": [27, 29, 62, 210], "log_artifact": 103, "log_b": [16, 27], "log_dir": [58, 88, 118], "log_every_n_step": [58, 118], "log_fil": [58, 118], "log_gnb": 74, "log_joint_likelihood": 74, "log_k": 57, "log_level": [58, 88, 116, 118], "log_level_replica": 116, "log_likelihood": 74, "log_loss": [71, 119, 120], "log_metr": 116, "log_on_each_nod": 116, "log_on_master_or_al": [58, 88, 118], "log_p_i": 76, "log_p_xi": 76, "log_p_xy_neg": 76, "log_param": 103, "log_posterior": 74, "log_prior": 74, "log_prob": [74, 75], "log_root_dir": [58, 118], "log_softmax": 120, "log_time_format": [58, 118], "log_user_info": 5, "logarithm": [11, 27, 56, 65, 73, 76, 120, 210], "logger": [58, 88, 90, 99, 110, 111, 112, 113, 114, 118, 119, 120, 216, 226], "logger1": 226, "logger2": 226, "loggerconfig": [58, 118], "logging_dir": 116, "logging_exampl": 216, "logging_first_step": 116, "logging_nan_inf_filt": 116, "logging_step": [71, 116, 119], "logging_strategi": 116, "logic": [2, 4, 6, 7, 8, 19, 27, 29, 30, 36, 52, 65, 67, 71, 78, 88, 93, 96, 98, 99, 104, 119, 130, 131, 135, 171, 172, 210, 212, 216, 221, 224, 233, 237], "logical_and": [57, 58], "login": [17, 89, 93, 98], "logist": [49, 65, 72, 75, 101, 102, 210], "logit": [55, 56, 57, 58, 71, 95, 111, 113, 116, 118, 119, 120, 216], "logits_flatten": 58, "logits_larg": 57, "logits_permut": 58, "loglevel": 89, "lognorm": 52, "logs_dir": [216, 218], "logs_distribut": [58, 118], "logspac": [52, 206], "logsumexp": 74, "lol": 58, "long": [2, 3, 6, 23, 27, 36, 56, 57, 58, 60, 65, 67, 76, 79, 93, 94, 98, 99, 111, 113, 116, 119, 120, 122, 129, 145, 169, 173, 218], "longer": [6, 11, 52, 56, 57, 58, 60, 65, 67, 75, 82, 83, 88, 93, 97, 122, 157, 169, 182, 192, 210, 212, 220, 228, 230, 236], "longest": [57, 58, 71, 119, 120], "longleftrightarrow": [52, 73, 180], "longrightarrow": [65, 67, 132, 195], "longtensor": [57, 58, 111, 113, 119], "look": [5, 7, 8, 11, 17, 19, 27, 29, 36, 43, 44, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 75, 76, 77, 78, 82, 83, 85, 93, 95, 97, 99, 102, 103, 105, 107, 108, 109, 112, 114, 115, 117, 122, 123, 125, 127, 129, 142, 145, 155, 179, 180, 196, 212, 216, 217, 218, 220, 225, 227, 234], "lookup": [11, 17, 19, 62, 97], "loop": [3, 11, 17, 19, 26, 27, 29, 32, 35, 43, 44, 46, 55, 56, 57, 58, 60, 61, 67, 68, 71, 73, 74, 88, 105, 112, 116, 127, 145, 206, 212, 213, 215, 230, 233, 234], "loop_employe": 7, "loop_employees_using_list": 7, "loop_through_memb": 116, "loos": [2, 4, 6, 36, 56, 65, 67, 70, 75, 93, 123, 133, 135, 182, 202, 220], "loosen": 217, "lora": [0, 69], "lora_": 71, "lora_a": 71, "lora_alpha": 71, "lora_b": 71, "lora_config": 71, "lora_dropout": 71, "lora_finetun": 71, "lora_out": 71, "lora_paramet": 70, "lora_weight": 71, "loraconfig": 71, "loralib": 71, "loralinear": 71, "lose": [52, 67, 125, 145], "loshchilov": [0, 1, 54, 56, 58, 122], "loss": [3, 4, 43, 48, 50, 57, 61, 62, 68, 70, 71, 83, 86, 93, 100, 103, 104, 106, 111, 113, 119, 120, 122, 123, 145, 210, 216, 217], "loss_fn": 114, "loss_funct": 68, "loss_histori": 68, "lossfunct": 68, "lossi": [62, 119], "lossless": [57, 62], "lost": [57, 94, 95, 97, 210, 213, 230], "lot": [60, 62, 67, 70, 75, 88, 93, 96, 97, 143, 216, 220, 222, 224, 227], "lotteri": 65, "love": [29, 118], "low": [0, 13, 17, 27, 29, 43, 44, 52, 57, 58, 65, 71, 75, 77, 86, 88, 93, 97, 108, 123, 126, 127, 154, 159, 170, 189, 212, 215, 221, 237], "lower": [6, 13, 16, 27, 29, 36, 55, 56, 57, 58, 62, 65, 67, 70, 93, 96, 102, 111, 117, 118, 119, 122, 123, 159, 180, 192, 195, 206, 210, 215, 220, 224], "lowercas": 20, "lowest": [75, 93, 122], "lpar": [141, 149, 164, 165, 169], "lr": [58, 67, 113, 114, 118, 119, 120, 122, 210, 216, 225], "lr_custom": 68, "lr_lambda": [58, 122], "lr_schedul": [58, 116, 118, 119, 120, 122, 217, 225], "lr_scheduler_kwarg": 116, "lr_scheduler_typ": [71, 116, 119], "lr_sklearn": 68, "lrs1": 122, "lrs2": 122, "lrs_cyclic": [58, 122], "lrs_non_cycl": [58, 122], "lrschedul": [58, 217, 225], "lru_cach": 127, "lsdkjfskf": 25, "lset": [129, 136, 138, 139, 140, 141, 145, 147, 149, 154, 162, 171, 175], "lsp": [2, 4, 7, 113], "lsq": [129, 136, 138, 139, 140, 141, 143, 145, 146, 147, 149, 150, 152, 154, 158, 162, 163, 164, 165, 167, 168, 169, 172, 173, 175, 187], "lst": [7, 238], "lstm": [56, 57, 58], "lstrip": 119, "lt": [57, 58, 70, 112, 116, 119, 123, 225, 228, 234, 237], "lu": 0, "lua": 11, "luan": [0, 1, 54, 56], "lucki": [57, 230], "lukasz": 0, "lunch": [70, 124], "lung": 180, "luo": [1, 10], "lustr": 98, "luxuri": [60, 93], "lvert": [57, 126, 140, 149, 159, 163, 169, 172, 175, 190, 192], "lw": [52, 75, 145, 147, 155, 167], "lxd": 57, "lxml": 98, "ly": 79, "m": [0, 1, 27, 29, 32, 43, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 70, 72, 73, 78, 79, 83, 84, 86, 89, 93, 94, 96, 98, 99, 114, 117, 118, 122, 123, 145, 147, 155, 185, 187, 190, 192, 193, 199, 206, 210, 216], "m1": [55, 74, 79, 117], "m2": [74, 79, 117], "m3": 74, "m_": [55, 65, 113, 114, 199, 200, 202], "m_1": 73, "m_2": 73, "m_3": 73, "m_d": 191, "m_i": 32, "m_t": 29, "m_x": [197, 199], "ma": 56, "ma4270": [51, 52, 59, 60, 67], "mac": [88, 90, 117], "macaluso": 67, "machin": [0, 1, 48, 49, 50, 51, 52, 56, 57, 59, 60, 62, 64, 65, 66, 67, 70, 72, 73, 77, 78, 79, 84, 87, 88, 92, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 123, 135, 157, 178, 179, 181, 190, 192, 193, 202, 203, 209, 216, 217, 218, 222], "machine_learn": [53, 61, 62, 74], "machine_transl": 95, "mackai": 52, "maco": [93, 215], "macro": [71, 74, 119], "made": [2, 8, 9, 16, 27, 30, 36, 49, 57, 60, 63, 65, 66, 67, 75, 76, 92, 93, 96, 99, 106, 108, 116, 133, 145, 209, 216, 218, 235], "madewithml": [99, 100, 105, 106, 108, 109], "mae": [67, 93, 95, 102, 105, 106, 109], "magdon": 65, "magic": [2, 52, 98], "magnifi": 123, "magnitud": [58, 67, 79, 81, 82, 83, 84, 94, 102, 122, 123, 192], "mai": [2, 3, 4, 5, 6, 7, 9, 11, 13, 17, 19, 29, 30, 32, 43, 44, 46, 47, 49, 52, 55, 56, 57, 58, 60, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 79, 81, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 113, 114, 116, 117, 122, 127, 129, 133, 143, 145, 154, 162, 168, 169, 173, 182, 184, 187, 189, 206, 209, 210, 212, 213, 215, 216, 217, 220, 225, 227, 237, 238], "mail": 237, "main": [3, 5, 29, 36, 49, 52, 56, 58, 67, 70, 73, 74, 89, 95, 96, 97, 98, 99, 103, 106, 110, 116, 122, 136, 143, 170, 200, 206, 212, 215, 216, 221, 224, 228, 232, 237], "main_process": 215, "main_structur": 216, "main_thread": 215, "mainli": [54, 58, 65, 202, 210], "mainlin": 93, "mainstream": 95, "maintain": [3, 4, 5, 17, 26, 27, 29, 30, 32, 34, 35, 36, 37, 44, 46, 47, 55, 56, 57, 58, 62, 70, 78, 82, 92, 94, 97, 99, 105, 107, 108, 109, 117, 118, 122, 123, 212, 216, 218, 220, 222, 225, 227, 229, 238], "mainten": [29, 30, 89, 93, 108, 221], "major": [8, 19, 43, 52, 57, 68, 86, 93, 99, 100, 102, 105, 108, 109, 129, 192, 212], "make": [2, 3, 5, 7, 9, 11, 17, 27, 29, 30, 32, 43, 44, 50, 52, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 70, 71, 73, 75, 76, 78, 79, 83, 84, 86, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 114, 116, 117, 118, 119, 122, 123, 125, 126, 129, 133, 141, 145, 146, 154, 157, 158, 164, 173, 179, 180, 189, 210, 211, 212, 213, 215, 216, 217, 225, 226, 230, 238], "make_blob": [52, 53, 61, 74], "make_dataclass": 116, "make_meshgrid": [52, 126, 189], "make_plot": 52, "make_regress": 68, "make_sound": [2, 3, 4], "malai": 98, "male": [75, 184], "man": 89, "manag": [5, 7, 11, 27, 29, 32, 57, 60, 77, 92, 96, 97, 98, 99, 100, 103, 107, 108, 123, 212, 213, 215, 216, 220, 221, 222, 224, 225, 226, 230], "mandatori": 88, "manhattan": [60, 61], "manhattan_dist": 61, "mani": [2, 5, 7, 9, 10, 16, 17, 26, 27, 29, 30, 32, 36, 47, 55, 56, 58, 60, 62, 65, 67, 70, 73, 74, 75, 79, 82, 83, 84, 86, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 108, 114, 116, 117, 119, 120, 124, 127, 135, 142, 154, 168, 181, 187, 198, 202, 206, 210, 215, 216, 217, 222, 225, 230, 237], "manifest": [3, 94], "manipul": [17, 47, 52, 73, 79, 82, 97, 216], "manner": [3, 4, 29, 30, 47, 52, 55, 56, 57, 58, 60, 83, 93, 94, 98, 99, 123], "mantissa": 117, "mantra": 93, "manual": [2, 8, 11, 17, 56, 57, 71, 88, 93, 95, 98, 99, 100, 103, 116, 117, 119, 122, 124, 135, 136, 216, 220, 236], "manual_se": [57, 58, 70, 103, 216], "manual_seed_al": [57, 70, 103], "manufactur": [108, 221], "mao": [55, 56, 57], "map": [2, 6, 9, 11, 13, 29, 35, 49, 50, 52, 56, 58, 60, 62, 65, 67, 71, 73, 75, 76, 77, 83, 86, 87, 101, 112, 118, 119, 123, 125, 128, 129, 136, 138, 142, 145, 147, 155, 157, 158, 162, 171, 216, 221, 233, 237], "map_loc": 217, "mape": 95, "mappingproxi": 116, "mapsto": [6, 56, 57, 67, 83, 86, 123, 125, 129, 136, 138, 162, 187, 210], "marc": [0, 48, 51, 52], "marcel": [113, 115], "marcelro": [111, 113], "march": 65, "marciu": 57, "margin": [51, 53, 56, 67, 74, 75, 101, 179, 180, 210], "marginil": 210, "mark": [8, 47, 56, 57, 58, 61, 65, 94], "markdown": 8, "markedli": 27, "marker": [9, 36, 44, 52, 53, 57, 58, 61, 62, 74, 93, 122, 126, 127, 142, 155, 189, 210], "markeredgecolor": 57, "markerfmt": [142, 158], "markers": [52, 57], "market": [93, 94, 95, 96, 108], "markup": [58, 118], "martin": [1, 54, 56, 57, 72, 73, 92, 93, 94, 96, 97, 99, 220], "marvel": 93, "mask": [54, 62, 93, 95, 111, 113, 119, 120], "masked_attention_scor": 57, "masked_attention_weight": 57, "masked_fil": [55, 57, 111, 113, 118], "masked_self_attention_mha": [57, 58, 118, 119], "masked_self_attention_mha_config": [57, 58, 118], "maskedfillbackward0": 113, "maskedmultihead": 55, "mass": [52, 56, 57, 65, 75, 77, 139, 142, 143, 146, 147, 150, 153, 154, 158, 159, 162, 175, 180, 181, 199], "massachusett": [72, 73], "massiv": 56, "master": [15, 47, 77, 93, 111, 113, 213, 218, 230], "master_addr": [58, 88, 90, 118], "master_info": 88, "master_port": [58, 88, 90, 118], "mat": [56, 57], "match": [4, 8, 30, 35, 41, 46, 52, 55, 56, 58, 61, 62, 71, 73, 75, 93, 97, 102, 117, 118, 120, 123, 135, 136, 210], "materi": [5, 79, 95], "math": [4, 27, 29, 34, 36, 56, 57, 58, 62, 69, 70, 71, 74, 76, 79, 83, 84, 119, 122, 125, 129, 142, 184, 210, 215], "math11112451": 0, "mathbb": [4, 7, 27, 29, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 70, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 101, 120, 123, 125, 137, 158, 161, 166, 170, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 195, 197, 199, 200, 202, 205, 206, 209, 210], "mathbf": [49, 50, 52, 56, 58, 60, 62, 63, 65, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 101, 117, 118, 125, 175, 177, 181, 187, 190, 191, 192, 194, 199, 209, 210], "mathcal": [2, 4, 6, 11, 13, 16, 17, 19, 20, 27, 29, 32, 36, 43, 44, 46, 47, 49, 50, 51, 55, 56, 57, 58, 60, 62, 63, 64, 67, 70, 73, 75, 76, 82, 83, 86, 93, 95, 101, 104, 105, 116, 117, 118, 119, 122, 125, 136, 172, 175, 177, 179, 187, 190, 199, 209, 229, 238], "mathemat": [0, 2, 4, 5, 7, 10, 11, 43, 44, 46, 47, 48, 51, 52, 55, 57, 58, 60, 61, 67, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 94, 101, 112, 117, 123, 129, 171, 198, 211], "mathematicalmonk": [59, 72], "mathfrak": 52, "mathrm": [49, 50, 52, 57, 60, 65, 67, 73, 75, 76, 86, 101, 105, 123, 169, 180, 185, 187, 197, 199, 209, 210], "mathscr": 65, "mathsf": 84, "mathstackexchang": [65, 129], "mathstat": 157, "mathwork": 62, "matlab": [11, 96], "matlib": 206, "matmul": [55, 110, 111, 113, 117, 118, 123], "matplotlib": [52, 53, 57, 58, 61, 62, 68, 74, 75, 76, 82, 93, 113, 118, 122, 123, 126, 127, 139, 142, 145, 147, 155, 158, 167, 169, 170, 173, 177, 189, 206, 210, 212], "matric": [11, 52, 53, 57, 60, 69, 70, 79, 81, 84, 96, 117, 123, 187, 189], "matrix": [11, 16, 53, 56, 58, 60, 62, 68, 69, 71, 73, 74, 75, 76, 81, 82, 86, 93, 96, 101, 106, 118, 119, 126, 179, 189, 190, 192, 193, 209, 210, 237], "matter": [9, 19, 27, 57, 65, 67, 81, 93, 95, 98, 100, 103, 105, 123], "matur": [92, 93, 94], "max": [29, 46, 52, 53, 57, 58, 60, 61, 65, 70, 73, 75, 86, 93, 111, 113, 114, 119, 120, 122, 123, 142, 145, 147, 155, 158, 170, 202, 212, 216, 218, 229], "max_": [29, 70, 73, 75], "max_batch_s": 216, "max_clust": 61, "max_entri": [113, 114], "max_epoch": [58, 118], "max_grad_norm": [71, 116, 119], "max_i": 123, "max_int": 62, "max_it": [53, 60, 61, 62], "max_len": [58, 119], "max_length": [57, 71, 119, 120, 237], "max_norm": [58, 118], "max_num": 58, "max_num_of_mem_events_per_snapshot": 114, "max_num_peopl": 127, "max_seed_valu": 70, "max_seq_len": [57, 58], "max_step": 116, "max_sum": 46, "max_tim": 111, "max_token": [57, 58, 118], "max_val": 5, "max_z": 123, "maxbackward0": 113, "maxcount": 89, "maxim": [53, 55, 56, 58, 60, 65, 67, 70, 75, 79, 84, 86, 93, 95, 123, 210, 211], "maxima": [123, 210], "maximum": [5, 9, 19, 20, 27, 29, 36, 52, 53, 55, 56, 58, 61, 62, 65, 70, 72, 74, 75, 77, 89, 93, 99, 105, 111, 116, 117, 122, 123, 139, 165, 166, 209, 212], "maxitem": 237, "maxlen": 237, "maxlength": 237, "maxsiz": [5, 7], "maxwell_sgemm_128x64_nn": 113, "maxwell_sgemm_128x64_tn": 113, "mayb": [49, 57, 65, 67, 70, 88, 94, 95, 119, 142, 154, 158], "maybeconst": [58, 118], "maybeglob": [58, 118], "mb": [113, 114, 117, 229], "mbox": 65, "mccann": [0, 56], "mcgraw": [65, 72, 73], "mcnemar": 107, "md": 93, "mdpi": 0, "me": [10, 35, 57, 58, 65, 89, 93, 99, 116, 129, 132, 173, 217, 228, 230, 237], "mean": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 23, 26, 27, 29, 30, 32, 35, 36, 43, 49, 50, 53, 55, 56, 57, 58, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 129, 131, 132, 133, 135, 136, 140, 141, 142, 143, 145, 147, 149, 152, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 192, 194, 195, 199, 200, 202, 205, 206, 209, 210, 211, 212, 215, 216, 218, 220, 221, 226, 229, 230, 232, 233, 234, 235, 236], "mean1": 109, "mean2": 109, "mean_1": 169, "mean_2": 169, "mean_3": 169, "mean_4": 169, "mean_5": 169, "mean_body_mass_g": 75, "mean_margin": 53, "mean_squared_error": 68, "mean_tim": 111, "mean_vector": [126, 189], "meaning": [9, 29, 62, 65, 95, 96], "meaningfulli": 73, "meaningless": [65, 100], "means_": [52, 53], "meant": [49, 52, 62, 99, 136, 157, 211], "meantion": 29, "measur": [4, 6, 11, 17, 30, 48, 49, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 75, 83, 84, 86, 93, 95, 96, 98, 99, 102, 103, 105, 106, 107, 110, 111, 112, 117, 120, 123, 125, 140, 141, 145, 163, 164, 175, 178, 182, 210, 211], "measured_byt": 117, "measured_throughput": 117, "measured_tim": 117, "mechan": [2, 3, 5, 8, 27, 30, 36, 54, 58, 61, 78, 87, 93, 94, 96, 99, 103, 107, 115, 117, 122, 212, 215, 217, 218, 220, 221, 230], "media": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109], "median": [77, 111, 174], "median_tim": 111, "mediat": 215, "medic": [79, 96, 97, 102, 105], "medium": [2, 57, 93, 111, 117, 236], "medium_backward_warmup_0_mixed_fals": 111, "medium_backward_warmup_0_mixed_tru": 111, "medium_backward_warmup_1_mixed_fals": 111, "medium_backward_warmup_1_mixed_tru": 111, "medium_forward_backward_warmup_0_mixed_fals": 111, "medium_forward_backward_warmup_0_mixed_tru": 111, "medium_forward_backward_warmup_1_mixed_fals": 111, "medium_forward_backward_warmup_1_mixed_tru": 111, "medium_forward_warmup_0_mixed_fals": 111, "medium_forward_warmup_0_mixed_tru": 111, "medium_forward_warmup_1_mixed_fals": 111, "medium_forward_warmup_1_mixed_tru": 111, "meet": [4, 29, 43, 44, 46, 89, 93, 94, 98, 99, 107], "megabyt": 117, "mehdi": 69, "mehryar": [0, 65, 67, 86], "mem": 113, "mem_effici": 229, "mem_ineffici": 229, "member": [2, 51, 56, 93, 95, 103, 145], "membership": [17, 77, 231], "memcpi": 112, "memmap": 57, "memor": [65, 73, 76, 105], "memori": [17, 19, 27, 30, 36, 44, 56, 58, 62, 70, 75, 77, 87, 88, 90, 93, 96, 101, 103, 108, 109, 111, 115, 127, 143, 168, 169, 173, 189, 206, 210, 226, 230, 231, 232, 233, 238], "memory_leak": 114, "memory_mask": 57, "memory_profil": 229, "memory_ratio": 117, "memory_snapshot": 113, "memory_usag": [217, 229], "memory_viz": 113, "memoryerror": 212, "mental": [7, 29, 52, 60, 90, 172], "mention": [5, 27, 29, 43, 44, 52, 56, 57, 58, 60, 62, 65, 67, 70, 73, 75, 76, 79, 83, 84, 86, 93, 97, 99, 101, 103, 108, 123, 129, 132, 145, 157, 162, 172, 173, 175, 179, 180, 183, 189, 194, 230], "menu": [124, 178], "meow": [2, 3], "mere": [2, 5, 50, 56, 58, 60, 63, 67, 75, 78, 79, 119, 123, 179, 180, 190, 192, 210, 216], "merg": [11, 16, 20, 27, 52, 55, 57, 98, 99, 111, 113, 216], "merge_and_unload": 71, "merge_and_unload_model": 71, "merge_config": 58, "merge_gaussian_pdf": 52, "merged_linear": 71, "mergesort": 11, "meshgrid": [52, 53, 75, 126, 127, 189], "mesokurt": 170, "mess": 58, "messag": [7, 36, 53, 68, 74, 89, 90, 93, 96, 99, 110, 111, 112, 113, 114, 119, 120, 212, 213, 215, 216, 226, 230], "met": [4, 29, 30, 43, 46, 58, 75, 97], "meta": [0, 30, 32, 56, 114], "metaclass": [2, 225], "metadata": [77, 95, 96, 97, 99, 107, 216, 222, 228, 237, 238], "metaphor": 93, "meteorolog": 96, "meter": 141, "method": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 16, 17, 19, 20, 22, 23, 27, 29, 36, 43, 44, 47, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 74, 75, 77, 79, 82, 86, 88, 93, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 118, 139, 142, 145, 181, 210, 211, 216, 218, 220, 223, 224, 225, 227, 229, 233, 236], "methodologi": [30, 93, 98, 220], "meticul": 105, "metric": [0, 43, 60, 62, 68, 75, 77, 83, 92, 93, 98, 99, 100, 105, 106, 107, 109, 115, 116, 117, 119, 120, 217], "metric_for_best_model": [71, 116, 119], "metric_key_prefix": 71, "metrics_format": 116, "mf": 117, "mf_per_sequ": 117, "mf_per_token": 117, "mfu": 95, "mfu_estim": 117, "mfu_result": 117, "mfuestimationresult": 117, "mgf": [197, 199], "mgrid": 189, "mha": [55, 58], "michael": [72, 73], "michel": 117, "michigan": [0, 72, 73, 140, 141, 143, 146, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 197, 199, 200, 202, 203, 205, 210], "micro": [71, 119], "microsecond": 112, "microservic": 92, "microsoft": [67, 71, 93, 98, 99, 101, 120], "mid": [27, 29, 49, 50, 51, 52, 55, 56, 57, 60, 65, 66, 67, 70, 73, 75, 76, 81, 86, 101, 109, 123, 179, 180, 181, 182, 183, 190, 210], "mid_index": 27, "mid_strategi": 27, "middl": [27, 30, 43, 52, 60, 65, 73, 173, 213, 215], "midpoint": [27, 29, 167], "might": [2, 3, 4, 5, 6, 7, 9, 11, 17, 19, 27, 29, 32, 36, 43, 52, 55, 56, 57, 58, 62, 65, 67, 70, 74, 75, 76, 79, 81, 83, 86, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 117, 118, 122, 123, 125, 129, 131, 173, 179, 180, 192, 206, 212, 213, 217, 218, 226, 230, 232, 234, 235], "migrat": 98, "mill": [112, 113, 115], "miller": [56, 57], "million": [17, 56, 57, 100, 157, 229], "mimic": [36, 55, 93, 107, 217, 236], "mimick": [58, 120], "min": [29, 33, 38, 52, 53, 58, 70, 73, 75, 77, 111, 118, 120, 122, 124, 155, 157, 170], "min_": [29, 60, 62, 194], "min_clust": 61, "min_dist": 61, "min_eating_spe": 29, "min_index": 61, "min_length": 237, "min_num_peopl": 127, "min_seed_valu": 70, "min_tim": 111, "min_val": 5, "minbp": [56, 57], "mincount": 89, "mind": [11, 52, 58, 93, 102, 109, 143, 210], "mine": [61, 118, 127], "mingpt": [58, 89], "minhyeok": 0, "mini": [54, 57, 77, 88, 90], "minibatch": 55, "miniconda": [61, 229, 230], "miniconda3": 89, "miniforg": 61, "minim": [17, 29, 50, 55, 56, 57, 59, 63, 64, 67, 68, 70, 77, 79, 83, 86, 93, 94, 95, 97, 99, 105, 123, 210, 215], "minima": [58, 59, 122, 123, 194, 210], "minimum": [5, 19, 27, 29, 30, 32, 36, 43, 52, 56, 57, 58, 59, 61, 67, 70, 71, 89, 99, 101, 105, 111, 122, 139, 165], "minimum_spe": 29, "minitem": 237, "minlen": 237, "minlength": [123, 237], "minor": [56, 57, 93, 94, 100, 192], "minstack": 34, "minu": [73, 123], "minut": [57, 93, 149, 154, 157], "minvers": 93, "miracl": 94, "mirror": [5, 56, 57, 71], "misc": [7, 61, 237], "miscalibr": 102, "misclassif": 50, "misclassifi": [65, 94, 107], "miscommun": 93, "misconcept": [73, 173], "misinform": 95, "mislabel": 74, "mislead": [93, 95, 97, 100, 102], "misleadingli": 67, "mismatch": [5, 93], "misnom": 123, "miss": [5, 17, 58, 65, 67, 75, 94, 95, 96, 98, 99, 100, 102, 118], "missing_value_t": 75, "missing_value_table_renam": 75, "missing_values_per_column": 75, "missing_values_per_column_perc": 75, "missing_values_t": 75, "mistak": [50, 71, 78, 93, 103, 105, 114, 216, 225], "mistakenli": 5, "mistral": 69, "misunderstand": 93, "mit": [0, 1, 51, 52, 59, 60, 62, 65, 66, 67, 72, 73, 86, 93, 123, 173], "mitchel": [65, 72, 73], "mitig": [57, 100, 109, 116, 123], "mix": [5, 6, 53, 93, 95, 96, 111, 125, 127, 139, 228], "mixed_": 111, "mixed_context": 111, "mixed_precis": [111, 113], "mixed_precision_opt": 111, "mixgausssurfac": 52, "mixmat": 52, "mixtur": [60, 62, 73, 77, 101, 166], "mixture_pdf": 52, "mj": 55, "mkdir": [57, 93], "mkdoc": 93, "ml": [59, 63, 65, 67, 72, 86, 92, 93, 95, 96, 98, 99, 105, 107, 109, 135, 157, 210, 211], "ml2": 52, "mlalgorithm": 72, "mle": [72, 73, 75], "mlflow": [103, 107], "mlop": [77, 92, 99], "mlp": [57, 71, 117, 119, 120], "mlr": 67, "mlxtend": 106, "mm": [75, 99, 113, 216], "mmbackward0": 113, "mml": 0, "mn": [55, 67, 79, 117], "mnist": [69, 72, 77, 95], "mnist_test": 76, "mnist_train": 76, "mnli": 120, "mn\u00b2": 67, "mobil": [92, 94, 96], "mock": 104, "mod": [55, 57], "modal": 56, "mode": [9, 52, 57, 58, 60, 70, 77, 88, 93, 98, 99, 103, 106, 107, 108, 111, 112, 113, 115, 116, 118, 119, 120, 127, 143, 168, 169, 173, 174, 189, 206, 210, 216, 224, 237], "model": [0, 1, 7, 8, 11, 29, 32, 54, 55, 59, 61, 62, 66, 68, 70, 72, 75, 77, 79, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 111, 113, 114, 115, 116, 120, 121, 122, 123, 125, 127, 129, 135, 142, 145, 147, 149, 151, 154, 156, 158, 171, 172, 175, 178, 181, 183, 186, 201, 202, 203, 204, 209, 210, 211, 212, 215, 216, 217, 218, 225, 227], "model_a": 217, "model_artifact": 217, "model_artifacts_dir": [216, 218], "model_b": 217, "model_config": [57, 58, 118, 119], "model_config_dict": 216, "model_dump": [57, 58, 111, 119, 216, 237], "model_dump_json": [88, 90, 111], "model_field": [116, 237], "model_flop": 117, "model_init": 116, "model_json_schema": 237, "model_max_length": 119, "model_multi": 67, "model_nam": [216, 218, 237], "model_s": 58, "model_select": [53, 61, 68, 74, 75], "model_total_paramet": 117, "model_typ": [57, 117, 227], "model_util": [119, 120], "model_valid": 57, "model_vers": 217, "model_wrap": 116, "modelconfig": [216, 218], "modeling_gpt2": 116, "modeling_output": 120, "modeling_util": 116, "models_equ": 217, "modeltyp": 227, "moder": [93, 100, 102], "modern": [54, 55, 56, 57, 58, 62, 76, 93, 95, 97, 98, 99, 108, 170, 202, 224], "modest": 76, "modif": [27, 65, 67, 116, 218, 221, 235], "modifi": [7, 11, 16, 17, 27, 30, 32, 44, 55, 56, 57, 60, 67, 89, 93, 97, 98, 114, 123, 142, 155, 169, 173, 212, 215, 220, 221, 227, 230, 235, 237], "modul": [2, 6, 55, 57, 58, 67, 68, 71, 76, 88, 89, 93, 101, 105, 111, 113, 116, 117, 118, 119, 120, 122, 189, 212, 213, 215, 217, 221, 225, 230], "modular": [117, 216, 218, 220, 233], "module1": 89, "module_nam": [58, 71, 118], "moduledict": [57, 58, 111, 113, 118, 119], "modulefil": 89, "modulelist": [57, 58, 71, 111, 113, 119], "modulenotfounderror": 52, "modules_to_sav": 71, "moduleshelp": 89, "moduleutilsmixin": 116, "modulo": 125, "mohanda": 98, "mohri": [0, 65, 67, 86], "momenet": [141, 164], "moment": [3, 58, 70, 77, 114, 117, 122, 143, 145, 153, 163, 173, 174, 197, 202, 208, 213], "momentum": [58, 114, 117, 122], "mondai": 149, "monei": [56, 62, 93, 97], "monetari": 94, "mongodb": [95, 96, 98], "monitor": [58, 77, 92, 95, 100, 103, 107, 108, 117, 118, 123, 215], "monitor_process": 215, "monkei": 29, "monoton": [7, 28, 57, 58, 67, 93, 122, 130, 172], "monster": [28, 29], "mont": 52, "month": 173, "monthli": 100, "moon": 65, "more": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 27, 29, 30, 32, 36, 43, 44, 46, 47, 49, 51, 52, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 79, 81, 83, 84, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 129, 132, 133, 136, 141, 142, 143, 145, 146, 154, 157, 158, 159, 162, 164, 166, 168, 171, 173, 175, 179, 182, 183, 184, 186, 189, 191, 194, 195, 197, 201, 202, 204, 205, 206, 207, 209, 210, 212, 215, 216, 218, 220, 221, 226, 227, 229, 230, 233, 238], "moreov": [11, 29, 52, 56, 65, 67, 76, 93, 100, 179, 190, 199, 212, 237], "mortar": 93, "mosaicml": [58, 117, 122, 217], "most": [8, 10, 11, 17, 19, 20, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 47, 49, 52, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 75, 76, 78, 79, 81, 83, 86, 88, 93, 95, 96, 97, 100, 101, 102, 103, 105, 106, 108, 109, 115, 116, 117, 118, 122, 124, 125, 127, 129, 130, 135, 144, 147, 157, 169, 190, 207, 209, 210, 211, 216, 230, 233, 236], "mostafa": 65, "mostli": [56, 57, 188, 230], "motiv": [29, 49, 52, 55, 57, 76, 94, 109, 125, 202, 210], "mount": [89, 98], "mountdir": 89, "mous": [55, 57, 86, 114], "mouth": 52, "move": [7, 11, 29, 30, 36, 47, 52, 56, 57, 58, 65, 67, 75, 79, 81, 82, 88, 93, 98, 99, 100, 103, 105, 119, 122, 125, 169, 173, 212], "movement": [47, 81, 99], "movi": [56, 95, 97, 98, 108, 109, 118, 237], "mp": [55, 57, 88, 90], "mp4": 96, "mp_paramet": 116, "mpare": 52, "mpatch": 75, "mpl": 52, "mpl_toolkit": [75, 126], "mplot3d": [75, 126], "mqan": 56, "mrc": 70, "mri": [95, 96], "mro": [2, 116], "mse": [68, 95, 102, 106], "msg": [57, 88, 123, 228], "mtia": 116, "mu": [0, 51, 53, 57, 60, 62, 63, 65, 72, 73, 75, 125, 126, 141, 155, 164, 169, 170, 177, 179, 187, 189, 190, 192, 194, 199, 200, 202, 205, 206, 209, 210], "mu_": [52, 57, 60, 73, 75, 200, 206], "mu_1": [52, 61, 73, 185, 187, 190, 210], "mu_2": [52, 61, 73, 185, 187, 190], "mu_3": 52, "mu_a": 75, "mu_c": 75, "mu_d": [126, 190, 210], "mu_g": 75, "mu_i": [126, 175, 177, 189], "mu_k": [52, 53, 61], "mu_n": 187, "mu_nk": 53, "mu_t": [55, 57], "mu_x": [126, 175, 177, 189], "much": [2, 9, 11, 27, 29, 30, 36, 52, 56, 57, 58, 64, 65, 67, 70, 71, 73, 75, 76, 79, 84, 86, 93, 94, 97, 98, 99, 101, 102, 103, 105, 109, 111, 114, 117, 118, 120, 122, 129, 143, 145, 154, 173, 175, 178, 179, 210, 212, 221, 227, 238], "mul": [112, 113, 234], "mulbackward0": 113, "multi": [11, 29, 52, 58, 67, 70, 73, 75, 79, 83, 86, 89, 93, 96, 97, 108, 120, 122, 215, 216, 230], "multi_class": [71, 119], "multi_gpu_train": 89, "multi_instance_learn": 95, "multi_process_cpu": 230, "multi_thread_cpu": 230, "multi_thread_io": 230, "multiclass": [95, 123], "multicollinear": 100, "multidimension": 96, "multihead": [55, 57], "multiheadattent": 57, "multiheadedattent": [57, 58, 118, 119, 120], "multiheadedattentionconfig": [57, 58, 118, 119, 120], "multiheadselfattent": [111, 113], "multilabel": 95, "multilay": [55, 57], "multimedia": [95, 96, 97, 98], "multimod": [52, 53], "multinod": 89, "multinomi": [57, 75, 123], "multinoulli": 123, "multipl": [4, 8, 11, 17, 19, 29, 32, 43, 52, 53, 56, 57, 58, 60, 61, 62, 67, 68, 70, 73, 75, 76, 78, 79, 81, 83, 86, 87, 88, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 116, 118, 122, 135, 136, 145, 147, 191, 199, 210, 212, 213, 215, 216, 217, 218, 221, 224, 226, 230, 233, 235], "multipli": [13, 19, 29, 30, 43, 49, 52, 55, 56, 57, 58, 67, 70, 73, 76, 78, 82, 84, 117, 123, 125, 127, 173, 192, 210, 216, 229, 234], "multiplicand": 73, "multiprocess": [7, 88, 90, 119, 230], "multirun": 216, "multitask": [0, 1, 54, 56, 99, 213], "multithread": [119, 213, 226], "multitud": [95, 218], "multivari": [52, 60, 73, 75, 77, 123, 126, 194, 196], "multivariate_norm": [52, 53, 75, 126, 177, 189], "multivariate_normal_pdf": 126, "multivariatenorm": 75, "murphi": [0, 51, 59, 60, 62, 66, 67, 72, 73, 93], "mus_new": 52, "muscat": [0, 83], "music": 95, "must": [2, 4, 5, 6, 7, 16, 25, 27, 29, 30, 32, 35, 36, 43, 47, 49, 52, 55, 56, 57, 58, 60, 61, 67, 68, 70, 73, 76, 78, 79, 83, 86, 88, 90, 94, 95, 96, 97, 98, 103, 105, 108, 116, 117, 119, 122, 123, 125, 129, 130, 133, 135, 147, 168, 173, 179, 194, 199, 210, 216, 218, 220, 221, 225, 227, 228, 230, 237], "mustang": 96, "mutabl": [35, 77, 217, 231, 238], "mutablemap": 216, "mutablesequ": 7, "mutat": [7, 61, 71, 93, 226], "mutex": [213, 215, 230], "mutual": [95, 102, 108, 129, 157, 213], "mu\u00f1oz": [1, 10], "mv": 145, "mx": 67, "my": [6, 13, 35, 52, 57, 58, 65, 73, 74, 75, 89, 93, 99, 104, 117, 118, 119, 122, 125, 127, 129, 132, 142, 145, 155, 157, 173, 210, 217, 220, 224, 227], "my_covari": 74, "my_dict": 17, "my_estim": 74, "my_good_employe": 7, "my_jacobian": 123, "my_list": [7, 17, 235], "my_log_prob": 74, "my_manag": 7, "my_mean": 74, "my_pi": 74, "my_prob": 74, "my_softmax": 123, "my_softmax_output": 123, "my_softmax_prob": 123, "my_str": 34, "my_theta": 74, "myapp": 224, "myclass": 116, "mydataset": 212, "mydb": 224, "myestim": 8, "mylinearregress": 68, "mylist": 35, "mypi": [2, 3, 5, 6, 7, 8, 32, 57, 58, 228, 237], "myqueu": 36, "myself": 129, "myspecificvalid": 99, "mysql": [96, 97, 98], "mysteri": 101, "n": [0, 1, 4, 7, 11, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 32, 34, 35, 36, 37, 43, 44, 46, 47, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 69, 70, 73, 74, 75, 76, 78, 79, 81, 82, 84, 86, 87, 88, 89, 95, 101, 102, 111, 116, 117, 118, 123, 125, 126, 129, 130, 131, 132, 133, 137, 140, 143, 145, 146, 147, 148, 154, 155, 157, 158, 161, 163, 169, 170, 172, 173, 177, 179, 182, 183, 185, 187, 188, 189, 190, 195, 197, 199, 202, 205, 206, 209, 212, 215, 216, 221, 228, 229, 230, 237, 238], "n1": [55, 79, 109, 117], "n2": [79, 89, 109, 117], "n3": 79, "n_": [52, 56, 57, 62, 76, 86], "n_0": [27, 29, 30], "n_1": [52, 73, 79], "n_2": [52, 73, 79], "n_3": [52, 73, 79], "n_8": 76, "n_class": 75, "n_cluster": [60, 61, 62], "n_col": 96, "n_compon": 52, "n_covid": 147, "n_ctx": 57, "n_digit": 61, "n_embd": [57, 117], "n_featur": [53, 61, 68, 74, 75], "n_h": 210, "n_head": [57, 117], "n_init": [52, 61, 62], "n_inner": 57, "n_j": 79, "n_k": [52, 60, 63, 73], "n_layer": [57, 117], "n_list": 206, "n_n": 79, "n_posit": 57, "n_rang": 206, "n_ranges_grid": 206, "n_repeat": 147, "n_row": 96, "n_sampl": [52, 53, 60, 61, 68, 74], "n_size": [11, 17], "n_success": 147, "n_t": 210, "n_test": 106, "n_vocab": 57, "n_x": 76, "n_y": 76, "na": 75, "nabla": [70, 73], "nabla_": [52, 56, 67, 123], "naiv": [6, 7, 30, 52, 77, 79, 83, 94, 95, 100, 101, 105, 112, 120, 129, 175, 210, 217], "naive_bay": 74, "naivebayesgaussian": 74, "naivebayesgaussianloglikelihood": 74, "nall": 215, "name": [2, 5, 7, 8, 11, 16, 17, 23, 26, 27, 30, 32, 36, 52, 53, 55, 56, 57, 58, 61, 62, 65, 67, 71, 74, 75, 77, 83, 88, 89, 93, 96, 97, 99, 101, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 127, 129, 136, 142, 202, 206, 210, 212, 215, 216, 221, 223, 225, 228, 237], "name_or_path": 119, "named_buff": 116, "named_children": [71, 116], "named_modul": [58, 71, 116], "named_paramet": [57, 58, 71, 111, 113, 116, 117, 118, 119], "namedtemporaryfil": [114, 224], "nameerror": 111, "namespac": [88, 90, 116], "nan": [61, 68, 75, 123], "nano": 89, "nanogpt": [58, 117], "narasimhan": [0, 1, 54, 56], "narr": [29, 132], "narrow": [5, 7, 8, 27, 29, 67, 93, 169], "narrowli": 56, "nasti": 65, "nat": [20, 89], "nat_id": 89, "natgatewai": 89, "natgatewayid": 89, "nathaniel": [51, 59, 60, 61, 65, 72, 202, 203], "nathanieldak": 66, "nation": [1, 5, 10], "nativ": [11, 22, 23, 36, 93, 97, 98, 110, 112, 115, 215, 230], "nativelayernormbackward0": 57, "natur": [0, 5, 7, 11, 29, 30, 32, 43, 44, 47, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 70, 72, 73, 76, 78, 79, 81, 82, 83, 86, 90, 93, 95, 96, 98, 101, 105, 108, 109, 120, 122, 123, 137, 161, 212, 216, 237], "naughti": 237, "navi": [52, 173], "navig": [29, 32, 89, 93], "nbsp": [52, 61], "nbviewer": [52, 61], "ncall": [212, 229], "nccl": 88, "ncentroid": 62, "nclass": 116, "nclass_child": 116, "nclass_par": 116, "ncol": [52, 53, 57, 62, 82, 84], "ncompress": 62, "nd": [30, 60, 79, 117], "ndarrai": [6, 52, 53, 57, 61, 62, 68, 74, 75, 93, 96, 123, 126, 127, 142, 145, 147, 155, 158, 170, 173, 206], "ndcg": 94, "ndef": 116, "ndim": [57, 68], "ne": 65, "neal": 52, "nearest": [29, 52, 60, 62, 63, 67, 83, 101, 108, 155], "nearli": [93, 97, 202, 212], "neat": [27, 57, 125, 224], "neatli": [32, 55, 97], "necess": [58, 78, 93, 122], "necessari": [2, 4, 11, 17, 29, 32, 55, 56, 58, 62, 67, 68, 70, 89, 93, 94, 95, 96, 98, 99, 100, 101, 105, 108, 109, 114, 126, 215, 218, 238], "necessarili": [5, 7, 16, 29, 58, 60, 65, 67, 79, 82, 86, 93, 95, 96, 98, 108, 118, 122, 129, 133, 136, 162, 172, 191, 194], "necessit": [9, 56, 57, 215], "neclueu": 57, "need": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 19, 20, 27, 29, 30, 32, 36, 43, 44, 46, 47, 49, 52, 54, 55, 56, 57, 58, 60, 63, 65, 69, 70, 71, 72, 73, 75, 76, 77, 79, 84, 86, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 126, 129, 133, 135, 136, 145, 151, 154, 157, 158, 173, 179, 180, 182, 183, 187, 202, 210, 211, 212, 215, 216, 217, 218, 220, 221, 222, 225, 226, 227, 229, 230, 231, 236], "neerajkumarvaid": 127, "neftune_noise_alpha": 116, "neg": [2, 4, 19, 29, 30, 43, 46, 55, 56, 57, 62, 67, 70, 71, 73, 83, 84, 86, 94, 95, 102, 103, 113, 119, 127, 142, 143, 154, 162, 168, 169, 170, 173, 177, 179, 180, 189, 194, 202, 206], "negat": [7, 55, 56, 70], "negative_skew": 170, "negatively_scaled_vector": 82, "neglig": [36, 57, 238], "neighbor": [11, 60, 62, 63, 83, 100, 101, 108], "neighborhood": [57, 75], "neighbour": 60, "neighbourhood": 173, "neither": [7, 56, 57, 127, 202], "neo4j": 97, "neq": [7, 27, 30, 43, 44, 47, 50, 57, 58, 60, 65, 67, 73, 83, 109, 152, 175, 187, 190, 191], "ness": 65, "nest": [19, 57, 93, 96, 116, 218, 234], "nested_schema": 237, "net": [58, 88, 93], "netflix": [95, 108], "network": [0, 29, 54, 56, 58, 65, 70, 76, 83, 84, 93, 94, 95, 97, 101, 104, 105, 106, 117, 120, 122, 123, 215, 227], "networkinterfac": 89, "networkinterfaceid": 89, "neural": [0, 1, 54, 55, 56, 57, 58, 65, 69, 70, 83, 84, 94, 95, 97, 101, 104, 105, 106, 117, 120, 122, 123, 227], "neural_network": 227, "neuralnetwork": 227, "neuralnetworkstrategi": 227, "neuron": [70, 105, 216], "neutral": [71, 95, 119], "never": [3, 5, 29, 43, 57, 58, 60, 65, 67, 75, 76, 79, 83, 106, 108, 118, 130, 179], "nevertheless": [5, 56, 88, 197, 224], "new": [1, 2, 3, 5, 6, 7, 11, 17, 27, 29, 30, 34, 36, 43, 44, 46, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 81, 82, 86, 89, 94, 95, 96, 97, 98, 99, 100, 103, 105, 107, 108, 109, 112, 116, 117, 122, 123, 141, 145, 147, 158, 179, 181, 192, 193, 203, 206, 212, 213, 215, 216, 217, 221, 225, 226, 227, 228, 229, 230, 231, 235, 237], "new_empti": 113, "new_equ": 58, "new_list_of_int": 5, "new_list_of_str": 5, "new_stat": 217, "new_valu": 213, "new_zero": 113, "newaxi": [52, 53, 68], "newbin": 158, "newer": 93, "newli": [36, 71, 73, 107, 114, 116, 119, 120, 235, 236], "newton": [56, 123], "nexampl": 57, "next": [3, 6, 11, 16, 17, 22, 27, 30, 32, 35, 36, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 62, 63, 67, 70, 71, 73, 75, 76, 89, 90, 93, 95, 97, 98, 99, 100, 101, 103, 105, 108, 110, 111, 112, 117, 118, 119, 123, 124, 126, 129, 135, 161, 173, 179, 202, 210, 216, 217, 229, 230, 233], "next_token": 57, "nexti": 30, "nexu": 93, "nfrom": 116, "nfutur": 118, "ng": 86, "nh": 117, "ni": [138, 162], "ni_i": 65, "nice": [52, 65, 73, 108, 132, 135, 210], "nik": [0, 139, 140, 141, 167, 168, 169, 172, 173, 197, 199, 200, 202, 203, 205], "niki": 0, "ninstance_par": 116, "ninstruct": 228, "ninth": 58, "nitish": 0, "nj": 55, "nk": [52, 53, 61, 73], "nkd": [60, 73], "nl2sql": 70, "nlabel": 118, "nleq": 7, "nllloss2dbackward0": 58, "nlllossbackward0": 58, "nloop_through_memb": 116, "nlp": [54, 56, 57, 62, 95], "nlu": 56, "nn": [55, 57, 58, 70, 71, 101, 111, 113, 114, 116, 117, 118, 119, 120, 122, 123, 216, 217, 225], "nnode": [58, 88, 89, 90, 118], "no_cuda": 116, "no_decai": 58, "no_grad": [57, 58, 71, 118, 119, 120], "no_type_hint": 116, "noam": [0, 58], "noam_lr_decai": 58, "node": [16, 27, 30, 32, 96, 97, 103, 114, 117, 216], "node_id": 112, "node_rank": [58, 88, 90, 118], "nodelist": 89, "nodes_arrai": 89, "noida": [72, 73], "nois": [65, 108, 175, 179], "noisi": [65, 175, 179], "nomin": [3, 4, 96], "non": [4, 7, 16, 27, 29, 43, 44, 46, 47, 52, 55, 56, 57, 58, 59, 60, 61, 65, 70, 71, 75, 79, 83, 84, 86, 93, 94, 98, 101, 102, 103, 111, 112, 114, 116, 117, 118, 122, 129, 133, 135, 136, 139, 154, 157, 158, 159, 162, 165, 172, 191, 194, 202], "non_block": [57, 58], "non_default_trace_": 112, "non_ignore_count": 58, "nonc": 93, "none": [2, 3, 4, 5, 7, 8, 9, 11, 17, 22, 23, 27, 32, 34, 36, 37, 52, 53, 55, 57, 58, 61, 62, 65, 67, 68, 70, 71, 74, 75, 76, 84, 88, 89, 90, 93, 96, 99, 103, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 127, 142, 147, 170, 173, 210, 212, 213, 215, 216, 217, 218, 220, 221, 225, 226, 227, 228, 229, 230, 233, 235, 236, 237], "nonempti": 60, "nonetheless": 56, "nonetyp": [116, 237], "nonlinear": 67, "nonnegativeint": 27, "nonrobust": 67, "nonzero": [191, 197], "noon": 154, "noqa": [9, 53, 57, 58, 68, 93, 111, 113, 116, 226, 233], "nor": [7, 56, 57, 58, 202], "noredirect": [68, 157], "norm": [52, 60, 67, 70, 71, 75, 77, 84, 85, 86, 101, 103, 105, 169, 177, 206], "norm_typ": [58, 118], "normal": [5, 36, 52, 56, 58, 60, 71, 74, 75, 76, 82, 83, 89, 93, 98, 100, 111, 113, 116, 119, 122, 126, 155, 170, 174, 179, 194, 206, 215, 216], "normal_": [57, 111, 112, 113, 118, 119], "normal_init_modul": [57, 111, 113, 119], "normalized_embed": 57, "normalized_shap": 57, "north": [30, 32], "nosql": [96, 98, 108], "nosuchprocess": 215, "not_an_email": 237, "not_fit": 68, "not_given": [9, 57, 58], "notabl": [5, 83, 101, 116], "notat": [4, 13, 16, 19, 29, 43, 49, 54, 56, 70, 75, 79, 81, 84, 91, 96, 117, 119, 122, 123, 125, 129, 136, 152, 157, 169, 179, 180, 187, 195, 210, 216], "note": [2, 3, 5, 6, 7, 8, 11, 17, 19, 22, 23, 26, 27, 29, 30, 32, 36, 46, 49, 50, 52, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 70, 71, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 88, 89, 90, 93, 94, 95, 98, 99, 100, 101, 103, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 133, 135, 136, 139, 142, 143, 145, 147, 149, 155, 157, 158, 159, 166, 169, 172, 177, 179, 182, 183, 187, 189, 191, 194, 197, 205, 206, 210, 212, 215, 216, 217, 227, 230, 236, 237], "notebook": [0, 52, 61, 79, 101, 116, 117, 118, 119, 120, 205], "noteworthi": 82, "notfittederror": 68, "notgiven": [57, 58], "noth": [56, 62, 67, 73, 75, 76, 124, 125, 158, 175, 179, 180, 210, 233], "notic": [5, 29, 30, 52, 55, 57, 60, 65, 67, 73, 75, 79, 83, 84, 93, 109, 116, 118, 123, 125, 129, 155, 162, 169, 173, 177, 179, 189, 194, 210, 215, 228], "notif": [93, 95, 99], "notifi": 99, "notimpl": [2, 226], "notimplementederror": [4, 57, 61], "notion": [2, 3, 56, 57, 65, 83, 87, 192], "notori": 56, "notwithstand": [56, 93, 129], "noun": 57, "nov": [0, 1, 54, 56], "novel": 2, "now": [2, 3, 4, 5, 6, 7, 8, 11, 17, 22, 23, 26, 27, 29, 30, 32, 36, 37, 44, 46, 49, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 103, 105, 106, 108, 110, 111, 113, 114, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 142, 145, 146, 147, 149, 157, 158, 165, 171, 173, 175, 179, 180, 185, 187, 189, 191, 194, 202, 206, 210, 211, 212, 216, 217, 220, 227, 228, 233, 235, 237, 238], "nowadai": 97, "nowher": 67, "np": [6, 52, 53, 55, 57, 60, 61, 62, 67, 68, 70, 71, 73, 74, 75, 81, 83, 93, 96, 103, 111, 117, 118, 119, 120, 123, 126, 127, 139, 142, 145, 146, 147, 154, 155, 158, 167, 168, 169, 170, 173, 177, 183, 189, 206, 210], "nparent": 215, "npoint": 52, "nproc": [88, 90], "nproc_per_nod": [58, 88, 89, 90, 118], "nprofil": 229, "npt": 96, "npy002": [53, 68], "nr": 129, "nrow": [52, 53, 57, 62, 82, 84], "nsfw": 95, "nspeed": 230, "nsubseteq": 57, "nswap": 227, "ntarget": 118, "ntask": 89, "ntry": 230, "nuanc": [2, 4, 29, 70, 82, 102], "null": [17, 57, 67, 75, 93, 111, 216, 237], "nullcontext": [111, 113], "num": [5, 13, 19, 26, 27, 44, 46, 58, 118, 127, 212, 215, 216, 233], "num_aloc": 127, "num_banana": 29, "num_batches_to_ev": [58, 118], "num_birthdai": 127, "num_bit": 62, "num_block": [111, 113], "num_class": [57, 61, 71, 74, 118, 119, 216, 218], "num_clust": [61, 62], "num_col": 76, "num_compon": [52, 53], "num_decoder_block": [57, 58, 117, 118, 119], "num_digit": 58, "num_embed": [57, 111, 113], "num_employe": 145, "num_epoch": [68, 119, 120, 216, 218], "num_exampl": 116, "num_experi": 123, "num_featur": [52, 53, 61, 74, 216], "num_gaussian": 52, "num_gpu": 117, "num_head": [57, 58, 111, 113, 117, 118], "num_it": 114, "num_iter": 230, "num_kei": 58, "num_label": [71, 118, 119, 120], "num_nod": 89, "num_paramet": 116, "num_peopl": 127, "num_point": 75, "num_possible_birthdai": 127, "num_proc": [71, 119], "num_process": 230, "num_queri": 58, "num_round": 106, "num_row": [76, 96, 119], "num_sampl": [52, 53, 57, 61, 74, 118, 123, 126, 189], "num_sim": 142, "num_simul": 127, "num_target_modul": 71, "num_task": 230, "num_thread": [213, 215, 230], "num_token": 116, "num_train_epoch": [71, 116, 119], "num_training_step": [58, 120, 122], "num_trial": [127, 206], "num_unique_birthdai": 127, "num_warmup_step": [58, 120, 122], "num_work": [57, 58, 118, 212, 216, 218], "numalign": 117, "number": [2, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 22, 23, 29, 30, 32, 36, 43, 44, 46, 47, 49, 52, 53, 55, 56, 57, 58, 59, 61, 63, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 108, 109, 111, 118, 119, 121, 122, 123, 125, 126, 127, 129, 131, 132, 136, 137, 142, 145, 146, 147, 149, 151, 154, 155, 156, 157, 158, 161, 173, 175, 178, 179, 182, 183, 191, 195, 197, 201, 202, 204, 206, 208, 210, 212, 216, 217, 228, 229, 230, 232, 233, 235, 237], "numbersequ": 233, "numel": [57, 71, 117, 118], "numer": [2, 4, 11, 17, 27, 29, 30, 36, 47, 52, 53, 55, 56, 58, 65, 67, 70, 73, 74, 75, 76, 86, 93, 95, 96, 100, 101, 103, 112, 117, 124, 130, 135, 157, 158, 179, 180, 215, 221], "numeric_onli": 75, "numexpr": 30, "numpi": [6, 52, 53, 57, 58, 61, 62, 68, 70, 71, 74, 75, 76, 83, 84, 93, 96, 98, 103, 111, 113, 118, 119, 120, 123, 126, 127, 139, 142, 145, 147, 155, 158, 167, 168, 169, 170, 177, 189, 206, 210, 212], "numref": [36, 76], "nums_squared_gener": 212, "nums_squared_list_comprehens": 212, "nvidia": [55, 56, 70, 88, 117], "ny": [59, 60, 67], "n\u00b2": 67, "n\u00b3": 67, "n\u00e9e": 16, "o": [11, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 32, 34, 35, 36, 37, 43, 44, 46, 47, 52, 55, 57, 58, 60, 61, 62, 65, 67, 70, 73, 76, 79, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109, 117, 119, 120, 122, 127, 213, 224, 229, 238], "o1": 116, "o_": [55, 57], "o_proj": 71, "o_t": 102, "oad": 98, "obei": [4, 55, 57, 58, 84, 103, 129, 173], "obj": [2, 3, 116], "object": [3, 4, 5, 6, 7, 8, 9, 17, 27, 35, 46, 47, 49, 52, 55, 57, 58, 59, 62, 63, 65, 70, 75, 77, 79, 83, 84, 88, 93, 96, 97, 98, 99, 102, 105, 109, 116, 120, 129, 142, 147, 210, 212, 216, 217, 218, 220, 223, 224, 225, 226, 227, 229, 230, 233, 235, 236, 237], "object_detect": 95, "object_new": 236, "objectdetectiontransform": 220, "oblivi": 93, "obscur": 93, "observ": [29, 50, 51, 52, 53, 55, 56, 58, 60, 62, 65, 67, 70, 73, 75, 76, 79, 86, 96, 99, 101, 114, 117, 122, 123, 129, 133, 135, 149, 154, 158, 162, 169, 173, 175, 179, 192, 206, 209, 210, 211, 215], "observe_tensor_cycl": 114, "obtain": [16, 32, 52, 55, 56, 57, 60, 62, 65, 67, 70, 73, 79, 83, 84, 93, 95, 96, 98, 102, 116, 117, 139, 179, 190, 207, 210, 212, 221], "obtus": 84, "obviat": 56, "obviou": [7, 22, 23, 57, 58, 60, 75, 93, 98, 99, 129, 133, 157, 158, 192, 220], "obvious": [5, 57, 93, 129], "occasion": [29, 32], "occup": 93, "occupi": [11, 17, 27, 29, 30, 117], "occur": [2, 3, 5, 6, 16, 27, 29, 30, 32, 36, 56, 61, 67, 76, 84, 93, 99, 100, 102, 103, 105, 109, 114, 127, 129, 130, 131, 132, 149, 154, 155, 156, 173, 180, 190, 210, 230, 232], "occurr": [6, 17, 20, 44, 52, 76, 132, 154], "ocr": 95, "oct": [0, 1, 54, 56, 69, 70, 122], "ocw": 0, "od": 57, "odd": [57, 65], "odot": [52, 55, 57], "off": [2, 11, 17, 18, 22, 29, 30, 32, 35, 36, 43, 52, 53, 57, 58, 60, 61, 62, 65, 70, 71, 75, 83, 93, 94, 95, 97, 99, 101, 103, 111, 112, 113, 114, 117, 118, 123, 124, 173, 212, 218, 230], "offens": 95, "offer": [2, 4, 5, 6, 11, 29, 30, 56, 57, 65, 70, 79, 84, 93, 94, 96, 97, 99, 101, 105, 108, 119, 124, 210, 213, 215, 216], "offic": 154, "offici": 93, "offlin": [94, 101, 102, 103, 105, 106], "offset": [213, 230], "often": [3, 5, 9, 11, 16, 27, 29, 30, 32, 36, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 75, 79, 81, 82, 83, 86, 87, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 108, 114, 116, 117, 122, 123, 125, 129, 135, 136, 142, 143, 146, 147, 158, 169, 180, 181, 187, 194, 201, 202, 203, 204, 210, 215, 218, 220, 225, 232, 235, 236], "oh": [55, 57, 119, 212], "ok": [142, 154, 157, 173, 210], "okai": [6, 57, 58, 125, 142], "ol": 67, "olap": 97, "old": [3, 11, 17, 52, 61, 79, 93, 103, 108, 173, 217], "old_centroid": 61, "older": [57, 107], "ols_paramet": 67, "oltp": 97, "om": 58, "omega": [16, 75, 123, 125, 142, 147, 158, 166, 175, 187, 197, 199], "omega_": [126, 180], "omega_i": [75, 177, 182], "omega_x": [177, 180], "omegaconf": [58, 216], "omit": [13, 19, 43, 57, 58, 75, 95, 119], "omnibu": 67, "omnivault": [32, 36, 53, 58, 61, 62, 71, 74, 75, 76, 88, 90, 111, 113, 114, 118, 119, 120, 127, 142, 143, 145, 146, 147, 154, 155, 158, 167, 168, 169, 171, 173, 177, 189, 206, 210], "omnivers": [5, 58, 61, 71, 75, 110, 111, 112, 113, 114, 116, 118, 119, 120, 127, 143, 158, 168, 169, 173, 189, 206, 210, 215, 216, 229, 230], "omnixampl": [88, 90, 216, 221, 226], "on_trace_readi": [112, 113, 114], "on_valid_epoch_end": [58, 118], "onc": [2, 11, 13, 19, 26, 27, 29, 30, 36, 43, 44, 52, 55, 57, 60, 63, 67, 70, 73, 75, 90, 93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 108, 109, 110, 114, 116, 122, 136, 145, 157, 158, 212, 216, 225, 226, 229, 233, 235], "one": [2, 3, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 22, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 49, 50, 52, 55, 56, 57, 58, 60, 62, 63, 65, 67, 68, 70, 71, 73, 74, 76, 79, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 112, 116, 117, 118, 119, 120, 122, 123, 124, 127, 129, 130, 131, 132, 135, 136, 137, 139, 142, 144, 147, 149, 154, 157, 158, 173, 175, 176, 177, 179, 180, 187, 190, 195, 202, 206, 210, 212, 213, 215, 216, 218, 220, 221, 225, 226, 227, 229, 230, 232, 233, 235, 236, 237], "one_hot": 57, "ones": [36, 55, 57, 58, 60, 65, 67, 74, 93, 94, 95, 100, 105, 111, 113, 117, 118, 119, 120, 122, 145, 210, 227], "ones_": 57, "ones_lik": 173, "oneself": 173, "ong": [0, 48, 51, 52, 78, 79, 83], "ongo": [99, 105], "oniani": 72, "onli": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 43, 44, 46, 47, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 111, 113, 116, 117, 121, 122, 123, 124, 125, 129, 131, 132, 135, 136, 140, 142, 143, 145, 146, 154, 157, 158, 163, 173, 175, 179, 180, 182, 187, 189, 191, 192, 194, 202, 209, 210, 212, 213, 215, 216, 217, 218, 221, 226, 227, 229, 230, 232, 233, 235], "onlin": [67, 69, 70, 79, 92, 94, 97, 120, 125, 193], "onto": [27, 32, 35, 36, 84, 187, 192], "onward": [47, 118, 157], "oom": 114, "op": [58, 88], "open": [7, 17, 35, 57, 58, 62, 70, 93, 95, 96, 97, 108, 109, 115, 116, 119, 125, 212, 224, 227, 237], "openai": [9, 29, 55, 56, 57, 93, 212], "opencv": [96, 98], "opengl": 96, "oper": [2, 3, 4, 5, 6, 7, 8, 12, 13, 19, 20, 22, 23, 27, 29, 30, 34, 35, 37, 43, 46, 47, 56, 58, 62, 65, 67, 68, 70, 71, 73, 78, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 108, 111, 114, 115, 116, 122, 123, 191, 192, 210, 229, 230, 234, 235, 238], "operand": [5, 6, 8, 58], "operation": 100, "operatornam": [51, 52, 55, 56, 57, 60, 63, 65, 67, 70, 73, 84, 117, 166, 177, 179, 180, 185, 187, 189, 190, 191, 194, 199, 200, 202, 205, 206, 210], "oplu": [55, 57, 70, 78], "opportun": [93, 94, 210], "oppos": [55, 93], "opposit": [7, 78, 82, 84, 96], "opt": [57, 61, 71, 96, 99, 114, 116, 117, 119, 120, 122, 225, 229, 230], "optic": 95, "optim": [0, 1, 16, 27, 29, 47, 48, 52, 54, 55, 57, 61, 62, 65, 67, 68, 70, 71, 73, 77, 79, 83, 88, 92, 93, 94, 95, 96, 97, 99, 102, 103, 105, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 194, 215, 216, 217, 218, 225, 232], "optim_arg": 116, "optim_group": 58, "optima": [52, 60, 67], "optimal_beta": 68, "optimist": [100, 102, 105], "optimizer_config": 58, "optimizer_config_cl": [58, 118], "optimizer_nam": [216, 218], "optimizer_param": [216, 218], "optimizer_pydantic_config": [58, 118], "optimizer_registri": [58, 118], "optimizerconfig": [58, 216, 218], "optimizernam": 116, "optimum": [52, 60], "option": [9, 16, 53, 55, 57, 58, 61, 62, 67, 68, 70, 71, 74, 82, 88, 93, 94, 98, 114, 116, 117, 119, 120, 123, 127, 132, 142, 210, 212, 213, 216, 237], "optional_field": 116, "optuna": 116, "oracl": 98, "orang": [17, 52, 61, 75, 79, 142], "orchestr": [99, 109, 221], "ord": [20, 221], "order": [4, 5, 6, 7, 11, 13, 19, 20, 27, 29, 32, 35, 36, 43, 44, 47, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 74, 76, 77, 78, 81, 82, 83, 88, 90, 94, 95, 97, 98, 99, 109, 117, 127, 129, 141, 145, 159, 170, 173, 177, 197, 206, 212, 213, 229, 230, 237, 238], "ordered_label_count": 119, "ordereddict": [117, 119, 120], "ordin": [88, 96], "ordinari": [67, 84, 197], "org": [0, 22, 23, 52, 61, 69, 70, 71, 91, 93, 113, 114, 117, 119, 120, 125, 192, 215, 233, 234], "organ": [17, 93, 94, 95, 96, 97, 98, 99, 107, 109, 218], "organiz": 96, "orient": [3, 4, 8, 79, 82, 84, 98, 192, 220], "origin": [3, 7, 9, 16, 20, 27, 29, 44, 52, 53, 55, 56, 57, 58, 61, 62, 67, 70, 71, 73, 74, 75, 79, 81, 82, 83, 84, 93, 95, 99, 106, 109, 116, 117, 123, 154, 171, 179, 220, 227, 228, 229, 230, 237], "original_linear": 71, "original_s": 62, "original_shap": 62, "original_vector": 82, "orloff": [0, 173], "orthogon": [70, 79, 83, 84, 177, 191, 192], "orthonorm": 191, "oss": 93, "ossci": 76, "other": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 16, 20, 27, 29, 30, 32, 35, 36, 43, 44, 47, 49, 50, 52, 55, 56, 57, 58, 61, 62, 63, 65, 67, 70, 73, 75, 76, 78, 79, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 122, 123, 125, 127, 129, 130, 131, 132, 142, 145, 152, 154, 157, 158, 169, 172, 173, 175, 177, 178, 179, 180, 183, 187, 189, 191, 199, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 224, 226, 227, 230, 233, 237, 238], "otherwis": [22, 23, 27, 29, 32, 35, 36, 47, 50, 52, 53, 55, 57, 58, 60, 61, 65, 73, 75, 81, 93, 99, 116, 122, 123, 141, 143, 165, 167, 168, 178, 180, 202, 210], "otim": [78, 84], "our": [2, 4, 5, 6, 7, 9, 11, 19, 27, 29, 30, 32, 36, 43, 44, 46, 49, 52, 55, 56, 57, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 88, 90, 93, 94, 95, 96, 98, 99, 102, 105, 108, 109, 110, 112, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 129, 135, 136, 138, 139, 142, 145, 147, 149, 157, 158, 160, 169, 173, 179, 180, 183, 189, 202, 210, 212, 216, 217, 220, 221, 227, 230, 237], "ourself": 57, "ourselv": [52, 60, 65, 67, 73, 75, 83, 120, 123, 124, 125, 143, 173], "out": [2, 3, 5, 10, 11, 22, 32, 36, 51, 55, 56, 57, 58, 60, 62, 67, 71, 73, 75, 76, 86, 88, 93, 94, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 111, 113, 114, 116, 117, 122, 123, 125, 132, 141, 142, 145, 147, 157, 158, 164, 171, 172, 173, 176, 179, 180, 183, 187, 189, 210, 212, 213, 216, 220, 233], "out_dim": 71, "out_featur": [57, 58, 70, 71, 111, 113, 118, 119], "outag": 97, "outbound": 56, "outcom": [4, 29, 44, 56, 57, 58, 65, 70, 73, 79, 82, 93, 94, 101, 102, 103, 123, 124, 125, 129, 130, 131, 132, 135, 136, 142, 143, 145, 146, 157, 158, 175, 179, 210, 230], "outcome_count": 123, "outdat": 108, "outer": [13, 30, 55, 56, 123, 187], "outer_": 123, "outlier": [67, 99, 100], "outliers_influ": 67, "outlin": [55, 79, 93, 94, 95, 99], "output": [4, 5, 19, 20, 27, 29, 30, 35, 36, 41, 46, 51, 52, 56, 58, 60, 61, 62, 65, 66, 67, 68, 70, 71, 76, 86, 88, 89, 92, 93, 96, 97, 98, 99, 101, 102, 104, 107, 108, 112, 115, 117, 118, 119, 120, 172, 199, 209, 210, 212, 213, 215, 216, 230, 237, 238], "output_dir": [71, 116, 119, 216], "output_path": 58, "output_subdir": 216, "outset": 94, "outsid": [5, 27, 57, 71, 73, 93, 98, 100, 117, 212, 220], "over": [3, 11, 19, 22, 29, 30, 32, 35, 36, 47, 49, 50, 52, 55, 57, 58, 60, 61, 64, 65, 67, 70, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 117, 120, 122, 123, 125, 127, 130, 131, 132, 133, 140, 141, 143, 154, 157, 159, 162, 163, 164, 165, 167, 169, 173, 175, 179, 182, 191, 193, 206, 209, 210, 212, 215, 216, 227, 231, 233, 234, 237], "overal": [13, 19, 20, 30, 32, 36, 43, 46, 52, 57, 58, 60, 65, 73, 76, 83, 93, 94, 95, 96, 99, 102, 105, 118, 179, 191, 198, 202, 210, 215, 238], "overall_accuraci": 118, "overarch": [56, 95], "overbrac": [36, 52, 73, 75, 210], "overcom": [56, 58, 122, 212], "overdraft": 97, "overemphasi": 67, "overestim": [65, 67], "overfit": [55, 57, 67, 70, 73, 83, 95, 100, 104, 105, 106, 107, 202], "overflow": [19, 30, 31, 43, 56, 74, 93, 123], "overhead": [70, 88, 117, 215, 218, 229, 238], "overkil": [99, 116], "overlai": 189, "overlap": [8, 52, 56, 57, 65, 75, 96, 131, 133, 135, 202, 212], "overli": [36, 58, 76, 100, 105], "overlin": [55, 57], "overload": [7, 10, 57, 65, 67, 77, 93, 116, 119, 120, 233], "overlook": 30, "overnight": [94, 108], "overrid": [2, 9, 57, 58, 65, 93, 113, 117, 216], "overridden": 116, "override_dirnam": 216, "overset": [49, 50, 55, 57, 60, 65, 67, 70, 73, 86, 101, 105, 123, 126, 139, 140, 163, 177, 180, 187, 190, 210], "overshadow": 57, "oversight": 99, "overview": [52, 69, 77, 78, 93, 95, 96, 98, 99, 214], "overweight": 75, "overwhelm": [81, 93, 95, 129], "overwrit": [27, 35, 47], "overwrite_output_dir": [71, 116, 119], "overwritten": [27, 44], "overwrot": 213, "ovr": [71, 119], "ow": [55, 56, 70], "own": [4, 6, 9, 11, 27, 32, 52, 55, 57, 58, 62, 67, 70, 73, 75, 87, 93, 95, 97, 98, 99, 101, 104, 115, 116, 117, 119, 125, 212, 215, 216, 220, 227, 230, 234, 235], "owner": [89, 97], "ownership": 97, "ozan": [30, 31], "p": [0, 1, 4, 16, 29, 30, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 86, 87, 101, 102, 109, 111, 112, 113, 117, 118, 119, 120, 122, 123, 125, 127, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 152, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 175, 179, 180, 181, 182, 183, 185, 187, 190, 199, 202, 205, 206, 209, 210, 215, 228, 229, 230, 232, 237], "p1": [22, 32], "p100": [110, 117, 120], "p100_16gb": 117, "p2": [22, 32], "p50k_base": 57, "p50k_edit": 57, "p_": [52, 70, 76, 87, 109, 120, 175, 177, 180, 182, 199, 209], "p_0": 79, "p_1": [29, 60, 147], "p_2": [29, 60, 147], "p_3": 60, "p_aloc": 127, "p_hashmap": 41, "p_i": [120, 173, 210], "p_j": 60, "p_k": [51, 60], "p_n": [29, 147], "p_t": 120, "p_valu": 67, "p_visual": 57, "p_x": [175, 199], "p_xy": 76, "p_y": [76, 175, 182, 183, 185], "pac": [73, 203], "pace": 202, "pack": 173, "packag": [57, 61, 71, 89, 93, 96, 99, 100, 105, 113, 114, 117, 119, 120, 122, 187, 206, 225, 228, 229], "packet": [29, 93], "pad": [55, 57, 71, 116, 118, 119, 120], "pad_": 58, "pad_length": 120, "pad_numb": 58, "pad_sequ": 120, "pad_tensor": 120, "pad_token": [119, 120], "pad_token_id": [58, 71, 118, 119, 120], "padded_a": 58, "padded_b": 58, "padded_c": 58, "padding_mask": 118, "padding_masks_padded_and_expand": 58, "padding_sid": [71, 119, 120], "page": [5, 16, 27, 32, 52, 56, 57, 61, 62, 65, 67, 73, 79, 93, 95, 96, 98, 100, 117, 123, 143, 177, 199, 210], "pageabl": 112, "pagin": 98, "pai": [52, 57, 65, 71, 93, 118, 218], "paid": 145, "pain": 97, "pair": [11, 13, 19, 35, 43, 47, 49, 50, 57, 61, 65, 67, 70, 73, 78, 79, 83, 86, 96, 97, 117, 126, 175, 195, 210], "pairwis": [55, 57, 61], "palindrom": 47, "palm_flop": 117, "pan": [213, 228], "panda": [61, 75, 93, 96, 98, 111, 112, 114, 119, 120, 212], "paper": [54, 55, 57, 58, 70, 95, 96, 99, 102, 105, 111, 113, 118, 119, 122], "paperback": 97, "par": 70, "paradigm": [96, 99, 118], "paradox": [10, 132], "paragraph": [65, 86, 93], "parallel": [30, 55, 56, 77, 79, 87, 91, 93, 98, 99, 107, 108, 116, 212, 216], "parallelclust": [77, 91], "param": [57, 58, 71, 116, 117, 118, 169, 216], "param_a": 217, "param_b": 217, "param_dict": 58, "param_group": [58, 122], "param_str": 116, "paramet": [3, 6, 8, 9, 13, 19, 27, 29, 36, 49, 51, 53, 55, 57, 58, 61, 62, 65, 68, 71, 72, 74, 75, 76, 79, 83, 86, 88, 89, 93, 103, 105, 107, 111, 113, 114, 116, 118, 119, 120, 122, 123, 126, 127, 142, 143, 145, 146, 147, 149, 150, 154, 158, 159, 168, 169, 173, 177, 183, 189, 199, 200, 206, 210, 211, 216, 218, 220, 222, 225, 228], "parameter": [5, 6, 7, 27, 52, 56, 67, 123, 190, 210], "parameter_nam": [57, 58, 71, 111, 113, 118, 119], "parameters_a": 70, "parameters_b": 70, "parametr": [7, 52, 67, 70, 129, 158, 159, 210], "paramount": [56, 57, 93], "params_and_buffers_byt": 117, "params_byt": 117, "params_count": 117, "params_dict": 117, "paramspec": [68, 228, 237], "parent": [2, 4, 36, 52, 53, 57, 58, 61, 62, 74, 75, 76, 127, 142, 145, 147, 155, 158, 167, 168, 169, 177, 189, 206, 210, 215], "parent_class_attr": 116, "parent_dir": [75, 76, 145, 147, 155, 158, 167, 168, 169, 177, 189, 206, 210], "parent_instance_attr": 116, "parent_method": 116, "parent_pid": 215, "parent_sentinel": 230, "parentclass": 116, "parenthes": [33, 38, 77, 122], "pareto": 95, "parmar": [0, 1, 54, 56, 69, 70, 117], "parquet": [96, 97], "pars": [96, 98, 103, 224, 237], "parse_arg": [88, 90, 114], "parser": [88, 90, 114, 237], "part": [4, 5, 20, 27, 30, 36, 43, 46, 47, 52, 56, 57, 58, 60, 62, 65, 66, 67, 71, 75, 79, 84, 92, 93, 94, 97, 100, 105, 113, 114, 115, 117, 122, 124, 127, 135, 157, 158, 183, 209, 212, 217, 218, 220, 221, 237], "parti": [93, 96, 98], "partial": [52, 53, 56, 58, 60, 61, 67, 70, 73, 74, 93, 118, 122, 123, 210, 234], "particip": [87, 93], "particular": [5, 6, 27, 29, 30, 32, 46, 47, 56, 58, 60, 63, 65, 67, 70, 75, 76, 78, 81, 87, 93, 96, 98, 105, 117, 122, 123, 127, 129, 131, 135, 136, 138, 139, 145, 149, 165, 172, 173, 179, 180, 182, 184, 190, 210, 212, 220], "particulari": 7, "particularli": [2, 9, 11, 27, 30, 32, 47, 56, 57, 58, 67, 79, 82, 83, 84, 93, 97, 100, 102, 108, 117, 123, 199, 211, 212, 213, 215, 224, 226], "partit": [16, 62, 65, 86, 89, 98, 99, 100, 133, 182], "parulpandei": 75, "pass": [2, 3, 5, 6, 7, 8, 9, 16, 27, 29, 30, 41, 44, 46, 47, 52, 53, 55, 56, 57, 58, 62, 67, 70, 71, 88, 93, 95, 96, 99, 108, 111, 113, 114, 116, 118, 119, 212, 216, 218, 220, 224, 225, 226, 227, 228, 233, 237], "passiv": [9, 56, 93, 116], "password": [93, 224], "past": [30, 43, 56, 57, 67, 95, 97, 100, 108, 117], "past_index": 116, "past_key_valu": 71, "pasta": 228, "pastarecip": 228, "pastri": 79, "patch": [52, 75, 228], "path": [2, 27, 36, 53, 56, 58, 61, 62, 65, 74, 75, 76, 81, 82, 83, 89, 93, 95, 96, 97, 99, 127, 142, 145, 147, 155, 158, 167, 168, 169, 177, 189, 206, 210, 216, 218], "pathcollect": [53, 61, 74], "pathlib": [36, 53, 57, 58, 61, 62, 74, 75, 76, 127, 142, 145, 147, 155, 158, 167, 168, 169, 177, 189, 206, 210, 216, 218], "pathologist": 62, "pathwai": [44, 117], "patient": [79, 94, 95, 96, 97, 102, 105, 179, 210], "pattern": [0, 1, 2, 5, 8, 9, 28, 29, 30, 32, 44, 51, 52, 55, 57, 58, 59, 60, 62, 66, 67, 70, 72, 73, 76, 77, 93, 94, 95, 97, 100, 108, 109, 114, 122, 123, 192, 193, 210, 212, 216, 217, 218, 220, 224, 225, 236], "paul": [67, 79, 125], "paus": [58, 75, 212], "payoff": 125, "pca": [60, 70, 100], "pcluster": 89, "pcm": 57, "pd": [61, 67, 75, 96, 111, 112, 114, 117, 119, 120], "pdb": 228, "pdf": [0, 52, 53, 67, 73, 74, 75, 77, 96, 111, 113, 119, 126, 161, 162, 163, 164, 166, 179, 182, 184, 185, 189, 195, 196, 199, 209], "pdf_1": 52, "pdf_2": 52, "pdf_merg": 52, "pdf_proba": 52, "pdf_reshap": 53, "pdf_valu": 126, "pdfjoint": 195, "pdfjointxi": 175, "pdfs_new": 52, "pdfs_new2": 52, "pdfs_origin": 52, "pdfs_updated_mean": 52, "pdfs_updated_pi": 52, "pdfs_updated_sigma": 52, "pdrop": [111, 113], "pe": 57, "peac": 102, "peak": [100, 107, 114, 117, 166], "peaki": 57, "pearson": [1, 54, 56, 72, 73], "pearsonr": 177, "peculiar": 29, "pedagog": [2, 52], "pedant": [27, 61, 83, 86, 95, 110, 118, 119, 161], "pedestrian": 95, "peek": 32, "peel": 29, "peft": 116, "peftadaptermixin": 116, "pem": 89, "penal": [58, 67, 83], "pengcheng": 0, "penguin": [72, 77], "penguins_bay": 75, "peopl": [2, 23, 26, 57, 58, 61, 65, 67, 84, 93, 97, 100, 108, 116, 117, 119, 123, 125, 127, 142, 145, 146, 147, 152, 157, 158, 184, 210, 218, 220, 222], "pep": [2, 3, 4, 5, 7, 8, 9, 10, 93, 212], "pep484": 6, "per": [27, 29, 32, 36, 55, 58, 60, 61, 63, 75, 76, 87, 88, 89, 93, 96, 103, 105, 109, 111, 113, 118, 119, 136, 138, 149, 154, 158, 173], "per_clust": 61, "per_device_eval_batch_s": [71, 116, 119], "per_device_train_batch_s": [71, 116, 119], "per_gpu_eval_batch_s": 116, "per_gpu_train_batch_s": 116, "percal": [212, 229], "percent": [102, 118, 135], "percentag": [67, 75, 94, 102, 107, 112, 117, 123], "percentil": 93, "percepton": 65, "perceptron": [55, 57, 69, 70], "percetpron": 65, "perf203": 233, "perf401": 116, "perfect": [61, 67, 68, 75, 93, 102], "perfectli": [58, 81, 86, 93, 177, 210], "perform": [2, 3, 4, 7, 11, 16, 17, 27, 29, 30, 32, 36, 48, 49, 52, 53, 55, 56, 57, 58, 60, 62, 65, 68, 70, 71, 75, 76, 78, 82, 83, 84, 86, 87, 88, 89, 92, 93, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 115, 117, 127, 143, 145, 147, 168, 169, 173, 189, 192, 201, 202, 203, 204, 206, 207, 210, 215, 218, 220, 221, 227, 229, 230, 235, 238], "perform_bernoulli_tri": 147, "perform_kmeans_on_iri": 61, "perform_kmeans_on_mnist": 61, "perform_matrix_multipl": 110, "performancemod": 89, "perhap": [57, 93, 97, 105, 109, 112, 169, 217], "perimet": 4, "period": [29, 58, 90, 94, 100, 107, 108, 122, 149, 154, 155], "perk": 116, "permalink": 93, "perman": 97, "permiss": [4, 89, 96], "permit": [6, 8], "permut": [6, 55, 58, 61, 68, 77, 128, 210], "perp": 180, "perpendicular": 79, "perplex": 58, "persist": [57, 93, 101, 216, 235], "person": [22, 26, 67, 70, 73, 93, 94, 97, 98, 107, 108, 127, 142, 145, 146, 147, 157, 158, 180, 184, 215, 228, 237], "perspect": [2, 7, 57, 60, 62, 65, 67, 70, 81, 93, 157, 199], "pertain": [82, 101, 129], "pertub": 70, "perturb": [56, 65, 123], "pessimist": [36, 65], "pet": 237, "peter": [0, 48, 51, 52], "phase": [10, 56, 57, 58, 65, 95, 99, 100, 103], "phenomena": 76, "phenomenon": [105, 206], "phew": 99, "phi": [52, 55, 57, 65, 67, 70, 86, 169, 179], "phi_": 197, "phi_1": 67, "phi_2": 67, "phi_d": 67, "phi_i": 197, "phi_j": 86, "phi_k": [65, 67], "phi_m": 65, "phi_x": 197, "phillip": 0, "philosoph": 93, "phone": [96, 154, 237], "phone_numb": 237, "php": [142, 184], "phrase": [57, 60, 108, 145], "physic": [75, 79, 87, 108], "physician": 179, "physicist": 67, "pi": [4, 7, 51, 53, 55, 57, 58, 67, 73, 74, 75, 122, 123, 126, 127, 169, 175, 177, 179, 185, 190, 192, 197, 199, 209, 210], "pi_": 73, "pi_1": [51, 52, 73], "pi_2": [52, 73], "pi_3": [52, 73], "pi_a": 75, "pi_c": 75, "pi_g": 75, "pi_i": 75, "pi_k": [51, 52, 73], "pick": [8, 55, 57, 65, 76, 118, 129, 157, 202, 212], "pickl": [113, 114, 230], "pictori": [175, 209], "pictur": [5, 65, 84, 93, 96, 97, 106, 210], "pid": [119, 215], "piec": [3, 7, 17, 56, 65, 93, 108], "piecewis": 102, "pieter": 0, "pil": 62, "pile": 29, "pin": [57, 58, 122], "pin_memori": [57, 58, 118, 119], "pineappl": 97, "pink": 62, "pinpoint": 17, "pinv": 68, "pioneer": 54, "pip": [52, 71, 76, 89, 99, 103, 110, 111, 112, 113, 114, 118, 119, 120], "pipe": 215, "pipelin": [77, 92, 96, 97, 98, 100, 104, 105, 107, 108, 216, 217, 218], "pipeline_dataop": 99, "pipeline_train": 99, "pis_new": 52, "pishro": [0, 139, 140, 141, 167, 168, 169, 172, 173, 197, 199, 200, 202, 203, 205], "pitfal": [93, 105, 232, 235], "pivot": [27, 79, 82, 84], "pixel": [58, 62, 70, 76, 95, 96], "piyush01123": 72, "pkg": [93, 216], "place": [3, 5, 6, 7, 8, 11, 22, 27, 30, 32, 44, 47, 56, 60, 67, 73, 75, 82, 83, 88, 93, 94, 95, 103, 107, 116, 117, 173, 210, 212, 216, 220, 225, 227, 230, 237], "place_model_on_devic": 116, "placehold": [5, 25, 26, 37, 93, 157, 221], "placement": 89, "placementgroup": 89, "plagu": 56, "plai": [2, 7, 27, 30, 52, 58, 82, 83, 84, 93, 94, 95, 97, 98, 103, 105, 108, 116, 122, 123, 125, 135, 157, 210], "plain": [98, 179], "plan": [2, 79, 95, 98, 100, 108], "plane": [4, 60, 65, 126, 175], "plant": 108, "plate": 97, "platform": [30, 93, 94, 95, 96, 97, 98, 99, 100, 114, 226], "platt": 102, "platykurt": 170, "plausibl": 52, "playbook": [93, 116], "player": [29, 135], "pleas": [11, 29, 30, 52, 57, 58, 61, 71, 88, 114, 118, 119, 122, 145, 225, 230], "plot": [11, 17, 53, 57, 58, 60, 61, 65, 67, 68, 74, 75, 76, 79, 81, 82, 83, 84, 102, 105, 109, 122, 125, 139, 142, 145, 147, 155, 157, 158, 167, 168, 169, 170, 171, 172, 173, 177, 179, 206, 210], "plot_acf": 67, "plot_assign": 52, "plot_bar": 75, "plot_bernoulli_pmf": 143, "plot_binomial_pmf": 146, "plot_centroid": 52, "plot_classifier_decision_boundari": 74, "plot_continuous_pdf_and_cdf": [167, 168, 169], "plot_contour": [75, 126, 189], "plot_data": [52, 75], "plot_discrete_uniform_pmf": 159, "plot_distribut": 170, "plot_empirical_bernoulli": 143, "plot_empirical_binomi": 146, "plot_empirical_discrete_uniform": 159, "plot_empirical_pmf": 158, "plot_empirical_poisson": 154, "plot_gaussian_ellips": 52, "plot_gaussian_mixtur": 52, "plot_gmm": 52, "plot_gmm_approxim": 53, "plot_hist": 206, "plot_histogram": 173, "plot_joint": 75, "plot_kmean": 61, "plot_kmeans_clusters_and_elbow": 61, "plot_kwarg": 57, "plot_learning_r": [58, 122], "plot_margin": 75, "plot_naive_bayes_decision_boundari": 74, "plot_poisson_pmf": [154, 155], "plot_positional_encod": 57, "plot_scatt": [61, 75, 189], "plot_sigma_level": 52, "plot_sigma_vector": 52, "plot_sum_of_uniform_distribut": 171, "plot_surfac": [52, 75, 126, 189], "plot_true_pmf": [142, 158], "plotli": 126, "plotter": [81, 82, 83], "plotter3d": 82, "plotter_add": 82, "plotter_case1": 84, "plotter_case2": 84, "plotter_case3": 84, "plotter_case4": 84, "plotter_neg": 82, "plotter_po": 82, "plotter_sub": 82, "plt": [52, 53, 57, 58, 61, 62, 67, 68, 74, 75, 76, 81, 82, 83, 84, 118, 122, 123, 126, 127, 139, 142, 143, 145, 146, 147, 154, 155, 158, 159, 167, 169, 170, 173, 177, 189, 206, 210], "plu": [3, 44, 57, 58, 65, 117], "plug": [2, 27, 65, 67, 73, 75, 113, 179, 190], "plugin": 71, "plumb": 93, "plus_idx": 58, "plvxoubpazmsnihp5cz37oopzx0jkynszn": [142, 145, 147], "pm": [65, 67, 82, 206], "pmatrix": 55, "pmf": [0, 52, 56, 57, 73, 75, 77, 145, 150, 152, 153, 157, 162, 195, 196, 199, 209], "pmfjointxi": 175, "pml": 52, "pn": 57, "png": [62, 96, 173], "po": [52, 57, 189], "poc": 218, "point": [2, 4, 5, 6, 27, 29, 30, 32, 43, 44, 46, 47, 49, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 70, 71, 73, 74, 75, 76, 81, 82, 83, 84, 86, 88, 90, 94, 95, 97, 98, 99, 101, 103, 105, 110, 116, 122, 123, 125, 126, 129, 141, 142, 154, 158, 162, 164, 166, 167, 179, 192, 202, 203, 206, 209, 210, 212, 215, 216, 221, 226, 227, 230, 232], "pointer": [11, 27, 40, 46, 57, 77, 212, 230], "pointpat": 113, "poisson": [0, 77, 149, 153, 168, 183, 199], "poisson_distribut": 0, "police_dog": 4, "policedog": 4, "polici": [89, 93, 95, 96, 98, 108, 220], "policy_gradi": 95, "pollut": 74, "polosukhin": [0, 1, 54, 56, 69, 70], "poly1d": 67, "poly3dcollect": 126, "polyfit": 67, "polygon": 60, "polymorph": [2, 3, 4, 5, 8, 216], "polynomi": [16, 65, 67, 100], "polytop": 60, "pool": [57, 77, 95, 118, 121, 216], "pooled_hidden_st": 119, "pooled_logit": 119, "pooler": [119, 120], "poor": [17, 56, 60, 61, 76, 89, 93, 96], "poorli": [56, 57, 93, 98], "pop": [7, 11, 22, 23, 26, 32, 34, 35, 37, 229], "pop1": 32, "pop_callback": 116, "popen_fork": 119, "popul": [57, 65, 67, 75, 93, 106, 140, 141, 142, 145, 146, 147, 152, 155, 157, 158, 163, 164, 173, 177, 181, 184, 202, 205, 206], "popular": [16, 30, 52, 60, 67, 76, 93, 95, 96, 97, 98, 102, 108, 109, 123, 212, 224], "port": 224, "portabl": 30, "portalock": 212, "portion": [30, 57, 58, 67, 96, 117, 123, 131, 206, 212], "pos_emb": [57, 58, 119], "pos_embed_visu": 57, "pos_label": [71, 119], "pose": [65, 89, 94, 125], "posit": [2, 3, 11, 16, 19, 27, 29, 30, 32, 43, 44, 46, 47, 52, 56, 58, 60, 61, 65, 67, 68, 71, 73, 75, 81, 83, 84, 94, 95, 102, 105, 108, 111, 113, 117, 118, 119, 123, 125, 141, 142, 145, 147, 164, 170, 177, 179, 189, 197, 199, 210], "position": 55, "position_embed": [111, 113], "positional_embed": [57, 111, 113], "positionalembed": 57, "positionalencod": 57, "positionwisefeedforward": [57, 58, 111, 113, 118, 119, 120], "positionwisefeedforwardconfig": [57, 58, 118, 119, 120], "positionwiseffn": 57, "positive_skew": 170, "posix": 229, "posixpath": [57, 116, 216], "possess": [2, 81, 84, 87], "possibl": [2, 4, 5, 6, 7, 11, 13, 17, 19, 23, 29, 30, 36, 43, 44, 46, 52, 55, 56, 57, 58, 60, 61, 65, 67, 73, 75, 76, 78, 79, 86, 93, 95, 98, 102, 103, 105, 109, 110, 114, 117, 122, 123, 125, 126, 127, 129, 130, 136, 138, 143, 145, 146, 157, 158, 175, 183, 203, 206, 207, 212, 220], "possibli": [2, 3, 5, 30, 65, 93], "post": [2, 4, 10, 30, 55, 56, 57, 58, 65, 67, 69, 88, 93, 95, 99, 107, 109, 111, 112, 113, 114, 115, 116, 117, 122, 125, 142, 155, 158, 216, 230, 236, 237], "post0": 76, "post1": 113, "post_attention_layernorm": 71, "post_init": 116, "postal": 237, "postal_cod": 237, "postcondit": 4, "poster": 95, "posterior": [53, 74, 75, 123], "posteriori": 52, "postgresql": [95, 96, 97, 98], "postprocess": 95, "potenti": [2, 3, 5, 6, 8, 11, 13, 17, 27, 29, 30, 36, 43, 56, 57, 58, 65, 67, 70, 75, 86, 93, 94, 95, 96, 97, 100, 101, 107, 108, 117, 122, 145, 212, 215, 229, 235], "potter": 97, "pour": 36, "pow": [57, 74, 112, 113], "powbackward0": 113, "power": [9, 11, 16, 29, 30, 32, 56, 57, 58, 65, 67, 92, 93, 95, 97, 101, 105, 112, 117, 122, 198, 199, 202, 212, 215, 216, 222, 228], "powerset": 125, "pp": [1, 10, 54, 56, 69, 70, 73, 78, 123], "pprint": [5, 7, 11, 32, 36, 52, 53, 57, 58, 61, 62, 68, 71, 74, 88, 90, 111, 114, 116, 117, 118, 119, 120, 123, 212, 216, 217, 220, 224, 225, 228, 234, 236, 237], "pr": [57, 71, 93, 119, 180, 229], "pr_auc": [71, 119], "practic": [2, 4, 5, 7, 11, 13, 19, 30, 36, 48, 49, 52, 55, 56, 57, 58, 60, 65, 67, 69, 70, 75, 76, 78, 79, 84, 86, 87, 88, 95, 96, 97, 98, 100, 101, 102, 103, 105, 107, 114, 115, 122, 125, 135, 141, 164, 169, 201, 203, 204, 206, 210, 220, 232], "praction": 118, "practition": 115, "prai": 94, "praw": 98, "pre": [0, 1, 29, 58, 60, 70, 71, 77, 94, 95, 98, 100, 108, 118, 119, 122, 123, 213, 216, 237], "pre_head": 119, "pre_head_pool": 119, "precalcul": 57, "precalculu": 84, "preced": [56, 57, 58, 110], "precid": [55, 56, 70], "preciou": 99, "precis": [4, 8, 27, 29, 49, 52, 60, 62, 67, 71, 73, 74, 78, 84, 93, 94, 95, 102, 105, 106, 109, 112, 117, 119, 123, 145, 210, 212], "precision_recall_curv": [71, 119, 120], "precision_scor": [71, 119, 120], "precomput": 108, "precondit": 4, "precursor": 4, "pred": [61, 71, 76, 114, 119, 120], "pred_custom": 68, "pred_sklearn": 68, "predecessor": 35, "predefin": [55, 57, 93, 97, 105, 107], "predetermin": [57, 58, 93, 122], "predic": [4, 116], "predict": [3, 11, 30, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 71, 74, 75, 76, 79, 86, 92, 93, 94, 100, 102, 103, 104, 105, 106, 107, 116, 118, 119, 120, 123, 178, 179, 209, 215, 221, 235], "predict_log_proba": 74, "predict_one_sampl": [73, 74], "predict_pdf": 74, "predict_proba": [52, 53, 74], "prediction_loop": 116, "prediction_loss_onli": 116, "prediction_step": 116, "predictor": [49, 73, 76, 142], "preemptiv": 93, "prefer": [93, 94, 95, 97, 101, 102, 109, 116, 129, 210, 215], "prefetch": 212, "prefix": [58, 112, 113, 114, 217, 237], "prefixitem": 237, "preimag": 125, "preliminari": [77, 93, 99, 100], "prematur": [29, 177], "premis": [29, 93, 96, 98], "prepar": [76, 77, 92, 93, 94, 95, 98, 104, 105, 220], "preparatori": 58, "prepare_inputs_for_gener": 116, "prepend": [89, 116], "preprint": [0, 1, 54, 56, 69, 70, 117, 120, 122, 123], "preprocess": [56, 98, 99, 100, 105, 108, 116, 237], "preprocess_funct": [71, 119, 120], "preprocess_id": 237, "preprocess_logits_for_metr": 116, "prescrib": 29, "presenc": [2, 7, 8, 17, 30, 57, 94, 95, 99, 108, 210], "present": [2, 9, 10, 11, 16, 17, 27, 29, 30, 44, 55, 56, 57, 58, 60, 61, 67, 75, 79, 93, 94, 95, 129, 236], "preserv": [5, 7, 27, 55, 57, 58, 77, 82, 108, 212, 238], "press": [0, 1, 48, 51, 52, 54, 56, 59, 60, 62, 65, 66, 67, 72, 73, 78, 79, 83, 86, 97, 122, 123, 145, 210], "pressur": [95, 96, 114], "presum": 3, "pretend": [55, 57, 67, 210], "pretrain": [56, 70, 95, 99, 216, 217, 218], "pretrainedmodel": [116, 119, 120], "pretrainedtoken": [119, 120], "pretrainedtokenizerbas": [116, 119, 120], "pretrainedtokenizerfast": [119, 120], "pretti": [5, 6, 36, 53, 57, 58, 61, 62, 67, 68, 70, 71, 74, 76, 88, 90, 101, 111, 114, 116, 117, 118, 119, 120, 123, 136, 216, 217, 220, 224, 225, 228, 234, 236, 237], "pretty_print": [58, 88, 118, 217], "prev_marginals_": 53, "preval": [56, 94], "prevent": [4, 5, 6, 27, 55, 57, 67, 74, 83, 93, 96, 100, 105, 108, 117, 119, 123, 213, 220, 221, 226, 230, 235], "previou": [2, 11, 23, 27, 29, 30, 46, 52, 53, 55, 56, 57, 58, 60, 61, 63, 65, 67, 73, 75, 76, 79, 84, 89, 93, 95, 107, 108, 110, 118, 119, 125, 129, 132, 143, 145, 146, 147, 176, 188, 195, 200, 205, 209, 210, 212, 216], "previous": [4, 5, 13, 27, 46, 55, 56, 67, 75, 79, 83, 84, 93, 109, 125, 142, 169, 177, 210, 212], "price": [58, 65, 67, 86, 93, 95, 96, 97, 98], "priest": 57, "primal": 215, "primari": [2, 9, 20, 30, 32, 47, 56, 60, 93, 97, 99, 100, 117, 215, 216], "primarili": [9, 13, 19, 29, 43, 55, 58, 73, 93, 105, 173, 215, 220], "prime": [55, 56, 57, 84, 93, 172, 175, 180], "primer": [56, 57], "princeton": 89, "princip": [32, 60, 70, 100, 192, 210], "principl": [1, 2, 3, 7, 10, 27, 30, 32, 36, 48, 49, 60, 65, 73, 77, 84, 89, 93, 98, 99, 100, 105, 106, 109, 123, 135, 185, 202, 223, 227], "print": [2, 3, 4, 5, 7, 8, 9, 17, 20, 22, 23, 26, 32, 35, 36, 52, 57, 58, 61, 62, 67, 68, 70, 71, 74, 75, 76, 81, 83, 88, 90, 93, 96, 110, 112, 113, 116, 117, 118, 120, 123, 126, 142, 145, 147, 158, 189, 206, 210, 212, 215, 217, 221, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238], "print_iterable_using_for": 233, "print_iterable_using_next": 233, "print_recip": 228, "print_stat": 229, "println": [3, 5], "prior": [30, 51, 53, 56, 58, 65, 74, 93, 97, 123, 135, 145, 179, 210, 211], "prior_matrix": 53, "prior_vector": 53, "priori": [57, 60], "priorit": [30, 56, 94, 95, 101], "prioriti": [30, 93, 94], "privaci": [94, 96, 98, 108], "privat": [93, 98, 99, 116], "privateuse1_memory_usag": 112, "privateuse1_time_tot": 112, "privileg": 89, "pro": [30, 93, 108], "prob": [57, 67, 71, 74, 75, 111, 113, 119, 120, 123, 158, 179], "prob_fn": 75, "proba": 74, "probabilist": [0, 51, 52, 55, 57, 59, 60, 62, 66, 67, 72, 73, 109, 205], "probability_theori": [75, 143, 146, 154, 167, 168, 169, 171, 189, 206], "probabilitycours": [0, 142, 184], "probabilsit": [56, 57], "probabl": [0, 13, 19, 49, 50, 51, 52, 53, 55, 57, 58, 60, 62, 64, 65, 67, 70, 71, 72, 74, 75, 76, 86, 93, 95, 101, 102, 105, 108, 112, 116, 119, 120, 126, 127, 128, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 157, 158, 159, 161, 163, 164, 166, 167, 168, 170, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 236], "probablist": [67, 73], "probe": 180, "probit": 186, "problem": [0, 3, 7, 8, 13, 16, 27, 46, 47, 49, 50, 55, 56, 57, 58, 70, 73, 76, 77, 79, 88, 92, 97, 99, 100, 101, 102, 105, 106, 107, 109, 118, 122, 124, 125, 127, 129, 135, 142, 147, 158, 169, 171, 173, 179, 181, 194, 207, 209, 210, 212, 216], "problem_typ": [71, 119], "problemat": [6, 61, 67, 93, 229], "probml": [0, 52], "probml_util": 52, "proc": [89, 215], "proce": [2, 6, 27, 29, 36, 44, 56, 57, 58, 60, 62, 67, 73, 93, 94, 95, 142, 211, 212], "procedur": [16, 27, 29, 30, 52, 55, 65, 78, 99, 107, 109, 123, 202], "proceed": [65, 88, 89, 90, 101, 215], "process": [0, 1, 2, 4, 5, 6, 7, 9, 11, 17, 20, 27, 29, 30, 32, 35, 43, 44, 46, 47, 54, 56, 58, 62, 65, 67, 69, 70, 72, 73, 75, 82, 83, 89, 90, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 116, 117, 122, 140, 141, 147, 149, 158, 167, 168, 169, 172, 173, 197, 199, 200, 202, 203, 205, 209, 212, 216, 217, 218, 221, 226, 229, 230, 237], "process_0": 88, "process_1": 88, "process_ceo": 7, "process_employe": 7, "process_id": [88, 90], "process_it": 215, "process_large_dataset_effici": 229, "process_large_dataset_ineffici": 229, "process_list": 215, "process_manag": 7, "process_misleading_pair": 5, "process_queri": 221, "process_schema": 237, "process_silent_error_pair": 5, "processcontext": 88, "processed_schema": 237, "processor": [29, 117, 215, 230], "procur": [56, 94], "prod": [73, 74, 76, 190], "prod_": [52, 55, 56, 67, 70, 73, 74, 75, 76, 126, 175, 187, 200, 210], "prod_i": 76, "produc": [7, 17, 55, 56, 57, 58, 65, 67, 73, 79, 86, 103, 104, 107, 117, 120, 123, 212, 221, 234], "product": [3, 11, 20, 29, 56, 58, 67, 70, 73, 77, 78, 82, 83, 85, 89, 92, 94, 96, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109, 111, 117, 118, 123, 124, 135, 145, 175, 179, 187, 190, 198, 200, 210, 218], "product_id": 96, "production_lak": 99, "production_warehous": 99, "prof": [65, 112, 113, 114, 157], "profession": 93, "professor": [125, 136, 158, 168, 180, 210], "profil": [77, 89, 93, 110, 114, 229], "profile_funct": 229, "profile_kwarg": 113, "profile_memori": [113, 114], "profile_model": 111, "profile_one_step": 113, "profile_step": [111, 113], "profile_with_ev": 112, "profiler_config": 111, "profileract": [112, 113, 114], "profilerconfig": 111, "profilerstep": 112, "profilingresult": 111, "profit": [95, 145], "program": [2, 3, 4, 5, 6, 7, 9, 10, 11, 17, 19, 27, 32, 36, 57, 61, 77, 87, 93, 96, 97, 114, 116, 213, 220, 221, 230], "programm": [5, 11, 29, 212, 230, 232], "programmat": 57, "progress": [27, 30, 58, 89, 93, 94, 122, 230], "progress_bar": [53, 118], "prohibit": [29, 52, 70], "proj": [55, 84, 117], "project": [52, 58, 70, 71, 77, 82, 83, 92, 94, 99, 100, 101, 102, 111, 113, 116, 117, 118, 119, 123, 126, 187, 189, 192, 217, 225], "project_nam": [216, 218], "projected_context_vector": [55, 111, 113], "prometheu": 93, "promin": 78, "promis": [52, 56, 67, 117], "promot": [58, 83, 93, 218, 224], "prompt": [29, 52, 56, 70, 169], "prone": [11, 99, 101, 216, 225], "pronounc": 123, "proof": [27, 30, 52, 57, 58, 59, 60, 63, 65, 67, 73, 79, 95, 123, 133, 138, 140, 143, 169, 173, 177, 182, 185, 190, 194, 199, 200, 202, 210], "proofsketch": 125, "proofwiki": 84, "prop": 169, "prop_cycl": 52, "propag": [27, 57, 58, 93, 95, 118, 212], "propagate_args_to_deepspe": 116, "proper": [8, 57, 76, 96, 98, 119, 125], "properit": 78, "properli": [17, 93, 118, 222, 237], "properti": [2, 6, 9, 11, 17, 22, 23, 29, 30, 32, 43, 44, 52, 55, 56, 57, 58, 61, 62, 65, 66, 67, 70, 78, 82, 83, 86, 111, 113, 116, 123, 125, 149, 162, 164, 172, 174, 177, 183, 187, 190, 197, 198, 218, 227], "proport": [13, 19, 20, 30, 43, 60, 65, 67, 73, 75, 94, 102, 123, 126, 149, 154, 210], "proportion": [70, 83], "propos": [52, 55, 57, 65, 70, 97, 158, 209, 212], "proposit": [56, 130], "proprietari": 98, "propto": 73, "protect": [93, 108, 116, 213], "protected_namespac": [216, 218], "proteom": 96, "protocol": [2, 3, 6, 77, 93, 108, 212, 227, 231], "prototyp": [62, 95, 108], "provdi": 57, "prove": [5, 27, 29, 30, 36, 43, 44, 52, 60, 65, 67, 75, 78, 94, 122, 123, 125, 142, 173, 182, 183, 200, 202, 207, 210], "proven": [26, 30, 44, 55, 56, 70, 75, 169], "provid": [2, 4, 5, 6, 8, 9, 10, 11, 16, 19, 27, 29, 30, 32, 36, 52, 55, 56, 57, 58, 60, 62, 65, 67, 68, 69, 70, 76, 78, 79, 81, 83, 84, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 114, 116, 117, 119, 122, 123, 179, 198, 199, 202, 203, 206, 210, 212, 215, 216, 218, 220, 221, 224, 225, 226, 229, 233, 234, 238], "provok": 129, "prowess": 57, "prudent": 17, "prune": [95, 101], "prune_head": 116, "pry": 115, "pseudo": [56, 57, 68, 70, 76, 95, 100, 103, 218], "pseudocod": 116, "psf": 93, "pspace": [130, 131, 132, 133, 140, 141, 142, 143, 147, 158, 163, 164, 165, 175, 182], "pstat": 229, "psu": [67, 172, 173, 176, 178, 181, 184, 193], "psutil": [71, 119, 120, 215], "psycopg2": 98, "pt": [71, 117, 119, 120], "pth": 216, "ptxcompil": 113, "pub": [98, 99], "public": [3, 5, 89, 93, 96, 98], "publicdn": 89, "publicdnsnam": 89, "publish": [0, 22, 23, 57, 72, 73, 140, 141, 143, 146, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 197, 199, 200, 202, 203, 205, 210], "pull": [52, 93, 100, 103, 218], "pull_request": 93, "pun": [67, 75], "punctuat": [56, 57], "purchas": [95, 145, 183], "pure": [79, 99, 117], "purg": 111, "purge_global_scop": 111, "puriti": 59, "purity_per_clust": 61, "purity_scor": 61, "purpl": [55, 62], "purpos": [2, 6, 11, 17, 29, 32, 52, 55, 58, 60, 61, 62, 65, 67, 70, 79, 81, 88, 89, 93, 99, 105, 116, 117, 122, 129, 212, 226, 229], "push": [5, 22, 23, 27, 32, 34, 35, 37, 55, 65, 75, 77, 86, 92, 93, 99, 103, 218], "push1": 32, "push2": 32, "push3": 32, "push_to_hub": 116, "push_to_hub_model_id": 116, "push_to_hub_organ": 116, "push_to_hub_token": 116, "pushtohubmixin": 116, "put": [27, 49, 52, 58, 61, 62, 65, 67, 71, 73, 76, 89, 93, 98, 99, 112, 123, 126, 137, 157, 183, 215, 216, 233], "pval": 155, "pvalu": 67, "pwd": 88, "px2_given_adeli": 75, "px2_given_chinstrap": 75, "px2_given_gentoo": 75, "px3_given_adeli": 75, "px3_given_chinstrap": 75, "px3_given_gentoo": 75, "py": [3, 6, 57, 58, 61, 68, 71, 76, 88, 89, 90, 93, 99, 103, 114, 116, 117, 119, 120, 122, 127, 143, 168, 169, 173, 189, 206, 210, 213, 215, 216, 217, 225, 226, 227, 229, 230], "py38": 93, "pyarrow": 113, "pycqa": 93, "pydant": [6, 57, 71, 77, 88, 99, 111, 113, 116, 117, 212, 217, 218, 219, 221, 224, 225, 231], "pydanticserializationerror": 237, "pyi": 8, "pyi034": [9, 57, 226], "pylint": [61, 74], "pymongo": 98, "pymysql": 98, "pyplot": [52, 53, 57, 58, 61, 62, 68, 74, 75, 76, 82, 118, 122, 123, 126, 127, 139, 142, 145, 147, 155, 158, 167, 169, 170, 177, 189, 206, 210], "pyproxim": 69, "pytest": 93, "pythagora": 83, "python": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 19, 20, 27, 30, 32, 36, 55, 57, 58, 60, 67, 70, 75, 77, 79, 88, 90, 97, 98, 99, 103, 113, 114, 117, 119, 122, 126, 127, 142, 169, 213, 214, 216, 221, 224, 225, 226, 227, 229, 232, 233, 234, 236, 237, 238], "python3": [57, 61, 71, 89, 93, 99, 114, 116, 117, 119, 120, 122, 215, 225, 229, 230], "python_fil": 93, "python_vers": 99, "pythonds3": [0, 22, 23], "pythonhashse": [57, 70, 103], "pythonmorsel": 233, "pythonpath": 88, "pytorch": [7, 55, 59, 60, 67, 69, 70, 71, 77, 87, 88, 89, 91, 93, 96, 103, 113, 114, 115, 116, 117, 119, 120, 123, 212, 215, 216, 218], "pytorch_jacobian": 123, "pytorch_softmax": 123, "pytorch_softmax_output": 123, "pytorch_softmax_prob": 123, "pyupgrad": 93, "pyvenv": 93, "q": [22, 23, 26, 52, 55, 57, 58, 60, 65, 67, 71, 73, 78, 93, 95, 110, 111, 112, 113, 114, 117, 118, 120, 125, 137, 191, 192, 232], "q0": 57, "q_1": 57, "q_2": 57, "q_i": [57, 120], "q_learn": 95, "q_or_k_or_v": 57, "q_proj": 71, "q_t": 57, "qa": [93, 99], "qizc1": [145, 147], "qkv": 71, "qkv_lora_weight_param": 71, "qq": 52, "qqplot": 67, "qquad": [73, 125, 146, 150, 154, 159, 167, 168, 169], "quad": [29, 30, 49, 50, 51, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 79, 81, 82, 84, 95, 117, 123, 126, 132, 136, 142, 143, 145, 147, 157, 170, 175, 180, 185, 187, 189, 190, 192, 194, 197, 199, 202, 205, 206, 210], "quadcontourset": 126, "quadrat": [13, 57, 67, 210], "qualifi": 2, "qualiti": [17, 52, 56, 60, 62, 65, 92, 94, 95, 98, 99, 102, 107], "quality_loss": 95, "quality_predict": 95, "quantifi": [19, 29, 52, 57, 65, 67, 83, 84, 94, 95, 106, 117, 120, 178, 202, 203], "quantit": [84, 102], "quantiti": [52, 56, 60, 65, 67, 79, 86, 94, 99, 106, 117, 170], "quantiz": [29, 76, 95, 101], "queri": [17, 30, 58, 70, 89, 95, 96, 97, 98, 99, 108, 111, 113, 116, 117, 118, 119, 215, 221], "query_embed": 221, "question": [0, 5, 12, 18, 25, 26, 29, 33, 39, 43, 44, 52, 56, 57, 58, 59, 60, 64, 67, 68, 69, 73, 75, 76, 77, 93, 94, 95, 96, 129, 135, 136, 142, 146, 147, 149, 158, 179, 180, 183, 187, 199, 202, 210, 216, 222, 229, 230, 233, 235], "question_answ": 95, "question_token": 58, "questionnair": 96, "queu": [22, 23, 110], "queue": [26, 33, 38, 77, 88, 89, 110, 215], "queue_item": [22, 23], "queuelist": [22, 26], "quick": [11, 17, 20, 32, 65, 70, 93, 99, 100, 105], "quicker": 29, "quickli": [30, 61, 65, 71, 93, 95, 99, 101, 107, 108], "quicksort": 11, "quirk": [9, 55, 57, 70], "quit": [3, 8, 11, 13, 30, 35, 57, 58, 60, 62, 63, 65, 67, 75, 86, 88, 95, 106, 108, 116, 123, 142, 173, 212], "quiver_kwarg": 82, "quora": [30, 84], "quot": [3, 56, 57, 60, 67, 73, 88, 93, 97, 114, 131, 189, 227, 233], "quota": 89, "quotient": 123, "qwen": 71, "qwen1": 71, "qwen2decoderlay": 71, "qwen2forsequenceclassif": 71, "qwen2mlp": 71, "qwen2model": 71, "qwen2rmsnorm": 71, "qwen2rotaryembed": 71, "qwen2sdpaattent": 71, "qwen2token": 71, "r": [0, 1, 4, 7, 27, 29, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 89, 93, 95, 97, 99, 101, 102, 103, 105, 109, 120, 123, 125, 129, 136, 137, 139, 142, 145, 147, 149, 155, 158, 162, 163, 165, 166, 167, 177, 180, 181, 187, 189, 190, 191, 192, 194, 195, 197, 199, 202, 206, 210, 212, 221, 224, 228, 237], "r2_score": 68, "r50k_base": 57, "r_": [29, 52, 67, 86, 87], "r_1": [60, 79], "r_2": [60, 79], "r_3": [60, 79], "r_4": 79, "r_g": 87, "r_i": 79, "r_k": [52, 60, 86], "r_l": 87, "r_m": 79, "r_t": 29, "r_y": 86, "ra": 93, "rabbitmq": 96, "race": [44, 90, 213, 226], "rachel": 57, "rack": 93, "radam": [58, 122], "radar": 25, "radford": [0, 1, 54, 55, 56, 57, 70], "radic": 95, "radiu": 4, "rag_system": 221, "ragsystem": 221, "rai": [95, 96, 116], "rain": [102, 129], "rais": [3, 4, 5, 6, 7, 8, 9, 22, 23, 32, 36, 53, 57, 58, 61, 62, 68, 70, 71, 74, 88, 93, 95, 99, 110, 111, 112, 113, 114, 116, 127, 142, 198, 199, 210, 212, 216, 218, 220, 221, 225, 227, 228, 233, 237], "raise_error_if_seed_is_negative_or_outside_32_bit_unsigned_integ": 70, "raise_for_statu": 57, "rand": [57, 61, 67, 96, 102], "rand_lik": 114, "randint": [57, 58, 88, 111, 113, 118, 127, 210], "randn": [55, 57, 58, 67, 70, 110, 112, 114, 123, 212], "random": [0, 32, 49, 53, 56, 57, 58, 60, 61, 62, 68, 70, 73, 74, 75, 76, 77, 86, 89, 95, 96, 100, 101, 103, 105, 111, 113, 116, 123, 126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 176, 177, 178, 179, 180, 182, 183, 184, 189, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 209, 210, 212, 227, 237], "random_attribut": 237, "random_forest": 227, "random_index": 57, "random_numb": 147, "random_sequ": 57, "random_sequence_decod": 57, "random_split": 58, "random_st": [52, 53, 61, 62, 68, 74, 75], "randomforest": 227, "randomforeststrategi": 227, "randomli": [52, 53, 55, 60, 63, 93, 105, 142, 145, 146, 147, 157, 158, 173], "rang": [2, 5, 11, 13, 17, 19, 27, 29, 30, 36, 41, 43, 44, 46, 47, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 70, 71, 74, 75, 76, 79, 84, 88, 89, 93, 95, 96, 97, 98, 99, 102, 105, 108, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 127, 136, 137, 145, 147, 149, 157, 158, 161, 198, 206, 210, 212, 213, 215, 216, 221, 229, 230, 233, 234, 238], "rangebound": 16, "rangeindex": 75, "rangl": 57, "rank": [0, 67, 71, 77, 96, 123, 126], "rapid": [17, 57], "rapidli": [56, 58, 101, 108, 122], "rare": [93, 94, 101, 105, 108, 125], "rarer": 195, "rarest": 75, "rariti": 94, "rasbt": 69, "raschka": [56, 57, 59, 60, 67, 69, 70], "rate": [0, 1, 29, 30, 54, 56, 57, 68, 70, 76, 93, 94, 95, 98, 101, 102, 104, 105, 109, 117, 123, 145, 147, 154, 168, 173, 216, 225], "rather": [2, 5, 6, 7, 8, 29, 30, 36, 55, 56, 57, 58, 60, 65, 75, 76, 93, 94, 96, 97, 99, 102, 105, 108, 109, 122, 123, 173, 184, 212, 215, 218, 227], "ratic": 62, "ratio": [16, 17, 52, 57, 58, 61, 62, 67, 100, 122, 123, 129], "ration": [78, 125], "rational": [55, 56, 57, 95, 96, 99], "ravel": [52, 53, 75, 126, 189], "raw": [52, 57, 58, 75, 76, 88, 95, 96, 97, 99, 100, 111, 120, 215, 237], "raw_": 99, "raw_dvc_metadata": 217, "raw_file_format": 217, "raw_file_s": 217, "raw_filepath": 217, "raw_table_nam": 99, "ray_scop": 116, "rceil": [29, 62], "rcount": 61, "rcparam": 52, "rcurl": 169, "rdgy": [57, 127], "rdzv": 88, "rdzv_backend": 89, "rdzv_endpoint": 89, "rdzv_id": 89, "re": [5, 6, 11, 13, 19, 27, 29, 36, 43, 44, 46, 51, 52, 57, 58, 61, 65, 67, 71, 73, 84, 93, 98, 100, 102, 105, 108, 117, 210, 212, 215, 217, 218, 221, 226, 233], "reach": [5, 26, 27, 29, 30, 43, 44, 46, 57, 58, 61, 84, 90, 93, 110, 122, 230], "react": [95, 104], "read": [0, 73, 89, 110, 118, 180], "read_csv": 67, "read_only_attr": 116, "readabl": [11, 53, 65, 74, 93, 96, 125, 216, 218, 229], "reader": [9, 10, 29, 52, 57, 70, 73, 84, 100, 123, 133, 135, 169, 179], "readi": [52, 55, 60, 73, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109], "readili": [65, 95, 123], "readthedoc": [0, 7, 228, 237], "real": [8, 27, 29, 30, 57, 60, 62, 65, 66, 67, 70, 75, 77, 79, 81, 82, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 102, 105, 107, 109, 112, 114, 116, 117, 122, 123, 125, 129, 136, 137, 142, 147, 148, 153, 157, 158, 162, 168, 173, 175, 191, 197, 212, 220, 237], "realis": [56, 100, 105, 145, 224], "realist": [94, 100, 105], "realiti": [27, 36, 52, 73, 75, 99, 129, 209], "realiz": [5, 30, 49, 52, 56, 60, 65, 67, 73, 82, 86, 93, 127, 142, 145, 147, 157, 167, 187, 210, 227], "realli": [2, 3, 5, 6, 7, 23, 27, 46, 52, 57, 61, 65, 67, 73, 75, 76, 93, 98, 100, 103, 105, 112, 145, 205, 206, 216, 226, 227], "realm": [73, 82, 83, 123, 210], "realpython": 215, "realvalu": 197, "rear": [23, 25, 36], "rearch": 101, "rearrang": [20, 49, 52, 65, 67, 79, 173, 192, 210], "reason": [3, 9, 27, 29, 30, 36, 52, 56, 57, 58, 60, 65, 67, 70, 73, 75, 79, 82, 93, 94, 97, 99, 100, 101, 102, 109, 116, 117, 125, 145, 158, 192, 206, 210, 212, 216, 217, 229, 237, 238], "reassign": 93, "rebuilt": 96, "recal": [27, 29, 52, 55, 57, 58, 60, 62, 65, 67, 70, 71, 73, 74, 75, 93, 95, 97, 99, 102, 105, 106, 109, 112, 117, 118, 119, 123, 124, 125, 130, 132, 135, 136, 138, 143, 154, 157, 158, 173, 179, 180, 191, 202, 210], "recalcul": [60, 63], "recall_scor": [71, 119, 120], "recap": [5, 52, 65, 212], "receiv": [8, 27, 56, 58, 67, 86, 93, 94, 95, 102, 108, 109, 116, 125, 149, 154, 179, 209, 210, 212, 237], "recenc": 95, "recent": [32, 56, 93, 103, 109, 230], "recheck": 226, "recip": [104, 105, 112, 113, 115, 228], "recipe_cl": 228, "recipebook": 228, "reciproc": [16, 78, 123, 192], "reclaim": 114, "recogn": [2, 27, 29, 32, 49, 56, 60, 75, 76, 78, 81, 82, 93, 94, 95, 96, 98, 100, 108, 123, 133, 175, 181, 202], "recognit": [0, 1, 51, 52, 56, 59, 60, 62, 66, 67, 72, 73, 83, 94, 95, 108, 123, 192, 193], "recogniz": 29, "recombin": 16, "recommen": 108, "recommend": [29, 60, 65, 67, 70, 89, 93, 96, 97, 98, 99, 100, 108, 109, 111], "reconcil": [57, 67, 75], "reconstruct": 83, "reconstruct_imag": 62, "reconstructed_imag": 62, "recontruct": 60, "record": [27, 30, 94, 95, 96, 97, 98, 99, 103, 105, 112, 114], "record_funct": [113, 114], "record_memory_histori": 114, "record_shap": [113, 114], "recov": [51, 52, 56, 57, 60, 63, 67, 73, 75, 76, 83, 133, 173, 175, 179, 209, 216], "recoveri": 98, "recreat": 57, "rectangl": [30, 32, 65, 125, 173], "rectangular": [65, 75, 175], "rectifi": [55, 57], "recur": 27, "recurr": [16, 27, 54, 56, 57], "recurs": [16, 20, 29, 31, 71, 116, 228], "recursivebinarysearchexactmatch": 27, "red": [52, 55, 61, 62, 65, 67, 73, 75, 79, 82, 83, 84, 126, 129, 136, 145, 170, 173, 189, 206], "reddit": [56, 69, 96, 98], "redef": 57, "redefin": [27, 29, 125, 187, 210], "redi": [96, 98, 224], "redirect": 93, "redo": 235, "redshift": [97, 98], "reduc": [11, 13, 16, 17, 19, 27, 30, 47, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 75, 88, 89, 92, 94, 95, 96, 97, 98, 100, 101, 108, 117, 122, 123, 131, 132, 135, 177, 180, 210, 215, 220, 229, 238], "reduceop": 88, "reduct": [62, 67, 75, 83, 95, 100, 101, 117, 118, 120, 122, 230], "redund": [58, 70, 96, 97, 189], "reestim": 52, "ref": [109, 213, 230, 237], "refactor": [35, 220, 221, 222, 227, 229, 238], "refcount": 114, "refer": [10, 23, 35, 47, 49, 63, 65, 71, 75, 76, 86, 102, 124, 127, 145, 157, 190, 206], "referenc": [32, 57, 76, 169, 212], "refin": [27, 58, 92, 95, 99, 102, 122], "reflect": [7, 10, 30, 52, 55, 58, 65, 75, 84, 94, 95, 98, 116, 117, 122, 123], "reformul": 123, "refrain": 19, "refram": [29, 79, 124, 135], "refresh": [62, 65, 73, 79, 99, 128, 157, 233], "refus": 93, "regard": [6, 58, 61, 93, 170, 199, 215], "regardless": [2, 7, 11, 13, 19, 27, 30, 36, 43, 55, 56, 57, 58, 65, 75, 79, 82, 83, 103, 172, 226], "regex": 71, "regim": [16, 52, 56, 58, 122], "region": [62, 73, 86, 89, 107, 125], "regist": [71, 88, 107, 111, 113, 221, 225, 227, 228], "register_backward_hook": 116, "register_buff": [57, 111, 113, 116], "register_for_auto_class": 116, "register_forward_hook": 116, "register_forward_pre_hook": 116, "register_full_backward_hook": 116, "register_full_backward_pre_hook": 116, "register_load_state_dict_post_hook": 116, "register_load_state_dict_pre_hook": 116, "register_modul": 116, "register_paramet": [57, 116], "register_scheduler_cl": 225, "register_state_dict_post_hook": 116, "register_state_dict_pre_hook": 116, "registeredschedul": 225, "registr": [97, 221], "registri": [5, 77, 92, 93, 99, 105, 216, 221, 223, 228], "regress": [49, 52, 54, 55, 58, 60, 65, 68, 72, 75, 77, 78, 86, 93, 95, 101, 105, 106, 107, 109, 123, 210, 227], "regression_diabet": 68, "regression_test": 68, "regul": [93, 96], "regular": [0, 1, 5, 16, 30, 54, 55, 56, 57, 58, 68, 83, 99, 100, 101, 106, 107, 108, 109, 111, 113], "regularli": [93, 98, 105, 109], "regulatori": [93, 98], "regurgit": 123, "rehash": 17, "reighn": 62, "reilli": [92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109], "reinforc": 95, "reiniti": [61, 93], "reinvent": 237, "reiter": [57, 73, 100], "reject": [3, 67, 93], "rel": [9, 11, 16, 27, 44, 49, 52, 56, 57, 58, 60, 61, 67, 73, 75, 76, 79, 84, 93, 94, 117, 120, 122, 123, 125, 142, 143, 173, 177, 180, 191, 210, 230], "relat": [2, 3, 4, 6, 7, 16, 19, 27, 29, 30, 47, 55, 56, 57, 58, 65, 67, 84, 93, 94, 96, 98, 99, 103, 108, 112, 119, 124, 125, 135, 175, 178, 210, 212, 220, 221, 222, 235], "relationship": [2, 3, 6, 7, 10, 16, 27, 29, 30, 32, 47, 55, 56, 57, 65, 67, 73, 79, 84, 86, 96, 97, 100, 101, 105, 109, 117, 122, 179, 190, 210, 215, 220], "relax": 30, "releas": [90, 213], "relev": [7, 27, 29, 30, 55, 57, 58, 70, 78, 89, 94, 95, 96, 99, 100, 102, 105, 107, 108, 109, 123, 220, 221], "reli": [2, 5, 7, 30, 53, 56, 57, 58, 78, 93, 97, 101, 105, 108, 117, 122, 215, 220, 228], "reliabl": [17, 58, 67, 78, 92, 93, 94, 97, 99, 102, 105, 107, 108, 109, 116], "religi": 57, "reload": 237, "relu": [55, 57, 118], "remain": [11, 13, 20, 27, 29, 30, 32, 36, 44, 46, 52, 55, 57, 60, 65, 67, 79, 81, 82, 83, 87, 93, 97, 98, 99, 102, 105, 109, 122, 123, 132, 135, 179, 180, 210, 212, 215, 216, 220, 221], "remark": [65, 76, 182, 202, 209], "remeb": 67, "remedi": 60, "rememb": [6, 46, 49, 58, 65, 67, 70, 73, 75, 83, 88, 89, 95, 100, 101, 102, 103, 105, 157, 202, 236], "remind": [60, 65, 67, 70, 73, 99, 142, 147, 199], "reminisc": 52, "remot": [89, 99, 103], "remov": [7, 11, 17, 22, 23, 29, 32, 36, 39, 40, 45, 57, 58, 67, 71, 73, 76, 77, 93, 98, 99, 100, 105, 116, 117, 118, 119, 129, 221, 229, 235], "remove_callback": [58, 116], "remove_column": [71, 119], "remove_front": [23, 25], "remove_rear": [23, 25], "remove_special_token": 58, "remove_unused_column": 116, "removed_item": 32, "removedupl": 44, "renam": 75, "rename_column": [71, 119, 120], "renda": 69, "render": [52, 61, 67, 89, 220], "rendezv": 88, "rent": 97, "rental": 94, "reorder": 30, "reorder_and_upcast_attn": 57, "reorgan": [20, 36], "rep": [1, 10], "repeat": [5, 11, 17, 26, 43, 44, 46, 52, 53, 55, 57, 58, 60, 65, 93, 105, 112, 113, 114, 122, 123, 127, 147, 158, 171, 189, 206, 210], "repeatedli": [11, 27, 29, 70, 103, 216], "repetit": 57, "rephras": [5, 60, 63, 65, 145, 149], "replac": [2, 4, 5, 6, 7, 16, 44, 55, 56, 57, 58, 60, 62, 63, 65, 67, 71, 73, 75, 78, 79, 89, 93, 105, 106, 107, 116, 118, 122, 123, 127, 139, 142, 147, 152, 158, 162, 191, 210, 221, 227, 229, 237], "repli": [129, 145], "replic": [57, 58, 88, 93, 96, 98, 206], "replica": [96, 99, 218], "repmat": 206, "repo": [57, 89, 93], "report": [65, 74, 89, 93, 95, 97, 98, 99, 102, 105, 117, 179, 210], "report_to": [71, 116, 119], "reposit": [56, 57], "repositori": [9, 58, 79, 96, 97, 98, 99, 103, 113, 115, 227], "repr": 116, "repres": [2, 4, 5, 6, 7, 9, 13, 17, 19, 20, 27, 29, 30, 32, 36, 44, 46, 47, 52, 55, 56, 57, 58, 61, 62, 65, 67, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 88, 93, 95, 96, 97, 98, 99, 100, 102, 105, 108, 112, 117, 118, 122, 125, 126, 131, 133, 135, 142, 145, 157, 173, 175, 179, 182, 187, 192, 202, 206, 217], "represent": [2, 7, 11, 32, 36, 52, 60, 61, 62, 70, 73, 78, 79, 82, 95, 96, 97, 100, 101, 116, 117, 118, 119, 123, 125, 126, 132, 158, 210, 216], "reproduc": [52, 53, 61, 71, 74, 75, 88, 93, 99, 105, 109, 111, 113, 114, 119, 120, 127, 142, 143, 145, 147, 155, 158, 167, 168, 169, 170, 173, 189, 206, 210], "request": [57, 62, 76, 93, 97, 98, 108, 109, 212, 215, 220, 230, 237], "requir": [2, 3, 4, 6, 7, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 32, 36, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 74, 76, 79, 83, 88, 95, 96, 97, 99, 100, 101, 102, 103, 107, 108, 110, 113, 114, 116, 117, 122, 123, 126, 135, 194, 207, 210, 212, 215, 218, 220, 221, 229, 233, 237, 238], "required_field": 116, "requirements_dev": 99, "requires_grad": [57, 70, 71, 117, 123], "requires_grad_": 116, "rerout": 93, "rerun": [52, 61, 116], "resampl": [56, 100, 101], "research": [0, 29, 56, 58, 93, 96, 101, 117, 140, 141, 167, 168, 169, 172, 173, 197, 199, 200, 202, 203, 205], "resembl": [65, 125], "reserv": [17, 27, 89], "reservoir": 100, "reset": [26, 61, 212, 217], "reset_index": 75, "reset_memory_hooks_st": 116, "reset_orig": 57, "reset_paramet": 57, "reshap": [52, 53, 57, 58, 61, 62, 67, 68, 75, 76, 99, 113, 126, 189], "resid": [27, 57, 60, 62, 67, 70, 73, 79, 81, 84, 93, 117], "resid_dropout": [55, 111, 113], "resid_pdrop": [57, 111, 113], "residu": [56, 67, 68, 111, 113, 118, 119], "residualblock": 57, "resiz": [11, 17, 32, 216], "resize_": 113, "resize_position_embed": 116, "resize_token_embed": 116, "resnet": [56, 57, 58, 122], "resnet18": 216, "resnet50": [114, 216], "resnext": 57, "resolut": [52, 95], "resolv": [5, 6, 17, 36, 53, 56, 57, 58, 61, 62, 65, 74, 75, 76, 90, 93, 98, 113, 127, 142, 145, 147, 155, 158, 167, 168, 169, 177, 189, 206, 210, 216, 230], "resolve_field_typ": 237, "resolved_arg": 237, "reson": [94, 108], "resort": 29, "resourc": [11, 29, 65, 70, 79, 87, 90, 93, 94, 95, 97, 99, 100, 103, 105, 108, 109, 117, 126, 215, 220, 230], "respect": [4, 5, 20, 22, 23, 27, 29, 43, 47, 52, 55, 57, 58, 60, 65, 67, 70, 73, 75, 76, 78, 79, 83, 84, 86, 93, 98, 99, 116, 117, 118, 124, 126, 129, 135, 139, 143, 146, 157, 165, 169, 172, 173, 175, 177, 178, 179, 180, 182, 185, 187, 199, 200, 202, 210, 221], "respond": [9, 93, 108, 123, 215], "respons": [9, 53, 57, 58, 67, 73, 79, 88, 93, 95, 97, 98, 99, 108, 122, 123, 142, 190, 212, 215, 217, 220, 226, 227, 230, 237], "responsibilities_": 53, "rest": [29, 30, 55, 57, 60, 65, 68, 75, 89, 92, 93, 95, 96, 99, 117, 123, 129, 173, 216, 221], "restart": [0, 1, 58, 60, 113, 114, 122, 125], "restat": [65, 67, 187, 188], "restaur": [22, 32, 183], "restrict": [2, 5, 6, 32, 56, 57, 58, 67, 86, 95, 96, 98, 118, 125, 173, 180, 220], "restructur": 99, "result": [2, 3, 4, 5, 7, 8, 9, 11, 13, 16, 17, 20, 22, 23, 26, 27, 29, 30, 32, 36, 46, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 74, 75, 76, 78, 79, 82, 83, 84, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 123, 125, 126, 127, 129, 130, 132, 140, 163, 183, 185, 188, 189, 190, 200, 202, 206, 207, 210, 212, 215, 220, 228, 229, 230, 232, 233, 234, 235, 237, 238], "result1": 6, "result2": 6, "result3": 6, "result4": 6, "result_typ": 112, "results_to_datafram": 111, "resum": [57, 58, 103, 117, 212, 217], "resume_download": [57, 117], "resume_from_checkpoint": 116, "resumpt": 103, "resurfac": 97, "ret": [61, 114], "retain": [55, 57, 70, 79, 94, 95, 234, 235], "retain_graph": 123, "retent": 108, "rethink": 6, "retrain": [70, 93, 95, 103, 105, 109], "retri": 99, "retriev": [11, 17, 27, 32, 55, 57, 76, 93, 96, 97, 98, 103, 108, 213, 215, 218, 221, 225], "retrieve_modules_from_nam": 116, "retrieved_doc": 221, "retrieved_docu": 221, "retriever_typ": 221, "retrospecit": 97, "retrospect": 60, "return": [2, 3, 4, 5, 6, 8, 9, 11, 13, 17, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 41, 43, 44, 46, 47, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 70, 71, 74, 75, 76, 81, 83, 88, 89, 93, 95, 96, 97, 99, 103, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 142, 145, 147, 155, 158, 170, 187, 206, 210, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238], "return_annot": 116, "return_cent": 74, "return_count": 75, "return_invers": 61, "return_tensor": [71, 119, 120], "return_x_i": [61, 68, 74], "returntyp": 212, "reus": [3, 73, 99, 114, 116, 220, 224, 230, 232], "reusabl": 218, "rev": [93, 103], "rev_str": 34, "reveal": [5, 8, 29, 71, 84, 93], "reveal_loc": 5, "reveal_typ": [5, 8], "revenu": [94, 95], "revenue_per_successful_cal": 145, "revers": [3, 7, 11, 32, 33, 36, 38, 57, 58, 77, 82, 83, 97, 116, 220], "reverse_bettertransform": 116, "reverse_string_using_stack": 37, "reverse_transpose_qkv": 57, "reversed_str": 37, "reversedataset": 118, "revert": [93, 95, 99, 107, 216], "review": [54, 56, 93, 95, 97, 98, 108], "revis": [0, 1, 20, 54, 56, 69, 70, 109, 122, 123], "revisit": [57, 71, 72, 81, 83, 84, 93, 100, 103, 138, 157, 218], "revolution": [30, 56], "revolv": 94, "rewon": 0, "rewrit": [52, 60, 65, 67, 70, 76], "rf": 99, "rfloor": [27, 29], "rgb": [62, 96], "rh": [65, 179], "rho": [177, 202, 206], "rho_1": 177, "rho_2": 177, "rho_3": 177, "rich": [5, 36, 53, 57, 58, 61, 62, 68, 71, 74, 75, 81, 83, 88, 90, 96, 99, 111, 114, 116, 118, 119, 120, 123, 142, 210, 212, 216, 217, 220, 224, 225, 228, 234, 236, 237], "rich_handler_config": [58, 118], "rich_traceback": [58, 118], "richard": 0, "richer": [57, 95], "richlogg": 58, "ride": [96, 97], "ridg": 83, "riemann": 125, "right": [4, 6, 11, 13, 16, 17, 19, 29, 30, 32, 36, 43, 46, 47, 49, 51, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 94, 98, 99, 101, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 139, 166, 169, 170, 172, 173, 175, 177, 179, 180, 185, 187, 189, 190, 192, 194, 195, 197, 199, 200, 202, 205, 206, 209, 210, 212], "right_index": 27, "rightarrow": [2, 4, 27, 29, 52, 55, 56, 57, 60, 62, 65, 67, 70, 73, 75, 83, 86, 101, 109, 119, 123, 158, 177, 180, 189, 191, 202, 205], "rightfulli": [6, 8, 118], "rightmost": [27, 62], "rigor": [27, 29, 30, 56, 57, 67, 70, 79, 83, 84, 90, 98, 107, 123, 166, 202, 203, 210], "rigour": [58, 67, 105, 182], "ring": 97, "rippl": 221, "rise": [52, 54, 60, 67, 114, 123, 216], "risk": [7, 50, 57, 64, 67, 77, 86, 89, 93, 94, 99, 105, 108, 116, 123, 215], "riski": 93, "riskier": 93, "river": [56, 57], "rivest": [0, 16], "rlock": 229, "rm": [84, 99], "rmns_1": [111, 113], "rmns_2": [111, 113], "rmse": [67, 93, 95, 102, 105, 106, 107, 109], "rmsnorm": [111, 113], "rng": [58, 70, 103, 116, 127, 147], "rng_seed": 58, "rnn": [56, 57, 58], "ro": [52, 113, 115, 155], "road": 57, "rob": 2, "robert": [0, 1, 59, 60, 66, 67, 72, 73, 117, 123], "roberta": 69, "robit": 2, "robot": [2, 3, 98], "robot_sound": 3, "robust": [3, 93, 99, 104, 105, 106, 107, 218], "roc": [71, 102, 106, 107, 119], "roc_auc": [71, 119], "roc_auc_scor": [71, 119, 120], "roc_curv": [71, 119, 120], "rohrer": [56, 57], "roi": 145, "role": [30, 47, 52, 65, 78, 82, 83, 84, 93, 94, 95, 98, 123, 221], "roll": [73, 93, 97, 107, 124, 125, 129, 132, 135, 157, 159, 171], "rollback": [93, 99, 107], "ronald": 0, "room": [11, 29, 60, 63, 67, 75, 79, 117], "root": [2, 10, 16, 27, 36, 53, 55, 57, 58, 61, 62, 67, 74, 76, 83, 89, 93, 102, 105, 106, 109, 117, 127, 141, 142, 210, 216, 226], "root_dir": [36, 53, 58, 61, 62, 74, 127, 142, 210], "rossum": [7, 10, 93], "rostamizadeh": [0, 65, 67, 86], "rotary_emb": 71, "rotat": [52, 81, 100, 189, 192], "rote": 129, "rotten": 98, "rough": [29, 65, 67, 70, 89, 123, 230, 236], "roughli": [4, 60, 61, 73, 76, 117], "round": [29, 52, 62, 67, 75, 76, 99, 106, 129, 206], "roundabout": 100, "rout": [65, 89, 93], "routet": 89, "routetableid": 89, "row": [11, 52, 53, 55, 57, 58, 61, 62, 67, 70, 73, 74, 75, 81, 86, 105, 106, 111, 112, 118, 123, 126, 147, 179, 206, 212], "row_ax": 57, "row_count": 212, "row_idx": 96, "row_limit": [112, 113], "row_v": 81, "rowl": 97, "rpar": [141, 149, 164, 165, 169], "rse": 67, "rset": [129, 136, 138, 139, 140, 141, 145, 147, 149, 154, 162, 171, 175], "rsq": [129, 136, 138, 139, 140, 141, 143, 145, 146, 147, 149, 150, 152, 154, 158, 162, 163, 164, 165, 167, 168, 169, 172, 173, 175, 187], "rss": 67, "rstride": 52, "rstrip": [119, 212], "rtol": [57, 61, 74, 123], "rubin": 202, "rude": 93, "rudimentari": [77, 79, 214], "ruff": [93, 234], "rule": [2, 5, 6, 29, 50, 55, 58, 60, 63, 67, 70, 72, 73, 75, 76, 78, 81, 84, 93, 94, 97, 98, 103, 108, 109, 123, 180, 181, 210, 220, 222], "run": [5, 6, 7, 9, 11, 13, 16, 17, 19, 29, 32, 35, 43, 55, 57, 58, 60, 61, 62, 65, 67, 74, 87, 88, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 114, 116, 117, 122, 123, 127, 145, 179, 206, 212, 216, 217, 218, 222, 229, 230, 233, 237], "run_classifi": 74, "run_effici": 229, "run_id": [216, 217], "run_ineffici": 229, "run_naive_bayes_sanity_check": 74, "run_nam": 116, "run_profil": [111, 113], "run_resnet50": 114, "run_tasks_multi_process": 230, "run_tasks_multi_thread": 230, "run_tasks_single_thread": 230, "run_train": 218, "run_warmup": 113, "run_with_barri": 90, "run_with_no_barri": 90, "runeston": [0, 17, 18, 22, 23, 27, 30, 31, 32, 33], "runnabl": 61, "runner": [44, 58, 75, 93, 99, 116, 127, 143, 158, 168, 169, 173, 189, 206, 210], "runtim": [2, 3, 5, 6, 13, 16, 19, 43, 87, 114, 216, 220, 227, 237], "runtime_check": [2, 3], "runtimeerror": 110, "runtimewarn": [61, 119], "rush": 94, "rushter": 72, "russel": 10, "rust": 93, "rv": [49, 52, 53, 126, 142, 145, 155, 157, 169, 170, 177, 189, 206], "rv1": [155, 189], "rv2": 189, "rv3": 189, "rv_adeli": 75, "rv_bernoulli": 206, "rv_binomi": 206, "rv_chinstrap": 75, "rv_gentoo": 75, "rvert": [57, 126, 140, 159, 163, 169, 172, 190, 192], "s1": [36, 236], "s2": [36, 236], "s3": [76, 89, 95, 96, 97, 98], "s_": 73, "s_1": [46, 47, 123, 129], "s_2": [46, 47, 123, 129], "s_i": [46, 47, 123], "s_j": [46, 47, 123], "s_k": 123, "s_n": [46, 47, 129], "s_x": [67, 175], "s_y": [67, 175], "saa": 98, "sacrif": [43, 125], "sacrific": 5, "saddl": 123, "safe": [5, 6, 7, 8, 30, 32, 65, 67, 95, 97, 215], "safe_incr": 215, "safe_load": [224, 237], "safe_transf": 230, "safeguard": [71, 213], "safer": 27, "safeti": [4, 5, 7, 10, 32, 57, 77, 88, 95, 108, 214], "sagemak": 108, "sai": [3, 4, 5, 6, 7, 11, 17, 22, 27, 29, 30, 36, 44, 49, 50, 52, 56, 57, 58, 60, 62, 63, 65, 67, 70, 71, 73, 75, 78, 81, 82, 83, 84, 87, 88, 90, 93, 95, 96, 98, 100, 102, 105, 108, 112, 117, 118, 119, 123, 125, 127, 129, 132, 135, 136, 143, 145, 146, 147, 150, 152, 154, 157, 158, 161, 167, 171, 172, 173, 175, 179, 180, 182, 183, 190, 202, 205, 206, 210, 212, 215, 222, 226, 228, 233, 234, 237], "said": [2, 20, 65, 67, 70, 101, 117, 123, 124, 127, 129, 132, 158, 165, 169, 187, 210], "sake": [6, 27, 30, 52, 56, 57, 58, 60, 79, 82, 84, 93, 99, 100, 122, 157], "salad": 228, "saladrecip": 228, "salari": 7, "salary_per_employe": 145, "sale": [67, 95, 178], "saliman": [0, 1, 54, 56], "same": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 22, 23, 27, 29, 30, 35, 36, 43, 46, 49, 50, 52, 53, 55, 57, 58, 60, 61, 62, 65, 67, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 108, 109, 112, 114, 116, 118, 123, 124, 125, 126, 127, 129, 130, 136, 142, 145, 147, 152, 154, 157, 158, 167, 169, 170, 171, 172, 173, 175, 178, 179, 180, 185, 187, 189, 190, 192, 199, 205, 206, 207, 210, 213, 215, 216, 217, 218, 220, 226, 227, 230, 232, 233, 234, 235], "samir": 65, "sampel": 129, "sampl": [49, 51, 53, 55, 56, 60, 61, 63, 64, 67, 68, 70, 73, 74, 75, 77, 79, 86, 96, 99, 101, 102, 104, 105, 106, 116, 117, 118, 119, 124, 126, 127, 130, 131, 132, 133, 135, 136, 138, 140, 141, 143, 145, 146, 147, 149, 155, 157, 158, 163, 164, 165, 171, 173, 175, 180, 182, 187, 190, 195, 201, 202, 203, 204, 209, 210, 212, 215, 217], "sample_100": [147, 158], "sample_1000": 142, "sample_2_letters_without_replac": 127, "sample_500": [147, 158], "sample_5000": 142, "sample_900": [147, 158], "sample_9000": 142, "sample_averag": 206, "sample_data_schema": 96, "sample_index": [58, 61, 74], "sample_s": 52, "sampler": 96, "samples_1000": 155, "samples_10000": 155, "samples_5000": 155, "sampling_result": 123, "sandbox": [3, 88, 215], "saniti": [71, 75, 104, 216], "santoshk": 236, "satellit": 96, "satifi": 65, "satisfact": [93, 94, 100], "satisfactori": [93, 105], "satisfi": [16, 29, 30, 46, 47, 51, 52, 56, 58, 60, 65, 78, 79, 83, 93, 94, 97, 123, 129, 130, 136, 138, 139, 142, 154, 162, 165, 175, 229], "saturdai": 149, "sauc": 228, "save": [11, 17, 29, 53, 57, 62, 71, 76, 81, 82, 93, 94, 95, 96, 98, 99, 103, 108, 114, 116, 173, 212, 216, 217, 229], "save_best_onli": [58, 118], "save_dir": [58, 118], "save_every_epoch": [58, 118], "save_metr": 116, "save_model": 116, "save_on_each_nod": 116, "save_only_model": 116, "save_path": [81, 82], "save_pretrain": 116, "save_safetensor": 116, "save_snapshot": 217, "save_st": [58, 116], "save_step": [71, 116, 119], "save_strategi": [71, 116, 119], "save_total_limit": [71, 116, 119], "savefig": [52, 62, 173], "saw": [65, 67, 70, 75, 118, 230], "sax": 16, "sbatch": 89, "sbatch_run": 89, "scalabl": [6, 56, 88, 92, 94, 96, 97, 99, 105, 107, 108], "scalar": [55, 57, 58, 60, 61, 65, 67, 68, 73, 76, 78, 81, 83, 123, 187, 190, 191], "scale": [13, 19, 20, 29, 30, 36, 43, 52, 56, 58, 60, 65, 70, 71, 75, 76, 77, 78, 83, 84, 93, 95, 96, 97, 98, 99, 100, 101, 102, 108, 111, 113, 117, 118, 119, 120, 122, 168, 169, 177, 191, 206], "scale_1": 168, "scale_2": 168, "scale_attn_by_inverse_layer_idx": 57, "scale_attn_weight": 57, "scaled_dot_product": 57, "scaled_logit": [57, 123], "scaled_prob": 123, "scaled_vari": 57, "scaled_vector": 82, "scaleddotproductattent": [57, 58, 111, 113, 118, 119, 120], "scaler": 58, "scaler_config": [58, 118], "scaling_factor": 57, "scan": [44, 47, 94, 95, 96, 97], "scarciti": 56, "scatter": [8, 52, 53, 57, 61, 67, 68, 75, 111, 126, 177, 189], "scatter_1": [61, 189], "scatter_2": [61, 189], "scatter_3": [61, 189], "scedast": 67, "scenario": [2, 3, 5, 6, 7, 9, 11, 13, 17, 19, 27, 29, 32, 36, 52, 55, 56, 58, 65, 67, 70, 75, 82, 87, 93, 95, 100, 101, 106, 107, 108, 120, 123, 129, 132, 145, 212, 213, 215, 220, 224, 230, 237], "scene": [32, 99], "schedul": [70, 89, 98, 99, 100, 112, 113, 114, 116, 118, 119, 120, 122, 215, 217, 218], "scheduler_cl": 225, "scheduler_config": 225, "scheduler_config_cl": [58, 118], "scheduler_cycl": [58, 122], "scheduler_non_cycl": [58, 122], "scheduler_pydantic_config": [58, 118], "scheduler_registri": [58, 118, 225], "schedulerconfig": 225, "schedulerregistri": 225, "schedulertyp": 116, "schema": [2, 93, 96, 97, 98, 99, 108], "schemat": 125, "scheme": [2, 3, 52, 57, 58, 67, 99], "school": 180, "schwartz": 56, "sci": 237, "scienc": [0, 7, 10, 11, 17, 27, 29, 30, 32, 47, 56, 57, 67, 72, 73, 78, 92, 127, 138, 140, 141, 142, 143, 146, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 197, 198, 199, 200, 202, 203, 205, 210], "scientif": [67, 96], "scientist": [92, 93, 101, 103, 107, 145], "scikit": [52, 59, 60, 61, 65, 67, 72, 74, 101, 102, 105], "scipi": [52, 53, 71, 75, 119, 120, 126, 142, 145, 147, 155, 158, 167, 168, 169, 170, 177, 189, 206], "scontrol": 89, "scope": [19, 29, 36, 56, 57, 76, 77, 89, 92, 93, 94, 99, 101, 105, 111, 114, 116, 212, 228, 234], "score": [55, 58, 59, 68, 71, 74, 93, 94, 95, 101, 102, 105, 106, 107, 108, 109, 117, 118, 119, 120, 123], "score_sampl": 52, "scrape": [56, 96, 98], "scrapi": 98, "scratch": [54, 56, 57, 58, 61, 66, 68, 69, 72, 73, 87, 88, 111, 113, 118, 127], "script": [8, 74, 88, 93, 98, 99, 216, 220, 229], "script1": 215, "script2": 215, "scroll": 100, "scrum": 93, "scrutini": 65, "sdk": 98, "se": 67, "seaborn": [57, 58, 61, 75, 113, 118, 127, 173, 212], "seach": 27, "seamlessli": [2, 221], "search": [2, 4, 5, 11, 13, 16, 17, 19, 36, 43, 46, 47, 53, 58, 61, 62, 67, 74, 77, 83, 97, 103, 105, 108, 127, 142, 210, 215, 216, 221], "searchcontext": 27, "searchpath": 216, "season": 29, "sebastian": [56, 57, 59, 60, 67, 69, 70], "sec_maximum_likelihood": 76, "sec_softmax": 76, "sec_util": 76, "second": [5, 7, 8, 9, 11, 16, 19, 26, 27, 29, 32, 36, 43, 46, 52, 55, 56, 57, 58, 62, 65, 67, 70, 71, 74, 75, 78, 82, 88, 93, 94, 96, 101, 110, 112, 114, 116, 118, 119, 122, 123, 124, 125, 132, 135, 143, 179, 189, 199, 210, 212, 213, 215, 220, 229, 230, 233, 235], "second_el": 5, "second_row": 212, "secondari": [56, 93], "secondli": [58, 122, 123, 129, 136, 212], "secret": [89, 93], "secretli": 157, "section": [2, 3, 5, 7, 23, 27, 29, 51, 52, 55, 57, 58, 60, 62, 64, 65, 67, 68, 70, 72, 73, 75, 76, 79, 83, 84, 86, 93, 95, 96, 97, 98, 99, 103, 118, 122, 123, 126, 128, 129, 132, 134, 138, 144, 147, 148, 151, 154, 156, 157, 161, 173, 175, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 193, 197, 200, 201, 202, 204, 205, 207, 209, 210, 216], "secur": [89, 93, 94, 96, 215], "see": [2, 5, 6, 7, 8, 13, 16, 27, 29, 30, 36, 43, 44, 46, 47, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 75, 76, 79, 81, 82, 83, 84, 86, 88, 89, 90, 94, 98, 99, 100, 101, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 152, 154, 157, 158, 161, 169, 170, 172, 173, 175, 177, 179, 180, 182, 187, 189, 190, 191, 192, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 216, 218, 222, 226, 227, 228, 230, 233, 236, 237], "seed": [52, 53, 57, 58, 60, 61, 67, 68, 70, 71, 74, 88, 111, 113, 114, 116, 118, 119, 120, 127, 142, 143, 145, 147, 155, 158, 167, 168, 169, 170, 173, 189, 206, 210, 216, 218], "seed_al": [53, 57, 58, 61, 70, 71, 74, 88, 103, 111, 113, 114, 118, 119, 120, 127, 142, 145, 147, 155, 158, 167, 168, 169, 189, 206, 210], "seed_torch": [53, 57, 58, 61, 70, 71, 88, 103, 118, 119, 120], "seed_work": 70, "seek": [6, 27, 29, 43, 44, 57, 60, 62, 63, 65, 67, 73, 86, 123, 142, 147, 210, 211], "seem": [5, 7, 46, 55, 56, 57, 58, 60, 65, 67, 73, 75, 76, 93, 95, 100, 105, 129, 136, 158, 173, 179, 189, 205, 213], "seemingli": [29, 36, 52], "seen": [11, 13, 19, 20, 27, 52, 55, 56, 57, 58, 60, 65, 67, 73, 75, 76, 79, 82, 95, 96, 105, 106, 117, 122, 163, 165, 169, 171, 173, 175, 182, 200, 209, 210, 218, 227, 228], "segment": [11, 57, 59, 77, 81, 93, 94, 95, 107, 108, 202, 220], "segmented_imag": 62, "seldom": 56, "select": [52, 55, 57, 58, 65, 70, 74, 75, 76, 77, 83, 92, 94, 95, 96, 97, 98, 100, 103, 105, 106, 108, 109, 123, 125, 127, 129, 142, 145, 147, 149, 158, 227], "selectbackward0": 57, "selected_gaussian": 52, "selenium": 98, "self": [0, 2, 3, 4, 5, 6, 7, 8, 9, 13, 19, 20, 22, 23, 25, 26, 27, 29, 32, 34, 35, 36, 37, 41, 43, 44, 52, 53, 54, 58, 61, 67, 68, 71, 73, 74, 88, 93, 95, 99, 101, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 212, 213, 217, 218, 220, 221, 225, 226, 227, 228, 230, 233, 235, 236, 237], "self_attn": 71, "self_cpu_memory_usag": 112, "self_cpu_time_tot": 112, "self_cuda_memory_usag": 112, "self_cuda_time_tot": [112, 113], "self_privateuse1_memory_usag": 112, "sell": 30, "semant": [2, 4, 5, 7, 9, 10, 56, 58, 78, 97, 221, 233], "semaphor": 215, "semest": 67, "semi": [55, 56, 95, 96, 97, 98, 100], "semilogx": 206, "semin": 3, "semisupervis": 52, "send": [65, 99, 108, 112], "sender": 93, "sendtyp": 212, "sens": [7, 8, 9, 13, 19, 29, 30, 32, 36, 52, 57, 58, 60, 61, 65, 67, 75, 82, 86, 88, 93, 108, 117, 118, 122, 123, 125, 129, 133, 145, 146, 157, 158, 173, 180, 195, 210, 216, 220, 233], "sensibl": [67, 73], "sensit": [57, 58, 60, 67, 83, 98, 101, 105, 122, 123], "sensor": [96, 108], "sent": [58, 99, 108, 175, 212], "sentenc": [55, 56, 57, 58, 67, 70, 71, 83, 95, 118, 119, 120], "sentences_allagre": [71, 119, 120], "sentiment": [56, 72, 73, 94, 95, 98, 118], "sentiment_analysi": 95, "sentinel": [10, 77, 233], "seonc": 58, "seonyong": [56, 57], "sep": 30, "separ": [5, 52, 55, 56, 57, 60, 62, 65, 67, 70, 73, 75, 93, 95, 97, 99, 101, 105, 106, 114, 118, 187, 210, 215, 217, 218, 220, 221, 227, 232], "seq": [58, 88, 233], "seq_len": [57, 58, 118, 119], "sequenc": [2, 6, 7, 8, 11, 20, 22, 23, 27, 29, 30, 32, 36, 46, 47, 56, 58, 60, 61, 62, 65, 69, 70, 77, 78, 93, 94, 95, 96, 108, 111, 113, 117, 120, 121, 123, 125, 130, 142, 145, 147, 152, 175, 200, 210, 212, 215, 230, 233], "sequenceclassifieroutput": 120, "sequenti": [11, 27, 31, 32, 55, 56, 58, 118, 215], "sergei": 0, "seri": [10, 36, 55, 57, 62, 67, 69, 79, 83, 84, 93, 96, 97, 98, 99, 100, 101, 104, 105, 115, 117, 118, 119, 125, 212, 222], "serial": [57, 108, 216, 217, 237], "seriou": [65, 67, 93], "serp": 69, "serv": [4, 5, 10, 22, 29, 30, 32, 36, 53, 55, 56, 57, 58, 61, 62, 65, 74, 77, 83, 84, 92, 93, 94, 95, 99, 100, 101, 105, 107, 122, 127, 142, 210, 212, 218, 221, 227], "server": [9, 29, 93, 96, 97, 98, 108, 215], "servic": [29, 57, 72, 73, 93, 94, 98, 99, 107, 108, 109, 140, 141, 143, 146, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 197, 199, 200, 202, 203, 205, 210, 220, 222], "servicecount": 5, "session": [93, 98, 108, 215], "set": [5, 6, 7, 9, 10, 11, 22, 23, 26, 27, 29, 30, 32, 36, 46, 48, 49, 52, 55, 56, 57, 58, 60, 61, 62, 67, 68, 70, 73, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 92, 94, 95, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 116, 122, 123, 125, 126, 127, 132, 136, 138, 139, 145, 149, 157, 159, 162, 171, 173, 175, 183, 189, 190, 191, 192, 199, 202, 203, 210, 212, 215, 216, 217, 218, 220, 224, 226, 231, 234, 235, 236, 237], "set_adapt": 116, "set_alpha": 52, "set_clip_box": 52, "set_debug_field": 57, "set_devic": [57, 88], "set_epoch": 116, "set_extra_st": 116, "set_facecolor": 127, "set_input_embed": 116, "set_output_embed": 116, "set_postfix": 216, "set_styl": 75, "set_submodul": 116, "set_table_attribut": 75, "set_them": [57, 61], "set_tick_param": 127, "set_titl": [52, 53, 57, 58, 61, 62, 75, 76, 81, 82, 83, 84, 122, 123, 139, 142, 158, 167, 173, 177, 206], "set_to_non": [113, 114], "set_torch_determinist": [53, 57, 58, 61, 70, 71, 88, 103, 118, 119, 120, 142, 145, 147, 155, 158], "set_train_valid_path": 57, "set_vis": 76, "set_xlabel": [52, 57, 58, 61, 75, 81, 82, 83, 84, 122, 123, 139, 142, 158, 167, 173, 189, 206, 210], "set_xlim": [81, 82, 83, 84, 167, 177, 189], "set_xtick": [57, 142, 158], "set_xticklabel": 142, "set_ylabel": [52, 57, 58, 61, 75, 81, 82, 83, 84, 122, 123, 139, 142, 158, 167, 173, 206, 210], "set_ylim": [57, 81, 82, 83, 84, 139, 167, 177, 189], "set_ytick": 57, "set_zlabel": 52, "set_zlim": 82, "setattr": 71, "setfit": 120, "setformatt": [119, 120], "setlevel": [114, 119, 120], "setosa": 74, "setter": [7, 93, 227], "settrac": 229, "setuo": 123, "setup": [49, 52, 57, 58, 77, 91, 93, 98, 99, 108, 117, 122, 209], "seven": 52, "sever": [6, 52, 56, 57, 65, 67, 82, 83, 86, 93, 95, 96, 97, 99, 102, 103, 105, 108, 210, 221], "sex": 75, "sgd": [56, 58, 68, 114, 122, 123, 225], "sgdr": [0, 1, 58, 122], "sgemm_128x128x8_nt_vec": 113, "sgemm_128x128x8_tn_vec": 113, "sh": [88, 89, 99], "sha256": 221, "shade": [131, 173], "shadow": [57, 107], "shai": 65, "shakespearedataset": 57, "shalev": 65, "shall": [4, 6, 52, 57, 62, 65, 83, 99, 123, 216, 233], "shap": 107, "shape": [29, 32, 52, 53, 55, 57, 58, 60, 61, 62, 65, 67, 68, 70, 71, 73, 74, 75, 76, 79, 81, 93, 96, 111, 113, 117, 118, 119, 122, 126, 129, 142, 145, 147, 170, 171, 189, 206], "shapiro": 67, "shapiro_test": 67, "shapiroresult": 67, "shaplei": 107, "share": [2, 3, 8, 52, 57, 65, 88, 93, 95, 96, 97, 98, 100, 103, 107, 117, 222, 226, 230, 234, 236], "share_memori": 116, "sharedstorag": 89, "sharei": [52, 57, 62, 139, 143, 189], "sharex": [52, 57, 62, 139, 189], "sharp": 123, "sharpen": 57, "sharper": 123, "sharpli": 114, "shatter": 86, "shazeer": [0, 1, 54, 56, 69, 70, 117], "she": [29, 97, 101, 108, 142, 173], "shea": [0, 142, 154, 155, 169], "shean": 0, "shebang": 93, "shelf": [17, 18], "shen": [0, 69, 70], "sherlock": 97, "shift": [11, 27, 30, 32, 46, 52, 55, 56, 57, 58, 67, 70, 97, 109, 118, 122, 123, 157, 169, 179, 210], "ship": 93, "shirish": 0, "shitft": 93, "shock": [93, 103], "shoe": 180, "shop": [30, 60, 108], "short": [3, 30, 56, 57, 60, 65, 122, 127, 141, 210], "shortcom": 109, "shorter": [57, 58], "shortest": [83, 97], "shorthand": [29, 52, 57, 67, 86, 136, 213], "shortli": [6, 57, 60, 65, 70, 88, 97, 99], "shot": 94, "should": [2, 3, 4, 5, 7, 8, 9, 11, 16, 17, 19, 27, 29, 30, 32, 35, 36, 43, 44, 47, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 75, 76, 79, 86, 88, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 116, 117, 118, 119, 120, 122, 125, 126, 127, 129, 131, 132, 133, 135, 136, 138, 142, 145, 147, 149, 154, 157, 158, 167, 171, 173, 178, 179, 180, 183, 199, 202, 207, 210, 212, 213, 218, 220, 221, 230, 237, 238], "shouldn": 220, "show": [4, 5, 8, 27, 29, 30, 36, 44, 52, 53, 55, 56, 57, 58, 60, 61, 63, 65, 67, 68, 70, 71, 73, 75, 78, 82, 84, 88, 89, 93, 95, 97, 100, 112, 114, 116, 118, 122, 123, 126, 127, 139, 143, 145, 146, 154, 155, 159, 165, 166, 167, 168, 169, 170, 173, 177, 179, 185, 189, 194, 197, 206, 209, 210, 212, 216, 227, 228, 230, 237], "show_attention_heatmap": [57, 58], "show_histogram": 170, "show_imag": 76, "show_label": 173, "show_level": [58, 118], "show_path": [58, 118], "show_result": 229, "show_special_token": 58, "show_tick": 82, "show_tim": [58, 118], "show_titl": [57, 58], "show_valu": 58, "show_ylabel": 52, "showcas": [56, 123, 237], "showindex": 117, "showlabel": 126, "shown": [4, 50, 52, 56, 58, 60, 65, 67, 75, 82, 87, 93, 94, 95, 97, 108, 123, 143, 167, 168, 169, 171, 173, 185, 192, 200, 210, 212, 216, 217], "shrink": [11, 17, 32, 46, 52, 57, 67, 75, 100, 149, 173], "shuf": 88, "shuffl": [58, 71, 97, 103, 118, 119, 120, 212, 216, 218], "shun": [11, 12, 17, 18], "shwartz": 65, "side": [4, 7, 52, 56, 60, 65, 67, 73, 75, 82, 83, 88, 95, 98, 117, 120, 132, 192, 210, 235], "sidestep": 32, "siek": 3, "siev": 93, "sig": 116, "sight": 179, "sigma": [51, 53, 55, 57, 60, 65, 67, 70, 73, 75, 111, 113, 123, 125, 126, 129, 141, 169, 170, 175, 177, 179, 185, 187, 189, 190, 192, 194, 199, 200, 202, 205, 206, 209, 210], "sigma1": 52, "sigma2": 52, "sigma3": 52, "sigma_": [52, 57, 73, 75, 190, 200, 206, 210], "sigma_1": [52, 73, 169, 177, 185, 190, 210], "sigma_2": [52, 73, 169, 177, 185], "sigma_3": [52, 169, 177], "sigma_4": 169, "sigma_5": 169, "sigma_a": 75, "sigma_c": 75, "sigma_d": [126, 190, 210], "sigma_g": 75, "sigma_k": [52, 53], "sigma_nk": 53, "sigma_square_hat": 67, "sigma_t": [55, 57], "sigma_z": [55, 57], "sigmaellipse2d": 52, "sigmas_new": 52, "sigmoid": [65, 123], "sign": [27, 29, 58, 62, 65, 67, 68, 73, 82, 83, 102, 117, 202], "signal": [8, 9, 44, 56, 57, 88, 95, 112, 179], "signatur": [2, 4, 5, 6, 7, 8, 77, 233, 236], "signifi": [9, 13, 19, 27, 30, 36, 43, 53, 55, 56, 57, 58, 61, 62, 67, 74, 76, 81, 82, 83, 97, 99, 117, 127, 142, 173, 210, 221], "signific": [11, 17, 29, 30, 32, 56, 58, 62, 67, 78, 82, 93, 94, 95, 96, 99, 100, 103, 105, 107, 108, 109, 117, 122, 212, 215, 229], "significand": 117, "significantli": [11, 17, 27, 30, 52, 56, 57, 61, 62, 65, 67, 94, 95, 96, 101, 102, 105, 116, 117, 179, 202, 212, 215], "sigopt": 116, "silent": [3, 5, 6, 93], "silhouett": 102, "silu": 71, "silver": [28, 29, 93], "sim": [4, 49, 50, 52, 55, 56, 57, 65, 67, 70, 73, 75, 86, 101, 105, 123, 143, 145, 146, 147, 149, 150, 152, 154, 158, 167, 168, 169, 171, 172, 179, 183, 185, 190, 205, 206, 210], "simiarli": 60, "similar": [2, 5, 7, 8, 11, 27, 30, 32, 52, 55, 56, 57, 58, 59, 61, 62, 65, 67, 70, 73, 75, 76, 79, 83, 84, 86, 93, 95, 97, 98, 99, 100, 101, 102, 107, 108, 109, 117, 119, 122, 145, 162, 163, 164, 175, 177, 179, 182, 191, 197, 198, 210, 212, 215, 237, 238], "similarli": [5, 7, 29, 32, 43, 58, 67, 73, 75, 78, 81, 83, 84, 88, 93, 94, 96, 97, 123, 125, 149, 169, 172, 175, 179, 182, 187, 210], "simpl": [5, 8, 9, 17, 27, 30, 51, 55, 57, 60, 62, 65, 67, 70, 79, 84, 86, 88, 94, 95, 96, 97, 99, 100, 101, 103, 105, 107, 114, 116, 118, 122, 123, 124, 126, 127, 129, 142, 147, 158, 172, 173, 178, 184, 198, 202, 210, 212, 215, 216, 220, 221, 224, 225, 227, 228, 233], "simple_data_load": 212, "simple_leak": 114, "simplechunk": 221, "simpleembedd": 221, "simplelist": 8, "simplequeu": 88, "simpler": [4, 70, 93, 95, 96, 101, 106, 108, 125, 210, 215], "simpleretriev": 221, "simplest": [11, 29, 30, 95, 100, 195], "simpli": [4, 5, 8, 17, 20, 27, 29, 35, 36, 49, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 75, 89, 93, 99, 102, 117, 118, 119, 122, 123, 125, 129, 136, 145, 147, 157, 158, 171, 173, 179, 181, 190, 206, 212, 220, 221], "simplic": [5, 6, 11, 30, 32, 47, 55, 56, 57, 58, 60, 65, 67, 70, 71, 73, 75, 88, 93, 96, 99, 117, 122, 123, 129, 172, 209, 210, 221], "simplif": [73, 93, 101, 187], "simplifi": [3, 11, 13, 19, 27, 29, 36, 43, 54, 55, 56, 57, 58, 65, 70, 73, 75, 76, 82, 87, 92, 93, 95, 99, 100, 101, 108, 123, 157, 166, 185, 186, 190, 192, 200, 202, 210, 212, 221], "simul": [36, 93, 99, 106, 127, 157, 212, 215, 230], "simulationrv": 157, "simultan": [52, 56, 57, 79, 90, 93, 102, 187, 190, 212, 226, 230], "sin": [52, 55, 57], "sinc": [3, 4, 6, 7, 11, 13, 19, 20, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 74, 75, 76, 79, 84, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 139, 142, 145, 147, 149, 157, 158, 167, 168, 169, 171, 172, 173, 179, 180, 182, 183, 187, 189, 190, 191, 197, 202, 205, 206, 209, 210, 212, 213, 215, 216, 220, 226, 230, 233, 235, 237], "sine": 57, "sinfo": 89, "singapor": [0, 5, 48, 51, 52, 59, 60, 66, 67, 86, 173], "singl": [6, 11, 13, 16, 17, 19, 20, 27, 29, 32, 36, 43, 46, 47, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 65, 67, 68, 70, 73, 74, 76, 77, 79, 81, 83, 84, 86, 87, 88, 93, 95, 96, 97, 99, 101, 102, 103, 105, 107, 108, 116, 118, 119, 122, 123, 129, 130, 142, 143, 145, 146, 157, 158, 175, 183, 187, 196, 210, 212, 213, 216, 220, 222, 226, 227, 230], "single_item_test": 220, "single_item_train": 220, "single_label_classif": [71, 119], "single_thread_cpu": 230, "single_thread_io": 230, "single_word": 119, "singleton": [9, 77, 136, 223], "singular": [56, 68, 70], "sinusoid": [55, 57], "siri": 108, "sit": 93, "site": [56, 57, 60, 61, 71, 93, 94, 95, 98, 108, 114, 117, 119, 120, 122, 225, 229], "situat": [9, 11, 17, 27, 29, 30, 52, 58, 65, 79, 84, 93, 108, 109, 122, 123, 154, 179, 210], "six": [32, 43, 65, 73, 173], "sizabl": [2, 17], "size": [2, 13, 16, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 36, 43, 44, 52, 55, 56, 58, 60, 61, 65, 67, 70, 71, 73, 75, 76, 79, 82, 83, 84, 86, 94, 95, 96, 98, 101, 103, 105, 106, 109, 111, 113, 114, 116, 118, 119, 120, 123, 125, 126, 127, 129, 140, 142, 143, 145, 146, 147, 155, 157, 158, 163, 169, 170, 173, 175, 180, 189, 205, 206, 210, 212], "size_averag": 118, "sk_contingency_matrix_": 61, "sk_covari": 74, "sk_estim": 74, "sk_gnb": 74, "sk_kmean": 61, "sk_log_prob": 74, "sk_pi": 74, "sk_prob": 74, "sk_theta": 74, "sk_y_pr": 61, "sketch": 75, "skew": [29, 67, 77, 93, 96, 100, 114, 174], "skew_data": 170, "skew_label": 170, "skim": 10, "skimag": 62, "skip": [47, 55, 57, 68, 79, 93, 112, 116, 200], "skip_memory_metr": 116, "skip_special_token": 119, "sklearn": [53, 61, 62, 67, 68, 71, 74, 75, 119, 120], "sklearn_estim": 74, "sla": [29, 107], "slack": [65, 215], "slant": 189, "sleep": [89, 95, 215, 230], "sleep_tim": 215, "slice": [7, 8, 11, 52, 55, 57, 58, 61, 75, 119, 126, 220], "slice_items_test": 220, "slice_items_train": 220, "slid": 46, "slide": [40, 47, 77], "slighli": 52, "slight": [27, 55, 56, 67, 122], "slightli": [52, 57, 65, 67, 70, 74, 75, 76, 93, 103, 122, 154, 158, 206, 238], "slim": 99, "slip": 5, "slope": [58, 65, 67, 79, 122, 189], "slot": [11, 17, 22, 116], "slow": [11, 29, 44, 47, 56, 60, 62, 93, 96, 97, 123], "slower": [11, 17, 29, 56, 94, 110], "slowest": 29, "slowli": [29, 60, 89], "slr": 67, "slu": 157, "slurm": [77, 88, 91, 98], "slurm_job_nodelist": 89, "slurmctld": 89, "slurmqueu": 89, "sm": 67, "small": [5, 29, 36, 46, 49, 50, 55, 56, 57, 58, 60, 64, 65, 67, 70, 73, 75, 76, 77, 84, 89, 93, 95, 97, 101, 105, 107, 111, 115, 117, 122, 123, 154, 169, 180, 202, 205, 210, 212, 232], "small_backward_warmup_0_mixed_fals": 111, "small_backward_warmup_0_mixed_tru": 111, "small_backward_warmup_1_mixed_fals": 111, "small_backward_warmup_1_mixed_tru": 111, "small_forward_backward_warmup_0_mixed_fals": 111, "small_forward_backward_warmup_0_mixed_tru": 111, "small_forward_backward_warmup_1_mixed_fals": 111, "small_forward_backward_warmup_1_mixed_tru": 111, "small_forward_warmup_0_mixed_fals": 111, "small_forward_warmup_0_mixed_tru": 111, "small_forward_warmup_1_mixed_fals": 111, "small_forward_warmup_1_mixed_tru": 111, "smaller": [4, 16, 27, 30, 47, 53, 62, 65, 67, 70, 71, 76, 94, 101, 103, 108, 114, 117, 123, 173, 202, 206, 212, 229], "smallest": [5, 16, 29, 47, 58, 62, 75, 93, 117, 122, 123, 206, 210, 215], "smart": 96, "smarter": 60, "smartphon": [30, 94, 95, 108], "smartwatch": 30, "smell": [93, 222], "smoke": [73, 93], "smola": [0, 1, 54, 56, 57, 72, 73, 122, 123], "smooth": [55, 57, 58, 75, 76, 120, 122, 173], "smoother": [56, 57, 83, 126], "smoothli": [2, 99, 122], "smote": 100, "sn": [57, 58, 61, 67, 75, 118, 127, 173], "snapshot": [56, 93, 114], "sne": [95, 100], "snippet": [5, 20, 52, 55, 88, 93, 96, 103, 114, 117, 142, 155, 217], "snowflak": [97, 98], "sns_plot": 173, "so": [2, 3, 5, 6, 7, 9, 11, 16, 17, 19, 20, 22, 23, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 79, 81, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 139, 142, 143, 145, 146, 147, 157, 158, 161, 173, 179, 188, 189, 191, 192, 194, 195, 201, 204, 205, 206, 210, 212, 213, 215, 216, 218, 222, 225, 226, 227, 228, 230, 232, 233, 235, 236, 237], "soap": 96, "socg2006": 60, "socher": 0, "social": [95, 96, 97, 98, 100], "socket": [113, 114, 215], "soft": [51, 120], "soft_loss": 120, "soft_prob": 120, "soft_target": 120, "softargmax": 123, "soften": 123, "softer": 120, "softmax": [56, 58, 65, 71, 77, 86, 111, 113, 117, 118, 119, 120], "softmax_larg": [57, 123], "softmax_result": 123, "softmax_sc": 57, "softmax_smal": 123, "softmax_unsc": 57, "softmaxbackward0": [57, 123], "softmaxst": [111, 113], "softwar": [9, 27, 67, 93, 98, 99, 104, 107, 109, 220, 221], "software_engin": [216, 221, 226], "sold": [100, 178], "solda": 97, "sole": [2, 5, 27, 52, 57, 58, 62, 82, 84], "solid": [52, 82, 84, 93, 101], "solidifi": [62, 65], "soloviev": [1, 10], "solut": [5, 11, 13, 16, 25, 26, 27, 30, 34, 35, 37, 41, 47, 49, 58, 60, 67, 68, 83, 92, 93, 94, 95, 96, 98, 99, 108, 109, 122, 136, 145, 169, 172, 179, 180, 199, 210, 215], "solv": [0, 5, 11, 16, 17, 19, 27, 29, 30, 36, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 61, 66, 73, 75, 79, 94, 95, 98, 101, 122, 136, 141, 149, 169, 173, 179, 194, 209, 210, 216, 225, 230], "solvabl": [67, 77], "solver": 68, "some": [2, 3, 4, 5, 8, 11, 16, 27, 29, 30, 43, 44, 47, 49, 54, 55, 56, 57, 58, 60, 61, 62, 67, 70, 71, 75, 76, 78, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 111, 112, 113, 116, 118, 119, 120, 122, 125, 128, 129, 133, 135, 142, 143, 145, 146, 153, 154, 155, 157, 167, 168, 169, 174, 175, 177, 188, 189, 191, 194, 199, 202, 207, 209, 215, 216, 217, 218, 220, 222, 226, 230, 233, 237], "some_list": 93, "some_obj": 8, "somehow": [6, 56, 57, 60, 215], "someon": [57, 93, 97], "someth": [3, 4, 6, 9, 26, 27, 29, 32, 56, 58, 65, 67, 73, 75, 76, 89, 93, 95, 99, 109, 112, 129, 135, 145, 147, 209, 210, 212, 215, 217, 227, 237], "sometim": [2, 3, 11, 17, 49, 56, 57, 60, 61, 65, 73, 84, 86, 89, 90, 95, 96, 100, 101, 108, 109, 116, 117, 123, 129, 152, 169, 170, 190, 213, 224], "somewhat": 56, "somewher": [65, 99, 108, 132, 210, 216], "song": 95, "soon": [0, 35, 48, 51, 52, 57, 65, 67, 108, 129, 179, 207, 210, 220], "sophist": [30, 58, 93, 99, 101, 105], "sort": [7, 11, 16, 27, 39, 40, 45, 57, 58, 75, 77, 88, 93, 97, 98, 116, 119, 123, 158], "sort_bi": [112, 113], "sort_stat": 229, "sort_valu": [75, 111, 112], "sortabl": 29, "sorted_indic": 57, "sorted_indices_to_remov": 57, "sorted_item": 11, "sorted_logit": 57, "sorted_str": 20, "sorted_us": 97, "sota": [101, 105], "sought": 56, "soul": 194, "sound": [2, 3, 4, 44, 52, 65, 96, 100], "soup": 98, "sourc": [3, 6, 55, 56, 57, 58, 65, 67, 70, 77, 86, 88, 89, 92, 93, 94, 95, 97, 99, 107, 112, 113, 116, 118, 119, 182, 210, 215, 224, 226, 233], "south": [30, 32, 98], "southeast": 89, "space": [0, 4, 44, 47, 49, 50, 52, 56, 58, 62, 70, 72, 75, 77, 81, 82, 86, 87, 93, 95, 96, 100, 101, 103, 105, 120, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 145, 147, 149, 154, 157, 158, 162, 163, 164, 165, 171, 173, 175, 177, 179, 180, 182, 187, 190, 191, 192, 199, 206, 209, 215], "spaghetti": 113, "spam": [76, 94, 95, 108], "span": [29, 56, 57, 58, 67, 79, 83, 87, 95, 105, 122, 130, 191], "sparingli": 11, "spark": [97, 98, 99], "sparsiti": 83, "spatial": [30, 58, 62, 70, 79, 81], "spawn": [88, 90, 215, 230], "spawn_main": 230, "spawn_process": 215, "speak": [46, 57, 58, 215], "spece": 75, "speci": [75, 237], "special": [2, 8, 55, 56, 57, 58, 60, 67, 71, 78, 81, 96, 111, 113, 118, 119, 120, 125, 160, 226], "special_token": 119, "special_tokens_map": 119, "specif": [2, 4, 5, 6, 7, 9, 10, 11, 17, 19, 27, 29, 30, 32, 36, 43, 46, 47, 51, 52, 55, 56, 57, 58, 60, 62, 67, 71, 76, 78, 79, 81, 82, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 117, 122, 123, 125, 129, 146, 159, 182, 197, 199, 210, 215, 216, 218, 220, 221, 224, 227, 235], "specifi": [2, 5, 6, 9, 19, 29, 32, 36, 51, 53, 55, 58, 59, 60, 61, 65, 67, 68, 71, 76, 88, 89, 93, 94, 95, 97, 98, 99, 103, 105, 116, 117, 127, 129, 142, 216, 221, 226], "spectacularli": 101, "spectral": 60, "spectrogram": 95, "spectrum": 56, "specul": 56, "speech": [1, 54, 56, 57, 72, 73, 94, 95, 96], "speed": [3, 27, 29, 44, 58, 73, 93, 94, 95, 96, 108, 117, 215, 230], "speedup": 230, "speegl": 157, "spell": [56, 57, 97], "spend": [29, 95, 215], "spent": [11, 58, 70, 112], "sphere": 60, "spheric": [52, 60], "sphinx": 93, "spike": [56, 57, 114], "split": [16, 27, 30, 55, 56, 57, 60, 65, 67, 75, 84, 93, 100, 105, 106, 116, 118, 212, 221, 237], "split_batch": 116, "split_dataset": 58, "splot": 52, "spoken": 95, "spopt": 113, "spot": [5, 6, 52], "spotifi": 108, "spread": [32, 58, 60, 94, 95, 123, 141, 164, 189], "spring": 0, "spring2024": [111, 113, 115], "springer": [0, 1, 48, 51, 52, 59, 60, 62, 66, 67, 72, 73, 81, 82, 83, 86, 123, 192, 193], "sprinkl": [216, 228], "sprint": 93, "spur": 93, "sqcup": [52, 60, 149], "sqft": 67, "sql": [70, 96, 97, 98, 99, 108], "sqlalchemi": 98, "sqrt": [52, 55, 56, 57, 65, 67, 70, 71, 73, 74, 75, 83, 84, 109, 111, 113, 117, 118, 119, 126, 127, 141, 169, 170, 175, 177, 179, 185, 190, 197, 199, 202, 206, 209, 210], "sqrtm": 52, "squar": [7, 52, 55, 57, 58, 60, 61, 68, 79, 83, 86, 93, 95, 102, 105, 106, 109, 117, 122, 123, 129, 141, 164, 185, 191, 212, 233, 235], "square_by_exponenti": 112, "square_by_multipl": 112, "squared_gen": 229, "squeez": [57, 58, 76, 118, 120, 123], "squeezebackward0": 123, "squeezebackward1": 57, "squeue": 89, "sr": 95, "src": [57, 93], "sre": 93, "srun": 89, "ss": [88, 99, 216], "ss_": 67, "ss_re": 68, "ss_total": 68, "sse": [59, 60, 61], "ssh": 89, "st": [6, 88, 89, 95, 136, 138, 237], "stabalis": 111, "stabil": [53, 55, 58, 73, 74, 77, 101, 114, 121, 123, 215], "stabl": [7, 52, 56, 57, 70, 71, 74, 76, 93, 97, 98, 108, 123, 228, 237], "stable_softmax": 123, "stable_softmax_prob": 123, "stabliz": [58, 122], "stack": [5, 22, 23, 27, 29, 30, 31, 37, 38, 55, 56, 57, 63, 76, 77, 79, 84, 93, 98, 99, 101, 105, 107, 113, 114, 118, 120, 123, 212], "stack_int": 32, "stack_item": 32, "stack_of_str": 5, "stack_str": 32, "stackexchang": [0, 73, 83, 125, 157], "stacklevel": [57, 70, 103], "stacklist": [32, 35, 36, 37], "stackoverflow": [57, 68, 222, 230, 233], "stackrel": [29, 52, 57, 65, 67, 170, 180, 187, 200, 202, 210], "stage": [4, 29, 55, 56, 57, 58, 70, 77, 89, 92, 112, 113, 114, 122, 217, 220], "staging_dir": 99, "staging_lak": 99, "staging_warehous": 99, "stai": [57, 65, 67, 75, 93, 105, 109, 129], "stain": 62, "staircas": 139, "stakehold": [93, 94, 107, 142, 158], "stale": 108, "stand": [52, 56, 96, 114, 117, 129, 213], "standalon": [30, 32], "standard": [3, 8, 9, 16, 17, 30, 36, 52, 55, 56, 57, 58, 65, 73, 75, 76, 82, 96, 97, 98, 99, 100, 102, 105, 109, 111, 120, 122, 123, 158, 170, 179, 206, 212, 215], "standard_error": 67, "standpoint": 2, "stanford": [56, 57, 67, 111, 113, 173], "stanlei": [0, 72, 73, 136, 140, 141, 143, 146, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 197, 199, 200, 202, 203, 205, 210], "star": [52, 67, 230], "start": [11, 22, 23, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 52, 53, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 75, 79, 81, 82, 83, 88, 90, 94, 95, 96, 97, 99, 103, 108, 109, 110, 111, 112, 114, 116, 117, 118, 122, 123, 124, 127, 139, 142, 145, 153, 173, 188, 206, 210, 212, 213, 215, 217, 221, 226, 230, 233, 237], "start_method": [88, 90], "start_process": 88, "start_record_memory_histori": 114, "start_tim": [96, 110, 215, 217, 230], "starting_token": [57, 58], "starting_tokens_crop": 57, "startswith": [229, 237], "stat": [0, 52, 53, 67, 73, 75, 126, 142, 145, 147, 155, 157, 158, 167, 168, 169, 170, 172, 173, 176, 177, 178, 181, 184, 189, 193, 206, 229], "stat155not": 142, "stat425": 65, "stat462": 67, "stat505": 193, "stat508": 59, "state": [3, 4, 7, 9, 29, 30, 36, 49, 52, 55, 56, 57, 60, 63, 65, 67, 70, 73, 75, 77, 78, 79, 81, 83, 89, 93, 96, 97, 101, 103, 108, 114, 117, 118, 119, 123, 125, 129, 132, 133, 136, 139, 141, 142, 143, 145, 147, 149, 155, 158, 161, 171, 179, 180, 182, 183, 190, 194, 195, 199, 202, 207, 210, 212, 218, 220, 222, 235], "state_dict": [116, 216, 217], "statement": [3, 8, 9, 20, 30, 57, 60, 79, 93, 95, 118, 125, 149, 177, 205, 213, 215, 228, 230], "static": [2, 5, 6, 7, 8, 10, 30, 32, 56, 57, 89, 96, 108, 116, 220], "static_method": 116, "staticmethod": [53, 68, 74, 116, 221], "station": 96, "stationari": 70, "statisc": 132, "statist": [0, 17, 48, 52, 56, 57, 59, 60, 65, 66, 72, 73, 75, 76, 77, 86, 93, 94, 95, 98, 99, 100, 101, 103, 107, 109, 123, 140, 141, 149, 152, 158, 167, 168, 169, 172, 173, 197, 198, 199, 200, 202, 203, 205, 210, 211], "statistician": [76, 172, 199], "statisticshowto": 142, "statproofbook": 75, "statquest": 59, "stats203": 67, "stats462": 67, "statsmodel": 67, "statu": [4, 73, 99, 107, 142, 145, 147, 237], "status_cod": 230, "std": [52, 55, 57, 67, 75, 111, 113, 118, 119, 141, 169, 216, 218], "std1": 109, "std2": 109, "std_dev": [57, 111, 113, 118, 119], "stderr": 89, "stdout": [110, 111, 112, 113, 216], "stdtype": 233, "stealth": [30, 32], "steer": 9, "stein": [0, 16], "stem": [56, 57, 58, 60, 139, 142, 155, 158, 180, 181, 234], "step": [11, 19, 20, 27, 29, 30, 36, 43, 44, 46, 47, 53, 56, 57, 58, 59, 61, 63, 65, 67, 70, 71, 83, 84, 89, 92, 94, 95, 97, 100, 101, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 119, 120, 122, 126, 139, 142, 155, 158, 172, 180, 185, 206, 210, 212, 216, 217, 228, 233, 234], "step_index": [58, 217], "step_lr": 225, "step_num": 112, "step_scheduler_on_batch_or_epoch": [58, 118], "step_siz": 225, "steplr": 225, "steplrconfig": 225, "stick": [36, 57, 75, 98, 210], "still": [13, 27, 29, 32, 35, 36, 43, 44, 46, 52, 55, 56, 57, 58, 60, 62, 65, 67, 71, 73, 75, 76, 81, 88, 93, 94, 97, 100, 101, 103, 108, 109, 114, 115, 116, 122, 123, 126, 132, 133, 135, 145, 158, 169, 172, 179, 189, 205, 210, 216, 230, 237, 238], "stipul": [29, 36], "stixnonunicod": 52, "stochast": [0, 1, 54, 56, 58, 67, 68, 100, 122, 125], "stock": [93, 96], "stoi": [55, 57], "stone": 84, "stop": [5, 27, 29, 43, 46, 53, 58, 60, 65, 93, 99, 105, 114, 118, 122, 123, 125, 212, 237], "stop_record_memory_histori": 114, "stopiter": [22, 212, 233], "storag": [3, 11, 17, 32, 36, 62, 77, 89, 92, 93, 99, 100, 108, 117, 229], "storagetyp": 89, "store": [11, 13, 17, 19, 20, 22, 23, 27, 29, 32, 36, 43, 44, 46, 52, 57, 60, 61, 62, 70, 73, 76, 88, 93, 96, 97, 99, 100, 105, 107, 108, 114, 117, 206, 212, 213, 215, 216, 217, 218, 222, 224, 227, 229, 233, 234, 235, 238], "store_flo": 116, "store_tru": [88, 90, 114], "storesconfig": [216, 218], "stori": [29, 51], "str": [2, 3, 4, 5, 6, 8, 9, 11, 20, 25, 26, 32, 35, 36, 37, 41, 53, 57, 58, 61, 62, 68, 70, 71, 74, 75, 76, 88, 90, 93, 97, 99, 103, 111, 112, 113, 114, 116, 117, 119, 120, 122, 127, 142, 145, 147, 155, 158, 167, 168, 169, 170, 177, 189, 206, 210, 212, 215, 216, 217, 218, 220, 221, 224, 225, 226, 228, 229, 230, 237], "str1": 232, "str2": 232, "str_": 20, "str_1": 25, "str_2": 25, "str_or_int": 93, "str_to_typ": 237, "straight": [44, 60, 65, 67, 83, 129, 202], "straightforward": [7, 11, 29, 30, 52, 58, 60, 82, 93, 95, 96, 125, 149, 177, 212, 213, 220, 221, 229], "strang": 60, "strat": 95, "strateg": 29, "strategi": [2, 17, 27, 29, 32, 44, 46, 47, 56, 61, 70, 77, 93, 94, 100, 105, 107, 215, 223], "strategy_class": 227, "strategyregistri": 227, "stratif": 95, "stratifi": [100, 104, 105], "stratifiedgroupkfold": 105, "stratify_by_column": [71, 119, 120], "stream": [57, 71, 93, 94, 95, 96, 97, 109, 110, 119, 120, 216, 229, 233], "stream_executor": 71, "streamhandl": [110, 111, 112, 113, 119, 120, 216], "streamlin": [2, 56, 58, 99], "street": [83, 237], "strength": [52, 68, 93, 95, 97], "stress": 93, "stretch": [82, 189], "strftime": [113, 114], "strict": [3, 56, 97, 108, 216, 217, 218], "stricter": 5, "strictli": [30, 46, 57, 108, 123, 172], "strike": [56, 57, 106], "string": [3, 5, 8, 11, 17, 25, 32, 33, 35, 38, 39, 40, 42, 47, 56, 57, 58, 71, 77, 88, 93, 96, 97, 98, 108, 116, 127, 212, 218, 230, 232, 233, 237], "string_typ": 237, "stringent": 93, "stringio": 229, "stringvalu": 5, "strip": [56, 57, 58, 103, 237], "strive": 56, "strncat": 27, "strong": [27, 65, 67, 70, 75, 84, 207, 227], "stronger": [6, 52, 67, 116, 177], "strongli": 5, "structur": [0, 4, 5, 7, 8, 9, 11, 12, 13, 16, 17, 20, 22, 23, 27, 29, 30, 33, 36, 43, 47, 55, 56, 57, 58, 60, 65, 76, 78, 81, 83, 93, 95, 96, 98, 99, 100, 108, 116, 123, 181, 212, 213, 215, 218, 220, 224, 229, 233], "structure_data": 99, "structured_data": 99, "struggl": [56, 57, 95, 215], "stuck": [57, 58, 60, 122, 129, 173], "student": [77, 96, 121, 145, 154, 170, 180, 230], "student_logit": 120, "student_model": 120, "student_optim": 120, "student_output": 120, "student_schedul": 120, "studi": [56, 65, 78, 79, 82, 86, 93, 95, 99, 155, 194, 195, 198, 210], "studio": 93, "stuff": [97, 157], "sturdi": 93, "style": [30, 32, 52, 53, 57, 61, 62, 74, 75, 76, 77, 98, 119, 127, 142, 177, 210], "styliz": 125, "sub": [16, 55, 56, 57, 58, 60, 93, 95, 98, 99, 113, 181, 218, 222], "subarrai": [11, 30, 44], "subarray_sum_fix": 46, "subbackward0": 113, "subcategori": 94, "subclass": [2, 3, 4, 6, 7, 8, 57, 58, 116, 221], "subdir": 216, "subdirectori": 99, "subdivid": 125, "subfigur": 209, "subject": [29, 51, 57, 60, 73, 92, 93, 99, 100, 109, 129, 210], "sublay": 57, "submit": [0, 1, 54, 56, 65, 69, 70, 89, 93, 122, 123], "subnet": 89, "subnet_id": 89, "subnetid": 89, "suboptim": 94, "subplot": [52, 53, 57, 58, 61, 62, 75, 76, 81, 82, 83, 84, 122, 123, 127, 139, 142, 143, 146, 154, 158, 159, 167, 173, 177, 189, 206, 210], "subplots_adjust": 57, "subproblem": [16, 27, 30], "subprocess": 103, "subroutin": [2, 27, 112], "subscrib": 94, "subscript": [55, 57, 73, 81, 86, 94, 233], "subsequ": [6, 11, 17, 26, 30, 36, 46, 52, 56, 57, 58, 60, 63, 67, 70, 73, 76, 93, 95, 99, 114, 129, 143, 146, 147, 149, 176, 212, 235, 236, 238], "subset": [4, 27, 29, 30, 52, 55, 56, 57, 58, 60, 65, 67, 70, 74, 75, 88, 93, 96, 100, 105, 108, 123, 125, 126, 127, 129, 130, 136, 158, 210], "subseteq": [3, 57, 65, 81, 86, 123, 125, 130, 133, 162, 175], "subsitut": 5, "subspac": [27, 65, 70, 78, 79, 192], "substack": 93, "substanti": [56, 57, 67, 99], "substitut": [2, 3, 7, 16, 52, 55, 57, 65, 73, 79, 84, 117, 123, 169, 185, 190, 192], "substr": 41, "substring_hashmap": 41, "subsumpt": [2, 7, 10, 77], "subsystem": 215, "subtl": [30, 67, 73, 93, 114], "subtli": 67, "subtract": [4, 13, 46, 57, 73, 78, 79, 83, 117, 123], "subtre": 27, "subtyp": [1, 6, 7, 8, 10, 77, 96, 221], "subword": 57, "succe": [70, 212], "succeed": 56, "success": [16, 27, 30, 56, 73, 76, 93, 95, 96, 99, 100, 105, 107, 142, 143, 145, 146, 147, 151, 154], "successfulli": [30, 76, 89, 93, 94, 97, 98, 103], "sudden": 109, "suddenli": 76, "sudo": 89, "suffer": [57, 65, 101], "suffic": [29, 94, 95, 118, 127], "suffici": [2, 16, 29, 53, 55, 56, 64, 65, 67, 70, 79, 88, 94, 98, 102, 103, 115, 118, 142, 154, 210], "suffix": [114, 224], "sugar": [79, 228], "suggest": [6, 7, 13, 19, 52, 56, 57, 58, 65, 67, 70, 73, 75, 93, 94, 95, 100, 101, 104, 108, 109, 117, 122, 127, 129, 218, 220, 227, 237], "suit": [29, 32, 36, 60, 93, 95, 96, 97, 213, 215], "suitabl": [27, 29, 46, 52, 57, 58, 67, 70, 95, 96, 97, 98, 99, 100, 104, 105, 107, 108, 215, 226], "sum": [11, 12, 14, 16, 18, 20, 21, 27, 29, 30, 32, 36, 39, 40, 45, 52, 53, 56, 57, 58, 60, 61, 65, 67, 68, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 88, 98, 99, 102, 111, 112, 113, 117, 118, 119, 120, 123, 129, 130, 132, 133, 142, 145, 147, 148, 155, 158, 164, 173, 174, 175, 179, 183, 196, 199, 206, 210, 212, 229, 230], "sum_": [29, 30, 32, 46, 49, 51, 52, 55, 56, 57, 58, 60, 62, 63, 65, 67, 70, 73, 74, 75, 76, 83, 84, 86, 102, 117, 123, 125, 129, 130, 133, 138, 139, 140, 141, 143, 146, 150, 154, 158, 163, 173, 175, 177, 180, 182, 183, 185, 190, 191, 199, 200, 202, 205, 206, 210], "sum_i": [76, 120, 210], "sum_j": 120, "sum_x": [125, 182], "summabl": [125, 140], "summand": 56, "summar": [2, 27, 43, 52, 55, 56, 70, 75, 95, 98, 108, 117, 195], "summari": [13, 19, 29, 56, 57, 58, 62, 67, 70, 77, 79, 96, 97, 98, 100, 124, 134, 210, 220], "summary_activ": 57, "summary_first_dropout": 57, "summary_proj_to_label": 57, "summary_typ": 57, "summary_use_proj": 57, "summat": [46, 52, 55, 56, 58, 67, 84, 125, 130, 229], "sundai": 149, "sunil": 69, "sup": [64, 65], "super": [6, 9, 52, 53, 57, 71, 93, 95, 100, 111, 113, 116, 117, 118, 119, 225, 227, 236], "super_large_logit": 123, "superclass": [2, 4, 7, 221], "superfici": 6, "superscript": [55, 60, 73, 86], "superset": 4, "supertyp": [2, 3, 4, 6, 7], "supervis": [0, 8, 57, 60, 65, 67, 73, 95, 100, 101, 120, 190], "supplement": 93, "supplementari": 56, "suppli": [5, 93, 95, 233], "support": [2, 6, 32, 36, 53, 58, 61, 65, 68, 71, 74, 84, 88, 93, 94, 96, 97, 98, 101, 108, 116, 122, 212, 216, 224, 237], "supportsindex": 7, "supportsit": 233, "supportsrichcomparison": 7, "supportsrichcomparisont": 7, "suppos": [7, 9, 27, 47, 56, 58, 62, 65, 67, 70, 73, 76, 82, 93, 94, 95, 102, 105, 109, 125, 135, 142, 145, 147, 158, 175, 179, 183, 189, 190, 205, 210, 212], "suppress": [123, 215], "supremum": [64, 65], "suptitl": [143, 189], "supylabel": 143, "sure": [3, 7, 29, 30, 57, 58, 62, 67, 70, 71, 75, 88, 89, 96, 97, 103, 105, 112, 117, 123, 158, 194, 207, 216, 217], "surfac": [67, 126, 175, 189], "surject": 60, "surpass": 56, "surpris": [3, 52, 57, 58, 60, 67, 75, 102, 112, 155, 167, 171, 180, 210], "surprisingli": 142, "surround": 95, "survei": [56, 96, 97], "surveil": 100, "surviv": 102, "susan": 26, "suscept": 57, "sushi": 32, "suspect": [114, 237], "suspici": 97, "sutskev": [0, 1, 54, 56], "svd": 70, "svg": [27, 81, 82, 142, 210], "svg_imag": 27, "svm": [65, 95, 101], "swap": [5, 55, 57, 58, 84, 119, 122, 227], "sweep": [202, 216], "sweeper": 216, "swipe": 96, "switch": [57, 76, 103, 116, 213, 215, 220], "sy": [5, 7, 36, 53, 58, 61, 62, 74, 75, 76, 110, 111, 112, 113, 114, 127, 142, 145, 147, 155, 158, 167, 168, 169, 177, 189, 206, 210, 212, 216, 229, 230, 238], "symbol": [7, 52, 55, 56, 57, 58, 60, 62, 67, 73, 125, 139, 187, 191], "symlink": 93, "symmetr": [52, 65, 83, 158, 169, 170, 179], "symmetri": [4, 70, 83, 194], "symptom": [95, 105], "sync": [88, 93, 216], "synchron": [46, 47, 57, 58, 77, 88, 90, 111, 112, 113, 115, 213, 217, 230], "syndrom": 93, "synonym": [140, 141, 163, 164], "syntact": 57, "syntat": 228, "syntax": [5, 6, 8, 11, 17, 44, 93, 215], "syntaxerror": [71, 116], "synthes": 57, "synthesi": [145, 158], "synthet": [52, 94], "system": [1, 2, 3, 4, 5, 6, 10, 27, 29, 32, 52, 54, 56, 57, 62, 67, 69, 70, 73, 77, 78, 80, 81, 87, 88, 90, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 113, 115, 117, 202, 212, 215, 218, 220, 222, 224, 226, 230], "systemat": [4, 52, 67, 93, 95, 103, 107, 109, 209], "t": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 23, 27, 29, 32, 35, 36, 43, 44, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 70, 71, 73, 74, 75, 76, 79, 81, 84, 86, 87, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 133, 135, 142, 147, 149, 154, 157, 158, 165, 166, 169, 170, 173, 177, 179, 185, 187, 189, 190, 191, 192, 194, 195, 199, 210, 212, 215, 216, 217, 218, 220, 221, 227, 228, 229, 230, 232, 233, 234, 235, 237], "t1": 6, "t10k": 76, "t2": [6, 89], "t4": 117, "t4_16gb": 117, "t_": [58, 67, 122], "t_0": 225, "t_1": [6, 76], "t_2": [6, 76], "t_co": 212, "t_d": 76, "t_i": [6, 76], "t_max": [58, 118, 119, 122, 225], "t_mult": 225, "t_n": [6, 55, 56, 70], "t_valu": 67, "t_x": 6, "t_y": 6, "tab": [27, 88, 89, 93, 227], "tab_titl": 27, "tabbi": [6, 56], "tabl": [16, 17, 19, 43, 44, 52, 56, 57, 62, 75, 83, 89, 93, 94, 95, 97, 98, 100, 102, 108, 109, 112, 113, 117, 120, 179, 180, 199, 238], "table_nam": 99, "tablefmt": [62, 117], "tabul": [62, 117], "tabular": 96, "tackl": [7, 29, 95], "tag": [89, 95, 96, 97, 103, 107, 111, 113, 145, 237], "tag1": 237, "tag2": 237, "tag3": 237, "tag4": 237, "taglin": [93, 222], "tagss": 237, "tagsss": 237, "tail": [30, 67, 79, 81, 82, 129, 130, 136, 143, 147, 210], "tailor": [5, 30, 55, 56, 95, 220], "take": [2, 3, 4, 5, 6, 8, 9, 11, 13, 16, 17, 18, 19, 20, 22, 26, 27, 29, 30, 32, 36, 43, 44, 46, 51, 52, 53, 55, 56, 57, 58, 60, 62, 65, 67, 70, 73, 75, 76, 78, 79, 82, 83, 84, 86, 88, 89, 93, 94, 95, 96, 99, 101, 102, 105, 107, 108, 109, 110, 112, 113, 116, 117, 122, 123, 125, 127, 129, 136, 138, 139, 142, 145, 146, 157, 158, 162, 165, 169, 172, 173, 179, 180, 182, 206, 209, 210, 212, 215, 216, 220, 227, 228, 237], "takeawai": [67, 81], "taken": [3, 11, 16, 27, 29, 30, 36, 52, 76, 83, 86, 95, 99, 109, 110, 117, 127, 143, 145, 155, 175, 179, 180, 182, 230, 237], "talk": [5, 7, 29, 36, 48, 51, 52, 55, 60, 67, 72, 73, 75, 79, 99, 100, 101, 123, 142, 144, 148, 155, 156, 173, 193, 207, 210, 216], "tall": [126, 189], "taller": [142, 158], "talwalkar": [0, 65, 67, 86], "tan": [20, 51, 52, 59, 60, 67], "tandem": 93, "tangibl": [84, 229], "tanh": [55, 57, 58, 111, 113, 118, 119], "target": [8, 13, 19, 27, 30, 43, 47, 50, 56, 60, 66, 68, 70, 71, 75, 79, 88, 92, 93, 95, 97, 98, 99, 100, 101, 105, 106, 107, 111, 113, 118, 119, 120, 122, 177, 181, 210, 213, 215, 230], "target_batch": 58, "target_fn": 90, "target_length": 120, "target_list": 235, "target_mask": [57, 58], "target_masks_shap": [57, 58], "target_modul": 71, "target_padding_mask": [57, 58, 118], "targets_flatten": 58, "targets_pad": 58, "task": [4, 11, 17, 27, 29, 30, 32, 44, 47, 49, 52, 55, 57, 58, 65, 67, 71, 73, 76, 79, 83, 84, 89, 93, 94, 97, 98, 99, 100, 101, 102, 105, 107, 108, 116, 117, 118, 119, 120, 123, 145, 179, 181, 215, 216, 218, 220, 227], "task_specific_param": 57, "tau": [27, 30, 55, 56], "tau_w": [58, 122], "taught": 5, "taxicab": 83, "td": [57, 95], "tea": 20, "teach": 93, "teacher": [58, 77, 121], "teacher_logit": 120, "teacher_model": 120, "teacher_optim": 120, "teacher_output": 120, "teacher_schedul": 120, "team": [89, 92, 93, 95, 100, 103, 114, 115, 217], "tear": 102, "tech": [1, 10, 11, 12, 17, 18, 32, 33, 93, 96, 99], "techgear": 30, "technic": [9, 19, 43, 58, 65, 70, 74, 75, 94, 117, 125, 126, 226, 233], "techniqu": [9, 11, 17, 27, 29, 43, 44, 52, 55, 56, 57, 58, 62, 67, 70, 83, 88, 94, 95, 97, 99, 100, 101, 105, 106, 109, 122, 126, 129, 145, 230], "technologi": [57, 96, 99], "tediou": [187, 210], "telecom": 95, "tell": [3, 5, 6, 8, 29, 52, 58, 60, 61, 65, 67, 70, 75, 84, 93, 97, 99, 118, 122, 126, 129, 158, 173, 175, 202, 216], "temp": [76, 123], "temp_fil": 224, "temp_file_path": 224, "temperatur": [57, 58, 95, 96, 108, 118, 120], "tempfil": [114, 224], "templat": [5, 27, 29, 89, 93, 99, 216], "tempor": [95, 100], "temporari": [13, 17, 19, 27, 30, 43, 93, 98], "temporarili": [98, 114, 129, 230], "tempt": 11, "ten": [56, 57], "tend": [56, 57, 60, 62, 75, 95, 108, 129, 142, 154, 157, 207, 216], "tendenc": [98, 106], "tenni": 135, "tensor": [52, 55, 57, 58, 71, 73, 75, 76, 87, 88, 96, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123], "tensor_await": 114, "tensor_s": [110, 114], "tensorboard": [103, 112], "tensorboard_trace_handl": 112, "tensorflow": [61, 113], "tensorflow_prob": 75, "tenth": 58, "tepoch": 216, "terabyt": [99, 100], "teraflop": [95, 117], "term": [3, 5, 7, 11, 13, 16, 17, 19, 27, 29, 30, 36, 43, 49, 52, 55, 56, 57, 58, 60, 65, 68, 70, 73, 75, 76, 79, 81, 82, 83, 84, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 108, 112, 117, 120, 122, 123, 135, 142, 170, 173, 177, 179, 180, 182, 183, 184, 185, 186, 188, 190, 192, 194, 205, 210, 211, 221, 233], "termin": [27, 29, 30, 44, 212, 215, 233], "terminologi": [58, 67, 73, 87], "terraform": 93, "terrifi": 179, "territori": 93, "test": [17, 47, 53, 55, 56, 57, 61, 68, 71, 73, 74, 75, 76, 77, 86, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 110, 119, 120, 123, 142, 145, 179, 180, 202, 218, 220, 222, 231, 232, 233], "test_": 93, "test_binary_search": 27, "test_dataset": 58, "test_eval_accuraci": 71, "test_eval_brier_scor": 71, "test_eval_confusion_matrix": 71, "test_eval_f1_score_macro": 71, "test_eval_f1_score_micro": 71, "test_eval_log_loss": 71, "test_eval_pr_auc": 71, "test_eval_pr_auc_class_0": 71, "test_eval_pr_auc_class_1": 71, "test_eval_pr_auc_class_2": 71, "test_eval_precision_macro": 71, "test_eval_precision_micro": 71, "test_eval_recall_macro": 71, "test_eval_recall_micro": 71, "test_eval_roc_auc": 71, "test_eval_roc_auc_class_0": 71, "test_eval_roc_auc_class_1": 71, "test_eval_roc_auc_class_2": 71, "test_load": [58, 118], "test_loss": 71, "test_minimum_spe": 29, "test_one_epoch": 58, "test_runtim": 71, "test_samples_per_second": 71, "test_siz": [58, 61, 68, 71, 74, 75, 119, 120], "test_steps_per_second": 71, "test_train_model_using_image_dataset_load": 93, "test_train_model_using_text_dataset_load": 93, "test_unordered_linear_search_iterative_for_loop": 30, "test_unordered_linear_search_iterative_while_loop": 30, "test_unordered_sequential_search_recurs": 30, "testabl": 93, "tester": 93, "testframework": [27, 29, 30], "testing_made_with_ml": 93, "testpath": 93, "tests_": 93, "text": [2, 6, 7, 16, 19, 20, 27, 29, 30, 35, 36, 43, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 65, 67, 70, 73, 75, 76, 81, 83, 84, 86, 89, 93, 95, 97, 100, 108, 109, 117, 119, 120, 122, 123, 125, 126, 129, 139, 140, 142, 143, 145, 146, 147, 149, 150, 154, 157, 158, 159, 163, 165, 167, 168, 169, 170, 172, 173, 175, 179, 180, 182, 183, 185, 187, 189, 190, 194, 195, 197, 199, 200, 202, 205, 206, 209, 210, 212, 221, 233], "text_gen": 212, "text_gen_comprehens": 212, "text_summar": 95, "textbf": [65, 73, 86, 101, 109, 129, 132, 136], "textbook": [16, 60, 65, 79, 80, 85, 129, 173], "textcolor": [52, 65], "textcoord": 52, "textdatasetload": 93, "textrm": [123, 210], "textsf": 84, "textual": [56, 95, 96], "tf": [27, 29, 30, 61, 95, 100, 117], "tf32": 116, "tgk": 184, "tgt": 57, "tgt_mask": 57, "th": [11, 29, 30, 32, 47, 49, 51, 52, 55, 56, 57, 58, 60, 63, 65, 67, 73, 79, 81, 82, 86, 123, 136, 138, 141, 164, 177, 187, 192, 194, 199, 210, 228], "thai": 98, "than": [2, 4, 5, 6, 7, 8, 10, 11, 13, 16, 17, 27, 29, 30, 43, 46, 47, 52, 53, 55, 56, 57, 58, 60, 62, 64, 65, 67, 70, 71, 73, 75, 76, 79, 83, 86, 87, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 107, 108, 110, 114, 116, 117, 120, 122, 123, 125, 129, 141, 142, 147, 154, 157, 158, 162, 168, 169, 171, 172, 173, 175, 177, 178, 179, 184, 189, 192, 195, 205, 209, 210, 212, 215, 216, 218, 226, 229, 230], "thank": [99, 230], "thee": 2, "thei": [2, 3, 4, 5, 6, 7, 8, 11, 13, 16, 17, 19, 20, 29, 30, 32, 36, 43, 44, 47, 49, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 75, 76, 78, 79, 81, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 122, 123, 125, 127, 129, 130, 132, 133, 135, 136, 142, 145, 154, 164, 179, 180, 190, 198, 199, 203, 205, 206, 210, 212, 213, 215, 216, 217, 218, 220, 221, 226, 227, 228, 230, 232, 233, 234, 235], "them": [0, 5, 6, 7, 9, 11, 17, 20, 22, 23, 27, 29, 32, 36, 47, 52, 53, 55, 56, 57, 58, 60, 62, 65, 67, 70, 73, 75, 76, 78, 79, 82, 83, 84, 86, 88, 89, 93, 95, 96, 97, 99, 100, 102, 103, 106, 108, 111, 113, 114, 116, 117, 124, 125, 126, 130, 132, 133, 135, 142, 145, 147, 187, 195, 202, 206, 210, 212, 215, 218, 220, 221, 222, 229, 230, 232, 233, 236], "theme": [11, 61], "themselv": [2, 32, 52, 57, 100, 129, 210, 221], "theorem": [15, 29, 49, 52, 65, 75, 76, 77, 123, 129, 134, 149, 165, 169, 171, 175, 179, 180, 182, 192, 194, 198, 200, 202, 207, 210], "theoret": [4, 10, 48, 56, 57, 58, 65, 76, 107, 122, 123, 125, 127, 145, 201, 202, 204, 210], "theori": [1, 2, 3, 4, 5, 7, 29, 30, 48, 57, 60, 64, 67, 69, 73, 75, 76, 86, 95, 105, 123, 125, 128, 130, 134, 142, 145, 158, 174, 176, 182, 191, 198, 199, 202, 206, 207], "theoriz": 5, "thequeueabstractdatatyp": 22, "therebi": [5, 27, 29, 58, 62, 73, 95, 108, 116, 123, 218, 229], "therefor": [2, 3, 4, 6, 8, 9, 13, 16, 19, 20, 22, 27, 29, 30, 36, 43, 44, 46, 49, 52, 55, 56, 57, 58, 60, 62, 65, 66, 67, 70, 73, 74, 75, 79, 83, 93, 94, 95, 100, 101, 102, 105, 109, 112, 117, 122, 123, 124, 125, 129, 131, 132, 133, 135, 142, 145, 147, 157, 158, 162, 169, 173, 177, 179, 182, 185, 187, 190, 191, 192, 197, 198, 199, 200, 201, 202, 204, 205, 206, 210, 212, 221], "thereof": 95, "thesi": 96, "theta": [16, 27, 29, 49, 50, 51, 52, 55, 56, 57, 58, 67, 70, 73, 74, 75, 84, 86, 117, 122, 175, 177, 190, 194, 209, 210], "theta_": [70, 73, 74, 79, 120, 123, 210], "theta_t": 120, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238], "thick": [30, 32], "thing": [2, 5, 7, 36, 44, 49, 52, 57, 58, 60, 62, 67, 70, 73, 75, 76, 79, 88, 89, 93, 94, 95, 99, 103, 105, 108, 114, 119, 125, 206, 210, 212, 216, 220, 222, 230, 232, 236, 237], "thingi": 230, "think": [2, 3, 6, 7, 8, 19, 26, 36, 43, 49, 52, 55, 56, 57, 58, 60, 62, 65, 67, 70, 73, 81, 84, 88, 89, 90, 93, 95, 108, 118, 119, 123, 125, 132, 141, 145, 157, 164, 173, 179, 206, 210, 215, 216, 220, 222, 236], "third": [16, 27, 32, 46, 52, 55, 57, 58, 62, 65, 75, 83, 93, 96, 98, 112, 118, 170, 180, 189, 210, 235], "thoma": 0, "thorough": [67, 93, 95], "thoroughli": [93, 107, 109], "those": [4, 6, 7, 8, 11, 27, 29, 52, 55, 57, 58, 60, 61, 65, 67, 79, 86, 93, 94, 95, 96, 97, 99, 101, 102, 103, 111, 116, 117, 125, 212, 216, 218, 235, 237], "though": [2, 3, 5, 7, 20, 27, 49, 52, 55, 56, 57, 58, 60, 65, 67, 70, 73, 75, 79, 81, 82, 93, 99, 100, 102, 108, 109, 114, 117, 118, 122, 123, 143, 173, 179, 180, 213, 227, 230], "thought": [2, 5, 9, 29, 56, 57, 58, 67, 78, 123, 129, 210], "thousand": [56, 57, 108], "thread": [70, 77, 214, 217], "thread1": 230, "thread2": 230, "thread_1_current_valu": 213, "thread_1_new_valu": 213, "thread_2_current_valu": 213, "thread_2_new_valu": 213, "thread_index": [213, 230], "thread_saf": [213, 230], "thread_unsaf": [213, 230], "threaten": 94, "three": [4, 13, 16, 17, 19, 27, 29, 30, 52, 55, 56, 57, 65, 67, 70, 79, 81, 82, 88, 93, 95, 97, 98, 101, 106, 126, 129, 132, 135, 143, 146, 170, 199, 206, 210, 215, 230], "threshold": [17, 29, 53, 57, 83, 104, 107, 109], "thrice": 124, "through": [2, 3, 4, 5, 6, 7, 10, 11, 13, 17, 19, 20, 27, 29, 30, 32, 43, 44, 46, 47, 52, 54, 56, 57, 58, 61, 62, 65, 67, 73, 79, 84, 87, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 108, 109, 117, 122, 123, 125, 127, 129, 145, 149, 175, 206, 210, 212, 215, 216, 218, 221, 227, 229], "throughout": [27, 30, 46, 55, 56, 57, 75, 76, 93, 99, 100, 108, 216, 218], "throughput": [29, 98, 107, 109, 117], "throughputmod": 89, "throw": [3, 8, 36, 56, 58, 93, 129, 130, 132, 136, 171], "thrown": 212, "thu": [3, 4, 5, 6, 16, 17, 27, 29, 30, 32, 36, 44, 52, 55, 56, 57, 58, 60, 62, 65, 67, 70, 79, 82, 83, 93, 94, 95, 97, 102, 123, 125, 129, 132, 138, 139, 142, 145, 149, 158, 175, 180, 192, 197, 205, 210, 212, 215, 216, 218, 220, 230], "ti": [52, 56, 57, 94, 117, 220], "tibshirani": [0, 59, 60, 66, 67, 72, 73], "tick_param": [52, 57], "tid": 215, "tidi": 60, "tie": 136, "tie_weight": 116, "tight": [16, 29, 65, 84, 93], "tight_layout": [52, 58, 61, 84, 122, 123, 170], "tighten": 29, "tightli": [86, 93, 181, 220, 221], "tiktok": [94, 100], "tiktoken": [56, 57, 212], "tikzpictur": [30, 32], "tild": [52, 57, 123], "tile": 52, "till": [46, 55, 58, 62], "tilt": 79, "tim": [0, 145], "time": [3, 5, 8, 9, 10, 16, 44, 47, 50, 52, 55, 56, 57, 58, 59, 61, 62, 65, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 90, 93, 94, 95, 96, 97, 98, 99, 102, 103, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 119, 122, 123, 124, 126, 127, 130, 135, 143, 145, 147, 149, 154, 155, 156, 157, 171, 173, 175, 177, 179, 187, 189, 190, 191, 194, 195, 206, 207, 209, 210, 213, 215, 216, 217, 218, 226, 230, 233, 234, 235, 236, 237], "time_complexity_analyz": [11, 17], "time_effici": 229, "time_format_str": [113, 114], "time_ineffici": 229, "time_needed_over_all_tokens_in_second": 117, "time_sp": 112, "time_taken": [110, 217], "time_taken_per_it": 117, "timeit": [77, 110, 112, 115, 229], "timelimit": 89, "timelin": [93, 113, 114], "timeout": 57, "timeouterror": 9, "timer": [96, 110], "timestamp": [97, 99, 108, 113, 114], "timestep": 58, "tini": [93, 114], "tinyshakespear": 57, "tip": [29, 69, 98, 105, 116], "tissu": 62, "titl": [3, 52, 53, 56, 58, 61, 67, 75, 76, 79, 97, 118, 122, 123, 155, 167, 168, 169, 170, 206, 237], "tmp": [6, 68, 116], "tmp_trainer": 116, "tn": [94, 102], "to_account": 230, "to_bettertransform": 116, "to_contain": 216, "to_empti": 116, "to_find": 5, "to_numpi": [67, 96], "to_object": 216, "to_panda": 119, "to_yaml": 216, "tobyt": 62, "todai": 56, "todo": [43, 44, 53, 57, 58, 61, 116, 119, 138, 146, 158], "tofil": 57, "togeth": [5, 6, 11, 16, 20, 27, 29, 44, 46, 52, 55, 56, 58, 60, 62, 65, 67, 70, 75, 83, 84, 86, 87, 93, 96, 97, 102, 108, 111, 113, 123, 126, 183, 216], "toggl": 114, "toi": [2, 61, 65, 87, 123], "tok_emb": [57, 58, 119], "token": [70, 71, 77, 93, 95, 98, 116, 117, 118, 120, 121, 123, 217], "token_embed": [57, 111, 113], "token_id": 57, "token_position_pdrop": [111, 113], "token_to_index": 58, "tokenembed": 57, "tokenis": 57, "tokenization_utils_bas": [116, 119, 120], "tokenized_train_dataset": [71, 119], "tokenized_valid_dataset": [71, 119], "tokenizedbatch": [71, 119, 120], "tokenizer_kwarg": [119, 120], "tokens_per_it": 58, "tol": [53, 61], "told": [58, 75, 123, 201, 204], "toler": [53, 61, 65, 94, 203], "tolist": [58, 71, 111, 119], "tolkien": 97, "tom": [65, 72, 73], "tomato": [98, 228], "tomorrow": 102, "tone": 75, "toni": 0, "too": [5, 11, 17, 23, 27, 29, 57, 58, 65, 67, 70, 73, 74, 75, 76, 82, 87, 93, 95, 96, 100, 101, 103, 105, 112, 116, 118, 122, 129, 173, 178, 179, 207, 217, 218, 222], "took": [27, 96, 110, 111, 113], "tool": [30, 52, 65, 83, 94, 96, 99, 101, 103, 105, 107, 110, 114, 115, 198, 213], "toolbox": 93, "toolkit": [30, 83, 93], "top": [16, 22, 23, 27, 32, 34, 35, 36, 52, 55, 56, 57, 58, 60, 65, 66, 67, 73, 75, 81, 82, 83, 84, 86, 95, 101, 112, 117, 123, 126, 189, 215, 228], "top_bar": 75, "top_el": 35, "top_item": 32, "top_k": [57, 58, 118], "top_k_valu": 57, "top_p": [57, 58, 118], "top_p_logit": 57, "topic": [65, 66, 67, 79, 95, 99, 101, 108], "topk": 57, "topmost": [32, 116], "torch": [53, 55, 57, 58, 61, 70, 71, 74, 75, 76, 88, 90, 93, 103, 110, 111, 113, 114, 116, 117, 118, 119, 120, 122, 123, 212, 215, 216, 217, 225], "torch_compil": 116, "torch_compile_backend": 116, "torch_compile_mod": 116, "torch_jit_model_ev": 116, "torch_stabl": 93, "torch_util": [111, 119, 120], "torchaudio": 93, "torchdynamo": 116, "torchinfo": [57, 93, 212], "torchmetr": [102, 212], "torchrun": [88, 89], "torchtext": 212, "torchtun": [71, 113, 115], "torchvis": [76, 93, 114, 212, 216], "torgersen": 75, "toronto": [56, 57], "toss": [129, 130, 145, 147, 228], "tot": 67, "total": [16, 17, 36, 46, 52, 55, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 75, 76, 77, 79, 87, 88, 94, 98, 102, 111, 112, 113, 122, 123, 124, 127, 129, 134, 136, 142, 145, 146, 147, 149, 158, 173, 179, 180, 183, 212, 213, 215, 229, 238], "total_batch_loss": 58, "total_bit": 62, "total_correct": 118, "total_flo": [71, 119], "total_flops_need": 117, "total_hour": 29, "total_iter": [213, 230], "total_loss": [58, 119, 120], "total_num": 46, "total_paramet": [57, 71], "total_predict": 120, "total_process": 215, "total_sampl": 118, "total_tim": 111, "total_tokens_in_corpu": 117, "total_trainable_paramet": [57, 58, 70, 71, 117, 119, 120], "total_training_time_dai": 117, "total_training_time_second": 117, "totensor": [76, 216], "tottim": [212, 229], "touch": [27, 30, 66, 79, 93, 115, 123, 133, 135], "tournament": 135, "toward": [0, 29, 30, 47, 52, 55, 56, 58, 60, 65, 73, 84, 93, 95, 105, 109, 122, 123, 157, 158], "towardsdatasci": [0, 127, 145, 147], "toxic": 108, "toyota": 195, "tp": [94, 102, 237], "tpr": [71, 119], "tpu": 107, "tpu_metrics_debug": 116, "tpu_num_cor": 116, "tqdm": [53, 58, 93, 111, 114, 118, 119, 120, 216], "trace": [5, 10, 93, 113, 114, 210, 228, 235, 237], "trace_handl": [112, 113, 114], "traceback": 230, "tracing_garbage_collect": 114, "track": [5, 19, 32, 35, 43, 46, 47, 77, 87, 92, 93, 94, 97, 98, 99, 100, 105, 107, 108, 109, 225, 230], "tractabl": [29, 55, 56, 70, 75], "trade": [11, 17, 43, 65, 94, 95, 96, 97, 101, 230], "tradeoff": [86, 105, 106], "tradit": [30, 36, 54, 55, 56, 57, 58, 93, 95, 97, 98, 104, 108, 109, 118, 220], "tradition": [55, 56, 58, 70, 88, 109], "traffic": [100, 107], "trail": 93, "trailer": 94, "train": [0, 1, 8, 48, 49, 52, 53, 60, 61, 64, 67, 68, 70, 73, 74, 75, 77, 83, 86, 87, 88, 89, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 114, 115, 116, 117, 120, 158, 190, 202, 203, 212, 216, 217, 218, 220, 227], "train_accuraci": [119, 120], "train_batch": 57, "train_batch_index": [58, 217], "train_data": 57, "train_data_dtyp": 57, "train_data_shap": 57, "train_dataload": [57, 119, 120], "train_dataset": [57, 58, 71, 116, 119, 120], "train_df": 119, "train_gpt_": 89, "train_id": 57, "train_load": [58, 118], "train_loss": [71, 119, 120], "train_model": [119, 120], "train_one_epoch": [119, 120], "train_path": 57, "train_runtim": [71, 119], "train_sampl": 118, "train_samples_per_second": [71, 119], "train_set_s": 58, "train_siz": 58, "train_steps_per_second": [71, 119], "train_student_model": 120, "train_student_one_epoch": 120, "train_test_split": [53, 61, 68, 71, 74, 75, 119, 120], "train_valid_split": [71, 119, 120], "trainabl": [57, 58, 70, 71], "trainconfig": [216, 218], "trained_model": 58, "trainer": [71, 88, 93, 96, 116, 117, 118, 119, 120, 218, 227], "trainer_all_memb": 116, "trainer_callback": 116, "trainer_config": [58, 118], "trainer_util": [71, 116, 119, 120], "trainercallback": 116, "trainerconfig": [58, 118], "trainerev": [58, 118], "trainerwithoutdependencyinject": 93, "training_arg": [71, 116, 119], "training_dai": 117, "training_loss": [71, 119], "training_step": 116, "trainingargu": [71, 116, 119, 120], "trainingstrategi": 227, "trainoutput": [71, 119], "transact": [93, 95, 96, 98, 108], "transcend": 56, "transfer": [36, 57, 93, 97, 98, 215, 230], "transform": [0, 2, 29, 36, 55, 58, 67, 70, 71, 76, 77, 78, 82, 84, 92, 94, 95, 96, 97, 100, 101, 107, 111, 113, 116, 118, 119, 120, 121, 122, 123, 125, 179, 191, 192, 199, 212, 216, 218, 220, 221], "transformconfig": [216, 218], "transformers_vers": 57, "transformfunc": 220, "transit": [4, 29, 32, 56, 58, 83, 99, 101, 108, 122, 123], "translat": [0, 5, 17, 30, 56, 57, 65, 67, 75, 77, 79, 82, 94, 95, 97, 125, 143, 173, 179, 189], "translated_logit": 123, "translated_prob": 123, "transmit": 179, "transpar": 95, "transport": 93, "transpos": [52, 56, 57, 67, 70, 96, 111, 113, 117, 118], "transpose_qkv": 57, "transposit": [55, 57, 81, 96], "trap": 93, "travel": [57, 83], "travers": [11, 13, 16, 19, 26, 27, 29, 30, 34, 35, 37, 43, 46, 47, 57, 96, 97], "traverse_dataframe_by_column": 96, "traverse_dataframe_by_row": 96, "traverse_numpy_by_column": 96, "traverse_numpy_by_row": 96, "travi": 93, "treat": [2, 3, 4, 5, 7, 22, 23, 26, 29, 30, 32, 36, 49, 52, 55, 56, 57, 58, 59, 60, 62, 65, 67, 70, 75, 83, 84, 95, 96, 97, 100, 105, 117, 118, 123, 125, 126, 142, 145, 157, 173, 177, 179, 180, 182, 187], "treatment": [52, 67, 79, 86, 93, 94, 100, 102, 123, 166, 171, 182, 202, 203], "tree": [11, 16, 17, 27, 65, 95, 100, 101, 105, 106, 216, 227], "trend": [92, 94, 96, 98, 109, 189], "trepid": 29, "trevor": [0, 59, 60, 66, 67, 72, 73], "tri": [8, 36, 58, 60, 65, 122], "trial": [105, 116, 123, 129, 142, 147, 151, 154, 179, 206, 207], "triangl": [58, 65, 67, 83, 171], "triangular": [55, 57, 58, 118, 119, 171], "trick": [57, 74, 77, 105, 212], "tricki": [46, 58, 67, 75, 110, 183], "trigger": [9, 36, 93, 95, 97, 98, 105, 108, 109, 227], "tril": [57, 118, 119], "tril_mask": 57, "trillion": 117, "trip": 75, "tripl": 117, "triplet": [78, 95, 123, 129, 142, 147, 158, 195], "triu": [58, 111, 113], "trivial": [26, 27, 29, 30, 36, 57, 60, 65, 93, 95, 98, 140, 179], "trm": 49, "troubl": [65, 67, 76, 97, 180], "truck": 100, "true": [2, 3, 4, 5, 7, 8, 11, 17, 22, 23, 25, 26, 27, 30, 32, 35, 36, 37, 44, 47, 48, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 67, 68, 70, 71, 73, 74, 75, 76, 79, 82, 86, 88, 89, 90, 93, 94, 96, 97, 99, 101, 102, 103, 106, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 130, 140, 141, 142, 143, 145, 146, 147, 155, 157, 158, 163, 164, 170, 173, 177, 179, 189, 192, 194, 202, 203, 206, 212, 215, 216, 217, 218, 221, 222, 224, 226, 229, 232, 233, 236, 237, 238], "true_pmf": [142, 145, 147, 155, 158], "true_popul": [142, 147, 158], "truli": [67, 132, 135, 142, 212], "truncat": [3, 71, 119, 120], "truncation_sid": 119, "trust": [52, 61, 93, 94], "trust_remote_cod": [71, 119, 120], "trut": 58, "truth": [30, 57, 58, 60, 67, 93, 107, 118, 179, 226], "try": [2, 3, 5, 6, 7, 8, 11, 29, 32, 49, 52, 57, 58, 61, 65, 67, 73, 74, 76, 86, 93, 95, 97, 101, 105, 109, 111, 114, 116, 125, 157, 173, 179, 190, 206, 212, 221, 222, 224, 227, 230, 233, 237], "tsaplot": 67, "tsv": [96, 98], "tt": [136, 138], "ttl": 52, "tu": 56, "tue": 67, "tuition": 79, "tumor": 95, "tune": [58, 69, 71, 77, 92, 93, 94, 95, 104, 106, 107, 116, 121, 122, 218], "tupl": [5, 6, 20, 30, 53, 57, 58, 60, 61, 62, 65, 67, 68, 71, 73, 74, 75, 79, 81, 82, 88, 93, 97, 110, 111, 113, 116, 118, 119, 120, 123, 129, 132, 138, 170, 190, 210, 237], "turk": 96, "turn": [3, 29, 30, 49, 52, 60, 63, 65, 67, 73, 75, 76, 93, 95, 96, 112, 116, 125, 129, 153, 157, 158, 160, 173, 179, 180, 183, 192, 210, 215], "tutor": [27, 30], "tutori": [0, 27, 56, 57, 69, 71, 88, 91, 93, 103, 113, 115, 120, 125, 126], "tweak": [95, 103, 116, 129], "tweepi": 98, "twice": [13, 19, 43, 47, 57, 93, 101, 124, 126, 127, 132, 135, 136, 154, 179, 189, 233], "twitter": [92, 94, 96, 98], "two": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 17, 18, 20, 21, 27, 29, 30, 32, 40, 46, 49, 52, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 73, 74, 76, 77, 78, 79, 81, 82, 83, 87, 88, 93, 94, 95, 96, 97, 98, 99, 102, 106, 112, 116, 117, 120, 122, 123, 126, 127, 132, 133, 136, 142, 143, 145, 146, 147, 152, 154, 157, 162, 166, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 185, 186, 187, 188, 195, 197, 199, 202, 207, 210, 216, 217, 218, 220, 226, 230, 232], "two_sum": 43, "twosum": [13, 19, 43], "txt": [57, 58, 88, 96, 98, 99, 103, 113, 212], "type": [1, 4, 8, 11, 13, 16, 17, 19, 20, 27, 29, 33, 34, 35, 36, 43, 44, 46, 47, 53, 57, 58, 61, 62, 65, 67, 68, 71, 73, 74, 76, 77, 79, 82, 87, 88, 89, 90, 94, 97, 99, 101, 102, 103, 105, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 126, 127, 129, 135, 142, 170, 179, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238], "type1": 6, "type2": 6, "type_cal": 236, "type_check": 5, "type_func": 237, "type_hint": 116, "type_hint_str": 116, "type_hint_to_str": 116, "type_init": 236, "type_nam": 237, "type_new": 236, "type_str": 237, "typealia": 57, "typecheck": 93, "typeddict": [71, 119, 120], "typeerror": [8, 93, 220, 228, 233], "typeobject": 236, "typescript": 10, "typevar": [2, 5, 7, 8, 22, 23, 30, 32, 53, 61, 68, 74, 93, 212, 221, 228, 233, 235, 237], "typic": [2, 6, 7, 8, 9, 11, 13, 17, 19, 29, 30, 32, 36, 43, 44, 47, 52, 55, 57, 58, 60, 62, 65, 67, 70, 73, 76, 79, 81, 83, 86, 87, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 108, 113, 118, 120, 122, 123, 129, 145, 146, 178, 209, 210, 215, 216, 238], "typing_extens": [57, 68, 216, 218, 228, 236, 237], "typo": 65, "u": [4, 5, 6, 7, 8, 13, 16, 19, 29, 32, 36, 43, 44, 46, 47, 52, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 75, 76, 79, 81, 82, 83, 84, 88, 89, 93, 96, 97, 99, 101, 105, 106, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 132, 138, 142, 146, 158, 166, 167, 169, 171, 173, 175, 179, 180, 183, 185, 191, 192, 198, 199, 202, 209, 210, 211, 212, 230], "u1": 167, "u2": 167, "u_1": [82, 84], "u_1v_1": 84, "u_1v_2": 84, "u_1v_n": 84, "u_2": [82, 84], "u_2v_1": 84, "u_2v_2": 84, "u_2v_n": 84, "u_3": 84, "u_4": 84, "u_d": 82, "u_i": 84, "u_m": 84, "u_mv_1": 84, "u_mv_2": 84, "u_mv_n": 84, "uat": 99, "uber": 97, "ubiquit": [27, 32, 65, 210], "ubuntu": [89, 93], "ubuntu2004": 89, "ubyt": 76, "uci": 96, "ugli": 220, "ui": [119, 120], "uint16": 57, "uint32": 70, "uint8": 62, "uk": 97, "ultim": [7, 29, 52, 56, 65, 67, 73, 93, 95, 103, 108, 117, 123], "uml": 220, "unabl": [52, 60, 61, 71, 237], "unaffect": 65, "unalt": 99, "unambigu": 145, "unassign": 9, "unavail": 114, "unavoid": 65, "unbalanc": [61, 74], "unbatch": 58, "unbias": [55, 57, 75, 106], "unbiased": 67, "unbound": [32, 65, 123], "uncal": 215, "uncertainti": [65, 205], "unchang": [55, 79, 81, 82, 87, 123, 132, 135, 179], "unclean": 35, "uncohesion_list": 11, "uncom": [58, 126], "uncommon": [5, 73, 93, 95, 102], "uncondit": 67, "unconsci": [172, 199], "unconstrain": 73, "uncorrel": [177, 189], "uncount": [129, 161], "uncov": [93, 100], "undefin": 3, "under": [2, 4, 27, 29, 30, 52, 55, 57, 58, 65, 67, 70, 75, 77, 84, 86, 93, 95, 99, 100, 102, 107, 111, 113, 116, 117, 125, 169, 173, 179, 202, 210, 212, 216, 233, 237], "underbrac": [36, 52, 55, 65, 67, 70, 73, 75, 122, 123, 147, 185, 187, 191, 195, 202, 206, 209, 210], "underdetermin": 79, "underestim": 67, "underfit": [67, 70, 106], "underflow": [67, 74, 76, 123], "undergo": [55, 99], "undergradu": 67, "underli": [6, 22, 23, 29, 49, 50, 52, 56, 57, 60, 62, 64, 65, 67, 70, 78, 86, 88, 90, 97, 99, 101, 105, 109, 119, 123, 125, 158, 206, 209, 210, 218, 238], "underlook": 93, "underneath": 173, "underperform": 56, "underpin": [27, 30, 32, 47], "underscor": [56, 84, 93], "underset": [49, 50, 52, 55, 56, 57, 60, 63, 65, 67, 70, 73, 75, 86, 166, 205, 210], "underst": 56, "understand": [0, 1, 2, 3, 4, 5, 7, 10, 11, 13, 17, 19, 27, 29, 30, 32, 36, 43, 46, 47, 49, 54, 55, 56, 57, 58, 60, 62, 65, 67, 70, 75, 78, 79, 81, 82, 83, 84, 86, 94, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 122, 123, 125, 127, 129, 132, 133, 135, 173, 180, 190, 203, 210, 211, 212, 230, 236], "understood": [29, 30, 44, 58, 67, 70, 88, 98, 108, 122, 124, 127, 132, 135, 149, 158, 212, 217], "underutil": 95, "underweight": 75, "undesir": 6, "undo": 57, "unembed": [55, 57], "unexpect": [3, 92, 93, 232, 235], "unexplain": 67, "unfilt": 98, "unfold": 30, "unfortun": [52, 65, 76, 179], "unhandl": 116, "unhash": 238, "uni": 57, "unidirect": 56, "unif": 93, "unifi": [16, 56, 93, 96, 97, 98, 99, 108], "uniform": [17, 19, 55, 58, 65, 67, 71, 77, 93, 123, 127, 142, 149, 152, 153, 158, 168, 170, 171, 173, 174, 199], "uniformli": [13, 19, 30, 60, 65, 123, 125, 127, 158], "unintend": [2, 109, 235], "unintention": 2, "union": [8, 11, 27, 32, 36, 52, 53, 56, 57, 58, 60, 61, 71, 74, 97, 116, 125, 149, 154, 217, 220, 227, 237], "union_class_and_instance_attribut": 116, "union_param": 58, "uniqu": [9, 11, 17, 27, 44, 47, 49, 55, 56, 57, 60, 61, 67, 75, 83, 84, 87, 93, 94, 95, 96, 97, 100, 103, 108, 129, 157, 166, 212, 216, 221, 234, 237], "unique_birthdai": 127, "unique_id": [5, 216, 218], "unit": [3, 4, 5, 8, 11, 17, 29, 36, 53, 56, 58, 61, 62, 67, 70, 79, 81, 82, 87, 94, 96, 97, 99, 104, 107, 109, 117, 123, 141, 173, 215, 216], "uniti": [162, 175], "unitless": 67, "univari": [72, 74, 75, 190, 193], "univers": [0, 1, 4, 5, 29, 30, 48, 51, 52, 54, 56, 57, 65, 78, 79, 83, 89, 122, 123, 131, 132, 158], "unix": [93, 117], "unk": [55, 58], "unk_token": 119, "unknowingli": 3, "unknown": [49, 50, 52, 55, 56, 64, 65, 67, 70, 71, 73, 79, 86, 97, 101, 114, 123, 125, 209, 210, 211, 221, 237], "unlabel": [56, 95], "unless": [3, 7, 27, 55, 58, 62, 81, 84, 93, 116, 119, 122, 141, 210, 235], "unlik": [5, 6, 11, 17, 29, 30, 43, 52, 57, 58, 65, 67, 82, 84, 93, 97, 118, 154, 162, 212], "unlink": 224, "unload": [70, 96], "unlucki": [36, 158], "unnecessari": [7, 11, 35, 67, 93, 102, 120, 229], "unnorm": [55, 58, 120], "unnot": 3, "uno": 17, "unobserv": 52, "unoccupi": 11, "unord": 97, "unordered_linear_search_it": 30, "unordered_linear_search_iterative_for_loop": 30, "unordered_linear_search_iterative_while_loop": 30, "unordered_linear_search_recurs": 30, "unordered_linear_search_tail_recurs": 30, "unordered_list": 30, "unpack": [61, 73, 74, 75, 180], "unpredict": [108, 213, 215], "unprocess": [47, 98, 99], "unproduct": 29, "unqiu": 43, "unqualifi": 212, "unreason": 93, "unrel": [180, 221], "unreli": 93, "unresolv": 93, "unsaf": [2, 3, 6, 230], "unsafe_func": 8, "unsafe_transf": 230, "unsafeviewbackward0": 113, "unscal": 57, "unscaled_dot_product": 57, "unscaled_vari": 57, "unscript": 93, "unsearch": 30, "unseen": [56, 57, 74, 86, 105, 106, 203], "unsign": 76, "unsort": [11, 27, 30, 43], "unspecifi": [5, 93], "unsqueez": [57, 58, 76, 111, 113, 118, 119, 123], "unstabl": [57, 71, 93], "unstable_softmax": 123, "unstructur": [95, 96, 98, 100], "unsuccess": 27, "unsupervis": [0, 1, 8, 54, 55, 60, 70, 95, 99, 120], "unsupport": [5, 6, 8, 61, 111, 113], "unsur": [65, 93, 112, 142], "until": [3, 9, 27, 29, 30, 35, 36, 43, 44, 46, 47, 52, 57, 58, 60, 61, 65, 76, 88, 90, 93, 105, 110, 122, 212, 230, 233], "untouch": 221, "untyp": [57, 88, 90, 216], "unus": [61, 67, 74, 230], "unusu": [100, 108], "unwant": [2, 95, 98], "unwind": 27, "up": [5, 8, 13, 17, 19, 22, 23, 27, 29, 36, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 73, 75, 79, 82, 95, 96, 98, 99, 102, 105, 107, 109, 111, 112, 113, 114, 117, 122, 123, 125, 126, 127, 129, 133, 135, 142, 157, 173, 189, 207, 210, 212, 215, 216, 222, 225, 234, 237], "up008": [9, 57], "up_proj": 71, "updat": [20, 27, 29, 30, 32, 36, 46, 47, 57, 58, 60, 61, 68, 73, 83, 89, 93, 94, 96, 98, 99, 100, 103, 107, 108, 111, 113, 114, 116, 117, 122, 210, 213, 217, 218, 229, 230, 237], "updated_at": 99, "updated_centroid": 61, "upfront": 29, "upgrad": [89, 99], "upheld": 100, "upload": [58, 95, 100, 108, 217], "upon": [5, 7, 8, 29, 30, 47, 55, 56, 67, 93, 100, 107, 123, 157, 179, 180, 212], "upper": [16, 27, 29, 30, 55, 56, 57, 58, 64, 65, 84, 93, 122, 159, 202, 206, 237], "upstream": 93, "urgent": 108, "url": [0, 57, 58, 62, 93, 96, 215, 230], "urllib": 62, "urlopen": 62, "us": [0, 2, 3, 4, 7, 8, 10, 11, 16, 17, 20, 23, 26, 27, 29, 33, 37, 38, 44, 46, 47, 51, 52, 53, 55, 56, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 139, 141, 142, 143, 145, 147, 149, 154, 155, 158, 164, 168, 169, 170, 172, 173, 178, 179, 180, 182, 183, 184, 189, 192, 195, 197, 198, 200, 202, 206, 209, 210, 211, 213, 216, 217, 218, 220, 222, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237], "usa": [59, 60, 67, 97], "usabl": [93, 98, 99, 101], "usaco": [28, 29], "usag": [5, 6, 32, 36, 43, 46, 57, 70, 75, 86, 93, 95, 98, 99, 101, 103, 109, 114, 117, 133, 135, 173, 212, 215, 216, 217, 221, 229], "use_amp": [58, 118], "use_cach": 57, "use_cpu": 116, "use_deterministic_algorithm": [57, 70, 103], "use_devic": 112, "use_ipex": 116, "use_legacy_prediction_loop": 116, "use_mps_devic": 116, "use_svg_displai": [53, 61, 62, 74, 76, 127, 142, 177, 210], "useless": [58, 94], "usepackag": [30, 32], "user": [5, 9, 27, 30, 32, 62, 70, 71, 89, 93, 94, 95, 97, 98, 99, 100, 101, 105, 107, 108, 109, 112, 115, 125, 129, 215, 216, 224, 227, 229, 235, 238], "user_all_input_types_correct": 237, "user_id": 5, "user_info": 5, "user_schema": 237, "userid": 5, "userlist": 7, "usernam": [5, 89, 93, 224], "userwarn": [57, 70, 74, 103, 114, 122, 127, 143, 168, 169, 173, 189, 206, 210, 225], "usetikzlibrari": [30, 32], "usr": [61, 88, 89, 215], "usual": [2, 4, 5, 6, 8, 16, 27, 30, 36, 44, 46, 47, 49, 52, 55, 56, 57, 58, 60, 63, 65, 67, 70, 73, 75, 86, 88, 89, 93, 94, 95, 97, 98, 99, 100, 101, 104, 105, 106, 108, 117, 120, 122, 123, 129, 157, 179, 187, 209, 210, 212, 216, 217], "uszkoreit": [0, 1, 54, 56, 69, 70], "utf": [56, 57, 103, 212, 221], "util": [2, 3, 5, 11, 30, 32, 36, 47, 52, 53, 55, 56, 58, 60, 61, 62, 71, 74, 75, 76, 79, 83, 88, 93, 94, 95, 96, 97, 98, 99, 105, 107, 108, 109, 111, 113, 114, 116, 118, 119, 120, 125, 127, 143, 146, 154, 167, 168, 169, 171, 173, 177, 189, 206, 210, 212, 213, 215, 216, 221, 230], "uva": [0, 56, 57], "uvadlc": 0, "uvals2": 158, "v": [4, 5, 32, 35, 52, 55, 56, 57, 58, 60, 61, 63, 65, 67, 70, 71, 75, 77, 81, 82, 83, 84, 111, 113, 117, 135, 142, 143, 145, 146, 147, 181, 191, 194, 230, 231, 237], "v0": [57, 93], "v1": [0, 1, 54, 56, 81, 122, 123], "v100": 117, "v100_16gb": 117, "v100_32gb": 117, "v2": [1, 55, 81, 93, 120, 123], "v3": [1, 54, 56, 81, 120, 212], "v4": [0, 1, 54, 56, 71, 93, 119, 120, 122], "v9": [1, 54, 56], "v_": 81, "v_1": [4, 81, 82, 83, 84], "v_2": [4, 81, 82, 83, 84], "v_3": 84, "v_d": [81, 82, 83], "v_j": 84, "v_n": 84, "v_proj": 71, "va": [1, 10, 123], "vacat": 94, "vacuou": 30, "vagu": [88, 95], "vaibhav": 8, "vaidehi": [17, 18], "val": [34, 57], "val_accuraci": [119, 120], "val_correct_predict": 119, "val_loss": [119, 120], "valid": [2, 3, 4, 5, 6, 9, 13, 19, 27, 29, 32, 33, 36, 38, 43, 44, 47, 52, 55, 56, 57, 65, 67, 68, 71, 76, 77, 79, 86, 88, 92, 95, 96, 97, 98, 100, 101, 102, 106, 109, 119, 120, 123, 142, 194, 200, 216, 218], "valid_accuraci": 118, "valid_data": 57, "valid_dataload": [57, 119, 120], "valid_dataset": [57, 58, 71, 119, 120], "valid_df": 119, "valid_id": 57, "valid_load": [58, 118], "valid_metr": 71, "valid_one_epoch": 120, "valid_path": 57, "valid_s": 58, "valid_sampl": 118, "valid_solv": 68, "valid_this_epoch_average_loss": [58, 118], "validate_cod": 237, "validate_global_pool": [216, 218], "validate_one_epoch": 119, "validate_statu": 237, "validationerror": 237, "validationinfo": 237, "valu": [2, 3, 5, 6, 7, 8, 9, 11, 16, 19, 20, 27, 29, 32, 36, 43, 46, 47, 49, 51, 52, 53, 58, 60, 61, 62, 64, 65, 66, 68, 70, 73, 74, 75, 76, 79, 83, 84, 86, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 107, 108, 109, 111, 113, 116, 117, 118, 119, 122, 123, 125, 126, 127, 136, 138, 140, 142, 146, 147, 149, 153, 154, 155, 158, 162, 163, 170, 173, 175, 179, 180, 183, 190, 197, 198, 199, 207, 210, 211, 212, 213, 215, 216, 218, 221, 226, 230, 232, 234, 235, 236, 237], "valuabl": [56, 57, 93, 94, 98, 102, 108], "value_count": 75, "value_dp": 58, "value_error": 237, "value_selecting_reduction_backward": 113, "value_typ": 237, "valueerror": [5, 53, 58, 61, 68, 70, 111, 113, 116, 212, 216, 218, 221, 225, 227, 228, 237], "van": [7, 10, 93], "vanilla": 120, "vanish": [52, 56, 57, 70, 103, 105], "vanishingli": 125, "vapnik": [65, 86], "var": [57, 67, 70, 73, 74, 75, 89, 99, 103, 112, 141, 143, 145, 146, 150, 154, 157, 164, 167, 168, 169, 177, 182, 187, 190, 199, 202, 205, 206, 229], "var_": 74, "var_beta_hat": 67, "var_smooth": 74, "varepsilon": [67, 202], "vari": [27, 32, 43, 46, 57, 58, 67, 79, 81, 93, 106, 108, 122, 146, 154, 169, 182, 215, 232], "variabl": [0, 3, 4, 7, 8, 10, 13, 16, 19, 27, 29, 32, 36, 43, 44, 49, 51, 53, 56, 57, 58, 60, 61, 62, 66, 73, 75, 76, 77, 79, 86, 88, 89, 93, 95, 99, 100, 101, 102, 103, 108, 109, 111, 119, 120, 122, 123, 126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 192, 193, 196, 197, 198, 205, 206, 209, 212, 215, 218, 224, 230, 232, 234, 236], "variable_name_or_nam": 111, "varianc": [0, 1, 52, 54, 55, 56, 58, 60, 65, 70, 73, 74, 75, 77, 86, 105, 110, 117, 122, 126, 145, 153, 163, 170, 172, 174, 175, 177, 179, 181, 185, 189, 192, 196, 200, 202, 206, 209, 210], "variance_i": [126, 189], "variance_inflation_factor": 67, "variance_x": [126, 189], "variant": [46, 60, 98, 105, 118, 120, 123], "variat": [30, 47, 52, 58, 67, 75, 100, 101, 102, 108, 212], "varieti": [30, 46, 52, 67, 95, 96], "variou": [5, 8, 17, 30, 32, 47, 55, 56, 57, 67, 70, 75, 78, 79, 82, 83, 84, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 117, 125, 158, 192, 198, 202, 218, 224], "varphi": [67, 202], "vassilvitskii": 60, "vast": [56, 94, 95, 99, 100], "vastli": [95, 210], "vaswani": [0, 1, 54, 55, 56, 57, 69, 70], "vc": [86, 93, 105, 202], "vcdim": 65, "vcpu": 89, "vcpulimitexceed": 89, "vdot": [27, 50, 52, 55, 57, 67, 73, 79, 81, 82, 83, 84, 117, 123, 138, 145, 147, 157, 158, 187, 189, 190, 191, 192, 210], "ve": [5, 11, 19, 29, 46, 47, 58, 67, 84, 93, 102, 105, 109], "vec": 81, "vector": [5, 11, 49, 53, 55, 56, 58, 60, 61, 65, 66, 67, 68, 70, 74, 75, 76, 77, 86, 95, 96, 99, 100, 101, 103, 111, 113, 117, 118, 126, 177, 189, 191, 192, 193, 194, 195, 196, 209, 210], "vector1": 81, "vector2": 81, "vector2d": [81, 82, 83, 84], "vector3": 81, "vector3d": 82, "vectorized_elementwise_kernel": 112, "vectorplotter2d": [81, 82, 83, 84], "vectorplotter3d": 82, "vectors_add": 82, "vectors_case1": 84, "vectors_case2": 84, "vectors_case3": 84, "vectors_case4": 84, "vectors_sub": 82, "veget": 228, "vehicl": [94, 95, 97, 100, 108], "vein": [67, 73, 210, 237], "veloc": [100, 117], "venn": 130, "venv": [89, 93, 99], "venv_dir": 99, "venv_nam": 99, "verb": 57, "verbal": 210, "verbatim": [3, 202, 227], "verbatin": 16, "verbos": [6, 7, 8, 57, 58, 73, 81, 113, 118, 122, 210, 212, 216, 225], "verbose_it": 233, "verboseiter": 233, "veri": [2, 4, 5, 13, 27, 35, 36, 43, 47, 52, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 70, 73, 75, 77, 79, 86, 88, 89, 93, 95, 96, 97, 99, 102, 104, 105, 106, 108, 109, 110, 115, 116, 117, 122, 123, 145, 154, 157, 158, 173, 179, 180, 181, 206, 209, 210, 212, 216, 217, 220, 222, 227, 229, 237], "verif": 3, "verifi": [2, 4, 6, 17, 29, 32, 52, 57, 58, 62, 83, 89, 93, 99, 105, 107, 122, 124, 135, 136, 147, 180], "verlag": [51, 52, 59, 60, 62, 66, 67, 72, 73, 192, 193], "vers": 110, "versa": [5, 7, 60, 81, 101, 233], "versatil": [5, 11, 79, 96, 100], "versicolor": 74, "version": [0, 1, 8, 11, 16, 27, 30, 53, 54, 55, 56, 57, 61, 70, 71, 74, 76, 77, 82, 84, 89, 92, 95, 98, 99, 105, 107, 117, 119, 120, 122, 123, 207, 215, 216, 217, 229, 230], "version_bas": 216, "version_info": 7, "versu": [52, 56, 57, 65, 67, 70, 83, 93, 202, 212], "vert": [52, 60, 65, 73, 84, 120], "vertic": [60, 75, 81, 83, 97], "vertical_component_v": 83, "vest": [93, 95], "vet": 93, "via": [2, 4, 5, 6, 7, 11, 27, 29, 52, 55, 60, 65, 71, 76, 88, 89, 93, 97, 99, 103, 105, 116, 117, 118, 126, 161, 177, 178, 210, 212, 216, 218, 221, 225], "vibrat": 108, "vice": [5, 7, 60, 81, 101, 233], "victori": 29, "video": [65, 94, 95, 96, 97, 98, 100, 108, 157, 215], "vietnames": 98, "view": [29, 30, 32, 52, 55, 57, 58, 62, 66, 67, 75, 76, 81, 84, 89, 93, 94, 95, 108, 111, 113, 114, 125, 133, 173, 175, 177, 180, 206, 210, 216], "view_dim": 114, "viewbackward0": 113, "viewer": [27, 94], "viewership": [94, 95], "viewpoint": 81, "vif": 67, "vincent": [51, 52, 59, 60, 67], "vinyal": 120, "violat": [2, 4, 5, 6, 7, 16, 67, 75, 76, 108, 123, 129, 237], "violated_schema": 237, "virginica": 74, "viridi": [57, 58, 61, 118, 126, 189], "virtual": [57, 108, 215], "visibl": [58, 93], "vision": [76, 79, 95, 100, 120], "visit": [11, 17, 32, 44, 105, 118, 129, 183, 237], "visitor": 95, "visual": [30, 35, 36, 43, 44, 46, 52, 53, 55, 56, 58, 60, 61, 62, 65, 67, 70, 74, 75, 76, 79, 81, 82, 93, 94, 95, 96, 97, 99, 100, 102, 109, 112, 123, 126, 127, 132, 142, 157, 158, 177, 189, 226], "visualis": 173, "vit": 95, "vital": [17, 83, 93, 94], "vivid": 32, "viz": 114, "vline": [126, 145, 147, 155, 189], "vmax": 52, "vmin": 52, "vocab": [58, 118], "vocab_s": [57, 58, 111, 113, 117, 118, 119], "vocabulari": [56, 70, 71, 118, 119, 217], "voic": 108, "void": [3, 5, 56, 112], "vol": [1, 10, 65, 122], "volum": [56, 89, 94, 96, 97, 99, 100, 108, 109], "voluntarili": 215, "voraci": 29, "voronoi": 59, "vowel": 127, "vpc": 89, "vpc_id": 89, "vpcid": 89, "vscode": 89, "vstack": [52, 53], "vulner": 93, "w": [1, 52, 54, 56, 57, 58, 65, 66, 68, 69, 70, 73, 79, 81, 83, 84, 86, 87, 89, 114, 122, 135, 149, 173, 183, 224], "w1": [52, 111, 113], "w2": [52, 111, 113], "w_": [55, 57, 58, 81], "w_1": [52, 55, 149], "w_2": [52, 55, 149], "w_3": 55, "w_4": 55, "w_5": 55, "w_6": 55, "w_c": 58, "w_e": 57, "w_i": 175, "w_j": 55, "w_k": [52, 55, 57, 58, 111, 113, 118, 119], "w_o": [57, 58, 111, 113, 118, 119], "w_q": [55, 57, 58, 111, 113, 118, 119], "w_v": [55, 57, 58, 111, 113, 118, 119], "wa": [6, 7, 9, 16, 29, 30, 36, 43, 46, 52, 56, 57, 58, 62, 65, 67, 75, 76, 89, 93, 97, 103, 107, 108, 109, 114, 118, 119, 120, 123, 125, 129, 157, 175, 179, 202, 210, 212, 217, 226], "wai": [2, 3, 4, 6, 7, 9, 11, 17, 26, 27, 29, 30, 32, 36, 44, 49, 51, 52, 55, 56, 58, 60, 62, 65, 67, 70, 75, 76, 79, 83, 84, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 110, 112, 116, 118, 119, 122, 125, 129, 132, 133, 139, 142, 147, 157, 171, 173, 179, 180, 187, 194, 195, 198, 202, 203, 209, 210, 212, 216, 218, 220, 221, 225, 227, 233, 237], "wait": [9, 57, 89, 90, 93, 108, 110, 112, 113, 114, 118, 213, 215, 230], "waiter": 32, "walk": [5, 10, 44, 56, 57, 210], "walker": 44, "walkthrough": [56, 57, 202, 203], "wall": [93, 179, 229, 238], "walli": [0, 69, 70], "wandb": 93, "wang": [0, 69, 70], "want": [2, 5, 6, 7, 9, 17, 22, 29, 30, 44, 46, 52, 55, 56, 57, 58, 60, 61, 65, 67, 70, 71, 73, 75, 76, 79, 83, 86, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 111, 113, 115, 116, 117, 118, 119, 122, 125, 127, 129, 132, 142, 145, 147, 149, 158, 173, 178, 180, 187, 202, 206, 210, 212, 215, 216, 217, 220, 225, 226, 232, 237], "warc": 98, "warcio": 98, "warehous": [95, 100], "warm": [58, 60, 111, 112, 113, 114, 122], "warmth": 93, "warmup": [77, 111, 112, 113, 114, 121], "warmup_": 111, "warmup_ratio": [71, 116, 119], "warmup_step": [58, 111, 112, 116], "warn": [52, 57, 58, 68, 70, 71, 74, 88, 89, 93, 103, 111, 113, 114, 116, 117, 119, 120, 122, 139, 142, 145, 147, 155, 158, 167, 216, 225], "warn_if_padding_and_no_attention_mask": 116, "warn_onli": [57, 70, 103], "warn_tensor_cycl": 114, "warrant": [95, 216], "wash": 228, "wast": [11, 56, 57, 79, 93, 230], "watch": [94, 100, 109, 142, 145, 147, 216], "water": 93, "watson": 67, "wave": [58, 122], "wavelength": 57, "wavi": 65, "wb": 57, "wc": 117, "we": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 22, 23, 26, 29, 30, 32, 34, 35, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 224, 225, 226, 227, 228, 230, 233, 235, 236], "weak": [57, 100, 207], "weaker": 67, "weakest": 57, "wealth": 105, "wear": [93, 108], "wearabl": [95, 96], "weather": [96, 129], "web": [32, 56, 93, 94, 95, 96, 98, 99, 215, 224], "webpag": 32, "websit": [56, 65, 95, 96, 98, 100, 108], "wedg": 175, "week": [93, 108, 109, 149], "weekdai": 149, "weekend": 149, "weekli": [100, 109], "wei": 65, "weigh": [52, 75, 94], "weight": [0, 1, 49, 51, 53, 54, 56, 58, 67, 68, 69, 71, 73, 74, 75, 79, 83, 86, 97, 100, 102, 103, 111, 113, 117, 118, 119, 120, 122, 125, 142, 173, 178, 184], "weight_decai": [58, 71, 116, 118, 119, 216], "weight_ti": [111, 113], "weighted_diff": [52, 53], "weighted_likelihood": 53, "weighten": 125, "weights_": [52, 53], "weights_1": 52, "weights_2": 52, "weiji": 79, "weird": [55, 232], "weizhu": 0, "welcom": 93, "well": [2, 5, 6, 13, 19, 27, 29, 30, 32, 35, 44, 48, 52, 55, 56, 57, 58, 60, 61, 62, 65, 67, 70, 73, 75, 76, 78, 79, 83, 86, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 119, 120, 122, 123, 124, 125, 129, 130, 135, 144, 157, 172, 173, 177, 179, 185, 189, 192, 194, 197, 199, 200, 202, 206, 209, 210, 211, 212, 216, 218, 222, 228, 229, 230, 237], "weng": [55, 56, 57], "went": [32, 55, 56, 57, 58, 75, 76, 119, 212], "wer": 57, "were": [3, 7, 19, 27, 29, 36, 43, 44, 49, 52, 56, 57, 58, 65, 67, 71, 73, 75, 88, 93, 95, 97, 103, 109, 119, 120, 122, 123, 124, 129, 154, 209, 212, 220, 230], "weren": 129, "wget": 89, "what": [3, 5, 6, 7, 8, 9, 10, 11, 12, 17, 20, 29, 30, 49, 50, 52, 56, 57, 58, 60, 61, 62, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 83, 84, 88, 89, 94, 95, 97, 99, 100, 101, 103, 104, 105, 108, 109, 112, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 131, 132, 135, 136, 142, 143, 145, 146, 147, 149, 158, 161, 169, 173, 178, 179, 180, 183, 186, 187, 188, 190, 194, 202, 205, 209, 210, 211, 212, 216, 217, 218, 220, 222, 225, 228, 229, 230, 232], "what_i": 58, "whatev": [65, 93, 131, 135], "whati": 89, "wheat": 79, "wheel": [89, 237], "when": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 52, 53, 55, 56, 57, 58, 63, 65, 67, 68, 70, 71, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 112, 114, 116, 117, 118, 119, 122, 123, 127, 129, 131, 132, 135, 136, 143, 145, 146, 149, 152, 155, 157, 162, 168, 171, 179, 180, 182, 186, 187, 190, 191, 199, 200, 202, 210, 211, 212, 216, 217, 218, 220, 221, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237], "whenev": [44, 56, 58, 93, 105, 108, 118, 127, 133, 135], "where": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 136, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 155, 158, 159, 162, 164, 167, 168, 169, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 187, 190, 191, 192, 194, 195, 197, 200, 202, 203, 206, 209, 212, 213, 215, 216, 218, 221, 224, 226, 227, 229, 230, 234, 236, 237], "where_equal_index": 58, "wherea": [2, 6, 9, 52, 56, 57, 65, 93, 96, 101, 102, 105, 118, 170, 199, 215, 238], "wherebi": 67, "wherein": 158, "wherev": 7, "whether": [2, 3, 4, 7, 9, 17, 19, 27, 29, 32, 36, 47, 58, 62, 65, 67, 68, 73, 75, 76, 79, 83, 88, 93, 94, 95, 96, 102, 105, 108, 114, 116, 123, 127, 147, 149, 179, 183, 210, 212, 226], "which": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 19, 20, 22, 26, 27, 29, 30, 32, 36, 43, 44, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 141, 143, 145, 147, 148, 149, 151, 156, 157, 158, 161, 162, 164, 167, 169, 171, 172, 173, 175, 177, 178, 179, 183, 187, 189, 190, 191, 192, 193, 194, 199, 202, 203, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237], "whichev": [65, 93], "while": [2, 3, 5, 7, 8, 9, 11, 13, 25, 26, 27, 29, 30, 32, 36, 37, 43, 44, 46, 47, 52, 55, 56, 57, 58, 60, 62, 67, 70, 73, 75, 76, 79, 82, 83, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 108, 115, 116, 123, 125, 136, 137, 157, 169, 179, 210, 212, 215, 216, 217, 220, 229, 230, 233], "whimsic": 29, "whistl": 116, "white": [75, 76, 126], "whitelist": 58, "whitelist_weight_modul": 58, "whitespac": [56, 57, 93], "whl": 93, "who": [60, 94, 97, 99, 107, 108, 123, 147, 154, 183], "whole": [2, 4, 27, 47, 55, 57, 58, 65, 67, 75, 79, 93, 99, 105, 118, 131, 133, 135, 157, 173, 209, 212, 217], "wholesom": [67, 95], "whoop": 123, "whose": [32, 56, 60, 63, 70, 137, 157, 161, 191], "why": [7, 8, 9, 11, 17, 30, 35, 36, 43, 46, 49, 56, 57, 59, 60, 62, 63, 68, 70, 71, 75, 76, 77, 78, 79, 83, 84, 86, 95, 98, 100, 101, 103, 105, 109, 110, 111, 114, 116, 117, 121, 123, 125, 127, 132, 158, 173, 177, 179, 180, 201, 204, 210, 212, 217, 228, 230, 232, 237], "wide": [16, 17, 29, 30, 49, 52, 56, 60, 61, 66, 67, 76, 78, 89, 93, 96, 108, 117, 126, 189, 198, 216], "widehat": [52, 60, 63, 67, 86, 210], "wider": [70, 95, 169], "widespread": [96, 221], "widget": [76, 155], "width": [32, 52, 62, 76, 125, 127, 173, 179, 195], "wiki": [0, 67, 114, 154, 192], "wikiextractor": 98, "wikipedia": [0, 2, 4, 7, 11, 16, 17, 27, 30, 31, 48, 50, 56, 59, 60, 62, 65, 67, 69, 70, 72, 73, 79, 83, 84, 98, 114, 123, 125, 126, 152, 192, 220], "wild": [75, 220], "wildcard": 93, "wilk": 67, "william": 75, "willkoehrsen": 75, "win": [125, 135], "window": [40, 47, 55, 58, 77, 93, 125, 215], "window_s": 41, "window_sum": 46, "winter": [56, 57, 93], "wise": [52, 56, 58, 60, 70, 73, 75, 81, 82, 112, 117, 119], "wish": [52, 56, 67, 93, 210, 227], "with_flop": 113, "with_stack": [113, 114], "withdraw": 56, "within": [2, 4, 5, 6, 7, 9, 13, 17, 19, 27, 29, 30, 43, 46, 52, 55, 56, 57, 58, 60, 61, 67, 70, 73, 75, 78, 79, 81, 82, 86, 87, 88, 93, 94, 96, 97, 98, 99, 102, 107, 108, 116, 117, 122, 123, 173, 190, 203, 210, 212, 215, 220, 221, 227], "without": [2, 3, 4, 5, 6, 7, 9, 11, 16, 17, 19, 20, 27, 29, 30, 32, 36, 43, 44, 52, 55, 56, 57, 58, 61, 62, 63, 65, 67, 68, 70, 75, 78, 79, 82, 83, 88, 93, 94, 95, 96, 97, 98, 99, 101, 102, 107, 108, 109, 112, 117, 118, 120, 122, 123, 125, 127, 131, 132, 135, 142, 173, 187, 194, 202, 212, 215, 216, 218, 220, 221, 224, 227, 229, 230, 235, 236, 237], "witten": [0, 59, 60, 66, 67, 72, 73], "won": [3, 5, 8, 29, 35, 58, 65, 67, 70, 73, 79, 88, 93, 95, 99, 100, 103, 105, 108, 112, 114, 135, 142, 147, 158, 173, 216], "wonder": [5, 6, 49, 57, 67, 84, 97, 173], "woof": [2, 3, 4], "word": [2, 3, 4, 9, 27, 29, 30, 36, 43, 52, 55, 57, 60, 61, 62, 63, 65, 67, 70, 71, 73, 75, 76, 78, 79, 83, 86, 88, 95, 96, 97, 100, 108, 110, 127, 129, 131, 132, 145, 152, 154, 158, 169, 173, 177, 179, 189, 191, 199, 205, 206, 210, 211, 215, 220, 237], "word2vec": 56, "work": [3, 5, 6, 7, 11, 16, 17, 20, 27, 29, 30, 32, 35, 36, 43, 44, 47, 48, 52, 53, 56, 57, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 75, 76, 79, 83, 84, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 116, 117, 118, 122, 123, 125, 127, 142, 143, 145, 158, 168, 169, 173, 189, 197, 199, 200, 206, 210, 215, 216, 220, 226, 227, 228, 229, 230], "workaround": [17, 215], "workdir": 99, "worker": [58, 87, 88, 95, 99, 108, 212, 213, 215, 230], "worker_info": 215, "workflow": [99, 107, 114, 115, 215], "workload": [97, 98, 114], "workplac": 108, "workshop": 89, "workspac": 70, "world": [3, 5, 27, 29, 30, 57, 60, 77, 93, 95, 99, 101, 102, 105, 107, 108, 129, 135, 142, 147, 148, 153, 157, 158, 237], "world_siz": [58, 88, 90, 118], "worri": [8, 58, 76, 88, 97, 100, 102], "wors": [3, 5, 57, 60, 65, 93, 94], "worsen": 100, "worst": [11, 13, 17, 19, 26, 43, 46, 60, 65, 147, 238], "worth": [2, 3, 11, 29, 46, 52, 55, 56, 57, 58, 60, 67, 70, 73, 76, 81, 101, 103, 108, 117, 118, 122, 123, 197, 206, 215, 216], "would": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 26, 27, 29, 30, 32, 36, 43, 44, 46, 49, 52, 54, 55, 56, 57, 58, 65, 67, 71, 73, 75, 76, 78, 79, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 112, 114, 115, 117, 118, 122, 123, 125, 129, 135, 145, 154, 173, 179, 210, 215, 216, 217, 222, 235, 237], "wouldn": [11, 13, 43, 212], "wrap": [57, 67, 68, 71, 93, 96, 99, 108, 116], "wrap_funct": 229, "wrapper": [68, 96, 116, 228, 229, 237], "write": [5, 6, 11, 17, 32, 34, 37, 49, 52, 55, 56, 57, 58, 60, 62, 65, 67, 70, 73, 76, 86, 88, 89, 93, 96, 97, 104, 105, 114, 123, 136, 150, 154, 157, 167, 168, 169, 180, 182, 183, 190, 191, 192, 195, 197, 202, 210, 213, 215, 220, 224, 229, 230, 234], "write_and_log": 114, "writeup": [111, 113], "written": [2, 3, 5, 7, 10, 52, 55, 57, 60, 62, 65, 73, 75, 84, 86, 93, 95, 97, 104, 114, 123, 125, 175, 187, 197, 210], "wrong": [5, 8, 58, 60, 65, 67, 71, 75, 76, 93, 102, 122, 145, 179, 212], "wrongli": 65, "wrote": [65, 117], "wu": [0, 1, 54, 56], "wurlitz": 113, "www": [0, 22, 23, 62, 73, 75, 125, 142, 145, 147, 184, 215, 222, 233], "x": [1, 3, 5, 6, 7, 8, 16, 29, 36, 49, 50, 51, 53, 54, 56, 58, 60, 61, 62, 63, 65, 66, 68, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 93, 95, 96, 97, 99, 101, 102, 105, 109, 110, 111, 112, 113, 114, 117, 119, 120, 122, 123, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 152, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 199, 200, 202, 205, 206, 209, 210, 220, 227, 229, 230, 232, 234], "x0": [57, 75], "x0_decod": 57, "x0_max": 75, "x0_min": 75, "x0_ohe": 57, "x0_rang": 75, "x0_tok_emb": 57, "x1": [52, 67, 75, 126, 168, 177, 189], "x1_max": 75, "x1_min": 75, "x1_rang": 75, "x2": [52, 67, 75, 126, 168, 177, 189], "x27": 61, "x2_mean": 75, "x2_x3_mean_std": 75, "x2_x3_mean_std_var": 75, "x3": [52, 67, 75, 96, 177, 189], "x3_mean": 75, "x5": 96, "x64": [57, 116, 117, 122, 225], "x86_64": 89, "x_": [52, 55, 56, 57, 58, 65, 67, 70, 73, 75, 76, 79, 86, 117, 139, 145, 152, 157, 171, 173, 187, 195, 200, 202, 205, 210], "x_0": [67, 73, 79, 145], "x_1": [6, 7, 49, 52, 55, 56, 57, 58, 60, 67, 70, 73, 75, 76, 79, 86, 117, 126, 140, 145, 146, 152, 154, 157, 163, 171, 173, 175, 185, 187, 189, 190, 195, 197, 205, 206, 210], "x_2": [6, 7, 49, 52, 55, 56, 57, 58, 60, 67, 70, 73, 75, 76, 79, 117, 126, 140, 145, 146, 152, 154, 157, 163, 171, 173, 175, 185, 187, 189, 190, 195, 197, 206, 210], "x_2d": 74, "x_3": [56, 57, 67, 75, 79, 187], "x_6": 171, "x_axi": 52, "x_boot": 106, "x_d": [49, 52, 60, 67, 73, 74, 75, 76, 79, 126, 190], "x_full": [52, 53], "x_i": [57, 65, 70, 76, 120, 123, 139, 140, 145, 146, 152, 157, 163, 173, 175, 177, 187, 190, 194], "x_input_spac": [75, 126, 189], "x_j": [79, 120, 152, 175, 187, 190, 194], "x_k": [125, 139], "x_list": 8, "x_m": 86, "x_max": 53, "x_min": 53, "x_multi": 67, "x_n": [49, 67, 79, 140, 146, 152, 154, 163, 173, 175, 187, 189, 195, 197, 205, 206, 210], "x_plot": 52, "x_rang": [52, 170], "x_t": [55, 56, 57, 70, 76], "x_test": [61, 75], "x_train": [61, 68, 75], "x_val": 68, "x_where_k": [74, 75], "x_with_intercept": 67, "xarg": 89, "xavier": 57, "xavier_uniform_": 57, "xaxi": 127, "xd": 29, "xferd": 58, "xi": [68, 73, 129, 136, 138, 139, 158, 175], "xi_1": [136, 139, 140, 141], "xi_2": [136, 139, 140, 141], "xi_3": 136, "xi_4": 136, "xi_i": [136, 139], "xiaodong": 0, "xiong": 0, "xl": [57, 117], "xla": 71, "xlabel": [52, 53, 57, 58, 61, 67, 75, 81, 82, 83, 84, 118, 126, 127, 155, 158, 170, 189, 206], "xlarg": 120, "xlim": [127, 167, 169], "xml": [93, 96, 97, 98], "xn": 53, "xor": 76, "xpu": 116, "xrightarrow": [55, 65, 205], "xsmall": 120, "xtick": [58, 68, 127, 145, 155], "xticklabel": [58, 118], "xtract": 98, "xtx": 68, "xtx_inv": 68, "xty": 68, "xu": 97, "xue": [1, 10], "xx": [52, 53, 126], "xxx": 89, "xxxxxxxxxxxxxxxxx": 89, "xy": [52, 58, 67, 76, 126, 177], "xy_1": 52, "xy_2": 52, "xy_3": 52, "xy_4": 52, "xy_5": 52, "xy_6": 52, "xytext": 52, "xyz": 58, "x\u03b2": 67, "y": [1, 4, 5, 6, 8, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 89, 95, 99, 101, 102, 105, 109, 114, 117, 118, 120, 123, 125, 126, 127, 139, 142, 145, 147, 149, 169, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 195, 197, 200, 202, 206, 209, 216, 227, 232], "y1": 52, "y2": 52, "y_": [56, 58, 70, 145], "y_0": [79, 147], "y_1": [49, 56, 58, 65, 73, 79, 86, 145, 147, 189], "y_2": [56, 58, 65, 73, 79, 145, 189], "y_3": 65, "y_4": 65, "y_boot": 106, "y_i": [65, 70, 73, 120, 123, 145, 147, 177], "y_j": 123, "y_k": [65, 73], "y_m": [65, 86], "y_max": 53, "y_min": 53, "y_multi": 67, "y_n": [49, 56, 58, 79, 125, 147, 189], "y_plot": 52, "y_pred": [52, 53, 61, 62, 67, 68, 74], "y_prob": 74, "y_rang": 127, "y_t": 70, "y_test": [61, 75], "y_train": [61, 68, 75], "y_true": [61, 68], "y_val": 68, "yaida": [1, 123], "yaml": [58, 89, 93, 224], "yaml_cfg": 58, "yaml_config": 224, "yaml_path": 58, "yaml_schema": 237, "yaml_str": 224, "yan": [56, 57, 104, 124], "yang": [11, 12, 17, 18], "yann": 76, "yaxi": 127, "ydata": 113, "ye": [7, 16, 52, 58, 65, 70, 75, 94, 96, 99, 129, 169, 237], "year": [54, 56, 67, 86, 97, 145, 237], "yearly_profit": 145, "yearly_profits_improv": 145, "yearly_revenu": 145, "yearly_salary_paid": 145, "yeast": 79, "yellow": [65, 83], "yelong": 0, "yesqa": 93, "yet": [8, 9, 30, 52, 57, 60, 65, 67, 75, 93, 97, 105, 108, 123, 157, 161, 179, 237], "yi": 68, "yield": [4, 5, 6, 7, 8, 9, 16, 17, 27, 29, 32, 35, 52, 56, 58, 65, 67, 77, 79, 82, 83, 101, 103, 105, 111, 116, 117, 123, 162, 175, 210, 214, 215, 233], "yieldtyp": 212, "yiu": [0, 145], "ylabel": [52, 53, 57, 58, 61, 67, 75, 81, 82, 83, 84, 118, 126, 127, 155, 158, 170, 173, 189, 206], "ylim": [127, 167, 169], "yolo": [93, 95], "yolov5": 94, "york": [1, 51, 52, 59, 60, 62, 65, 66, 67, 72, 73, 81, 82, 123, 192, 193, 237], "yoshua": 0, "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 23, 26, 27, 29, 30, 32, 35, 36, 43, 44, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 83, 84, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 129, 131, 132, 136, 142, 145, 152, 158, 169, 170, 172, 173, 178, 179, 182, 189, 190, 192, 197, 201, 202, 204, 206, 210, 212, 213, 215, 216, 217, 218, 220, 222, 225, 226, 227, 231, 232, 233, 234, 235, 236], "your": [2, 6, 8, 11, 17, 19, 32, 36, 43, 47, 49, 52, 57, 58, 67, 68, 70, 75, 79, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 113, 116, 117, 125, 127, 135, 136, 142, 145, 158, 210, 212, 215, 216, 217, 218, 220, 225, 226, 237], "your_dataset": 67, "your_multi_dataset": 67, "yourkeynam": 89, "yourself": [5, 65, 67, 93, 114, 129, 136, 216], "youtub": [142, 145, 147], "yshift": [30, 32], "ytick": [58, 68, 127], "yticklabel": [58, 118], "yuanzhi": 0, "yval": 123, "yy": [52, 53, 126], "yyyi": [99, 216], "z": [1, 4, 7, 8, 10, 29, 30, 51, 53, 54, 55, 56, 57, 60, 62, 65, 67, 69, 70, 73, 75, 78, 79, 83, 86, 89, 101, 111, 113, 117, 119, 120, 122, 126, 127, 137, 145, 149, 171, 180, 185, 189, 195, 197, 200], "z0": 57, "z0_pos_emb": 57, "z0_tok_emb": 57, "z0_tok_embed_add_pos_emb": 57, "z0_tok_embed_matmul": 57, "z0_tok_embed_with_pos_emb": 57, "z0_tok_embed_with_pos_embed_ln1": 57, "z0_tok_embed_with_pos_embed_ln1_pytorch": 57, "z0_tok_embed_with_pos_embed_with_mha_and_addnorm1": 57, "z0_tok_embed_with_pos_embed_with_mha_and_addnorm1_and_ffn_addnorm2": 57, "z1": 6, "z2": 6, "z3": 6, "z_": [57, 120], "z_0": 79, "z_0_tok_embed_with_pos_emb": 57, "z_1": [6, 52, 123], "z_2": [52, 123], "z_3": 123, "z_4": 123, "z_5": 123, "z_a": 123, "z_b": 123, "z_i": [57, 123], "z_j": [57, 123], "z_k": [52, 123], "z_mha": 57, "z_t": 120, "z_tok_emb": 57, "z_tok_embed_with_pos_emb": 57, "zachari": [0, 57, 72, 73], "zebra": 56, "zero": [11, 16, 19, 29, 32, 43, 44, 50, 52, 53, 55, 57, 58, 60, 61, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 83, 84, 97, 107, 111, 113, 114, 116, 119, 122, 123, 125, 142, 145, 147, 154, 187, 191, 205, 206, 210, 230], "zero_divis": [71, 119], "zero_grad": [113, 114, 116, 119, 120, 216], "zeror": 102, "zeros_": [57, 71, 111, 113, 119], "zeros_lik": 52, "zeyuan": 0, "zfill": 58, "zhang": [0, 1, 54, 56, 57, 58, 65, 67, 69, 72, 73, 122, 123, 210], "zhenzhong": 97, "zhu": [0, 69, 70, 117], "zip": [52, 53, 57, 75, 76, 118, 123, 155, 170, 177, 217, 237], "zmqexitautocal": 116, "zmqinteractiveshel": 116, "zmqshell": 116, "zombieprocess": 215, "zoom": [30, 55, 58, 75, 118, 122], "zorder": 52, "zsl": 56, "\u00b5": 229, "\u0142": [1, 54, 56, 69, 70], "\u03b1": 120, "\u03b5": 67, "\u03bc": 238, "\u03c1": 177, "\u03c3": 67}, "titles": ["Bibliography", "IEEE (Style) Citations", "Subtypes", "Type Safety", "Subsumption", "Generics and Type Variables", "Bound and Constraint in Generics and Type Variables", "Invariance, Covariance and Contravariance", "Function Overloading", "Sentinel Types", "Type Theory, A Very Rudimentary Introduction", "Concept", "List/Array", "Two Sum", "Questions", "Complexity Analysis", "Master Theorem ", "Concept", "Hash Map", "Two Sum", "Group Anagrams", "Questions", "Concept", "Double Ended Queue", "Queue", "Palindrome Checker", "Easy - Hot Potatoes", "Concept", "Binary Search", "Koko Eating Bananas", "Concept", "Linear Search", "Concept", "Stack", "Min Stack", "Valid Parentheses", "Implement Queue using Stacks", "Reverse String", "Questions", "Two Pointers And Sliding Window", "Questions", "Find All Anagrams in a String", "Sliding Window", "Two Sum II - Input Array Is Sorted", "Remove Duplicates from Sorted Array", "Two Pointers", "Sliding Window", "Two Pointers", "Empirical Risk Minimization", "Concept: Empirical Risk Minimization", "Bayes Optimal Classifier", "Mixture Models", "Concept", "Gaussian Mixture Models Implementation", "Generative Pre-trained Transformers", "Notations", "The Concept of Generative Pre-trained Transformers (GPT)", "The Implementation of Generative Pre-trained Transformers (GPT)", "Training a Mini-GPT to Learn Two-Digit Addition", "Lloyd\u2019s K-Means Clustering Algorithm", "Concept: K-Means Clustering", "Implementation: K-Means (Lloyd)", "Application: Image Compression and Segmentation", "Conceptual Questions", "Is The Learning Problem Solvable?", "Concept: Learning Theory", "Linear Regression", "Concept", "Implementation", "Low-Rank Adaptation Of Large Language Models", "Concept", "Implementation", "Naive Bayes", "Concept", "Naives Bayes Implementation", "Naive Bayes Application: Penguins", "Naive Bayes Application (MNIST)", "Omniverse", "Fields", "Systems of Linear Equations", "Preliminaries", "Vector and Its Definition", "Vector and Its Operations", "Vector Norm and Distance", "A First Look at Vector Products", "Vectors", "Machine Learning Notations", "Notations", "Basics Of Distributed Data Parallelism", "How to Setup SLURM and ParallelCluster in AWS", "Ablations", "Distributed Systems", "The Lifecycle of an AIOps System", "Stage 10. Continuous Integration, Deployment, Learning and Training (DevOps, DataOps, MLOps)", "Stage 1. Problem Formulation", "Stage 2. Project Scoping And Framing The Problem", "Stage 3.1. Data Source and Formats", "Stage 3.2. Data Model and Storage", "Stage 3.3. Extract, Transform, Load (ETL)", "Stage 3. Data Pipeline (Data Engineering and DataOps)", "Stage 4. Data Extraction (MLOps), Data Analysis (Data Science), Data Preparation (Data Science)", "Stage 5.1. Model Selection", "Stage 5.2. Metric Selection", "Stage 5.3. Experiment Tracking And Versioning", "Stage 5.4. Model Testing", "Stage 5. Model Development and Training (MLOps)", "Stage 6. Model Evaluation (MLOps)", "Stage 7. Model Validation, Registry and Pushing Model to Production (MLOps)", "Stage 8. Model Serving (MLOps)", "Stage 9. Model Monitoring (MLOps)", "Synchronize CUDA To Time CUDA Operations", "Profiling Code With Timeit", "PyTorch\u2019s Event And Profiler", "Profile GPT Small Time And Memory", "CUDA Memory Allocations", "Profiling", "How to Inspect Function and Class Signatures in Python?", "How to Calculate the Number of FLOPs in Transformer Based Models?", "How To Fine-Tune Decoder-Only Models For Sequence Classification With Cross-Attention?", "How To Fine-Tune Decoder-Only Models For Sequence Classification Using Last Token Pooling?", "How To Do Teacher-Student Knowledge Distillation?", "Training Dynamics And Tricks", "Why Does Cosine Annealing With Warmup Stabilize Training?", "Softmax Preserves Order, Is Translation Invariant But Not Invariant Under Scaling.", "Permutations and Combinations", "Calculus", "Contour Maps", "Exercises", "Chapter 1. Mathematical Preliminaries", "Probability Space", "Probability Axioms", "Conditional Probability", "Independence", "Baye\u2019s Theorem and the Law of Total Probability", "Chapter 2. Probability", "Summary", "Random Variables", "Discrete Random Variables", "Probability Mass Function", "Cumulative Distribution Function", "Expectation", "Moments and Variance", "Application", "Concept", "Bernoulli Distribution", "Real World Examples", "Concept", "Implementation", "Binomial Distribution", "Exercises", "Concept", "Geometric Distribution", "Independent and Identically Distributed (IID)", "Chapter 3. Discrete Random Variables", "Concept", "Implementation", "Poisson Distribution", "Important", "Application", "Concept", "Discrete Uniform Distribution", "Continuous Random Variables", "Probability Density Function", "Expectation", "Moments and Variance", "Cumulative Distribution Function", "Mean, Median and Mode", "Continuous Uniform Distribution", "Exponential Distribution", "Gaussian Distribution", "Skewness and Kurtosis", "Convolution and Sum of Random Variables", "Functions of Random Variables", "From Discrete to Continuous", "Chapter 4. Continuous Random Variables", "Concept", "Joint PMF and PDF", "Concept", "Joint Expectation and Correlation", "Application", "Concept", "Conditional PMF and PDF", "Concept", "Exercises", "Conditional Expectation and Variance", "Concept", "Sum of Random Variables", "Concept", "Random Vectors", "Application: Plots and Transformations", "Concept", "Eigendecomposition and Covariance Matrix", "The Geometry of Multivariate Gaussians", "Multivariate Gaussian Distribution", "Covariance Matrix is Positive Semi-Definite", "From Single Variable to Joint Distributions", "Chapter 5. Joint Distributions", "Characteristic Function", "Moment Generating and Characteristic Functions", "Moment Generating Function", "Application: Moment Generating Function and the Sum of Random Variables", "Application: Learning Theory", "Probability Inequalities", "Probability Inequalities", "Application: Learning Theory", "Concept", "Convergence of Sample Average", "Law of Large Numbers", "Chapter 6. Sample Statistics", "Chapter 8. Estimation Theory", "Concept", "Maximum Likelihood Estimation", "A Rudimentary Introduction to Generator and Yield in Python", "Thread Safety", "Concurrency, Parallelism and Asynchronous Programming", "Overview Of Concurrency, Parallelism, and Asynchronous Execution", "Pydantic And Hydra", "State And Metadata Management", "Configuration Management", "Config, State, Metadata Management", "Dependency Inversion Principle", "Factory Method", "Context Object Pattern (God Object)", "Design Patterns", "Named Constructor", "Registry", "Singleton", "Strategy", "Decorator", "Generators Over Lists For Memory Efficiency", "Global Interpreter Lock (GIL)", "Python", "Is vs Equality", "The Iterator Protocol", "Late Binding Closures", "Do Not Use Mutable Default Arguments", "Init vs New", "Pydantic Is All You Need - Jason Liu", "Set Over List For Frequent Membership Tests"], "titleterms": {"": [52, 57, 59, 60, 65, 79, 112, 117, 122, 133, 202, 210, 215], "0": [98, 166], "1": [4, 9, 16, 29, 46, 52, 55, 56, 57, 60, 62, 63, 67, 73, 79, 89, 93, 94, 96, 98, 99, 100, 101, 103, 109, 114, 122, 123, 128, 149, 152, 162, 199, 215, 235, 237], "10": [55, 93, 99, 127], "11": [55, 99], "2": [4, 16, 27, 29, 46, 52, 55, 56, 57, 60, 62, 63, 73, 79, 89, 93, 95, 97, 98, 99, 100, 102, 103, 109, 117, 118, 122, 123, 134, 199, 215, 235, 237], "2d": [4, 52, 65, 79, 177, 189], "3": [4, 16, 52, 55, 56, 60, 62, 79, 84, 89, 93, 96, 97, 98, 99, 100, 103, 109, 122, 123, 153, 215], "39": 27, "3d": 79, "4": [55, 56, 93, 99, 100, 104, 174, 215], "5": [55, 56, 93, 99, 101, 102, 103, 104, 105, 183, 196, 215], "6": [55, 56, 65, 93, 99, 106, 127, 208], "7": [55, 56, 93, 99, 107, 183], "8": [55, 62, 99, 108, 209], "9": [55, 99, 109, 127], "A": [3, 6, 8, 10, 29, 52, 58, 62, 65, 70, 84, 93, 97, 99, 105, 118, 122, 125, 180, 212, 215, 220, 225, 232], "And": [6, 39, 55, 57, 70, 71, 74, 87, 88, 95, 96, 97, 101, 102, 103, 111, 112, 113, 119, 120, 121, 125, 213, 215, 216, 217, 218, 221, 224, 225, 226, 227, 229, 232, 234, 236], "As": 93, "But": [123, 233], "By": 62, "For": [55, 96, 98, 118, 119, 218, 225, 228, 229, 238], "In": [43, 44, 65, 70, 93, 99, 105, 109, 215], "It": [215, 221], "Its": [81, 82], "No": [11, 17, 52, 67, 70, 79, 90, 93, 101], "Not": [6, 8, 46, 123, 228, 233, 235, 237], "Of": [57, 69, 70, 88, 95, 98, 100, 123, 215, 218, 235], "On": [3, 6, 94, 95, 98, 105, 108, 125, 215], "One": [52, 55, 57, 65, 75], "The": [5, 6, 7, 13, 17, 19, 22, 23, 29, 30, 32, 35, 44, 46, 47, 52, 55, 56, 57, 60, 63, 64, 65, 67, 70, 73, 75, 76, 78, 84, 87, 92, 93, 95, 98, 102, 105, 108, 123, 124, 125, 129, 130, 135, 140, 142, 146, 147, 157, 158, 163, 172, 182, 192, 194, 202, 210, 212, 215, 221, 226, 227, 230, 233], "To": [57, 58, 87, 110, 118, 119, 120, 123, 221, 235], "With": [6, 58, 71, 88, 90, 111, 118, 122, 123, 227, 237], "_": [52, 55], "_2": 78, "__dict__": 116, "__init__": 226, "__new__": 226, "_k": 52, "ablat": [90, 105], "about": 118, "abstract": [22, 23, 56], "abus": [55, 57, 65], "accept": 93, "access": [11, 17, 89, 98], "accommod": 17, "accuraci": [67, 101], "acid": 97, "activ": [55, 57, 93], "ad": 212, "adapt": [69, 70], "add": 58, "addabl": 6, "adder": 58, "addit": [58, 70, 82, 123, 130], "addnorm": 57, "address": 88, "adher": 221, "adjust": 67, "advanc": 108, "advantag": [11, 17, 97, 108], "affin": 57, "after": [27, 99, 237], "aiop": [92, 94], "alert": [65, 99], "algebra": [77, 79, 81, 82, 84], "algorithm": [16, 27, 29, 30, 43, 44, 52, 59, 60, 61, 70, 73, 77], "all": [5, 41, 52, 57, 98, 108, 114, 116, 212, 233, 237], "alloc": [93, 114], "also": [93, 97, 102, 105, 108, 166, 215], "altern": [55, 141, 145, 164], "alwai": 194, "am": 98, "among": 67, "amort": [32, 36], "an": [30, 57, 62, 67, 87, 92, 93, 94, 95, 96, 98, 100, 122, 165, 169, 180, 191, 212, 233], "anagram": [20, 41], "analogi": [29, 32, 57, 79], "analysi": [11, 13, 15, 17, 27, 29, 30, 36, 65, 100, 207], "analyt": 97, "analyz": 36, "andrej": 57, "angl": 84, "ani": [5, 238], "anneal": [58, 122], "annot": 116, "antisymmetri": 4, "appendix": 93, "appli": [57, 62], "applic": [4, 16, 55, 57, 62, 75, 76, 142, 158, 179, 189, 200, 201, 202, 204], "approach": [6, 29, 43, 56], "approxim": [49, 55, 57, 154, 155], "ar": [2, 5, 19, 36, 43, 57, 60, 67, 97, 98, 157, 191, 212, 221, 233, 238], "arbitrari": 169, "architectur": [55, 57, 99, 119], "argument": [5, 7, 88, 93, 235], "armort": 36, "arrai": [11, 12, 29, 30, 43, 44, 47], "artifact": 103, "ask": 157, "assess": 67, "assign": [52, 60, 63], "assumpt": [19, 25, 26, 27, 29, 35, 36, 37, 43, 49, 52, 56, 67, 73, 101, 143, 146, 154, 190, 210], "assur": 93, "asynchron": [57, 108, 214, 215], "asyncio": 215, "atom": 97, "attent": [55, 56, 57, 58, 118], "attribut": 116, "augment": 100, "auroc": 102, "autocorrel": 67, "autom": [93, 99], "autoregress": [55, 56, 70], "auxiliari": [13, 19, 20, 27, 29, 30, 43, 56], "averag": [13, 19, 27, 29, 30, 205, 206], "aw": 89, "axiom": [78, 123, 130], "b": [93, 221], "babi": 173, "back": [118, 125], "backbon": 55, "backend": 88, "background": 30, "bad": [93, 209], "bakeri": 79, "banana": 29, "bang": 93, "barrier": [90, 215], "base": [8, 71, 117], "baselin": [94, 101], "basi": [67, 191], "basic": [88, 117, 237], "batch": [55, 58, 98, 100, 108], "bay": [49, 50, 72, 73, 74, 75, 76, 133, 135], "befor": [55, 65, 96, 237], "behavior": [8, 9], "benchmark": [117, 229], "benefit": [93, 94, 102], "bernoulli": [142, 143, 144, 145, 146, 199, 206, 209, 210], "best": [13, 19, 27, 29, 30, 43, 93], "between": [3, 65, 67, 84, 93, 97, 108], "beyond": 93, "bi": 52, "bia": [67, 73, 106], "bibliographi": 0, "big": [30, 93, 212], "bigqueri": 99, "binari": [27, 28, 29, 58, 62, 78, 96], "bind": [6, 234], "binomi": [145, 146, 148, 154, 155], "birthdai": 127, "bit": 62, "bitcoin": 109, "bivari": 175, "block": [55, 57], "boldsymbol": [52, 123], "book": [59, 72, 97], "boolean": 29, "bottom": 93, "bound": [6, 65, 130, 202, 215, 230], "boundari": [73, 101], "box": 67, "bpe": 56, "brain": 157, "break": [29, 67], "breakdown": 36, "brier": 102, "broadcast": 57, "brute": 60, "budget": 98, "bug": 93, "build": 93, "busi": [94, 95, 227], "byte": 56, "c": 221, "cach": 235, "calcul": [30, 117, 145, 215], "calculu": [52, 125, 173], "calibr": [102, 106, 123], "call": [145, 236], "callabl": 7, "callback": 118, "came": 5, "can": [60, 98], "cancer": 94, "capac": 56, "car": 97, "case": [6, 9, 11, 13, 16, 17, 19, 27, 29, 30, 32, 36, 43, 57, 65, 67, 79, 123], "categor": [20, 52, 73, 75, 109], "cauchi": [84, 177, 202], "caus": [27, 93], "causal": [57, 118], "caution": 105, "cd": [93, 99], "cdf": [139, 143, 146, 154, 155, 159, 165, 166, 167, 168, 169, 172, 175, 180, 187], "ceil": 29, "center": [29, 60, 63, 145], "central": 170, "centroid": 60, "chain": [52, 56], "chaotic": 101, "chapter": [128, 134, 153, 174, 196, 208, 209], "charact": 76, "characterist": [97, 101, 191, 197, 198, 215], "chatgpt": 95, "chebyshev": [65, 202], "check": [3, 61, 74, 93, 117], "checker": 25, "checkpoint": 117, "chernoff": 202, "child": 116, "choos": [60, 95, 102], "chronicl": 105, "ci": [93, 99], "circl": 4, "citat": [1, 10, 54, 56, 69, 122, 123], "claim": [43, 44], "clarif": [11, 17], "clarifi": 94, "clariti": 6, "clash": 67, "class": [2, 36, 73, 100, 116, 226], "classif": [58, 65, 76, 94, 102, 118, 119], "classifi": [49, 50, 75, 76], "cli": 89, "client": 227, "clone": 93, "close": [52, 60, 83, 162, 212, 221], "closur": 234, "cluster": [52, 59, 60, 63, 89, 102], "code": [30, 32, 36, 44, 62, 72, 88, 93, 96, 103, 111, 113], "coeffici": [52, 67, 177], "coerciv": 2, "coher": 93, "cohes": 11, "coin": [136, 138, 143, 180, 210], "collat": [57, 58, 119], "collect": 98, "collis": 17, "column": [84, 96], "columnar": 96, "combin": [95, 124], "combo": 102, "come": [96, 154], "command": [88, 89], "commerc": [95, 96], "commit": 93, "common": [11, 16, 17, 59, 86, 98, 103, 111, 113, 185, 200, 210], "commoncrawl": 56, "commut": 82, "compar": 65, "comparison": [3, 6, 27, 215], "compet": 56, "compil": 2, "complement": 130, "complex": [11, 13, 15, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 46, 57, 60, 65, 67, 73, 227, 229, 238], "complianc": 98, "compliant": 227, "compon": [95, 221], "compos": [57, 58, 122], "composit": [216, 218], "compress": 62, "comput": [1, 57, 58, 77, 89, 101], "con": [2, 96, 216, 227], "concaten": 55, "concav": 202, "concept": [11, 17, 22, 27, 30, 32, 49, 52, 56, 60, 65, 67, 70, 73, 96, 109, 140, 141, 143, 146, 150, 154, 159, 163, 164, 175, 177, 180, 182, 185, 187, 190, 205, 210], "conceptu": 63, "conclus": [62, 215], "concret": 227, "concurr": [214, 215], "condit": [52, 56, 60, 67, 73, 75, 86, 131, 132, 133, 135, 180, 181, 182, 184, 191, 210, 215, 230], "confid": [67, 93], "config": [57, 58, 216, 218, 219], "configur": [57, 89, 93, 117, 216, 218], "confus": [65, 206], "connect": [4, 7, 55, 57, 73, 93, 95], "conquer": 16, "consid": 157, "consider": [98, 117, 226], "consist": [93, 97], "consolid": 89, "constant": [73, 117], "constrain": 6, "constraint": [6, 19, 20, 25, 26, 27, 29, 35, 36, 37, 43, 94, 98], "construct": [56, 57, 58, 116, 118], "constructor": [224, 236], "cont": 175, "contain": [5, 8], "container": 99, "content": [10, 12, 14, 15, 18, 21, 24, 28, 31, 33, 38, 39, 40, 42, 45, 54, 59, 66, 67, 80, 85, 91, 92, 99, 105, 115, 121, 128, 134, 144, 148, 151, 153, 156, 160, 174, 196, 208, 209, 214, 219, 223, 231], "context": [56, 57, 207, 210, 222, 227], "contextu": 56, "contig": 61, "contigu": 11, "continu": [56, 73, 75, 93, 105, 123, 161, 165, 167, 173, 174, 175, 210], "contour": [126, 189], "contravari": 7, "contribut": 93, "control": 93, "conveni": 210, "convent": [67, 86], "converg": [56, 60, 205, 206], "convers": 139, "convex": [67, 202], "convolut": [171, 185], "cooper": 215, "coordin": 81, "core": 226, "corner": [11, 17], "corollari": [130, 133, 169], "corpu": 55, "correct": [27, 29, 30, 220], "corrector": 93, "correl": [177, 178], "correspond": 95, "cosin": [58, 84, 122, 177], "cosineannealinglr": 122, "cosineannealingschedul": 122, "cost": [60, 63, 67, 93, 95], "costli": 11, "count": [20, 117, 124, 230], "countabl": 137, "counter": 154, "counterpart": 30, "countour": 126, "coupl": 221, "covari": [7, 52, 177, 187, 189, 190, 191, 194], "cpu": [88, 215, 230], "creat": [58, 89, 93], "creation": [89, 221, 237], "criteria": 4, "criterion": [4, 58, 63], "cross": [55, 105, 118, 138], "cuda": [88, 110, 112, 114], "cumul": [139, 165], "curv": 105, "cycl": 114, "d": [49, 57, 67, 73, 83, 175, 202, 221], "dag": 99, "dai": 145, "dampen": 123, "dashboard": 109, "data": [11, 22, 23, 29, 30, 32, 49, 52, 57, 65, 77, 88, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 109, 119, 157, 212], "databas": [57, 97], "dataload": [57, 58, 119, 212], "dataop": [93, 99], "dataset": [52, 56, 57, 58, 65, 71, 73, 118, 119, 120], "dc": [140, 141, 163], "deadlock": 230, "deal": 98, "debt": 93, "decai": 122, "decis": 73, "declar": [2, 97], "decod": [55, 57, 118, 119], "decompos": 56, "decomposit": 70, "decor": 228, "decoupl": 95, "decreas": [60, 63], "deep": [1, 78, 83, 95, 117], "default": [93, 235], "defin": [6, 30, 60, 65, 98, 129, 132, 165, 192], "definit": [7, 29, 50, 55, 57, 58, 78, 81, 82, 84, 98, 108, 122, 126, 131, 132, 136, 137, 138, 139, 140, 150, 152, 161, 162, 163, 165, 167, 168, 169, 194, 199, 210, 215, 220, 221], "delet": [11, 89], "delta": [97, 123], "demo": [52, 88, 236], "demonstr": 4, "densiti": [162, 173], "depend": [17, 52, 57, 61, 71, 74, 75, 93, 105, 118, 119, 120, 218, 220, 221], "deploi": 99, "deploy": [93, 99, 107, 108], "deprec": 58, "deriv": [29, 123, 165], "descript": 55, "deseri": 96, "design": [93, 221, 223, 228], "destin": 98, "detail": [13, 226], "detect": [93, 95, 102], "determin": [2, 52, 84, 199], "determinist": [65, 157], "develop": [93, 99, 105], "deviat": 141, "devic": [88, 108], "devop": 93, "diagnosi": [94, 95, 179], "diagonaliz": 191, "diagram": 95, "dice": [136, 138], "dichotomi": 65, "dictionari": 17, "did": [154, 237], "differ": [43, 65, 93, 97, 215, 218], "differenti": [67, 123], "digit": [58, 62], "dimens": [55, 57, 58, 65, 83, 210], "dimension": [57, 67, 84, 97, 101, 162], "dip": 221, "dir": 116, "direct": [11, 17, 43, 44, 47, 55], "directori": 93, "disadvantag": [11, 17, 97, 108], "discret": [57, 73, 137, 153, 159, 160, 173, 175], "discrimin": 73, "disjoint": [130, 132], "dispatch": 8, "distanc": 83, "distil": 120, "distinct": 108, "distribut": [30, 52, 56, 57, 65, 67, 73, 88, 90, 91, 96, 101, 123, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 165, 167, 168, 169, 175, 177, 180, 185, 187, 190, 193, 195, 196, 199, 200, 209, 210], "divid": 16, "do": [67, 98, 120, 124, 125, 135, 235], "document": [93, 97], "doe": [102, 108, 122, 212, 213], "don": 98, "dot": [55, 57, 84, 177], "doubl": [23, 125], "down": [29, 57, 67, 93], "draw": 7, "drift": [105, 109], "driven": 216, "dropout": 55, "dry": 119, "dump": 157, "dunder": 32, "duplic": [44, 47, 238], "durabl": 97, "dure": 230, "dynam": [3, 8, 17, 57, 93, 121, 237], "e": [30, 52, 55, 95, 96, 129, 221, 226], "e2": 93, "earli": [93, 95], "eas": 11, "easi": 26, "easier": 172, "eat": 29, "ec2": 89, "edg": [19, 27, 29, 36, 43], "effect": 96, "effici": [11, 17, 30, 117, 212, 229], "eigendecomposit": 191, "eigenvalu": [191, 192], "eigenvector": [191, 192], "elbow": 60, "element": [17, 221], "elementwis": 55, "ell": 55, "elt": 98, "eltl": 98, "em": 52, "embed": [55, 56, 57], "empir": [48, 49, 65, 73, 142, 147, 157, 158, 177], "empti": [36, 130], "emptiv": 215, "enabl": 57, "encapsul": 221, "encod": [55, 56, 57, 58], "end": [23, 93], "engin": [77, 97, 98, 99, 100], "enhanc": 221, "enough": 123, "ensembl": 101, "entir": [52, 65], "entropi": [55, 56], "enum": 117, "environ": [89, 93, 99], "equal": [81, 131, 162, 232], "equat": [16, 79], "equip": 95, "equival": [60, 84, 191], "erm": 49, "error": [49, 55, 57, 65, 67, 93, 169], "establish": 95, "estim": [8, 52, 56, 67, 73, 86, 117, 209, 210, 211], "etl": 98, "euclidean": [4, 83], "evalu": [61, 71, 102, 106], "event": [112, 129, 130, 132, 180], "everyth": 57, "eviron": 218, "evolut": 98, "exact": [27, 57], "exampl": [3, 5, 7, 8, 11, 16, 17, 20, 27, 29, 32, 52, 55, 57, 58, 62, 65, 67, 73, 78, 84, 87, 93, 94, 95, 96, 97, 98, 100, 102, 108, 109, 122, 126, 129, 136, 145, 152, 154, 173, 183, 199, 205, 206, 210, 212, 215, 235, 236], "exclus": 130, "execut": 215, "exercis": [76, 127, 132, 149, 183], "exist": [93, 140, 163], "expect": [30, 52, 67, 140, 143, 145, 146, 150, 154, 157, 163, 167, 168, 169, 172, 177, 178, 182, 184, 187, 190, 205, 215], "experi": [99, 103, 129], "expert": 56, "explain": 235, "explan": 27, "exponenti": [123, 168], "expos": 93, "express": 212, "extend": 73, "extens": [16, 30], "extern": 29, "extract": [96, 98, 99, 100], "f": [78, 123, 129], "f_1": 65, "f_3": 65, "facilit": 221, "factor": 70, "factori": [221, 227], "fail": [56, 60], "failurecod": 89, "failurereason": 89, "famili": [56, 57, 123], "faq": 59, "far": 123, "favour": 94, "feasibl": [29, 65], "featur": [67, 73, 75, 94, 95, 100, 101, 108], "feed": [55, 57], "feedback": 99, "feedforward": [55, 57], "ffn": 57, "field": [78, 237], "file": [89, 212], "final": 105, "find": [27, 41, 46, 60, 89, 98, 114, 172, 238], "fine": [56, 70, 118, 119], "finit": [60, 108], "first": [29, 55, 58, 84], "fit": [60, 67, 73], "fix": [46, 65], "flexibl": 98, "float": 117, "flop": 117, "fluff": 117, "footprint": 117, "forc": 60, "form": [16, 52, 57, 73, 79, 123], "formal": 27, "format": [93, 96, 98], "formul": [29, 52, 60, 67, 94, 123], "forward": [55, 57, 117], "foundat": 29, "four": 93, "fourier": 197, "fourth": 58, "fraction": 122, "frame": [29, 65, 95], "framework": [65, 98], "free": 101, "frequenc": 173, "frequent": 238, "from": [44, 47, 49, 56, 57, 65, 79, 94, 108, 118, 123, 154, 166, 173, 195, 237], "fulfil": 4, "full": [35, 57], "fulli": 52, "function": [4, 5, 7, 8, 11, 13, 17, 19, 29, 43, 55, 56, 57, 58, 60, 63, 65, 67, 73, 93, 95, 111, 113, 116, 123, 129, 138, 139, 162, 165, 169, 172, 173, 197, 198, 199, 200, 202, 210, 212, 235], "functool": 228, "fundament": 125, "further": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 20, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 48, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 70, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 140, 141, 142, 143, 145, 146, 147, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 192, 193, 197, 199, 200, 202, 203, 205, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 229, 230, 232, 234, 236], "fusion": 95, "futur": [57, 58], "g": 30, "gap": 65, "gaussian": [52, 53, 55, 57, 67, 73, 169, 175, 177, 185, 189, 190, 192, 193, 200, 209, 210], "gaussion": 52, "gc": 99, "gelu": [55, 57], "gener": [5, 6, 16, 32, 46, 49, 52, 54, 55, 56, 57, 58, 65, 73, 79, 83, 169, 198, 199, 200, 212, 229, 233], "generalist": 56, "geometr": [79, 81, 82, 84, 150, 151], "geometri": [4, 192], "get": 116, "get_arg": 237, "get_origin": 237, "getmemb": 116, "gil": [215, 230], "git": 93, "given": [52, 67, 180], "global": [60, 87, 88, 215, 230], "gloo": 88, "gmm": 52, "goal": 95, "god": 222, "golden": 93, "good": [8, 209, 221], "gpt": [56, 57, 58, 113, 117, 118], "gpu": [89, 114, 117], "gradient": [57, 123], "graph": 97, "greedi": 60, "group": [20, 88], "growth": 65, "guard": 93, "h": 65, "h_": 65, "ha": [52, 56, 57, 70], "hand": 73, "handl": [57, 237], "happen": 213, "har": 30, "hard": 52, "hash": [17, 18, 19], "head": [55, 57, 89, 118], "headnodebootstrapfailur": 89, "health": 109, "heatmap": [57, 58, 118], "hessian": 123, "hierarchi": 2, "high": [97, 220], "higher": [55, 57, 210], "highlight": 93, "histogram": [142, 147, 157, 158], "hoeffd": [65, 202], "homoscedast": 67, "hook": 93, "hot": [26, 55, 57], "how": [2, 60, 89, 98, 116, 117, 118, 119, 120, 129, 212, 221], "http": 9, "huggingfac": [57, 119], "hybrid": [95, 108], "hydra": 216, "hyperparamet": [103, 105], "hyperplan": 79, "hypothesi": [60, 65, 67], "hypothet": 116, "i": [2, 4, 5, 7, 43, 47, 49, 52, 55, 56, 57, 60, 64, 65, 67, 73, 78, 81, 82, 84, 89, 93, 95, 98, 105, 123, 129, 157, 165, 172, 173, 175, 180, 182, 194, 195, 199, 200, 202, 207, 210, 212, 215, 226, 228, 230, 232, 233, 235, 237], "iac": 93, "iam": 89, "id": [89, 93, 215], "idea": [56, 77], "ideal": [142, 147, 157, 158], "ident": [55, 57, 65, 73, 89, 101, 152, 175, 187, 210], "identifi": [93, 94, 95, 96], "ieee": 1, "ignor": 58, "ii": [43, 47], "iid": [56, 67, 101, 152, 175, 187, 190, 210], "illustr": [58, 87, 215], "imag": [62, 99, 136], "imagenet": 195, "imbal": 100, "immut": 7, "imper": 97, "implement": [2, 8, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 35, 36, 37, 41, 43, 44, 46, 53, 56, 57, 58, 59, 61, 62, 67, 68, 71, 72, 74, 122, 123, 147, 155, 212, 221], "implic": 29, "import": [32, 61, 65, 74, 78, 157, 175, 194], "improv": 93, "inadmissbl": 16, "inclus": [2, 4, 130], "increas": 210, "increment": 93, "independ": [55, 57, 65, 73, 75, 79, 101, 132, 135, 152, 154, 175, 177, 180, 187, 190, 200, 210], "index": [55, 58], "indic": 117, "individu": 60, "induct": [30, 73], "ineffici": [17, 238], "inequ": [65, 84, 130, 177, 202, 203], "infer": [52, 56, 60, 67, 70, 73, 108], "infin": 125, "infinit": [65, 79], "influenti": 77, "inform": [88, 210], "infrastructur": 93, "infti": 49, "ingest": [98, 100], "init": 236, "initi": [52, 56, 58, 88, 93, 97, 236], "inject": [93, 218, 220], "input": [13, 19, 20, 27, 29, 30, 43, 47, 55, 56, 57, 58, 67, 95, 108], "insert": 11, "inspect": 116, "instabl": 123, "instanc": [89, 116], "instanti": 216, "integ": [2, 4, 62], "integr": [93, 125], "intent": 235, "interfac": [93, 221], "interpret": [49, 65, 79, 82, 84, 101, 123, 133, 202, 215, 230], "interv": [67, 162, 165, 169], "interview": [11, 17], "intrins": 70, "introduc": 125, "introduct": [10, 11, 16, 17, 27, 29, 30, 32, 51, 56, 78, 94, 95, 176, 178, 181, 184, 212], "introspect": 228, "intuit": [19, 20, 27, 29, 30, 32, 36, 43, 44, 52, 57, 60, 65, 67, 93, 96, 98, 109, 122, 125, 131, 132, 133, 167, 172, 180, 185, 210], "invalid": 65, "invari": [4, 7, 30, 57, 81, 82, 123], "invers": [220, 221], "io": 230, "iri": 61, "isol": 97, "isp": 221, "issu": [93, 235], "item": [27, 95, 238], "iter": [11, 27, 29, 30, 55, 182, 212, 233], "its": [52, 96], "j": 123, "jacobian": 123, "jason": 237, "jensen": 202, "job": 29, "join": 215, "joint": [52, 56, 73, 175, 176, 177, 178, 187, 195, 196], "json": 96, "just": 5, "k": [27, 46, 52, 59, 60, 61, 62, 63], "karpathi": 57, "keep": 98, "kei": [17, 55, 56, 57, 89, 95, 97, 105, 215, 221], "kind": 60, "knowledg": 120, "koko": 29, "kolmogorov": [123, 130], "kroneck": 123, "kurtosi": 170, "l": [55, 83, 123], "l2": 83, "l_1": 83, "l_2": 83, "l_p": 83, "label": [95, 100, 210], "lagrangian": 73, "lake": [97, 98, 99], "lakehous": 97, "lambda": 191, "languag": [2, 56, 69, 97], "larg": [56, 65, 69, 97, 98, 205, 207, 212], "last": [57, 119], "late": [95, 234], "latenc": [70, 93], "latent": 52, "law": [65, 84, 129, 133, 135, 140, 163, 175, 182, 205, 207], "layer": [55, 57, 99], "layernorm": 57, "lazi": [212, 233], "lead": 57, "leakag": [100, 105], "lear": 65, "learn": [1, 29, 32, 49, 55, 56, 58, 64, 65, 70, 78, 81, 82, 83, 86, 93, 94, 95, 96, 99, 105, 117, 122, 181, 201, 204, 207, 210], "learnabl": 57, "learner": 67, "learnt": 65, "least": 67, "lebesgu": 125, "lectur": [59, 72], "left": [27, 165], "lemma": [60, 65, 202], "length": [6, 56, 57], "level": [126, 220], "li": 125, "licens": 93, "lifecycl": [92, 93], "likelihood": [52, 67, 73, 86, 210, 211], "limit": [11, 180], "line": [79, 88, 126], "linear": [30, 31, 55, 57, 66, 67, 77, 79, 101, 140, 141, 163, 169, 177, 189], "link": [79, 93, 183], "lint": 93, "liskov": [4, 221], "list": [7, 11, 12, 22, 32, 36, 212, 229, 238], "liu": 237, "lloyd": [59, 60, 61], "load": [57, 62, 98, 99, 117, 212], "local": [60, 87, 93], "locat": 218, "lock": [213, 215, 230], "log": [52, 67, 73, 89, 210], "logic": 227, "logist": [73, 142], "logit": 123, "look": 84, "lookup": [55, 57], "loop": [13, 30, 99], "loos": 221, "lora": [70, 71], "loss": [49, 55, 56, 58, 60, 65, 67, 95, 105], "low": [69, 70, 220], "lsp": 221, "lunch": 101, "m": 52, "machin": [83, 86, 93, 94, 95, 96, 99, 207, 210], "mai": 27, "main": [93, 111, 113], "maintain": [93, 221], "mainten": 4, "major": [65, 96, 97], "man": 57, "manag": [89, 93, 217, 218, 219], "manhattan": 83, "mani": 89, "manipul": 11, "map": [17, 18, 19, 55, 57, 126], "margin": [52, 73, 175, 187], "markov": [56, 202], "mask": [55, 57, 58, 118], "mass": [138, 173], "master": [16, 27, 57, 88], "match": [27, 57], "mathbb": [30, 78, 129], "mathbf": [55, 57, 67, 123, 129], "mathcal": [30, 52, 65, 123, 129, 210], "mathemat": [27, 29, 30, 86, 122, 128, 210], "matmul": 57, "matric": 55, "matrix": [52, 55, 57, 61, 67, 70, 84, 117, 123, 177, 187, 191, 194], "matter": 102, "maxim": [52, 73], "maximum": [46, 57, 67, 73, 86, 143, 210, 211], "me": 98, "mean": [52, 59, 60, 61, 62, 63, 67, 98, 108, 166, 189], "measur": [94, 129, 136, 162], "mechan": [55, 56, 57], "median": 166, "medic": [94, 95, 179], "medoid": 60, "meet": 47, "member": 116, "membership": [4, 238], "memori": [11, 57, 113, 114, 117, 212, 215, 229], "merg": [58, 70, 71, 93], "mermaid": 95, "metadata": [103, 217, 219], "method": [5, 30, 32, 60, 73, 116, 172, 212, 221, 226], "metric": [61, 67, 71, 94, 95, 102, 103], "mfu": 117, "mgf": 200, "middl": 47, "might": 238, "min": 34, "mind": 98, "mineatingspe": 29, "mini": 58, "miniconda": 89, "minim": [48, 49, 60, 65], "minima": 60, "minimum": [46, 60, 95, 143], "mirror": 93, "miss": 9, "mix": [52, 73], "mixtur": [51, 52, 53], "mle": 67, "mlop": [93, 100, 105, 106, 107, 108, 109], "mnist": [61, 76], "mock": [93, 221], "modal": [52, 95], "mode": 166, "model": [51, 52, 53, 56, 57, 58, 60, 65, 67, 69, 71, 73, 76, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 117, 118, 119, 157, 179, 237], "modern": 96, "modif": [56, 57], "modifi": 118, "modul": 220, "moment": [141, 164, 170, 198, 199, 200], "monitor": [89, 93, 98, 99, 105, 109], "monoton": [29, 60, 63, 123], "moot": 5, "more": [57, 93], "motiv": [5, 6, 7, 8, 9, 56, 58, 70, 79, 93, 116, 122, 169], "move": [43, 44], "movi": 94, "mp": 124, "mse": 67, "mu": 52, "multi": [55, 56, 57, 88, 95], "multicollinear": 67, "multimod": [95, 96], "multinomi": [52, 73], "multipl": [55, 82, 84, 117, 124], "multipli": [122, 124, 135], "multiprocess": 215, "multitask": 215, "multithread": 215, "multivari": [67, 177, 189, 190, 192, 193, 210], "murphi": 52, "must": 65, "mutabl": [7, 93, 235], "mutat": 35, "mutual": 130, "mvp": 95, "my": 98, "mypi": 93, "n": [30, 49, 52, 175, 200, 210], "nacent": 56, "naiv": [29, 50, 57, 72, 73, 74, 75, 76, 99, 212], "name": 224, "narrow": [4, 56], "necessari": [52, 60], "need": [62, 67, 98, 237], "neg": [82, 123, 130, 210], "neighborhood": 173, "neq": 123, "nest": [13, 237], "network": [55, 57, 89], "new": [93, 236], "newsfe": 95, "next": 212, "node": [87, 88, 89], "nois": 67, "nomin": 2, "non": [67, 78, 95, 123, 130], "none": 232, "norm": [57, 83], "normal": [55, 57, 67, 73, 79, 97, 123, 130, 138, 169, 175], "nosql": 97, "notat": [11, 17, 27, 30, 52, 55, 57, 60, 65, 67, 73, 77, 86, 87, 141, 164, 209], "note": [65, 105, 125, 129, 173], "notebook": [59, 72], "notgiven": 9, "notion": [60, 129], "nuanc": 93, "number": [4, 27, 60, 62, 65, 78, 117, 205, 207, 215], "numer": [57, 123, 210], "o": [30, 215], "obei": 123, "object": [2, 29, 30, 32, 56, 60, 67, 78, 81, 82, 94, 95, 181, 221, 222, 232], "observ": 93, "occur": 234, "ocp": 221, "offlin": [95, 107], "omega": 129, "omnivers": 77, "one": [75, 125], "onli": [36, 108, 118, 119], "onlin": [30, 59, 72, 95, 107, 108], "open": [162, 221], "oper": [11, 17, 32, 36, 55, 57, 77, 82, 110, 112, 117, 215], "opposit": 47, "optic": 76, "optim": [30, 46, 49, 50, 56, 58, 60, 63, 98, 117, 210], "option": 99, "orchestr": 93, "order": [17, 30, 93, 96, 116, 123, 216], "ordinari": 7, "orient": [2, 81], "orthornorm": 191, "oscil": [58, 122], "other": [60, 102], "our": 58, "out": [52, 65, 89], "outcom": [30, 215], "outer": 84, "output": [55, 57, 95, 123, 234, 235], "outsid": 65, "over": [56, 114, 229, 238], "overflow": 27, "overload": [8, 73], "overrid": 226, "overview": [30, 56, 58, 215, 226], "p": [67, 83, 129, 136], "pac": 65, "pad": 58, "pair": [5, 17, 56, 89], "pairwis": 102, "palindrom": 25, "palm": 117, "pandora": 67, "paper": [56, 77, 117], "paradigm": [55, 56, 58, 70, 95, 105], "paradox": 127, "parallel": [57, 88, 96, 214, 215], "parallelclust": 89, "paramet": [5, 52, 56, 67, 70, 73, 117, 209], "parametr": 79, "parent": 116, "parenthes": 35, "part": 99, "partit": 60, "pass": 117, "patch": 57, "path": 57, "pattern": [221, 222, 223, 226, 227, 228], "pdf": [165, 167, 168, 169, 172, 173, 175, 176, 180, 181, 187, 190, 210], "pe": 55, "peek": 36, "penguin": 75, "pep8": 93, "per": [57, 117, 145], "perceptron": 65, "perform": [61, 67, 94, 95, 96, 98, 109, 212], "permut": [57, 124], "perpect": 52, "perplex": 56, "person": 95, "perspect": [52, 180], "phase": [55, 93, 122], "pi": 52, "pi_": 52, "pigeonhol": 29, "pin": 93, "pip": 93, "pipelin": [93, 99], "plain": 237, "plan": 93, "plane": 79, "plate": 32, "playbook": 77, "playground": 97, "plot": [52, 126, 143, 146, 154, 159, 189], "pmf": [138, 139, 142, 143, 146, 147, 154, 155, 158, 159, 175, 176, 180, 181], "point": [52, 65, 79, 93, 117, 157, 165, 173], "pointer": [39, 43, 44, 45, 47], "poisson": [154, 155, 156, 159, 185, 200], "polynomi": 191, "pool": 119, "poor": 57, "pop": 36, "popul": [180, 182], "port": 88, "posit": [55, 57, 62, 79, 82, 194], "positionwis": [55, 57], "possibl": 108, "posterior": [52, 73, 133, 135], "posteriori": 65, "potato": 26, "potenti": [98, 206], "ppe": 95, "practic": [29, 93, 109, 117], "pre": [54, 55, 56, 57, 93, 136, 215], "precondit": 29, "precurs": 108, "predict": [73, 95, 101, 108, 109], "predictor": [67, 75], "prefer": 238, "prefetch": 57, "preliminari": [80, 128], "prepar": [71, 100], "preserv": [4, 123, 228], "pretrain": 71, "prevent": 215, "price": 109, "prime": 215, "primer": [52, 55, 62], "primit": 2, "principl": [4, 29, 124, 220, 221], "prior": [52, 73, 75], "priori": [65, 135], "pro": [2, 96, 216, 227], "probabilist": [30, 65, 76, 123], "probabl": [30, 56, 73, 77, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 162, 165, 169, 173, 175, 202, 203], "probit": 179, "problem": [5, 6, 11, 17, 19, 20, 25, 26, 29, 30, 35, 36, 37, 41, 43, 44, 52, 60, 62, 64, 65, 67, 75, 86, 93, 94, 95, 123, 149, 157, 183, 215], "process": [52, 55, 57, 87, 88, 95, 97, 98, 108, 215], "product": [30, 52, 55, 57, 79, 84, 93, 95, 99, 107, 177], "profil": [111, 112, 113, 115, 212], "program": [214, 215], "project": [55, 57, 84, 93, 95, 98, 226], "promot": [107, 221], "proof": [29, 43, 44, 78, 84], "properli": 125, "properti": [4, 79, 81, 84, 97, 138, 139, 140, 141, 150, 154, 163, 165, 194, 199, 237], "proposit": 131, "protect": [95, 230], "protocol": 233, "provid": 235, "pseudocod": [27, 29, 30], "publish": 97, "puriti": 61, "purpos": 9, "push": [36, 107], "put": 57, "pydant": [216, 237], "pydra": 216, "pylint": 93, "pyproject": 93, "pyramid": 93, "pythagorean": 83, "python": [22, 23, 52, 89, 93, 96, 116, 212, 215, 230, 231, 235], "pytorch": [57, 58, 75, 112, 122, 225], "qualiti": 93, "quantit": 75, "quantiz": [62, 71], "queri": [55, 57], "question": [14, 21, 38, 40, 63, 65, 127, 157], "queue": [22, 23, 24, 36], "quot": 98, "r": [67, 157], "race": [215, 230], "rag": 221, "rail": 93, "random": [30, 52, 65, 67, 93, 125, 136, 137, 153, 154, 157, 161, 171, 172, 174, 175, 185, 186, 187, 188, 190, 199, 200, 202], "rank": [69, 70, 87, 88, 95, 102], "rate": [58, 122], "ratio": 117, "raw": 98, "re": 60, "read": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 20, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 48, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 70, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 140, 141, 142, 143, 145, 146, 147, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 181, 184, 186, 192, 193, 197, 199, 200, 202, 203, 205, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 229, 230, 232, 234, 236], "readm": 93, "real": [4, 7, 32, 56, 78, 100, 101, 108, 145, 207], "recal": 94, "recognit": 76, "recommend": [94, 95], "reconstruct": 62, "recov": 103, "recurs": [27, 30], "redo": 58, "reduc": [29, 93], "reduct": [58, 70], "refactor": 93, "refer": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 20, 27, 28, 29, 30, 31, 32, 33, 36, 43, 44, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 140, 141, 142, 143, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 229, 230, 232, 234, 236], "reflex": 4, "region": 60, "registri": [107, 225, 227], "regress": [66, 67, 73, 79, 102, 142], "reistri": 228, "reject": 56, "relat": [52, 97, 117], "relationship": [4, 95], "releas": [93, 230], "relev": [83, 98], "remark": [32, 50, 52, 60, 73, 192], "remind": 52, "remot": 93, "remov": [44, 47, 114], "repeat": 27, "repositori": 93, "repres": [60, 123], "represent": [27, 29, 30, 55, 56, 57, 67, 81, 191], "reproduc": [57, 58, 70, 103, 118], "request": 9, "requir": [93, 94, 98], "reshap": 55, "residu": [55, 57], "resolut": [17, 116, 235, 238], "resourc": [59, 72, 77, 89, 101], "respect": [56, 123], "respons": [52, 221], "restrict": 65, "retriev": [102, 116], "return": [7, 212], "revenu": 145, "revers": [34, 37, 118], "review": 89, "revisit": 5, "right": [27, 95, 102, 165], "rightarrow": 49, "risk": [48, 49, 65], "roadmap": 77, "role": 89, "roll": [136, 138], "root": 191, "rotat": 82, "rough": 117, "row": [84, 96, 97], "rudimentari": [10, 212], "rule": [52, 56, 138], "run": [2, 52, 89, 103, 119, 215, 226], "runtim": [8, 93], "safe": 3, "safer": 215, "safeti": [3, 93, 213, 226], "sale": 30, "same": [44, 47, 56], "sampl": [52, 57, 58, 65, 89, 93, 100, 109, 123, 129, 142, 177, 205, 206, 208], "saniti": [61, 74, 93, 117], "satisfi": 4, "satur": [57, 93], "sauer": 65, "scalabl": [93, 98, 221], "scalar": [79, 82, 84], "scale": [55, 57, 67, 82, 94, 123, 140, 141, 163, 172], "scan": 93, "scenario": [30, 57, 238], "schedul": [29, 58, 225], "schema": [216, 237], "schwarz": [84, 177, 202], "scienc": [1, 77, 100], "scope": [5, 6, 95, 96, 98], "score": [57, 61], "script": [89, 215], "search": [27, 28, 29, 30, 31, 60], "second": [60, 117], "section": 56, "secur": 98, "see": [93, 97, 102, 105, 108, 166, 215], "seed": 103, "seen": 238, "segment": 62, "segreg": 221, "select": [101, 102], "self": [55, 56, 57, 70], "semant": [6, 55, 57], "semi": 194, "send": 212, "sentinel": 9, "sequenc": [55, 57, 118, 119], "sequenti": [30, 57], "serial": 96, "serv": 108, "servic": 218, "set": [2, 4, 65, 71, 88, 89, 93, 108, 119, 120, 129, 130, 137, 161, 238], "setup": [65, 73, 88, 89, 142, 147, 157, 158], "setuptool": 93, "shadow": 93, "shape": [4, 192], "shard": 96, "share": [55, 89, 215], "sharpen": 123, "shatter": 65, "shift": [140, 141, 163, 172, 189], "shot": 56, "should": 98, "shuffl": 57, "sigma": 52, "sign": 84, "signal": 93, "signatur": 116, "similar": 60, "simpl": [6, 52, 58, 73, 93], "simplif": 56, "simplifi": 179, "simul": 145, "simultan": 215, "singl": [8, 52, 117, 195, 215, 221], "singleton": [58, 225, 226, 232, 236], "singular": 89, "size": [6, 11, 17, 46, 57, 62, 87, 88, 93, 117], "skew": 170, "sklearn": 52, "slide": [39, 42, 46], "slurm": 89, "small": [52, 113, 125, 173], "smaller": 58, "smooth": [56, 101, 123], "so": [8, 123, 175], "soft": 52, "softmax": [55, 57, 123], "softwar": 77, "solut": [19, 20, 29, 36, 43, 44, 46, 52, 79], "solv": 67, "solvabl": 64, "some": [6, 7, 32, 50, 52, 65, 73, 89, 103, 105, 117, 123, 180, 210], "sort": [17, 20, 29, 30, 43, 44, 47], "sourc": [96, 98], "space": [11, 13, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 46, 55, 57, 60, 65, 67, 73, 78, 79, 83, 84, 108, 129, 138, 146, 229, 238], "special": 11, "specif": [65, 70], "split": 58, "squar": [67, 112], "srp": 221, "stabil": [56, 57, 93, 122], "stabilis": 57, "stack": [32, 33, 34, 35, 36, 236], "stage": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 218], "standard": [27, 29, 67, 81, 93, 141, 169], "start": [93, 125], "state": [27, 58, 138, 146, 217, 219], "statement": [29, 62, 65, 75, 212], "static": [3, 93], "statist": [67, 208], "statistician": [140, 163], "statu": 89, "step": [52, 55, 60, 62, 93, 96, 98, 99, 107, 123], "stirl": 60, "stop": 89, "storag": [96, 97, 98], "store": [30, 98], "stori": 52, "strategi": [58, 95, 108, 227], "stream": [98, 100, 108, 212], "string": [20, 34, 37, 41, 55], "strong": 205, "stronger": [140, 163], "strongli": 93, "structur": [2, 32, 77, 94, 97, 102, 216, 226], "stub": 93, "student": 120, "studi": [6, 105], "sturg": 138, "style": [1, 93], "sub": [180, 182], "subarrai": 46, "subsequ": 55, "subset": 35, "subspac": 57, "substitut": [4, 6, 27, 221], "subsumpt": 4, "subtract": 82, "subtyp": [2, 3, 4], "success": 94, "suffici": 93, "sum": [13, 19, 43, 46, 47, 55, 125, 146, 154, 171, 185, 186, 200], "summari": [30, 52, 65, 75, 76, 78, 99, 135, 136, 215], "super": 157, "supervis": [55, 56, 70, 210], "support": [11, 17], "symmetr": [191, 194], "symptom": 93, "synchron": [110, 215], "system": [79, 89, 91, 92, 93, 94, 96, 108, 109, 221], "t": [30, 67, 98, 109], "tabl": [10, 12, 14, 15, 18, 21, 24, 27, 28, 30, 31, 33, 38, 39, 40, 42, 45, 54, 55, 59, 65, 66, 80, 85, 91, 92, 96, 99, 105, 115, 121, 128, 134, 144, 148, 151, 153, 156, 160, 173, 174, 196, 208, 209, 214, 219, 223, 231], "target": [57, 58, 65, 67, 73, 109], "task": [56, 70, 95, 230], "tau": 122, "teacher": 120, "technic": 93, "techniqu": [46, 47, 93, 98, 107], "temperatur": 123, "templat": 98, "term": [67, 132], "terminologi": [86, 133], "test": [19, 20, 27, 29, 30, 36, 41, 43, 44, 46, 58, 65, 67, 93, 104, 107, 109, 221, 238], "text": [96, 98], "textbf": 49, "tflop": 117, "th": 27, "theorem": [16, 27, 30, 57, 60, 83, 101, 125, 133, 135], "theoret": [13, 19, 29, 43, 117, 157], "theori": [10, 65, 77, 201, 204, 209, 210], "theta": 123, "thi": [98, 213, 215], "thing": 65, "thread": [213, 215, 226, 230], "three": [75, 123, 130], "through": [55, 185], "throw": 212, "ticket": 157, "tight": 202, "tikz": [30, 32], "tild": 55, "time": [2, 6, 11, 13, 17, 19, 20, 22, 23, 26, 27, 29, 30, 32, 34, 35, 36, 37, 43, 46, 60, 67, 73, 89, 100, 101, 108, 110, 113, 114, 212, 229, 238], "timeit": 111, "timeout": 9, "tip": [11, 17, 123], "togeth": 57, "token": [55, 56, 57, 58, 119], "toml": 93, "tool": [93, 98], "top": 93, "topic": 157, "torch": 112, "toss": [136, 138, 143, 210], "total": [13, 19, 20, 27, 29, 30, 43, 117, 133, 135, 175, 182], "total_hours_to_finish_": 29, "trace": 112, "track": [103, 238], "tractabl": 101, "tradeoff": [11, 13, 17, 19, 29, 43], "traffic": 93, "train": [54, 55, 56, 57, 58, 65, 71, 76, 93, 105, 118, 119, 121, 122], "trainabl": 117, "trainer": 58, "transact": 97, "transfer": 56, "transform": [54, 56, 57, 81, 98, 99, 117, 169, 172, 189, 197], "transiv": 4, "translat": [29, 123], "transpos": [55, 81, 84], "trial": [49, 143, 145, 146], "trick": 121, "trigger": 99, "troubleshoot": 89, "true": [29, 49, 65], "truth": 65, "tune": [56, 70, 103, 105, 118, 119], "two": [13, 19, 36, 39, 43, 44, 45, 47, 58, 65, 75, 84, 109, 130, 138, 180, 200, 215], "txt": 93, "type": [2, 3, 5, 6, 7, 9, 10, 22, 23, 32, 93, 95, 96, 98, 100, 109, 116], "typeguard": 93, "typevar": 6, "unbias": 67, "unbound": 108, "unconsci": [140, 163], "unconstrain": 6, "uncout": 161, "under": [81, 82, 123], "underflow": 210, "underli": [32, 73], "understand": [93, 95, 101, 114, 215, 234], "unexpect": 234, "uniform": [30, 57, 159, 160, 167], "union": [6, 65, 130, 202], "uniqu": [79, 199], "unit": [55, 57, 93], "univari": [67, 73, 210], "unload": 71, "unnorm": 123, "unord": 30, "unsaf": 8, "unsign": 62, "unstructur": 97, "unsupervis": 56, "up": [71, 88, 89, 93, 108, 119, 120], "updat": [52, 55, 63, 70, 97], "upgrad": 93, "upper": 6, "us": [5, 6, 9, 13, 19, 22, 30, 32, 34, 35, 36, 43, 49, 57, 60, 89, 98, 109, 116, 118, 119, 199, 207, 212, 215, 221, 226, 228, 235, 238], "usag": [17, 235], "user": 237, "util": [57, 117, 142, 145, 147, 155, 158], "v": [2, 3, 7, 9, 49, 73, 79, 93, 96, 97, 98, 101, 108, 122, 132, 136, 157, 158, 212, 215, 232, 236], "valid": [35, 58, 93, 99, 105, 107, 138, 237], "valu": [4, 17, 30, 55, 57, 67, 145], "var": 116, "variabl": [5, 6, 30, 46, 52, 65, 67, 125, 136, 137, 153, 154, 157, 161, 171, 172, 174, 175, 185, 186, 187, 195, 199, 200, 202, 210, 226], "varianc": [7, 57, 67, 106, 141, 143, 146, 150, 154, 157, 164, 167, 168, 169, 182, 184, 205], "variant": [8, 56, 57], "vc": 65, "vector": [52, 57, 62, 73, 78, 79, 81, 82, 83, 84, 85, 97, 123, 187, 188, 190], "vectorwis": 55, "verbatim": 93, "veri": 10, "version": [73, 93, 103], "versu": [6, 81], "via": [56, 57, 62, 67, 70, 123, 200], "viabl": 95, "video": 57, "view": 65, "violat": [3, 220, 227], "virtual": [89, 93], "visual": [27, 29, 57, 108, 114, 206, 210, 215], "visualis": [43, 44, 57], "vocabulari": [55, 57, 58], "volum": 98, "voronoi": 60, "w": 55, "wai": [5, 57, 145], "walkthrough": [19, 43, 122, 173], "want": 27, "warehous": [97, 98, 99], "warmup": [58, 122], "warn": 173, "wastag": 11, "wavi": 73, "we": [27, 67, 118, 221, 237], "weak": [65, 205], "websit": 215, "webtext": 56, "weight": [52, 55, 57, 70, 123], "what": [2, 19, 27, 36, 43, 65, 67, 93, 96, 98, 157, 195, 215, 221, 226, 233, 235, 237], "wheel": 93, "when": [49, 60, 98, 215], "where": [93, 98, 105, 154, 210, 238], "whiteboard": [19, 29, 43], "why": [2, 5, 6, 27, 29, 32, 52, 58, 65, 67, 73, 93, 99, 102, 122, 124, 135, 157, 175, 192, 197, 199, 207, 213, 215, 221, 226, 234, 235], "widen": 4, "window": [39, 42, 46, 56, 57], "wise": [55, 57, 84, 102], "word": [56, 58, 93, 122], "work": [212, 221], "workaround": 234, "workflow": [93, 96, 98], "world": [7, 32, 56, 87, 88, 145], "worst": [27, 29, 30, 32, 36], "wrap": [228, 237], "write": 99, "x": [30, 52, 55, 57, 67, 166], "y": [67, 180, 210], "yaml": [216, 237], "ye": 95, "yield": 212, "you": [124, 135, 237], "your": [65, 102], "z": [52, 123], "zero": [56, 65, 129, 162, 173]}})